declare namespace com {
    namespace sun {
        namespace java_cup {
            namespace internal {
                namespace runtime {
                    interface Scanner {
                        next_token(): com.sun.java_cup.internal.runtime.Symbol
                    }
                    interface Scanner$$Lambda {
                        (): com.sun.java_cup.internal.runtime.Symbol
                    }
                    class Symbol {
                        public sym: int
                        public parse_state: int
                        public left: int
                        public right: int
                        public value: java.lang.Object
                        public constructor(arg0: int, arg1: int, arg2: int, arg3: java.lang.Object)
                        public constructor(arg0: int, arg1: java.lang.Object)
                        public constructor(arg0: int, arg1: int, arg2: int)
                        public constructor(arg0: int)
                        public constructor(arg0: int, arg1: int)
                        public toString(): string
                        public static class: java.lang.Class<any>
                    }
                    abstract class lr_parser {
                        protected static _error_sync_size: int
                        protected _done_parsing: boolean
                        protected tos: int
                        protected cur_token: com.sun.java_cup.internal.runtime.Symbol
                        protected stack: java.util.Stack
                        protected production_tab: short[][]
                        protected action_tab: short[][]
                        protected reduce_tab: short[][]
                        protected lookahead: com.sun.java_cup.internal.runtime.Symbol[]
                        protected lookahead_pos: int
                        public constructor()
                        public constructor(arg0: com.sun.java_cup.internal.runtime.Scanner | com.sun.java_cup.internal.runtime.Scanner$$Lambda)
                        protected error_sync_size(): int
                        public production_table(): short[][]
                        public action_table(): short[][]
                        public reduce_table(): short[][]
                        public start_state(): int
                        public start_production(): int
                        public EOF_sym(): int
                        public error_sym(): int
                        public done_parsing(): void
                        public setScanner(arg0: com.sun.java_cup.internal.runtime.Scanner | com.sun.java_cup.internal.runtime.Scanner$$Lambda): void
                        public getScanner(): com.sun.java_cup.internal.runtime.Scanner
                        public do_action(arg0: int, arg1: com.sun.java_cup.internal.runtime.lr_parser, arg2: java.util.Stack, arg3: int): com.sun.java_cup.internal.runtime.Symbol
                        public user_init(): void
                        protected init_actions(): void
                        public scan(): com.sun.java_cup.internal.runtime.Symbol
                        public report_fatal_error(arg0: java.lang.String | string, arg1: java.lang.Object): void
                        public report_error(arg0: java.lang.String | string, arg1: java.lang.Object): void
                        public syntax_error(arg0: com.sun.java_cup.internal.runtime.Symbol): void
                        public unrecovered_syntax_error(arg0: com.sun.java_cup.internal.runtime.Symbol): void
                        protected get_action(arg0: int, arg1: int): short
                        protected get_reduce(arg0: int, arg1: int): short
                        public parse(): com.sun.java_cup.internal.runtime.Symbol
                        public debug_message(arg0: java.lang.String | string): void
                        public dump_stack(): void
                        public debug_reduce(arg0: int, arg1: int, arg2: int): void
                        public debug_shift(arg0: com.sun.java_cup.internal.runtime.Symbol): void
                        public debug_stack(): void
                        public debug_parse(): com.sun.java_cup.internal.runtime.Symbol
                        protected error_recovery(arg0: boolean): boolean
                        protected shift_under_error(): boolean
                        protected find_recovery_config(arg0: boolean): boolean
                        protected read_lookahead(): void
                        protected cur_err_token(): com.sun.java_cup.internal.runtime.Symbol
                        protected advance_lookahead(): boolean
                        protected restart_lookahead(): void
                        protected try_parse_ahead(arg0: boolean): boolean
                        protected parse_lookahead(arg0: boolean): void
                        protected static unpackFromStrings(arg0: java.lang.String[]): short[][]
                        public static class: java.lang.Class<any>
                    }
                    class virtual_parse_stack {
                        protected real_stack: java.util.Stack
                        protected real_next: int
                        protected vstack: java.util.Stack
                        public constructor(arg0: java.util.Stack)
                        protected get_from_real(): void
                        public empty(): boolean
                        public top(): int
                        public pop(): void
                        public push(arg0: int): void
                        public static class: java.lang.Class<any>
                    }
                }
            }
        }
        namespace org {
            namespace apache {
                namespace bcel {
                    namespace internal {
                        namespace classfile {
                            abstract class AccessFlags implements java.io.Serializable {
                                protected access_flags: int
                                public constructor()
                                public constructor(arg0: int)
                                public getAccessFlags(): int
                                public getModifiers(): int
                                public setAccessFlags(arg0: int): void
                                public setModifiers(arg0: int): void
                                public isPublic(arg0: boolean): void
                                public isPublic(): boolean
                                public isPrivate(arg0: boolean): void
                                public isPrivate(): boolean
                                public isProtected(arg0: boolean): void
                                public isProtected(): boolean
                                public isStatic(arg0: boolean): void
                                public isStatic(): boolean
                                public isFinal(arg0: boolean): void
                                public isFinal(): boolean
                                public isSynchronized(arg0: boolean): void
                                public isSynchronized(): boolean
                                public isVolatile(arg0: boolean): void
                                public isVolatile(): boolean
                                public isTransient(arg0: boolean): void
                                public isTransient(): boolean
                                public isNative(arg0: boolean): void
                                public isNative(): boolean
                                public isInterface(arg0: boolean): void
                                public isInterface(): boolean
                                public isAbstract(arg0: boolean): void
                                public isAbstract(): boolean
                                public isStrictfp(arg0: boolean): void
                                public isStrictfp(): boolean
                                public static class: java.lang.Class<any>
                            }
                            abstract class Attribute implements java.lang.Cloneable , com.sun.org.apache.bcel.internal.classfile.Node , java.io.Serializable {
                                protected name_index: int
                                protected length: int
                                protected tag: byte
                                protected constant_pool: com.sun.org.apache.bcel.internal.classfile.ConstantPool
                                protected constructor(arg0: byte, arg1: int, arg2: int, arg3: com.sun.org.apache.bcel.internal.classfile.ConstantPool)
                                public accept(arg0: com.sun.org.apache.bcel.internal.classfile.Visitor): void
                                public dump(arg0: java.io.DataOutputStream): void
                                public static addAttributeReader(arg0: java.lang.String | string, arg1: com.sun.org.apache.bcel.internal.classfile.AttributeReader | com.sun.org.apache.bcel.internal.classfile.AttributeReader$$Lambda): void
                                public static removeAttributeReader(arg0: java.lang.String | string): void
                                public static readAttribute(arg0: java.io.DataInputStream, arg1: com.sun.org.apache.bcel.internal.classfile.ConstantPool): com.sun.org.apache.bcel.internal.classfile.Attribute
                                public getLength(): int
                                public setLength(arg0: int): void
                                public setNameIndex(arg0: int): void
                                public getNameIndex(): int
                                public getTag(): byte
                                public getConstantPool(): com.sun.org.apache.bcel.internal.classfile.ConstantPool
                                public setConstantPool(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): void
                                public clone(): java.lang.Object
                                public copy(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): com.sun.org.apache.bcel.internal.classfile.Attribute
                                public toString(): string
                                public static class: java.lang.Class<any>
                            }
                            interface AttributeReader {
                                createAttribute(arg0: int, arg1: int, arg2: java.io.DataInputStream, arg3: com.sun.org.apache.bcel.internal.classfile.ConstantPool): com.sun.org.apache.bcel.internal.classfile.Attribute
                            }
                            interface AttributeReader$$Lambda {
                                (arg0: int, arg1: int, arg2: java.io.DataInputStream, arg3: com.sun.org.apache.bcel.internal.classfile.ConstantPool): com.sun.org.apache.bcel.internal.classfile.Attribute
                            }
                            class ClassFormatException extends java.lang.RuntimeException {
                                public constructor()
                                public constructor(arg0: java.lang.String | string)
                                public static class: java.lang.Class<any>
                            }
                            class ClassParser {
                                public constructor(arg0: java.io.InputStream, arg1: java.lang.String | string)
                                public constructor(arg0: java.lang.String | string)
                                public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string)
                                public parse(): com.sun.org.apache.bcel.internal.classfile.JavaClass
                                public static class: java.lang.Class<any>
                            }
                            class Code extends com.sun.org.apache.bcel.internal.classfile.Attribute {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.Code)
                                public constructor(arg0: int, arg1: int, arg2: int, arg3: int, arg4: byte[], arg5: com.sun.org.apache.bcel.internal.classfile.CodeException[], arg6: com.sun.org.apache.bcel.internal.classfile.Attribute[], arg7: com.sun.org.apache.bcel.internal.classfile.ConstantPool)
                                public accept(arg0: com.sun.org.apache.bcel.internal.classfile.Visitor): void
                                public dump(arg0: java.io.DataOutputStream): void
                                public getAttributes(): com.sun.org.apache.bcel.internal.classfile.Attribute[]
                                public getLineNumberTable(): com.sun.org.apache.bcel.internal.classfile.LineNumberTable
                                public getLocalVariableTable(): com.sun.org.apache.bcel.internal.classfile.LocalVariableTable
                                public getCode(): byte[]
                                public getExceptionTable(): com.sun.org.apache.bcel.internal.classfile.CodeException[]
                                public getMaxLocals(): int
                                public getMaxStack(): int
                                public setAttributes(arg0: com.sun.org.apache.bcel.internal.classfile.Attribute[]): void
                                public setCode(arg0: byte[]): void
                                public setExceptionTable(arg0: com.sun.org.apache.bcel.internal.classfile.CodeException[]): void
                                public setMaxLocals(arg0: int): void
                                public setMaxStack(arg0: int): void
                                public toString(arg0: boolean): string
                                public toString(): string
                                public copy(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): com.sun.org.apache.bcel.internal.classfile.Attribute
                                public static class: java.lang.Class<any>
                            }
                            class CodeException implements java.lang.Cloneable , com.sun.org.apache.bcel.internal.Constants , com.sun.org.apache.bcel.internal.classfile.Node , java.io.Serializable {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.CodeException)
                                public constructor(arg0: int, arg1: int, arg2: int, arg3: int)
                                public accept(arg0: com.sun.org.apache.bcel.internal.classfile.Visitor): void
                                public dump(arg0: java.io.DataOutputStream): void
                                public getCatchType(): int
                                public getEndPC(): int
                                public getHandlerPC(): int
                                public getStartPC(): int
                                public setCatchType(arg0: int): void
                                public setEndPC(arg0: int): void
                                public setHandlerPC(arg0: int): void
                                public setStartPC(arg0: int): void
                                public toString(): string
                                public toString(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool, arg1: boolean): string
                                public toString(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): string
                                public copy(): com.sun.org.apache.bcel.internal.classfile.CodeException
                                public static class: java.lang.Class<any>
                            }
                            abstract class Constant implements java.lang.Cloneable , com.sun.org.apache.bcel.internal.classfile.Node , java.io.Serializable {
                                protected tag: byte
                                public accept(arg0: com.sun.org.apache.bcel.internal.classfile.Visitor): void
                                public dump(arg0: java.io.DataOutputStream): void
                                public getTag(): byte
                                public toString(): string
                                public copy(): com.sun.org.apache.bcel.internal.classfile.Constant
                                public clone(): java.lang.Object
                                public static class: java.lang.Class<any>
                            }
                            abstract class ConstantCP extends com.sun.org.apache.bcel.internal.classfile.Constant {
                                protected class_index: int
                                protected name_and_type_index: int
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantCP)
                                protected constructor(arg0: byte, arg1: int, arg2: int)
                                public dump(arg0: java.io.DataOutputStream): void
                                public getClassIndex(): int
                                public getNameAndTypeIndex(): int
                                public setClassIndex(arg0: int): void
                                public getClass(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): string
                                public setNameAndTypeIndex(arg0: int): void
                                public toString(): string
                                public static class: java.lang.Class<any>
                            }
                            class ConstantClass extends com.sun.org.apache.bcel.internal.classfile.Constant implements com.sun.org.apache.bcel.internal.classfile.ConstantObject {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantClass | com.sun.org.apache.bcel.internal.classfile.ConstantClass$$Lambda)
                                public constructor(arg0: int)
                                public accept(arg0: com.sun.org.apache.bcel.internal.classfile.Visitor): void
                                public dump(arg0: java.io.DataOutputStream): void
                                public getNameIndex(): int
                                public setNameIndex(arg0: int): void
                                public getConstantValue(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): java.lang.Object
                                public getBytes(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): string
                                public toString(): string
                                public static class: java.lang.Class<any>
                            }
                            class ConstantClass$$Lambda extends com.sun.org.apache.bcel.internal.classfile.Constant implements com.sun.org.apache.bcel.internal.classfile.ConstantObject {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantClass | com.sun.org.apache.bcel.internal.classfile.ConstantClass$$Lambda)
                            }
                            class ConstantDouble extends com.sun.org.apache.bcel.internal.classfile.Constant implements com.sun.org.apache.bcel.internal.classfile.ConstantObject {
                                public constructor(arg0: double)
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantDouble | com.sun.org.apache.bcel.internal.classfile.ConstantDouble$$Lambda)
                                public accept(arg0: com.sun.org.apache.bcel.internal.classfile.Visitor): void
                                public dump(arg0: java.io.DataOutputStream): void
                                public getBytes(): double
                                public setBytes(arg0: double): void
                                public toString(): string
                                public getConstantValue(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): java.lang.Object
                                public static class: java.lang.Class<any>
                            }
                            class ConstantDouble$$Lambda extends com.sun.org.apache.bcel.internal.classfile.Constant implements com.sun.org.apache.bcel.internal.classfile.ConstantObject {
                                public constructor(arg0: double)
                            }
                            class ConstantFieldref extends com.sun.org.apache.bcel.internal.classfile.ConstantCP {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantFieldref)
                                public constructor(arg0: int, arg1: int)
                                public accept(arg0: com.sun.org.apache.bcel.internal.classfile.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class ConstantFloat extends com.sun.org.apache.bcel.internal.classfile.Constant implements com.sun.org.apache.bcel.internal.classfile.ConstantObject {
                                public constructor(arg0: float)
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantFloat | com.sun.org.apache.bcel.internal.classfile.ConstantFloat$$Lambda)
                                public accept(arg0: com.sun.org.apache.bcel.internal.classfile.Visitor): void
                                public dump(arg0: java.io.DataOutputStream): void
                                public getBytes(): float
                                public setBytes(arg0: float): void
                                public toString(): string
                                public getConstantValue(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): java.lang.Object
                                public static class: java.lang.Class<any>
                            }
                            class ConstantFloat$$Lambda extends com.sun.org.apache.bcel.internal.classfile.Constant implements com.sun.org.apache.bcel.internal.classfile.ConstantObject {
                                public constructor(arg0: float)
                            }
                            class ConstantInteger extends com.sun.org.apache.bcel.internal.classfile.Constant implements com.sun.org.apache.bcel.internal.classfile.ConstantObject {
                                public constructor(arg0: int)
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantInteger | com.sun.org.apache.bcel.internal.classfile.ConstantInteger$$Lambda)
                                public accept(arg0: com.sun.org.apache.bcel.internal.classfile.Visitor): void
                                public dump(arg0: java.io.DataOutputStream): void
                                public getBytes(): int
                                public setBytes(arg0: int): void
                                public toString(): string
                                public getConstantValue(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): java.lang.Object
                                public static class: java.lang.Class<any>
                            }
                            class ConstantInteger$$Lambda extends com.sun.org.apache.bcel.internal.classfile.Constant implements com.sun.org.apache.bcel.internal.classfile.ConstantObject {
                                public constructor(arg0: int)
                            }
                            class ConstantInterfaceMethodref extends com.sun.org.apache.bcel.internal.classfile.ConstantCP {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantInterfaceMethodref)
                                public constructor(arg0: int, arg1: int)
                                public accept(arg0: com.sun.org.apache.bcel.internal.classfile.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class ConstantLong extends com.sun.org.apache.bcel.internal.classfile.Constant implements com.sun.org.apache.bcel.internal.classfile.ConstantObject {
                                public constructor(arg0: long)
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantLong | com.sun.org.apache.bcel.internal.classfile.ConstantLong$$Lambda)
                                public accept(arg0: com.sun.org.apache.bcel.internal.classfile.Visitor): void
                                public dump(arg0: java.io.DataOutputStream): void
                                public getBytes(): long
                                public setBytes(arg0: long): void
                                public toString(): string
                                public getConstantValue(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): java.lang.Object
                                public static class: java.lang.Class<any>
                            }
                            class ConstantLong$$Lambda extends com.sun.org.apache.bcel.internal.classfile.Constant implements com.sun.org.apache.bcel.internal.classfile.ConstantObject {
                                public constructor(arg0: long)
                            }
                            class ConstantMethodref extends com.sun.org.apache.bcel.internal.classfile.ConstantCP {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantMethodref)
                                public constructor(arg0: int, arg1: int)
                                public accept(arg0: com.sun.org.apache.bcel.internal.classfile.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class ConstantNameAndType extends com.sun.org.apache.bcel.internal.classfile.Constant {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantNameAndType)
                                public constructor(arg0: int, arg1: int)
                                public accept(arg0: com.sun.org.apache.bcel.internal.classfile.Visitor): void
                                public dump(arg0: java.io.DataOutputStream): void
                                public getNameIndex(): int
                                public getName(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): string
                                public getSignatureIndex(): int
                                public getSignature(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): string
                                public setNameIndex(arg0: int): void
                                public setSignatureIndex(arg0: int): void
                                public toString(): string
                                public static class: java.lang.Class<any>
                            }
                            interface ConstantObject {
                                getConstantValue(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): java.lang.Object
                            }
                            interface ConstantObject$$Lambda {
                                (arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): java.lang.Object
                            }
                            class ConstantPool implements java.lang.Cloneable , com.sun.org.apache.bcel.internal.classfile.Node , java.io.Serializable {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.Constant[])
                                public accept(arg0: com.sun.org.apache.bcel.internal.classfile.Visitor): void
                                public constantToString(arg0: com.sun.org.apache.bcel.internal.classfile.Constant): string
                                public constantToString(arg0: int, arg1: byte): string
                                public dump(arg0: java.io.DataOutputStream): void
                                public getConstant(arg0: int): com.sun.org.apache.bcel.internal.classfile.Constant
                                public getConstant(arg0: int, arg1: byte): com.sun.org.apache.bcel.internal.classfile.Constant
                                public getConstantPool(): com.sun.org.apache.bcel.internal.classfile.Constant[]
                                public getConstantString(arg0: int, arg1: byte): string
                                public getLength(): int
                                public setConstant(arg0: int, arg1: com.sun.org.apache.bcel.internal.classfile.Constant): void
                                public setConstantPool(arg0: com.sun.org.apache.bcel.internal.classfile.Constant[]): void
                                public toString(): string
                                public copy(): com.sun.org.apache.bcel.internal.classfile.ConstantPool
                                public static class: java.lang.Class<any>
                            }
                            class ConstantString extends com.sun.org.apache.bcel.internal.classfile.Constant implements com.sun.org.apache.bcel.internal.classfile.ConstantObject {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantString | com.sun.org.apache.bcel.internal.classfile.ConstantString$$Lambda)
                                public constructor(arg0: int)
                                public accept(arg0: com.sun.org.apache.bcel.internal.classfile.Visitor): void
                                public dump(arg0: java.io.DataOutputStream): void
                                public getStringIndex(): int
                                public setStringIndex(arg0: int): void
                                public toString(): string
                                public getConstantValue(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): java.lang.Object
                                public getBytes(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): string
                                public static class: java.lang.Class<any>
                            }
                            class ConstantString$$Lambda extends com.sun.org.apache.bcel.internal.classfile.Constant implements com.sun.org.apache.bcel.internal.classfile.ConstantObject {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantString | com.sun.org.apache.bcel.internal.classfile.ConstantString$$Lambda)
                            }
                            class ConstantUtf8 extends com.sun.org.apache.bcel.internal.classfile.Constant {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantUtf8)
                                public constructor(arg0: java.lang.String | string)
                                public accept(arg0: com.sun.org.apache.bcel.internal.classfile.Visitor): void
                                public dump(arg0: java.io.DataOutputStream): void
                                public getBytes(): string
                                public setBytes(arg0: java.lang.String | string): void
                                public toString(): string
                                public static class: java.lang.Class<any>
                            }
                            class ConstantValue extends com.sun.org.apache.bcel.internal.classfile.Attribute {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantValue)
                                public constructor(arg0: int, arg1: int, arg2: int, arg3: com.sun.org.apache.bcel.internal.classfile.ConstantPool)
                                public accept(arg0: com.sun.org.apache.bcel.internal.classfile.Visitor): void
                                public dump(arg0: java.io.DataOutputStream): void
                                public getConstantValueIndex(): int
                                public setConstantValueIndex(arg0: int): void
                                public toString(): string
                                public copy(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): com.sun.org.apache.bcel.internal.classfile.Attribute
                                public static class: java.lang.Class<any>
                            }
                            class Deprecated extends com.sun.org.apache.bcel.internal.classfile.Attribute {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.Deprecated)
                                public constructor(arg0: int, arg1: int, arg2: byte[], arg3: com.sun.org.apache.bcel.internal.classfile.ConstantPool)
                                public accept(arg0: com.sun.org.apache.bcel.internal.classfile.Visitor): void
                                public dump(arg0: java.io.DataOutputStream): void
                                public getBytes(): byte[]
                                public setBytes(arg0: byte[]): void
                                public toString(): string
                                public copy(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): com.sun.org.apache.bcel.internal.classfile.Attribute
                                public static class: java.lang.Class<any>
                            }
                            class DescendingVisitor implements com.sun.org.apache.bcel.internal.classfile.Visitor {
                                public predecessor(): java.lang.Object
                                public predecessor(arg0: int): java.lang.Object
                                public current(): java.lang.Object
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.JavaClass | com.sun.org.apache.bcel.internal.classfile.JavaClass$$Lambda, arg1: com.sun.org.apache.bcel.internal.classfile.Visitor)
                                public visit(): void
                                public visitJavaClass(arg0: com.sun.org.apache.bcel.internal.classfile.JavaClass | com.sun.org.apache.bcel.internal.classfile.JavaClass$$Lambda): void
                                public visitField(arg0: com.sun.org.apache.bcel.internal.classfile.Field): void
                                public visitConstantValue(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantValue): void
                                public visitMethod(arg0: com.sun.org.apache.bcel.internal.classfile.Method): void
                                public visitExceptionTable(arg0: com.sun.org.apache.bcel.internal.classfile.ExceptionTable): void
                                public visitCode(arg0: com.sun.org.apache.bcel.internal.classfile.Code): void
                                public visitCodeException(arg0: com.sun.org.apache.bcel.internal.classfile.CodeException): void
                                public visitLineNumberTable(arg0: com.sun.org.apache.bcel.internal.classfile.LineNumberTable): void
                                public visitLineNumber(arg0: com.sun.org.apache.bcel.internal.classfile.LineNumber): void
                                public visitLocalVariableTable(arg0: com.sun.org.apache.bcel.internal.classfile.LocalVariableTable): void
                                public visitLocalVariableTypeTable(arg0: com.sun.org.apache.bcel.internal.classfile.LocalVariableTypeTable): void
                                public visitStackMap(arg0: com.sun.org.apache.bcel.internal.classfile.StackMap | com.sun.org.apache.bcel.internal.classfile.StackMap$$Lambda): void
                                public visitStackMapEntry(arg0: com.sun.org.apache.bcel.internal.classfile.StackMapEntry): void
                                public visitLocalVariable(arg0: com.sun.org.apache.bcel.internal.classfile.LocalVariable): void
                                public visitConstantPool(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): void
                                public visitConstantClass(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantClass | com.sun.org.apache.bcel.internal.classfile.ConstantClass$$Lambda): void
                                public visitConstantDouble(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantDouble | com.sun.org.apache.bcel.internal.classfile.ConstantDouble$$Lambda): void
                                public visitConstantFieldref(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantFieldref): void
                                public visitConstantFloat(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantFloat | com.sun.org.apache.bcel.internal.classfile.ConstantFloat$$Lambda): void
                                public visitConstantInteger(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantInteger | com.sun.org.apache.bcel.internal.classfile.ConstantInteger$$Lambda): void
                                public visitConstantInterfaceMethodref(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantInterfaceMethodref): void
                                public visitConstantLong(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantLong | com.sun.org.apache.bcel.internal.classfile.ConstantLong$$Lambda): void
                                public visitConstantMethodref(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantMethodref): void
                                public visitConstantNameAndType(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantNameAndType): void
                                public visitConstantString(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantString | com.sun.org.apache.bcel.internal.classfile.ConstantString$$Lambda): void
                                public visitConstantUtf8(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantUtf8): void
                                public visitInnerClasses(arg0: com.sun.org.apache.bcel.internal.classfile.InnerClasses): void
                                public visitInnerClass(arg0: com.sun.org.apache.bcel.internal.classfile.InnerClass | com.sun.org.apache.bcel.internal.classfile.InnerClass$$Lambda): void
                                public visitDeprecated(arg0: com.sun.org.apache.bcel.internal.classfile.Deprecated): void
                                public visitSignature(arg0: com.sun.org.apache.bcel.internal.classfile.Signature): void
                                public visitSourceFile(arg0: com.sun.org.apache.bcel.internal.classfile.SourceFile): void
                                public visitSynthetic(arg0: com.sun.org.apache.bcel.internal.classfile.Synthetic): void
                                public visitUnknown(arg0: com.sun.org.apache.bcel.internal.classfile.Unknown): void
                                public static class: java.lang.Class<any>
                            }
                            class EmptyVisitor implements com.sun.org.apache.bcel.internal.classfile.Visitor {
                                protected constructor()
                                public visitCode(arg0: com.sun.org.apache.bcel.internal.classfile.Code): void
                                public visitCodeException(arg0: com.sun.org.apache.bcel.internal.classfile.CodeException): void
                                public visitConstantClass(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantClass | com.sun.org.apache.bcel.internal.classfile.ConstantClass$$Lambda): void
                                public visitConstantDouble(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantDouble | com.sun.org.apache.bcel.internal.classfile.ConstantDouble$$Lambda): void
                                public visitConstantFieldref(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantFieldref): void
                                public visitConstantFloat(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantFloat | com.sun.org.apache.bcel.internal.classfile.ConstantFloat$$Lambda): void
                                public visitConstantInteger(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantInteger | com.sun.org.apache.bcel.internal.classfile.ConstantInteger$$Lambda): void
                                public visitConstantInterfaceMethodref(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantInterfaceMethodref): void
                                public visitConstantLong(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantLong | com.sun.org.apache.bcel.internal.classfile.ConstantLong$$Lambda): void
                                public visitConstantMethodref(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantMethodref): void
                                public visitConstantNameAndType(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantNameAndType): void
                                public visitConstantPool(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): void
                                public visitConstantString(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantString | com.sun.org.apache.bcel.internal.classfile.ConstantString$$Lambda): void
                                public visitConstantUtf8(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantUtf8): void
                                public visitConstantValue(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantValue): void
                                public visitDeprecated(arg0: com.sun.org.apache.bcel.internal.classfile.Deprecated): void
                                public visitExceptionTable(arg0: com.sun.org.apache.bcel.internal.classfile.ExceptionTable): void
                                public visitField(arg0: com.sun.org.apache.bcel.internal.classfile.Field): void
                                public visitInnerClass(arg0: com.sun.org.apache.bcel.internal.classfile.InnerClass | com.sun.org.apache.bcel.internal.classfile.InnerClass$$Lambda): void
                                public visitInnerClasses(arg0: com.sun.org.apache.bcel.internal.classfile.InnerClasses): void
                                public visitJavaClass(arg0: com.sun.org.apache.bcel.internal.classfile.JavaClass | com.sun.org.apache.bcel.internal.classfile.JavaClass$$Lambda): void
                                public visitLineNumber(arg0: com.sun.org.apache.bcel.internal.classfile.LineNumber): void
                                public visitLineNumberTable(arg0: com.sun.org.apache.bcel.internal.classfile.LineNumberTable): void
                                public visitLocalVariable(arg0: com.sun.org.apache.bcel.internal.classfile.LocalVariable): void
                                public visitLocalVariableTable(arg0: com.sun.org.apache.bcel.internal.classfile.LocalVariableTable): void
                                public visitLocalVariableTypeTable(arg0: com.sun.org.apache.bcel.internal.classfile.LocalVariableTypeTable): void
                                public visitMethod(arg0: com.sun.org.apache.bcel.internal.classfile.Method): void
                                public visitSignature(arg0: com.sun.org.apache.bcel.internal.classfile.Signature): void
                                public visitSourceFile(arg0: com.sun.org.apache.bcel.internal.classfile.SourceFile): void
                                public visitSynthetic(arg0: com.sun.org.apache.bcel.internal.classfile.Synthetic): void
                                public visitUnknown(arg0: com.sun.org.apache.bcel.internal.classfile.Unknown): void
                                public visitStackMap(arg0: com.sun.org.apache.bcel.internal.classfile.StackMap | com.sun.org.apache.bcel.internal.classfile.StackMap$$Lambda): void
                                public visitStackMapEntry(arg0: com.sun.org.apache.bcel.internal.classfile.StackMapEntry): void
                                public static class: java.lang.Class<any>
                            }
                            class ExceptionTable extends com.sun.org.apache.bcel.internal.classfile.Attribute {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.ExceptionTable)
                                public constructor(arg0: int, arg1: int, arg2: int[], arg3: com.sun.org.apache.bcel.internal.classfile.ConstantPool)
                                public accept(arg0: com.sun.org.apache.bcel.internal.classfile.Visitor): void
                                public dump(arg0: java.io.DataOutputStream): void
                                public getExceptionIndexTable(): int[]
                                public getNumberOfExceptions(): int
                                public getExceptionNames(): java.lang.String[]
                                public setExceptionIndexTable(arg0: int[]): void
                                public toString(): string
                                public copy(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): com.sun.org.apache.bcel.internal.classfile.Attribute
                                public static class: java.lang.Class<any>
                            }
                            class Field extends com.sun.org.apache.bcel.internal.classfile.FieldOrMethod {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.Field)
                                public constructor(arg0: int, arg1: int, arg2: int, arg3: com.sun.org.apache.bcel.internal.classfile.Attribute[], arg4: com.sun.org.apache.bcel.internal.classfile.ConstantPool)
                                public accept(arg0: com.sun.org.apache.bcel.internal.classfile.Visitor): void
                                public getConstantValue(): com.sun.org.apache.bcel.internal.classfile.ConstantValue
                                public toString(): string
                                public copy(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): com.sun.org.apache.bcel.internal.classfile.Field
                                public getType(): com.sun.org.apache.bcel.internal.generic.Type
                                public static class: java.lang.Class<any>
                            }
                            abstract class FieldOrMethod extends com.sun.org.apache.bcel.internal.classfile.AccessFlags implements java.lang.Cloneable , com.sun.org.apache.bcel.internal.classfile.Node {
                                protected name_index: int
                                protected signature_index: int
                                protected attributes_count: int
                                protected attributes: com.sun.org.apache.bcel.internal.classfile.Attribute[]
                                protected constant_pool: com.sun.org.apache.bcel.internal.classfile.ConstantPool
                                protected constructor(arg0: com.sun.org.apache.bcel.internal.classfile.FieldOrMethod | com.sun.org.apache.bcel.internal.classfile.FieldOrMethod$$Lambda)
                                protected constructor(arg0: java.io.DataInputStream, arg1: com.sun.org.apache.bcel.internal.classfile.ConstantPool)
                                protected constructor(arg0: int, arg1: int, arg2: int, arg3: com.sun.org.apache.bcel.internal.classfile.Attribute[], arg4: com.sun.org.apache.bcel.internal.classfile.ConstantPool)
                                public dump(arg0: java.io.DataOutputStream): void
                                public getAttributes(): com.sun.org.apache.bcel.internal.classfile.Attribute[]
                                public setAttributes(arg0: com.sun.org.apache.bcel.internal.classfile.Attribute[]): void
                                public getConstantPool(): com.sun.org.apache.bcel.internal.classfile.ConstantPool
                                public setConstantPool(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): void
                                public getNameIndex(): int
                                public setNameIndex(arg0: int): void
                                public getSignatureIndex(): int
                                public setSignatureIndex(arg0: int): void
                                public getName(): string
                                public getSignature(): string
                                protected copy_(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): com.sun.org.apache.bcel.internal.classfile.FieldOrMethod
                                public static class: java.lang.Class<any>
                            }
                            abstract class FieldOrMethod$$Lambda extends com.sun.org.apache.bcel.internal.classfile.AccessFlags implements java.lang.Cloneable , com.sun.org.apache.bcel.internal.classfile.Node {
                                protected name_index: int
                            }
                            class InnerClass implements java.lang.Cloneable , com.sun.org.apache.bcel.internal.classfile.Node {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.InnerClass | com.sun.org.apache.bcel.internal.classfile.InnerClass$$Lambda)
                                public constructor(arg0: int, arg1: int, arg2: int, arg3: int)
                                public accept(arg0: com.sun.org.apache.bcel.internal.classfile.Visitor): void
                                public dump(arg0: java.io.DataOutputStream): void
                                public getInnerAccessFlags(): int
                                public getInnerClassIndex(): int
                                public getInnerNameIndex(): int
                                public getOuterClassIndex(): int
                                public setInnerAccessFlags(arg0: int): void
                                public setInnerClassIndex(arg0: int): void
                                public setInnerNameIndex(arg0: int): void
                                public setOuterClassIndex(arg0: int): void
                                public toString(): string
                                public toString(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): string
                                public copy(): com.sun.org.apache.bcel.internal.classfile.InnerClass
                                public static class: java.lang.Class<any>
                            }
                            class InnerClass$$Lambda implements java.lang.Cloneable , com.sun.org.apache.bcel.internal.classfile.Node {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.InnerClass | com.sun.org.apache.bcel.internal.classfile.InnerClass$$Lambda)
                            }
                            class InnerClasses extends com.sun.org.apache.bcel.internal.classfile.Attribute {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.InnerClasses)
                                public constructor(arg0: int, arg1: int, arg2: com.sun.org.apache.bcel.internal.classfile.InnerClass[], arg3: com.sun.org.apache.bcel.internal.classfile.ConstantPool)
                                public accept(arg0: com.sun.org.apache.bcel.internal.classfile.Visitor): void
                                public dump(arg0: java.io.DataOutputStream): void
                                public getInnerClasses(): com.sun.org.apache.bcel.internal.classfile.InnerClass[]
                                public setInnerClasses(arg0: com.sun.org.apache.bcel.internal.classfile.InnerClass[]): void
                                public toString(): string
                                public copy(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): com.sun.org.apache.bcel.internal.classfile.Attribute
                                public static class: java.lang.Class<any>
                            }
                            class JavaClass extends com.sun.org.apache.bcel.internal.classfile.AccessFlags implements java.lang.Cloneable , com.sun.org.apache.bcel.internal.classfile.Node {
                                public static HEAP: byte
                                public static FILE: byte
                                public static ZIP: byte
                                public constructor(arg0: int, arg1: int, arg2: java.lang.String | string, arg3: int, arg4: int, arg5: int, arg6: com.sun.org.apache.bcel.internal.classfile.ConstantPool, arg7: int[], arg8: com.sun.org.apache.bcel.internal.classfile.Field[], arg9: com.sun.org.apache.bcel.internal.classfile.Method[], arg10: com.sun.org.apache.bcel.internal.classfile.Attribute[], arg11: byte)
                                public constructor(arg0: int, arg1: int, arg2: java.lang.String | string, arg3: int, arg4: int, arg5: int, arg6: com.sun.org.apache.bcel.internal.classfile.ConstantPool, arg7: int[], arg8: com.sun.org.apache.bcel.internal.classfile.Field[], arg9: com.sun.org.apache.bcel.internal.classfile.Method[], arg10: com.sun.org.apache.bcel.internal.classfile.Attribute[])
                                public accept(arg0: com.sun.org.apache.bcel.internal.classfile.Visitor): void
                                public dump(arg0: java.io.File): void
                                public dump(arg0: java.lang.String | string): void
                                public getBytes(): byte[]
                                public dump(arg0: java.io.OutputStream | java.io.OutputStream$$Lambda): void
                                public dump(arg0: java.io.DataOutputStream): void
                                public getAttributes(): com.sun.org.apache.bcel.internal.classfile.Attribute[]
                                public getClassName(): string
                                public getPackageName(): string
                                public getClassNameIndex(): int
                                public getConstantPool(): com.sun.org.apache.bcel.internal.classfile.ConstantPool
                                public getFields(): com.sun.org.apache.bcel.internal.classfile.Field[]
                                public getFileName(): string
                                public getInterfaceNames(): java.lang.String[]
                                public getInterfaceIndices(): int[]
                                public getMajor(): int
                                public getMethods(): com.sun.org.apache.bcel.internal.classfile.Method[]
                                public getMethod(arg0: java.lang.reflect.Method): com.sun.org.apache.bcel.internal.classfile.Method
                                public getMinor(): int
                                public getSourceFileName(): string
                                public getSuperclassName(): string
                                public getSuperclassNameIndex(): int
                                public setAttributes(arg0: com.sun.org.apache.bcel.internal.classfile.Attribute[]): void
                                public setClassName(arg0: java.lang.String | string): void
                                public setClassNameIndex(arg0: int): void
                                public setConstantPool(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): void
                                public setFields(arg0: com.sun.org.apache.bcel.internal.classfile.Field[]): void
                                public setFileName(arg0: java.lang.String | string): void
                                public setInterfaceNames(arg0: java.lang.String[]): void
                                public setInterfaces(arg0: int[]): void
                                public setMajor(arg0: int): void
                                public setMethods(arg0: com.sun.org.apache.bcel.internal.classfile.Method[]): void
                                public setMinor(arg0: int): void
                                public setSourceFileName(arg0: java.lang.String | string): void
                                public setSuperclassName(arg0: java.lang.String | string): void
                                public setSuperclassNameIndex(arg0: int): void
                                public toString(): string
                                public copy(): com.sun.org.apache.bcel.internal.classfile.JavaClass
                                public isSuper(): boolean
                                public isClass(): boolean
                                public getSource(): byte
                                public getRepository(): com.sun.org.apache.bcel.internal.util.Repository
                                public setRepository(arg0: com.sun.org.apache.bcel.internal.util.Repository): void
                                public instanceOf(arg0: com.sun.org.apache.bcel.internal.classfile.JavaClass | com.sun.org.apache.bcel.internal.classfile.JavaClass$$Lambda): boolean
                                public implementationOf(arg0: com.sun.org.apache.bcel.internal.classfile.JavaClass | com.sun.org.apache.bcel.internal.classfile.JavaClass$$Lambda): boolean
                                public getSuperClass(): com.sun.org.apache.bcel.internal.classfile.JavaClass
                                public getSuperClasses(): com.sun.org.apache.bcel.internal.classfile.JavaClass[]
                                public getInterfaces(): com.sun.org.apache.bcel.internal.classfile.JavaClass[]
                                public getAllInterfaces(): com.sun.org.apache.bcel.internal.classfile.JavaClass[]
                                public static class: java.lang.Class<any>
                            }
                            class JavaClass$$Lambda extends com.sun.org.apache.bcel.internal.classfile.AccessFlags implements java.lang.Cloneable , com.sun.org.apache.bcel.internal.classfile.Node {
                                public static HEAP: byte
                            }
                            class LineNumber implements java.lang.Cloneable , com.sun.org.apache.bcel.internal.classfile.Node , java.io.Serializable {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.LineNumber)
                                public constructor(arg0: int, arg1: int)
                                public accept(arg0: com.sun.org.apache.bcel.internal.classfile.Visitor): void
                                public dump(arg0: java.io.DataOutputStream): void
                                public getLineNumber(): int
                                public getStartPC(): int
                                public setLineNumber(arg0: int): void
                                public setStartPC(arg0: int): void
                                public toString(): string
                                public copy(): com.sun.org.apache.bcel.internal.classfile.LineNumber
                                public static class: java.lang.Class<any>
                            }
                            class LineNumberTable extends com.sun.org.apache.bcel.internal.classfile.Attribute {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.LineNumberTable)
                                public constructor(arg0: int, arg1: int, arg2: com.sun.org.apache.bcel.internal.classfile.LineNumber[], arg3: com.sun.org.apache.bcel.internal.classfile.ConstantPool)
                                public accept(arg0: com.sun.org.apache.bcel.internal.classfile.Visitor): void
                                public dump(arg0: java.io.DataOutputStream): void
                                public getLineNumberTable(): com.sun.org.apache.bcel.internal.classfile.LineNumber[]
                                public setLineNumberTable(arg0: com.sun.org.apache.bcel.internal.classfile.LineNumber[]): void
                                public toString(): string
                                public getSourceLine(arg0: int): int
                                public copy(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): com.sun.org.apache.bcel.internal.classfile.Attribute
                                public getTableLength(): int
                                public static class: java.lang.Class<any>
                            }
                            class LocalVariable implements com.sun.org.apache.bcel.internal.Constants , java.lang.Cloneable , com.sun.org.apache.bcel.internal.classfile.Node , java.io.Serializable {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.LocalVariable)
                                public constructor(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: com.sun.org.apache.bcel.internal.classfile.ConstantPool)
                                public accept(arg0: com.sun.org.apache.bcel.internal.classfile.Visitor): void
                                public dump(arg0: java.io.DataOutputStream): void
                                public getConstantPool(): com.sun.org.apache.bcel.internal.classfile.ConstantPool
                                public getLength(): int
                                public getName(): string
                                public getNameIndex(): int
                                public getSignature(): string
                                public getSignatureIndex(): int
                                public getIndex(): int
                                public getStartPC(): int
                                public setConstantPool(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): void
                                public setLength(arg0: int): void
                                public setNameIndex(arg0: int): void
                                public setSignatureIndex(arg0: int): void
                                public setIndex(arg0: int): void
                                public setStartPC(arg0: int): void
                                public toString(): string
                                public copy(): com.sun.org.apache.bcel.internal.classfile.LocalVariable
                                public static class: java.lang.Class<any>
                            }
                            class LocalVariableTable extends com.sun.org.apache.bcel.internal.classfile.Attribute {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.LocalVariableTable)
                                public constructor(arg0: int, arg1: int, arg2: com.sun.org.apache.bcel.internal.classfile.LocalVariable[], arg3: com.sun.org.apache.bcel.internal.classfile.ConstantPool)
                                public accept(arg0: com.sun.org.apache.bcel.internal.classfile.Visitor): void
                                public dump(arg0: java.io.DataOutputStream): void
                                public getLocalVariableTable(): com.sun.org.apache.bcel.internal.classfile.LocalVariable[]
                                public getLocalVariable(arg0: int): com.sun.org.apache.bcel.internal.classfile.LocalVariable
                                public setLocalVariableTable(arg0: com.sun.org.apache.bcel.internal.classfile.LocalVariable[]): void
                                public toString(): string
                                public copy(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): com.sun.org.apache.bcel.internal.classfile.Attribute
                                public getTableLength(): int
                                public static class: java.lang.Class<any>
                            }
                            class LocalVariableTypeTable extends com.sun.org.apache.bcel.internal.classfile.Attribute {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.LocalVariableTypeTable)
                                public constructor(arg0: int, arg1: int, arg2: com.sun.org.apache.bcel.internal.classfile.LocalVariable[], arg3: com.sun.org.apache.bcel.internal.classfile.ConstantPool)
                                public accept(arg0: com.sun.org.apache.bcel.internal.classfile.Visitor): void
                                public dump(arg0: java.io.DataOutputStream): void
                                public getLocalVariableTypeTable(): com.sun.org.apache.bcel.internal.classfile.LocalVariable[]
                                public getLocalVariable(arg0: int): com.sun.org.apache.bcel.internal.classfile.LocalVariable
                                public setLocalVariableTable(arg0: com.sun.org.apache.bcel.internal.classfile.LocalVariable[]): void
                                public toString(): string
                                public copy(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): com.sun.org.apache.bcel.internal.classfile.Attribute
                                public getTableLength(): int
                                public static class: java.lang.Class<any>
                            }
                            class Method extends com.sun.org.apache.bcel.internal.classfile.FieldOrMethod {
                                public constructor()
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.Method)
                                public constructor(arg0: int, arg1: int, arg2: int, arg3: com.sun.org.apache.bcel.internal.classfile.Attribute[], arg4: com.sun.org.apache.bcel.internal.classfile.ConstantPool)
                                public accept(arg0: com.sun.org.apache.bcel.internal.classfile.Visitor): void
                                public getCode(): com.sun.org.apache.bcel.internal.classfile.Code
                                public getExceptionTable(): com.sun.org.apache.bcel.internal.classfile.ExceptionTable
                                public getLocalVariableTable(): com.sun.org.apache.bcel.internal.classfile.LocalVariableTable
                                public getLineNumberTable(): com.sun.org.apache.bcel.internal.classfile.LineNumberTable
                                public toString(): string
                                public copy(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): com.sun.org.apache.bcel.internal.classfile.Method
                                public getReturnType(): com.sun.org.apache.bcel.internal.generic.Type
                                public getArgumentTypes(): com.sun.org.apache.bcel.internal.generic.Type[]
                                public static class: java.lang.Class<any>
                            }
                            interface Node {
                                accept(arg0: com.sun.org.apache.bcel.internal.classfile.Visitor): void
                            }
                            interface Node$$Lambda {
                                (arg0: com.sun.org.apache.bcel.internal.classfile.Visitor): void
                            }
                            class PMGClass extends com.sun.org.apache.bcel.internal.classfile.Attribute {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.PMGClass)
                                public constructor(arg0: int, arg1: int, arg2: int, arg3: int, arg4: com.sun.org.apache.bcel.internal.classfile.ConstantPool)
                                public accept(arg0: com.sun.org.apache.bcel.internal.classfile.Visitor): void
                                public dump(arg0: java.io.DataOutputStream): void
                                public getPMGClassIndex(): int
                                public setPMGClassIndex(arg0: int): void
                                public getPMGIndex(): int
                                public setPMGIndex(arg0: int): void
                                public getPMGName(): string
                                public getPMGClassName(): string
                                public toString(): string
                                public copy(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): com.sun.org.apache.bcel.internal.classfile.Attribute
                                public static class: java.lang.Class<any>
                            }
                            class Signature extends com.sun.org.apache.bcel.internal.classfile.Attribute {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.Signature)
                                public constructor(arg0: int, arg1: int, arg2: int, arg3: com.sun.org.apache.bcel.internal.classfile.ConstantPool)
                                public accept(arg0: com.sun.org.apache.bcel.internal.classfile.Visitor): void
                                public dump(arg0: java.io.DataOutputStream): void
                                public getSignatureIndex(): int
                                public setSignatureIndex(arg0: int): void
                                public getSignature(): string
                                public static translate(arg0: java.lang.String | string): string
                                public static isFormalParameterList(arg0: java.lang.String | string): boolean
                                public static isActualParameterList(arg0: java.lang.String | string): boolean
                                public toString(): string
                                public copy(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): com.sun.org.apache.bcel.internal.classfile.Attribute
                                public static class: java.lang.Class<any>
                            }
                            class SourceFile extends com.sun.org.apache.bcel.internal.classfile.Attribute {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.SourceFile)
                                public constructor(arg0: int, arg1: int, arg2: int, arg3: com.sun.org.apache.bcel.internal.classfile.ConstantPool)
                                public accept(arg0: com.sun.org.apache.bcel.internal.classfile.Visitor): void
                                public dump(arg0: java.io.DataOutputStream): void
                                public getSourceFileIndex(): int
                                public setSourceFileIndex(arg0: int): void
                                public getSourceFileName(): string
                                public toString(): string
                                public copy(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): com.sun.org.apache.bcel.internal.classfile.Attribute
                                public static class: java.lang.Class<any>
                            }
                            class StackMap extends com.sun.org.apache.bcel.internal.classfile.Attribute implements com.sun.org.apache.bcel.internal.classfile.Node {
                                public constructor(arg0: int, arg1: int, arg2: com.sun.org.apache.bcel.internal.classfile.StackMapEntry[], arg3: com.sun.org.apache.bcel.internal.classfile.ConstantPool)
                                public dump(arg0: java.io.DataOutputStream): void
                                public getStackMap(): com.sun.org.apache.bcel.internal.classfile.StackMapEntry[]
                                public setStackMap(arg0: com.sun.org.apache.bcel.internal.classfile.StackMapEntry[]): void
                                public toString(): string
                                public copy(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): com.sun.org.apache.bcel.internal.classfile.Attribute
                                public accept(arg0: com.sun.org.apache.bcel.internal.classfile.Visitor): void
                                public getMapLength(): int
                                public static class: java.lang.Class<any>
                            }
                            class StackMap$$Lambda extends com.sun.org.apache.bcel.internal.classfile.Attribute implements com.sun.org.apache.bcel.internal.classfile.Node {
                                public constructor(arg0: int, arg1: int, arg2: com.sun.org.apache.bcel.internal.classfile.StackMapEntry[], arg3: com.sun.org.apache.bcel.internal.classfile.ConstantPool)
                            }
                            class StackMapEntry implements java.lang.Cloneable {
                                public constructor(arg0: int, arg1: int, arg2: com.sun.org.apache.bcel.internal.classfile.StackMapType[], arg3: int, arg4: com.sun.org.apache.bcel.internal.classfile.StackMapType[], arg5: com.sun.org.apache.bcel.internal.classfile.ConstantPool)
                                public dump(arg0: java.io.DataOutputStream): void
                                public toString(): string
                                public setByteCodeOffset(arg0: int): void
                                public getByteCodeOffset(): int
                                public setNumberOfLocals(arg0: int): void
                                public getNumberOfLocals(): int
                                public setTypesOfLocals(arg0: com.sun.org.apache.bcel.internal.classfile.StackMapType[]): void
                                public getTypesOfLocals(): com.sun.org.apache.bcel.internal.classfile.StackMapType[]
                                public setNumberOfStackItems(arg0: int): void
                                public getNumberOfStackItems(): int
                                public setTypesOfStackItems(arg0: com.sun.org.apache.bcel.internal.classfile.StackMapType[]): void
                                public getTypesOfStackItems(): com.sun.org.apache.bcel.internal.classfile.StackMapType[]
                                public copy(): com.sun.org.apache.bcel.internal.classfile.StackMapEntry
                                public accept(arg0: com.sun.org.apache.bcel.internal.classfile.Visitor): void
                                public getConstantPool(): com.sun.org.apache.bcel.internal.classfile.ConstantPool
                                public setConstantPool(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): void
                                public static class: java.lang.Class<any>
                            }
                            class StackMapType implements java.lang.Cloneable {
                                public constructor(arg0: byte, arg1: int, arg2: com.sun.org.apache.bcel.internal.classfile.ConstantPool)
                                public setType(arg0: byte): void
                                public getType(): byte
                                public setIndex(arg0: int): void
                                public getIndex(): int
                                public dump(arg0: java.io.DataOutputStream): void
                                public hasIndex(): boolean
                                public toString(): string
                                public copy(): com.sun.org.apache.bcel.internal.classfile.StackMapType
                                public getConstantPool(): com.sun.org.apache.bcel.internal.classfile.ConstantPool
                                public setConstantPool(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): void
                                public static class: java.lang.Class<any>
                            }
                            class Synthetic extends com.sun.org.apache.bcel.internal.classfile.Attribute {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.Synthetic)
                                public constructor(arg0: int, arg1: int, arg2: byte[], arg3: com.sun.org.apache.bcel.internal.classfile.ConstantPool)
                                public accept(arg0: com.sun.org.apache.bcel.internal.classfile.Visitor): void
                                public dump(arg0: java.io.DataOutputStream): void
                                public getBytes(): byte[]
                                public setBytes(arg0: byte[]): void
                                public toString(): string
                                public copy(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): com.sun.org.apache.bcel.internal.classfile.Attribute
                                public static class: java.lang.Class<any>
                            }
                            class Unknown extends com.sun.org.apache.bcel.internal.classfile.Attribute {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.Unknown)
                                public constructor(arg0: int, arg1: int, arg2: byte[], arg3: com.sun.org.apache.bcel.internal.classfile.ConstantPool)
                                public accept(arg0: com.sun.org.apache.bcel.internal.classfile.Visitor): void
                                public dump(arg0: java.io.DataOutputStream): void
                                public getBytes(): byte[]
                                public getName(): string
                                public setBytes(arg0: byte[]): void
                                public toString(): string
                                public copy(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): com.sun.org.apache.bcel.internal.classfile.Attribute
                                public static class: java.lang.Class<any>
                            }
                            abstract class Utility {
                                public constructor()
                                public static accessToString(arg0: int): string
                                public static accessToString(arg0: int, arg1: boolean): string
                                public static classOrInterface(arg0: int): string
                                public static codeToString(arg0: byte[], arg1: com.sun.org.apache.bcel.internal.classfile.ConstantPool, arg2: int, arg3: int, arg4: boolean): string
                                public static codeToString(arg0: byte[], arg1: com.sun.org.apache.bcel.internal.classfile.ConstantPool, arg2: int, arg3: int): string
                                public static codeToString(arg0: com.sun.org.apache.bcel.internal.util.ByteSequence, arg1: com.sun.org.apache.bcel.internal.classfile.ConstantPool, arg2: boolean): string
                                public static codeToString(arg0: com.sun.org.apache.bcel.internal.util.ByteSequence, arg1: com.sun.org.apache.bcel.internal.classfile.ConstantPool): string
                                public static compactClassName(arg0: java.lang.String | string): string
                                public static compactClassName(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: boolean): string
                                public static compactClassName(arg0: java.lang.String | string, arg1: boolean): string
                                public static setBit(arg0: int, arg1: int): int
                                public static clearBit(arg0: int, arg1: int): int
                                public static isSet(arg0: int, arg1: int): boolean
                                public static methodTypeToSignature(arg0: java.lang.String | string, arg1: java.lang.String[]): string
                                public static methodSignatureArgumentTypes(arg0: java.lang.String | string): java.lang.String[]
                                public static methodSignatureArgumentTypes(arg0: java.lang.String | string, arg1: boolean): java.lang.String[]
                                public static methodSignatureReturnType(arg0: java.lang.String | string): string
                                public static methodSignatureReturnType(arg0: java.lang.String | string, arg1: boolean): string
                                public static methodSignatureToString(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): string
                                public static methodSignatureToString(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: boolean): string
                                public static methodSignatureToString(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: boolean, arg4: com.sun.org.apache.bcel.internal.classfile.LocalVariableTable): string
                                public static replace(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): string
                                public static signatureToString(arg0: java.lang.String | string): string
                                public static signatureToString(arg0: java.lang.String | string, arg1: boolean): string
                                public static getSignature(arg0: java.lang.String | string): string
                                public static typeOfMethodSignature(arg0: java.lang.String | string): byte
                                public static typeOfSignature(arg0: java.lang.String | string): byte
                                public static searchOpcode(arg0: java.lang.String | string): short
                                public static toHexString(arg0: byte[]): string
                                public static format(arg0: int, arg1: int, arg2: boolean, arg3: char): string
                                public static fillup(arg0: java.lang.String | string, arg1: int, arg2: boolean, arg3: char): string
                                public static printArray(arg0: java.io.PrintStream, arg1: java.lang.Object[]): void
                                public static printArray(arg0: java.io.PrintWriter, arg1: java.lang.Object[]): void
                                public static printArray(arg0: java.lang.Object[]): string
                                public static printArray(arg0: java.lang.Object[], arg1: boolean): string
                                public static printArray(arg0: java.lang.Object[], arg1: boolean, arg2: boolean): string
                                public static isJavaIdentifierPart(arg0: char): boolean
                                public static encode(arg0: byte[], arg1: boolean): string
                                public static decode(arg0: java.lang.String | string, arg1: boolean): byte[]
                                public static convertString(arg0: java.lang.String | string): string
                                public static class: java.lang.Class<any>
                            }
                            interface Visitor {
                                visitCode(arg0: com.sun.org.apache.bcel.internal.classfile.Code): void
                                visitCodeException(arg0: com.sun.org.apache.bcel.internal.classfile.CodeException): void
                                visitConstantClass(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantClass | com.sun.org.apache.bcel.internal.classfile.ConstantClass$$Lambda): void
                                visitConstantDouble(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantDouble | com.sun.org.apache.bcel.internal.classfile.ConstantDouble$$Lambda): void
                                visitConstantFieldref(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantFieldref): void
                                visitConstantFloat(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantFloat | com.sun.org.apache.bcel.internal.classfile.ConstantFloat$$Lambda): void
                                visitConstantInteger(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantInteger | com.sun.org.apache.bcel.internal.classfile.ConstantInteger$$Lambda): void
                                visitConstantInterfaceMethodref(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantInterfaceMethodref): void
                                visitConstantLong(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantLong | com.sun.org.apache.bcel.internal.classfile.ConstantLong$$Lambda): void
                                visitConstantMethodref(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantMethodref): void
                                visitConstantNameAndType(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantNameAndType): void
                                visitConstantPool(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): void
                                visitConstantString(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantString | com.sun.org.apache.bcel.internal.classfile.ConstantString$$Lambda): void
                                visitConstantUtf8(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantUtf8): void
                                visitConstantValue(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantValue): void
                                visitDeprecated(arg0: com.sun.org.apache.bcel.internal.classfile.Deprecated): void
                                visitExceptionTable(arg0: com.sun.org.apache.bcel.internal.classfile.ExceptionTable): void
                                visitField(arg0: com.sun.org.apache.bcel.internal.classfile.Field): void
                                visitInnerClass(arg0: com.sun.org.apache.bcel.internal.classfile.InnerClass | com.sun.org.apache.bcel.internal.classfile.InnerClass$$Lambda): void
                                visitInnerClasses(arg0: com.sun.org.apache.bcel.internal.classfile.InnerClasses): void
                                visitJavaClass(arg0: com.sun.org.apache.bcel.internal.classfile.JavaClass | com.sun.org.apache.bcel.internal.classfile.JavaClass$$Lambda): void
                                visitLineNumber(arg0: com.sun.org.apache.bcel.internal.classfile.LineNumber): void
                                visitLineNumberTable(arg0: com.sun.org.apache.bcel.internal.classfile.LineNumberTable): void
                                visitLocalVariable(arg0: com.sun.org.apache.bcel.internal.classfile.LocalVariable): void
                                visitLocalVariableTable(arg0: com.sun.org.apache.bcel.internal.classfile.LocalVariableTable): void
                                visitLocalVariableTypeTable(arg0: com.sun.org.apache.bcel.internal.classfile.LocalVariableTypeTable): void
                                visitMethod(arg0: com.sun.org.apache.bcel.internal.classfile.Method): void
                                visitSignature(arg0: com.sun.org.apache.bcel.internal.classfile.Signature): void
                                visitSourceFile(arg0: com.sun.org.apache.bcel.internal.classfile.SourceFile): void
                                visitSynthetic(arg0: com.sun.org.apache.bcel.internal.classfile.Synthetic): void
                                visitUnknown(arg0: com.sun.org.apache.bcel.internal.classfile.Unknown): void
                                visitStackMap(arg0: com.sun.org.apache.bcel.internal.classfile.StackMap | com.sun.org.apache.bcel.internal.classfile.StackMap$$Lambda): void
                                visitStackMapEntry(arg0: com.sun.org.apache.bcel.internal.classfile.StackMapEntry): void
                            }
                        }
                        namespace generic {
                            class AALOAD extends com.sun.org.apache.bcel.internal.generic.ArrayInstruction implements com.sun.org.apache.bcel.internal.generic.StackProducer {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class AALOAD$$Lambda extends com.sun.org.apache.bcel.internal.generic.ArrayInstruction implements com.sun.org.apache.bcel.internal.generic.StackProducer {
                                public constructor()
                            }
                            class AASTORE extends com.sun.org.apache.bcel.internal.generic.ArrayInstruction implements com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class AASTORE$$Lambda extends com.sun.org.apache.bcel.internal.generic.ArrayInstruction implements com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                public constructor()
                            }
                            class ACONST_NULL extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.PushInstruction , com.sun.org.apache.bcel.internal.generic.TypedInstruction {
                                public constructor()
                                public getType(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.Type
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class ACONST_NULL$$Lambda extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.PushInstruction , com.sun.org.apache.bcel.internal.generic.TypedInstruction {
                                public constructor()
                            }
                            class ALOAD extends com.sun.org.apache.bcel.internal.generic.LoadInstruction {
                                public constructor(arg0: int)
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class ANEWARRAY extends com.sun.org.apache.bcel.internal.generic.CPInstruction implements com.sun.org.apache.bcel.internal.generic.LoadClass , com.sun.org.apache.bcel.internal.generic.AllocationInstruction , com.sun.org.apache.bcel.internal.generic.ExceptionThrower , com.sun.org.apache.bcel.internal.generic.StackProducer {
                                public constructor(arg0: int)
                                public getExceptions(): java.lang.Class[]
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public getLoadClassType(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.ObjectType
                                public static class: java.lang.Class<any>
                            }
                            class ANEWARRAY$$Lambda extends com.sun.org.apache.bcel.internal.generic.CPInstruction implements com.sun.org.apache.bcel.internal.generic.LoadClass , com.sun.org.apache.bcel.internal.generic.AllocationInstruction , com.sun.org.apache.bcel.internal.generic.ExceptionThrower , com.sun.org.apache.bcel.internal.generic.StackProducer {
                                public constructor(arg0: int)
                            }
                            class ARETURN extends com.sun.org.apache.bcel.internal.generic.ReturnInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class ARRAYLENGTH extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.ExceptionThrower , com.sun.org.apache.bcel.internal.generic.StackProducer {
                                public constructor()
                                public getExceptions(): java.lang.Class[]
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class ARRAYLENGTH$$Lambda extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.ExceptionThrower , com.sun.org.apache.bcel.internal.generic.StackProducer {
                                public constructor()
                            }
                            class ASTORE extends com.sun.org.apache.bcel.internal.generic.StoreInstruction {
                                public constructor(arg0: int)
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class ATHROW extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.UnconditionalBranch , com.sun.org.apache.bcel.internal.generic.ExceptionThrower {
                                public constructor()
                                public getExceptions(): java.lang.Class[]
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class ATHROW$$Lambda extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.UnconditionalBranch , com.sun.org.apache.bcel.internal.generic.ExceptionThrower {
                                public constructor()
                            }
                            interface AllocationInstruction {
                            }
                            abstract class ArithmeticInstruction extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.TypedInstruction , com.sun.org.apache.bcel.internal.generic.StackProducer , com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                protected constructor(arg0: short)
                                public getType(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.Type
                                public static class: java.lang.Class<any>
                            }
                            abstract class ArithmeticInstruction$$Lambda extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.TypedInstruction , com.sun.org.apache.bcel.internal.generic.StackProducer , com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                protected constructor(arg0: short)
                            }
                            abstract class ArrayInstruction extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.ExceptionThrower , com.sun.org.apache.bcel.internal.generic.TypedInstruction {
                                protected constructor(arg0: short)
                                public getExceptions(): java.lang.Class[]
                                public getType(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.Type
                                public static class: java.lang.Class<any>
                            }
                            abstract class ArrayInstruction$$Lambda extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.ExceptionThrower , com.sun.org.apache.bcel.internal.generic.TypedInstruction {
                                protected constructor(arg0: short)
                            }
                            class ArrayType extends com.sun.org.apache.bcel.internal.generic.ReferenceType {
                                public constructor(arg0: byte, arg1: int)
                                public constructor(arg0: java.lang.String | string, arg1: int)
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.Type, arg1: int)
                                public getBasicType(): com.sun.org.apache.bcel.internal.generic.Type
                                public getElementType(): com.sun.org.apache.bcel.internal.generic.Type
                                public getDimensions(): int
                                public hashCode(): int
                                public equals(arg0: java.lang.Object): boolean
                                public static class: java.lang.Class<any>
                            }
                            class BALOAD extends com.sun.org.apache.bcel.internal.generic.ArrayInstruction implements com.sun.org.apache.bcel.internal.generic.StackProducer {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class BALOAD$$Lambda extends com.sun.org.apache.bcel.internal.generic.ArrayInstruction implements com.sun.org.apache.bcel.internal.generic.StackProducer {
                                public constructor()
                            }
                            class BASTORE extends com.sun.org.apache.bcel.internal.generic.ArrayInstruction implements com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class BASTORE$$Lambda extends com.sun.org.apache.bcel.internal.generic.ArrayInstruction implements com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                public constructor()
                            }
                            class BIPUSH extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.ConstantPushInstruction {
                                public constructor(arg0: byte)
                                public dump(arg0: java.io.DataOutputStream): void
                                public toString(arg0: boolean): string
                                protected initFromFile(arg0: com.sun.org.apache.bcel.internal.util.ByteSequence, arg1: boolean): void
                                public getValue(): java.lang.Number
                                public getType(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.Type
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class BREAKPOINT extends com.sun.org.apache.bcel.internal.generic.Instruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class BasicType extends com.sun.org.apache.bcel.internal.generic.Type {
                                public static getType(arg0: byte): com.sun.org.apache.bcel.internal.generic.BasicType
                                public equals(arg0: java.lang.Object): boolean
                                public hashCode(): int
                                public static class: java.lang.Class<any>
                            }
                            class BranchHandle extends com.sun.org.apache.bcel.internal.generic.InstructionHandle {
                                protected addHandle(): void
                                public getPosition(): int
                                protected updatePosition(arg0: int, arg1: int): int
                                public setTarget(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle): void
                                public updateTarget(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle, arg1: com.sun.org.apache.bcel.internal.generic.InstructionHandle): void
                                public getTarget(): com.sun.org.apache.bcel.internal.generic.InstructionHandle
                                public setInstruction(arg0: com.sun.org.apache.bcel.internal.generic.Instruction): void
                                public static class: java.lang.Class<any>
                            }
                            abstract class BranchInstruction extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.InstructionTargeter {
                                protected index: int
                                protected target: com.sun.org.apache.bcel.internal.generic.InstructionHandle
                                protected position: int
                                protected constructor(arg0: short, arg1: com.sun.org.apache.bcel.internal.generic.InstructionHandle)
                                public dump(arg0: java.io.DataOutputStream): void
                                protected getTargetOffset(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle): int
                                protected getTargetOffset(): int
                                protected updatePosition(arg0: int, arg1: int): int
                                public toString(arg0: boolean): string
                                protected initFromFile(arg0: com.sun.org.apache.bcel.internal.util.ByteSequence, arg1: boolean): void
                                public getIndex(): int
                                public getTarget(): com.sun.org.apache.bcel.internal.generic.InstructionHandle
                                public setTarget(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle): void
                                public updateTarget(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle, arg1: com.sun.org.apache.bcel.internal.generic.InstructionHandle): void
                                public containsTarget(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle): boolean
                                public static class: java.lang.Class<any>
                            }
                            class CALOAD extends com.sun.org.apache.bcel.internal.generic.ArrayInstruction implements com.sun.org.apache.bcel.internal.generic.StackProducer {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class CALOAD$$Lambda extends com.sun.org.apache.bcel.internal.generic.ArrayInstruction implements com.sun.org.apache.bcel.internal.generic.StackProducer {
                                public constructor()
                            }
                            class CASTORE extends com.sun.org.apache.bcel.internal.generic.ArrayInstruction implements com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class CASTORE$$Lambda extends com.sun.org.apache.bcel.internal.generic.ArrayInstruction implements com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                public constructor()
                            }
                            class CHECKCAST extends com.sun.org.apache.bcel.internal.generic.CPInstruction implements com.sun.org.apache.bcel.internal.generic.LoadClass , com.sun.org.apache.bcel.internal.generic.ExceptionThrower , com.sun.org.apache.bcel.internal.generic.StackProducer , com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                public constructor(arg0: int)
                                public getExceptions(): java.lang.Class[]
                                public getLoadClassType(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.ObjectType
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class CHECKCAST$$Lambda extends com.sun.org.apache.bcel.internal.generic.CPInstruction implements com.sun.org.apache.bcel.internal.generic.LoadClass , com.sun.org.apache.bcel.internal.generic.ExceptionThrower , com.sun.org.apache.bcel.internal.generic.StackProducer , com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                public constructor(arg0: int)
                            }
                            abstract class CPInstruction extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.TypedInstruction , com.sun.org.apache.bcel.internal.generic.IndexedInstruction {
                                protected index: int
                                protected constructor(arg0: short, arg1: int)
                                public dump(arg0: java.io.DataOutputStream): void
                                public toString(arg0: boolean): string
                                public toString(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): string
                                protected initFromFile(arg0: com.sun.org.apache.bcel.internal.util.ByteSequence, arg1: boolean): void
                                public getIndex(): int
                                public setIndex(arg0: int): void
                                public getType(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.Type
                                public static class: java.lang.Class<any>
                            }
                            class ClassGen extends com.sun.org.apache.bcel.internal.classfile.AccessFlags implements java.lang.Cloneable {
                                public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: int, arg4: java.lang.String[], arg5: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen)
                                public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: int, arg4: java.lang.String[])
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.JavaClass | com.sun.org.apache.bcel.internal.classfile.JavaClass$$Lambda)
                                public getJavaClass(): com.sun.org.apache.bcel.internal.classfile.JavaClass
                                public addInterface(arg0: java.lang.String | string): void
                                public removeInterface(arg0: java.lang.String | string): void
                                public getMajor(): int
                                public setMajor(arg0: int): void
                                public setMinor(arg0: int): void
                                public getMinor(): int
                                public addAttribute(arg0: com.sun.org.apache.bcel.internal.classfile.Attribute): void
                                public addMethod(arg0: com.sun.org.apache.bcel.internal.classfile.Method): void
                                public addEmptyConstructor(arg0: int): void
                                public addField(arg0: com.sun.org.apache.bcel.internal.classfile.Field): void
                                public containsField(arg0: com.sun.org.apache.bcel.internal.classfile.Field): boolean
                                public containsField(arg0: java.lang.String | string): com.sun.org.apache.bcel.internal.classfile.Field
                                public containsMethod(arg0: java.lang.String | string, arg1: java.lang.String | string): com.sun.org.apache.bcel.internal.classfile.Method
                                public removeAttribute(arg0: com.sun.org.apache.bcel.internal.classfile.Attribute): void
                                public removeMethod(arg0: com.sun.org.apache.bcel.internal.classfile.Method): void
                                public replaceMethod(arg0: com.sun.org.apache.bcel.internal.classfile.Method, arg1: com.sun.org.apache.bcel.internal.classfile.Method): void
                                public replaceField(arg0: com.sun.org.apache.bcel.internal.classfile.Field, arg1: com.sun.org.apache.bcel.internal.classfile.Field): void
                                public removeField(arg0: com.sun.org.apache.bcel.internal.classfile.Field): void
                                public getClassName(): string
                                public getSuperclassName(): string
                                public getFileName(): string
                                public setClassName(arg0: java.lang.String | string): void
                                public setSuperclassName(arg0: java.lang.String | string): void
                                public getMethods(): com.sun.org.apache.bcel.internal.classfile.Method[]
                                public setMethods(arg0: com.sun.org.apache.bcel.internal.classfile.Method[]): void
                                public setMethodAt(arg0: com.sun.org.apache.bcel.internal.classfile.Method, arg1: int): void
                                public getMethodAt(arg0: int): com.sun.org.apache.bcel.internal.classfile.Method
                                public getInterfaceNames(): java.lang.String[]
                                public getInterfaces(): int[]
                                public getFields(): com.sun.org.apache.bcel.internal.classfile.Field[]
                                public getAttributes(): com.sun.org.apache.bcel.internal.classfile.Attribute[]
                                public getConstantPool(): com.sun.org.apache.bcel.internal.generic.ConstantPoolGen
                                public setConstantPool(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): void
                                public setClassNameIndex(arg0: int): void
                                public setSuperclassNameIndex(arg0: int): void
                                public getSuperclassNameIndex(): int
                                public getClassNameIndex(): int
                                public addObserver(arg0: com.sun.org.apache.bcel.internal.generic.ClassObserver | com.sun.org.apache.bcel.internal.generic.ClassObserver$$Lambda): void
                                public removeObserver(arg0: com.sun.org.apache.bcel.internal.generic.ClassObserver | com.sun.org.apache.bcel.internal.generic.ClassObserver$$Lambda): void
                                public update(): void
                                public clone(): java.lang.Object
                                public static class: java.lang.Class<any>
                            }
                            class ClassGenException extends java.lang.RuntimeException {
                                public constructor()
                                public constructor(arg0: java.lang.String | string)
                                public static class: java.lang.Class<any>
                            }
                            interface ClassObserver {
                                notify(arg0: com.sun.org.apache.bcel.internal.generic.ClassGen): void
                            }
                            interface ClassObserver$$Lambda {
                                (arg0: com.sun.org.apache.bcel.internal.generic.ClassGen): void
                            }
                            class CodeExceptionGen implements com.sun.org.apache.bcel.internal.generic.InstructionTargeter , java.lang.Cloneable , java.io.Serializable {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle, arg1: com.sun.org.apache.bcel.internal.generic.InstructionHandle, arg2: com.sun.org.apache.bcel.internal.generic.InstructionHandle, arg3: com.sun.org.apache.bcel.internal.generic.ObjectType)
                                public getCodeException(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.classfile.CodeException
                                public setStartPC(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle): void
                                public setEndPC(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle): void
                                public setHandlerPC(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle): void
                                public updateTarget(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle, arg1: com.sun.org.apache.bcel.internal.generic.InstructionHandle): void
                                public containsTarget(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle): boolean
                                public setCatchType(arg0: com.sun.org.apache.bcel.internal.generic.ObjectType): void
                                public getCatchType(): com.sun.org.apache.bcel.internal.generic.ObjectType
                                public getStartPC(): com.sun.org.apache.bcel.internal.generic.InstructionHandle
                                public getEndPC(): com.sun.org.apache.bcel.internal.generic.InstructionHandle
                                public getHandlerPC(): com.sun.org.apache.bcel.internal.generic.InstructionHandle
                                public toString(): string
                                public clone(): java.lang.Object
                                public static class: java.lang.Class<any>
                            }
                            interface CompoundInstruction {
                                getInstructionList(): com.sun.org.apache.bcel.internal.generic.InstructionList
                            }
                            interface CompoundInstruction$$Lambda {
                                (): com.sun.org.apache.bcel.internal.generic.InstructionList
                            }
                            class ConstantPoolGen implements java.io.Serializable {
                                protected size: int
                                protected constants: com.sun.org.apache.bcel.internal.classfile.Constant[]
                                protected index: int
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.Constant[])
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool)
                                public constructor()
                                protected adjustSize(): void
                                public lookupString(arg0: java.lang.String | string): int
                                public addString(arg0: java.lang.String | string): int
                                public lookupClass(arg0: java.lang.String | string): int
                                public addClass(arg0: java.lang.String | string): int
                                public addClass(arg0: com.sun.org.apache.bcel.internal.generic.ObjectType): int
                                public addArrayClass(arg0: com.sun.org.apache.bcel.internal.generic.ArrayType): int
                                public lookupInteger(arg0: int): int
                                public addInteger(arg0: int): int
                                public lookupFloat(arg0: float): int
                                public addFloat(arg0: float): int
                                public lookupUtf8(arg0: java.lang.String | string): int
                                public addUtf8(arg0: java.lang.String | string): int
                                public lookupLong(arg0: long): int
                                public addLong(arg0: long): int
                                public lookupDouble(arg0: double): int
                                public addDouble(arg0: double): int
                                public lookupNameAndType(arg0: java.lang.String | string, arg1: java.lang.String | string): int
                                public addNameAndType(arg0: java.lang.String | string, arg1: java.lang.String | string): int
                                public lookupMethodref(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): int
                                public lookupMethodref(arg0: com.sun.org.apache.bcel.internal.generic.MethodGen): int
                                public addMethodref(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): int
                                public addMethodref(arg0: com.sun.org.apache.bcel.internal.generic.MethodGen): int
                                public lookupInterfaceMethodref(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): int
                                public lookupInterfaceMethodref(arg0: com.sun.org.apache.bcel.internal.generic.MethodGen): int
                                public addInterfaceMethodref(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): int
                                public addInterfaceMethodref(arg0: com.sun.org.apache.bcel.internal.generic.MethodGen): int
                                public lookupFieldref(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): int
                                public addFieldref(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): int
                                public getConstant(arg0: int): com.sun.org.apache.bcel.internal.classfile.Constant
                                public setConstant(arg0: int, arg1: com.sun.org.apache.bcel.internal.classfile.Constant): void
                                public getConstantPool(): com.sun.org.apache.bcel.internal.classfile.ConstantPool
                                public getSize(): int
                                public getFinalConstantPool(): com.sun.org.apache.bcel.internal.classfile.ConstantPool
                                public toString(): string
                                public addConstant(arg0: com.sun.org.apache.bcel.internal.classfile.Constant, arg1: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): int
                                public static class: java.lang.Class<any>
                            }
                            interface ConstantPushInstruction extends com.sun.org.apache.bcel.internal.generic.PushInstruction , com.sun.org.apache.bcel.internal.generic.TypedInstruction {
                                getValue(): java.lang.Number
                            }
                            abstract class ConversionInstruction extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.TypedInstruction , com.sun.org.apache.bcel.internal.generic.StackProducer , com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                protected constructor(arg0: short)
                                public getType(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.Type
                                public static class: java.lang.Class<any>
                            }
                            abstract class ConversionInstruction$$Lambda extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.TypedInstruction , com.sun.org.apache.bcel.internal.generic.StackProducer , com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                protected constructor(arg0: short)
                            }
                            class D2F extends com.sun.org.apache.bcel.internal.generic.ConversionInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class D2I extends com.sun.org.apache.bcel.internal.generic.ConversionInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class D2L extends com.sun.org.apache.bcel.internal.generic.ConversionInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class DADD extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class DALOAD extends com.sun.org.apache.bcel.internal.generic.ArrayInstruction implements com.sun.org.apache.bcel.internal.generic.StackProducer {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class DALOAD$$Lambda extends com.sun.org.apache.bcel.internal.generic.ArrayInstruction implements com.sun.org.apache.bcel.internal.generic.StackProducer {
                                public constructor()
                            }
                            class DASTORE extends com.sun.org.apache.bcel.internal.generic.ArrayInstruction implements com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class DASTORE$$Lambda extends com.sun.org.apache.bcel.internal.generic.ArrayInstruction implements com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                public constructor()
                            }
                            class DCMPG extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.TypedInstruction , com.sun.org.apache.bcel.internal.generic.StackProducer , com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                public constructor()
                                public getType(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.Type
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class DCMPG$$Lambda extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.TypedInstruction , com.sun.org.apache.bcel.internal.generic.StackProducer , com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                public constructor()
                            }
                            class DCMPL extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.TypedInstruction , com.sun.org.apache.bcel.internal.generic.StackProducer , com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                public constructor()
                                public getType(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.Type
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class DCMPL$$Lambda extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.TypedInstruction , com.sun.org.apache.bcel.internal.generic.StackProducer , com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                public constructor()
                            }
                            class DCONST extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.ConstantPushInstruction , com.sun.org.apache.bcel.internal.generic.TypedInstruction {
                                public constructor(arg0: double)
                                public getValue(): java.lang.Number
                                public getType(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.Type
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class DCONST$$Lambda extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.ConstantPushInstruction , com.sun.org.apache.bcel.internal.generic.TypedInstruction {
                                public constructor(arg0: double)
                            }
                            class DDIV extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class DLOAD extends com.sun.org.apache.bcel.internal.generic.LoadInstruction {
                                public constructor(arg0: int)
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class DMUL extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class DNEG extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class DREM extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class DRETURN extends com.sun.org.apache.bcel.internal.generic.ReturnInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class DSTORE extends com.sun.org.apache.bcel.internal.generic.StoreInstruction {
                                public constructor(arg0: int)
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class DSUB extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class DUP extends com.sun.org.apache.bcel.internal.generic.StackInstruction implements com.sun.org.apache.bcel.internal.generic.PushInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class DUP2 extends com.sun.org.apache.bcel.internal.generic.StackInstruction implements com.sun.org.apache.bcel.internal.generic.PushInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class DUP2_X1 extends com.sun.org.apache.bcel.internal.generic.StackInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class DUP2_X2 extends com.sun.org.apache.bcel.internal.generic.StackInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class DUP_X1 extends com.sun.org.apache.bcel.internal.generic.StackInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class DUP_X2 extends com.sun.org.apache.bcel.internal.generic.StackInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            abstract class EmptyVisitor implements com.sun.org.apache.bcel.internal.generic.Visitor {
                                public constructor()
                                public visitStackInstruction(arg0: com.sun.org.apache.bcel.internal.generic.StackInstruction): void
                                public visitLocalVariableInstruction(arg0: com.sun.org.apache.bcel.internal.generic.LocalVariableInstruction): void
                                public visitBranchInstruction(arg0: com.sun.org.apache.bcel.internal.generic.BranchInstruction): void
                                public visitLoadClass(arg0: com.sun.org.apache.bcel.internal.generic.LoadClass): void
                                public visitFieldInstruction(arg0: com.sun.org.apache.bcel.internal.generic.FieldInstruction | com.sun.org.apache.bcel.internal.generic.FieldInstruction$$Lambda): void
                                public visitIfInstruction(arg0: com.sun.org.apache.bcel.internal.generic.IfInstruction | com.sun.org.apache.bcel.internal.generic.IfInstruction$$Lambda): void
                                public visitConversionInstruction(arg0: com.sun.org.apache.bcel.internal.generic.ConversionInstruction | com.sun.org.apache.bcel.internal.generic.ConversionInstruction$$Lambda): void
                                public visitPopInstruction(arg0: com.sun.org.apache.bcel.internal.generic.PopInstruction): void
                                public visitJsrInstruction(arg0: com.sun.org.apache.bcel.internal.generic.JsrInstruction | com.sun.org.apache.bcel.internal.generic.JsrInstruction$$Lambda): void
                                public visitGotoInstruction(arg0: com.sun.org.apache.bcel.internal.generic.GotoInstruction): void
                                public visitStoreInstruction(arg0: com.sun.org.apache.bcel.internal.generic.StoreInstruction): void
                                public visitTypedInstruction(arg0: com.sun.org.apache.bcel.internal.generic.TypedInstruction | com.sun.org.apache.bcel.internal.generic.TypedInstruction$$Lambda): void
                                public visitSelect(arg0: com.sun.org.apache.bcel.internal.generic.Select | com.sun.org.apache.bcel.internal.generic.Select$$Lambda): void
                                public visitUnconditionalBranch(arg0: com.sun.org.apache.bcel.internal.generic.UnconditionalBranch): void
                                public visitPushInstruction(arg0: com.sun.org.apache.bcel.internal.generic.PushInstruction): void
                                public visitArithmeticInstruction(arg0: com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction | com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction$$Lambda): void
                                public visitCPInstruction(arg0: com.sun.org.apache.bcel.internal.generic.CPInstruction): void
                                public visitInvokeInstruction(arg0: com.sun.org.apache.bcel.internal.generic.InvokeInstruction | com.sun.org.apache.bcel.internal.generic.InvokeInstruction$$Lambda): void
                                public visitArrayInstruction(arg0: com.sun.org.apache.bcel.internal.generic.ArrayInstruction | com.sun.org.apache.bcel.internal.generic.ArrayInstruction$$Lambda): void
                                public visitAllocationInstruction(arg0: com.sun.org.apache.bcel.internal.generic.AllocationInstruction): void
                                public visitReturnInstruction(arg0: com.sun.org.apache.bcel.internal.generic.ReturnInstruction | com.sun.org.apache.bcel.internal.generic.ReturnInstruction$$Lambda): void
                                public visitFieldOrMethod(arg0: com.sun.org.apache.bcel.internal.generic.FieldOrMethod): void
                                public visitConstantPushInstruction(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPushInstruction): void
                                public visitExceptionThrower(arg0: com.sun.org.apache.bcel.internal.generic.ExceptionThrower | com.sun.org.apache.bcel.internal.generic.ExceptionThrower$$Lambda): void
                                public visitLoadInstruction(arg0: com.sun.org.apache.bcel.internal.generic.LoadInstruction): void
                                public visitVariableLengthInstruction(arg0: com.sun.org.apache.bcel.internal.generic.VariableLengthInstruction): void
                                public visitStackProducer(arg0: com.sun.org.apache.bcel.internal.generic.StackProducer | com.sun.org.apache.bcel.internal.generic.StackProducer$$Lambda): void
                                public visitStackConsumer(arg0: com.sun.org.apache.bcel.internal.generic.StackConsumer | com.sun.org.apache.bcel.internal.generic.StackConsumer$$Lambda): void
                                public visitACONST_NULL(arg0: com.sun.org.apache.bcel.internal.generic.ACONST_NULL | com.sun.org.apache.bcel.internal.generic.ACONST_NULL$$Lambda): void
                                public visitGETSTATIC(arg0: com.sun.org.apache.bcel.internal.generic.GETSTATIC | com.sun.org.apache.bcel.internal.generic.GETSTATIC$$Lambda): void
                                public visitIF_ICMPLT(arg0: com.sun.org.apache.bcel.internal.generic.IF_ICMPLT): void
                                public visitMONITOREXIT(arg0: com.sun.org.apache.bcel.internal.generic.MONITOREXIT | com.sun.org.apache.bcel.internal.generic.MONITOREXIT$$Lambda): void
                                public visitIFLT(arg0: com.sun.org.apache.bcel.internal.generic.IFLT): void
                                public visitLSTORE(arg0: com.sun.org.apache.bcel.internal.generic.LSTORE): void
                                public visitPOP2(arg0: com.sun.org.apache.bcel.internal.generic.POP2): void
                                public visitBASTORE(arg0: com.sun.org.apache.bcel.internal.generic.BASTORE | com.sun.org.apache.bcel.internal.generic.BASTORE$$Lambda): void
                                public visitISTORE(arg0: com.sun.org.apache.bcel.internal.generic.ISTORE): void
                                public visitCHECKCAST(arg0: com.sun.org.apache.bcel.internal.generic.CHECKCAST | com.sun.org.apache.bcel.internal.generic.CHECKCAST$$Lambda): void
                                public visitFCMPG(arg0: com.sun.org.apache.bcel.internal.generic.FCMPG | com.sun.org.apache.bcel.internal.generic.FCMPG$$Lambda): void
                                public visitI2F(arg0: com.sun.org.apache.bcel.internal.generic.I2F): void
                                public visitATHROW(arg0: com.sun.org.apache.bcel.internal.generic.ATHROW | com.sun.org.apache.bcel.internal.generic.ATHROW$$Lambda): void
                                public visitDCMPL(arg0: com.sun.org.apache.bcel.internal.generic.DCMPL | com.sun.org.apache.bcel.internal.generic.DCMPL$$Lambda): void
                                public visitARRAYLENGTH(arg0: com.sun.org.apache.bcel.internal.generic.ARRAYLENGTH | com.sun.org.apache.bcel.internal.generic.ARRAYLENGTH$$Lambda): void
                                public visitDUP(arg0: com.sun.org.apache.bcel.internal.generic.DUP): void
                                public visitINVOKESTATIC(arg0: com.sun.org.apache.bcel.internal.generic.INVOKESTATIC): void
                                public visitLCONST(arg0: com.sun.org.apache.bcel.internal.generic.LCONST | com.sun.org.apache.bcel.internal.generic.LCONST$$Lambda): void
                                public visitDREM(arg0: com.sun.org.apache.bcel.internal.generic.DREM): void
                                public visitIFGE(arg0: com.sun.org.apache.bcel.internal.generic.IFGE): void
                                public visitCALOAD(arg0: com.sun.org.apache.bcel.internal.generic.CALOAD | com.sun.org.apache.bcel.internal.generic.CALOAD$$Lambda): void
                                public visitLASTORE(arg0: com.sun.org.apache.bcel.internal.generic.LASTORE | com.sun.org.apache.bcel.internal.generic.LASTORE$$Lambda): void
                                public visitI2D(arg0: com.sun.org.apache.bcel.internal.generic.I2D): void
                                public visitDADD(arg0: com.sun.org.apache.bcel.internal.generic.DADD): void
                                public visitINVOKESPECIAL(arg0: com.sun.org.apache.bcel.internal.generic.INVOKESPECIAL): void
                                public visitIAND(arg0: com.sun.org.apache.bcel.internal.generic.IAND): void
                                public visitPUTFIELD(arg0: com.sun.org.apache.bcel.internal.generic.PUTFIELD | com.sun.org.apache.bcel.internal.generic.PUTFIELD$$Lambda): void
                                public visitILOAD(arg0: com.sun.org.apache.bcel.internal.generic.ILOAD): void
                                public visitDLOAD(arg0: com.sun.org.apache.bcel.internal.generic.DLOAD): void
                                public visitDCONST(arg0: com.sun.org.apache.bcel.internal.generic.DCONST | com.sun.org.apache.bcel.internal.generic.DCONST$$Lambda): void
                                public visitNEW(arg0: com.sun.org.apache.bcel.internal.generic.NEW | com.sun.org.apache.bcel.internal.generic.NEW$$Lambda): void
                                public visitIFNULL(arg0: com.sun.org.apache.bcel.internal.generic.IFNULL): void
                                public visitLSUB(arg0: com.sun.org.apache.bcel.internal.generic.LSUB): void
                                public visitL2I(arg0: com.sun.org.apache.bcel.internal.generic.L2I): void
                                public visitISHR(arg0: com.sun.org.apache.bcel.internal.generic.ISHR): void
                                public visitTABLESWITCH(arg0: com.sun.org.apache.bcel.internal.generic.TABLESWITCH): void
                                public visitIINC(arg0: com.sun.org.apache.bcel.internal.generic.IINC): void
                                public visitDRETURN(arg0: com.sun.org.apache.bcel.internal.generic.DRETURN): void
                                public visitFSTORE(arg0: com.sun.org.apache.bcel.internal.generic.FSTORE): void
                                public visitDASTORE(arg0: com.sun.org.apache.bcel.internal.generic.DASTORE | com.sun.org.apache.bcel.internal.generic.DASTORE$$Lambda): void
                                public visitIALOAD(arg0: com.sun.org.apache.bcel.internal.generic.IALOAD | com.sun.org.apache.bcel.internal.generic.IALOAD$$Lambda): void
                                public visitDDIV(arg0: com.sun.org.apache.bcel.internal.generic.DDIV): void
                                public visitIF_ICMPGE(arg0: com.sun.org.apache.bcel.internal.generic.IF_ICMPGE): void
                                public visitLAND(arg0: com.sun.org.apache.bcel.internal.generic.LAND): void
                                public visitIDIV(arg0: com.sun.org.apache.bcel.internal.generic.IDIV | com.sun.org.apache.bcel.internal.generic.IDIV$$Lambda): void
                                public visitLOR(arg0: com.sun.org.apache.bcel.internal.generic.LOR): void
                                public visitCASTORE(arg0: com.sun.org.apache.bcel.internal.generic.CASTORE | com.sun.org.apache.bcel.internal.generic.CASTORE$$Lambda): void
                                public visitFREM(arg0: com.sun.org.apache.bcel.internal.generic.FREM): void
                                public visitLDC(arg0: com.sun.org.apache.bcel.internal.generic.LDC | com.sun.org.apache.bcel.internal.generic.LDC$$Lambda): void
                                public visitBIPUSH(arg0: com.sun.org.apache.bcel.internal.generic.BIPUSH): void
                                public visitDSTORE(arg0: com.sun.org.apache.bcel.internal.generic.DSTORE): void
                                public visitF2L(arg0: com.sun.org.apache.bcel.internal.generic.F2L): void
                                public visitFMUL(arg0: com.sun.org.apache.bcel.internal.generic.FMUL): void
                                public visitLLOAD(arg0: com.sun.org.apache.bcel.internal.generic.LLOAD): void
                                public visitJSR(arg0: com.sun.org.apache.bcel.internal.generic.JSR): void
                                public visitFSUB(arg0: com.sun.org.apache.bcel.internal.generic.FSUB): void
                                public visitSASTORE(arg0: com.sun.org.apache.bcel.internal.generic.SASTORE | com.sun.org.apache.bcel.internal.generic.SASTORE$$Lambda): void
                                public visitALOAD(arg0: com.sun.org.apache.bcel.internal.generic.ALOAD): void
                                public visitDUP2_X2(arg0: com.sun.org.apache.bcel.internal.generic.DUP2_X2): void
                                public visitRETURN(arg0: com.sun.org.apache.bcel.internal.generic.RETURN): void
                                public visitDALOAD(arg0: com.sun.org.apache.bcel.internal.generic.DALOAD | com.sun.org.apache.bcel.internal.generic.DALOAD$$Lambda): void
                                public visitSIPUSH(arg0: com.sun.org.apache.bcel.internal.generic.SIPUSH): void
                                public visitDSUB(arg0: com.sun.org.apache.bcel.internal.generic.DSUB): void
                                public visitL2F(arg0: com.sun.org.apache.bcel.internal.generic.L2F): void
                                public visitIF_ICMPGT(arg0: com.sun.org.apache.bcel.internal.generic.IF_ICMPGT): void
                                public visitF2D(arg0: com.sun.org.apache.bcel.internal.generic.F2D): void
                                public visitI2L(arg0: com.sun.org.apache.bcel.internal.generic.I2L): void
                                public visitIF_ACMPNE(arg0: com.sun.org.apache.bcel.internal.generic.IF_ACMPNE): void
                                public visitPOP(arg0: com.sun.org.apache.bcel.internal.generic.POP): void
                                public visitI2S(arg0: com.sun.org.apache.bcel.internal.generic.I2S): void
                                public visitIFEQ(arg0: com.sun.org.apache.bcel.internal.generic.IFEQ): void
                                public visitSWAP(arg0: com.sun.org.apache.bcel.internal.generic.SWAP | com.sun.org.apache.bcel.internal.generic.SWAP$$Lambda): void
                                public visitIOR(arg0: com.sun.org.apache.bcel.internal.generic.IOR): void
                                public visitIREM(arg0: com.sun.org.apache.bcel.internal.generic.IREM | com.sun.org.apache.bcel.internal.generic.IREM$$Lambda): void
                                public visitIASTORE(arg0: com.sun.org.apache.bcel.internal.generic.IASTORE | com.sun.org.apache.bcel.internal.generic.IASTORE$$Lambda): void
                                public visitNEWARRAY(arg0: com.sun.org.apache.bcel.internal.generic.NEWARRAY | com.sun.org.apache.bcel.internal.generic.NEWARRAY$$Lambda): void
                                public visitINVOKEINTERFACE(arg0: com.sun.org.apache.bcel.internal.generic.INVOKEINTERFACE): void
                                public visitINEG(arg0: com.sun.org.apache.bcel.internal.generic.INEG): void
                                public visitLCMP(arg0: com.sun.org.apache.bcel.internal.generic.LCMP | com.sun.org.apache.bcel.internal.generic.LCMP$$Lambda): void
                                public visitJSR_W(arg0: com.sun.org.apache.bcel.internal.generic.JSR_W): void
                                public visitMULTIANEWARRAY(arg0: com.sun.org.apache.bcel.internal.generic.MULTIANEWARRAY | com.sun.org.apache.bcel.internal.generic.MULTIANEWARRAY$$Lambda): void
                                public visitDUP_X2(arg0: com.sun.org.apache.bcel.internal.generic.DUP_X2): void
                                public visitSALOAD(arg0: com.sun.org.apache.bcel.internal.generic.SALOAD | com.sun.org.apache.bcel.internal.generic.SALOAD$$Lambda): void
                                public visitIFNONNULL(arg0: com.sun.org.apache.bcel.internal.generic.IFNONNULL): void
                                public visitDMUL(arg0: com.sun.org.apache.bcel.internal.generic.DMUL): void
                                public visitIFNE(arg0: com.sun.org.apache.bcel.internal.generic.IFNE): void
                                public visitIF_ICMPLE(arg0: com.sun.org.apache.bcel.internal.generic.IF_ICMPLE): void
                                public visitLDC2_W(arg0: com.sun.org.apache.bcel.internal.generic.LDC2_W | com.sun.org.apache.bcel.internal.generic.LDC2_W$$Lambda): void
                                public visitGETFIELD(arg0: com.sun.org.apache.bcel.internal.generic.GETFIELD | com.sun.org.apache.bcel.internal.generic.GETFIELD$$Lambda): void
                                public visitLADD(arg0: com.sun.org.apache.bcel.internal.generic.LADD): void
                                public visitNOP(arg0: com.sun.org.apache.bcel.internal.generic.NOP): void
                                public visitFALOAD(arg0: com.sun.org.apache.bcel.internal.generic.FALOAD | com.sun.org.apache.bcel.internal.generic.FALOAD$$Lambda): void
                                public visitINSTANCEOF(arg0: com.sun.org.apache.bcel.internal.generic.INSTANCEOF | com.sun.org.apache.bcel.internal.generic.INSTANCEOF$$Lambda): void
                                public visitIFLE(arg0: com.sun.org.apache.bcel.internal.generic.IFLE): void
                                public visitLXOR(arg0: com.sun.org.apache.bcel.internal.generic.LXOR): void
                                public visitLRETURN(arg0: com.sun.org.apache.bcel.internal.generic.LRETURN): void
                                public visitFCONST(arg0: com.sun.org.apache.bcel.internal.generic.FCONST | com.sun.org.apache.bcel.internal.generic.FCONST$$Lambda): void
                                public visitIUSHR(arg0: com.sun.org.apache.bcel.internal.generic.IUSHR): void
                                public visitBALOAD(arg0: com.sun.org.apache.bcel.internal.generic.BALOAD | com.sun.org.apache.bcel.internal.generic.BALOAD$$Lambda): void
                                public visitDUP2(arg0: com.sun.org.apache.bcel.internal.generic.DUP2): void
                                public visitIF_ACMPEQ(arg0: com.sun.org.apache.bcel.internal.generic.IF_ACMPEQ): void
                                public visitIMPDEP1(arg0: com.sun.org.apache.bcel.internal.generic.IMPDEP1): void
                                public visitMONITORENTER(arg0: com.sun.org.apache.bcel.internal.generic.MONITORENTER | com.sun.org.apache.bcel.internal.generic.MONITORENTER$$Lambda): void
                                public visitLSHL(arg0: com.sun.org.apache.bcel.internal.generic.LSHL): void
                                public visitDCMPG(arg0: com.sun.org.apache.bcel.internal.generic.DCMPG | com.sun.org.apache.bcel.internal.generic.DCMPG$$Lambda): void
                                public visitD2L(arg0: com.sun.org.apache.bcel.internal.generic.D2L): void
                                public visitIMPDEP2(arg0: com.sun.org.apache.bcel.internal.generic.IMPDEP2): void
                                public visitL2D(arg0: com.sun.org.apache.bcel.internal.generic.L2D): void
                                public visitRET(arg0: com.sun.org.apache.bcel.internal.generic.RET | com.sun.org.apache.bcel.internal.generic.RET$$Lambda): void
                                public visitIFGT(arg0: com.sun.org.apache.bcel.internal.generic.IFGT): void
                                public visitIXOR(arg0: com.sun.org.apache.bcel.internal.generic.IXOR): void
                                public visitINVOKEVIRTUAL(arg0: com.sun.org.apache.bcel.internal.generic.INVOKEVIRTUAL): void
                                public visitFASTORE(arg0: com.sun.org.apache.bcel.internal.generic.FASTORE | com.sun.org.apache.bcel.internal.generic.FASTORE$$Lambda): void
                                public visitIRETURN(arg0: com.sun.org.apache.bcel.internal.generic.IRETURN): void
                                public visitIF_ICMPNE(arg0: com.sun.org.apache.bcel.internal.generic.IF_ICMPNE): void
                                public visitFLOAD(arg0: com.sun.org.apache.bcel.internal.generic.FLOAD): void
                                public visitLDIV(arg0: com.sun.org.apache.bcel.internal.generic.LDIV | com.sun.org.apache.bcel.internal.generic.LDIV$$Lambda): void
                                public visitPUTSTATIC(arg0: com.sun.org.apache.bcel.internal.generic.PUTSTATIC): void
                                public visitAALOAD(arg0: com.sun.org.apache.bcel.internal.generic.AALOAD | com.sun.org.apache.bcel.internal.generic.AALOAD$$Lambda): void
                                public visitD2I(arg0: com.sun.org.apache.bcel.internal.generic.D2I): void
                                public visitIF_ICMPEQ(arg0: com.sun.org.apache.bcel.internal.generic.IF_ICMPEQ): void
                                public visitAASTORE(arg0: com.sun.org.apache.bcel.internal.generic.AASTORE | com.sun.org.apache.bcel.internal.generic.AASTORE$$Lambda): void
                                public visitARETURN(arg0: com.sun.org.apache.bcel.internal.generic.ARETURN): void
                                public visitDUP2_X1(arg0: com.sun.org.apache.bcel.internal.generic.DUP2_X1): void
                                public visitFNEG(arg0: com.sun.org.apache.bcel.internal.generic.FNEG): void
                                public visitGOTO_W(arg0: com.sun.org.apache.bcel.internal.generic.GOTO_W): void
                                public visitD2F(arg0: com.sun.org.apache.bcel.internal.generic.D2F): void
                                public visitGOTO(arg0: com.sun.org.apache.bcel.internal.generic.GOTO): void
                                public visitISUB(arg0: com.sun.org.apache.bcel.internal.generic.ISUB): void
                                public visitF2I(arg0: com.sun.org.apache.bcel.internal.generic.F2I): void
                                public visitDNEG(arg0: com.sun.org.apache.bcel.internal.generic.DNEG): void
                                public visitICONST(arg0: com.sun.org.apache.bcel.internal.generic.ICONST | com.sun.org.apache.bcel.internal.generic.ICONST$$Lambda): void
                                public visitFDIV(arg0: com.sun.org.apache.bcel.internal.generic.FDIV): void
                                public visitI2B(arg0: com.sun.org.apache.bcel.internal.generic.I2B): void
                                public visitLNEG(arg0: com.sun.org.apache.bcel.internal.generic.LNEG): void
                                public visitLREM(arg0: com.sun.org.apache.bcel.internal.generic.LREM | com.sun.org.apache.bcel.internal.generic.LREM$$Lambda): void
                                public visitIMUL(arg0: com.sun.org.apache.bcel.internal.generic.IMUL): void
                                public visitIADD(arg0: com.sun.org.apache.bcel.internal.generic.IADD): void
                                public visitLSHR(arg0: com.sun.org.apache.bcel.internal.generic.LSHR): void
                                public visitLOOKUPSWITCH(arg0: com.sun.org.apache.bcel.internal.generic.LOOKUPSWITCH): void
                                public visitDUP_X1(arg0: com.sun.org.apache.bcel.internal.generic.DUP_X1): void
                                public visitFCMPL(arg0: com.sun.org.apache.bcel.internal.generic.FCMPL | com.sun.org.apache.bcel.internal.generic.FCMPL$$Lambda): void
                                public visitI2C(arg0: com.sun.org.apache.bcel.internal.generic.I2C): void
                                public visitLMUL(arg0: com.sun.org.apache.bcel.internal.generic.LMUL): void
                                public visitLUSHR(arg0: com.sun.org.apache.bcel.internal.generic.LUSHR): void
                                public visitISHL(arg0: com.sun.org.apache.bcel.internal.generic.ISHL): void
                                public visitLALOAD(arg0: com.sun.org.apache.bcel.internal.generic.LALOAD | com.sun.org.apache.bcel.internal.generic.LALOAD$$Lambda): void
                                public visitASTORE(arg0: com.sun.org.apache.bcel.internal.generic.ASTORE): void
                                public visitANEWARRAY(arg0: com.sun.org.apache.bcel.internal.generic.ANEWARRAY | com.sun.org.apache.bcel.internal.generic.ANEWARRAY$$Lambda): void
                                public visitFRETURN(arg0: com.sun.org.apache.bcel.internal.generic.FRETURN): void
                                public visitFADD(arg0: com.sun.org.apache.bcel.internal.generic.FADD): void
                                public visitBREAKPOINT(arg0: com.sun.org.apache.bcel.internal.generic.BREAKPOINT): void
                                public static class: java.lang.Class<any>
                            }
                            interface ExceptionThrower {
                                getExceptions(): java.lang.Class[]
                            }
                            interface ExceptionThrower$$Lambda {
                                (): java.lang.Class[]
                            }
                            class F2D extends com.sun.org.apache.bcel.internal.generic.ConversionInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class F2I extends com.sun.org.apache.bcel.internal.generic.ConversionInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class F2L extends com.sun.org.apache.bcel.internal.generic.ConversionInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class FADD extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class FALOAD extends com.sun.org.apache.bcel.internal.generic.ArrayInstruction implements com.sun.org.apache.bcel.internal.generic.StackProducer {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class FALOAD$$Lambda extends com.sun.org.apache.bcel.internal.generic.ArrayInstruction implements com.sun.org.apache.bcel.internal.generic.StackProducer {
                                public constructor()
                            }
                            class FASTORE extends com.sun.org.apache.bcel.internal.generic.ArrayInstruction implements com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class FASTORE$$Lambda extends com.sun.org.apache.bcel.internal.generic.ArrayInstruction implements com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                public constructor()
                            }
                            class FCMPG extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.TypedInstruction , com.sun.org.apache.bcel.internal.generic.StackProducer , com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                public constructor()
                                public getType(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.Type
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class FCMPG$$Lambda extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.TypedInstruction , com.sun.org.apache.bcel.internal.generic.StackProducer , com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                public constructor()
                            }
                            class FCMPL extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.TypedInstruction , com.sun.org.apache.bcel.internal.generic.StackProducer , com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                public constructor()
                                public getType(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.Type
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class FCMPL$$Lambda extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.TypedInstruction , com.sun.org.apache.bcel.internal.generic.StackProducer , com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                public constructor()
                            }
                            class FCONST extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.ConstantPushInstruction , com.sun.org.apache.bcel.internal.generic.TypedInstruction {
                                public constructor(arg0: float)
                                public getValue(): java.lang.Number
                                public getType(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.Type
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class FCONST$$Lambda extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.ConstantPushInstruction , com.sun.org.apache.bcel.internal.generic.TypedInstruction {
                                public constructor(arg0: float)
                            }
                            class FDIV extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class FLOAD extends com.sun.org.apache.bcel.internal.generic.LoadInstruction {
                                public constructor(arg0: int)
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class FMUL extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class FNEG extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class FREM extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class FRETURN extends com.sun.org.apache.bcel.internal.generic.ReturnInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class FSTORE extends com.sun.org.apache.bcel.internal.generic.StoreInstruction {
                                public constructor(arg0: int)
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class FSUB extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class FieldGen extends com.sun.org.apache.bcel.internal.generic.FieldGenOrMethodGen {
                                public constructor(arg0: int, arg1: com.sun.org.apache.bcel.internal.generic.Type, arg2: java.lang.String | string, arg3: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen)
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.Field, arg1: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen)
                                public setInitValue(arg0: java.lang.String | string): void
                                public setInitValue(arg0: long): void
                                public setInitValue(arg0: int): void
                                public setInitValue(arg0: short): void
                                public setInitValue(arg0: char): void
                                public setInitValue(arg0: byte): void
                                public setInitValue(arg0: boolean): void
                                public setInitValue(arg0: float): void
                                public setInitValue(arg0: double): void
                                public cancelInitValue(): void
                                public getField(): com.sun.org.apache.bcel.internal.classfile.Field
                                public getSignature(): string
                                public addObserver(arg0: com.sun.org.apache.bcel.internal.generic.FieldObserver | com.sun.org.apache.bcel.internal.generic.FieldObserver$$Lambda): void
                                public removeObserver(arg0: com.sun.org.apache.bcel.internal.generic.FieldObserver | com.sun.org.apache.bcel.internal.generic.FieldObserver$$Lambda): void
                                public update(): void
                                public getInitValue(): string
                                public toString(): string
                                public copy(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.FieldGen
                                public static class: java.lang.Class<any>
                            }
                            abstract class FieldGenOrMethodGen extends com.sun.org.apache.bcel.internal.classfile.AccessFlags implements com.sun.org.apache.bcel.internal.generic.NamedAndTyped , java.lang.Cloneable {
                                protected name: string
                                protected type: com.sun.org.apache.bcel.internal.generic.Type
                                protected cp: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen
                                protected constructor()
                                public setType(arg0: com.sun.org.apache.bcel.internal.generic.Type): void
                                public getType(): com.sun.org.apache.bcel.internal.generic.Type
                                public getName(): string
                                public setName(arg0: java.lang.String | string): void
                                public getConstantPool(): com.sun.org.apache.bcel.internal.generic.ConstantPoolGen
                                public setConstantPool(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): void
                                public addAttribute(arg0: com.sun.org.apache.bcel.internal.classfile.Attribute): void
                                public removeAttribute(arg0: com.sun.org.apache.bcel.internal.classfile.Attribute): void
                                public removeAttributes(): void
                                public getAttributes(): com.sun.org.apache.bcel.internal.classfile.Attribute[]
                                public getSignature(): string
                                public clone(): java.lang.Object
                                public static class: java.lang.Class<any>
                            }
                            abstract class FieldInstruction extends com.sun.org.apache.bcel.internal.generic.FieldOrMethod implements com.sun.org.apache.bcel.internal.generic.TypedInstruction {
                                protected constructor(arg0: short, arg1: int)
                                public toString(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): string
                                protected getFieldSize(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): int
                                public getType(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.Type
                                public getFieldType(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.Type
                                public getFieldName(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): string
                                public static class: java.lang.Class<any>
                            }
                            abstract class FieldInstruction$$Lambda extends com.sun.org.apache.bcel.internal.generic.FieldOrMethod implements com.sun.org.apache.bcel.internal.generic.TypedInstruction {
                                protected constructor(arg0: short, arg1: int)
                            }
                            interface FieldObserver {
                                notify(arg0: com.sun.org.apache.bcel.internal.generic.FieldGen): void
                            }
                            interface FieldObserver$$Lambda {
                                (arg0: com.sun.org.apache.bcel.internal.generic.FieldGen): void
                            }
                            abstract class FieldOrMethod extends com.sun.org.apache.bcel.internal.generic.CPInstruction implements com.sun.org.apache.bcel.internal.generic.LoadClass {
                                protected constructor(arg0: short, arg1: int)
                                public getSignature(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): string
                                public getName(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): string
                                public getClassName(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): string
                                public getClassType(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.ObjectType
                                public getLoadClassType(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.ObjectType
                                public static class: java.lang.Class<any>
                            }
                            class GETFIELD extends com.sun.org.apache.bcel.internal.generic.FieldInstruction implements com.sun.org.apache.bcel.internal.generic.ExceptionThrower , com.sun.org.apache.bcel.internal.generic.StackConsumer , com.sun.org.apache.bcel.internal.generic.StackProducer {
                                public constructor(arg0: int)
                                public produceStack(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): int
                                public getExceptions(): java.lang.Class[]
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class GETFIELD$$Lambda extends com.sun.org.apache.bcel.internal.generic.FieldInstruction implements com.sun.org.apache.bcel.internal.generic.ExceptionThrower , com.sun.org.apache.bcel.internal.generic.StackConsumer , com.sun.org.apache.bcel.internal.generic.StackProducer {
                                public constructor(arg0: int)
                            }
                            class GETSTATIC extends com.sun.org.apache.bcel.internal.generic.FieldInstruction implements com.sun.org.apache.bcel.internal.generic.PushInstruction , com.sun.org.apache.bcel.internal.generic.ExceptionThrower {
                                public constructor(arg0: int)
                                public produceStack(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): int
                                public getExceptions(): java.lang.Class[]
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class GETSTATIC$$Lambda extends com.sun.org.apache.bcel.internal.generic.FieldInstruction implements com.sun.org.apache.bcel.internal.generic.PushInstruction , com.sun.org.apache.bcel.internal.generic.ExceptionThrower {
                                public constructor(arg0: int)
                            }
                            class GOTO extends com.sun.org.apache.bcel.internal.generic.GotoInstruction implements com.sun.org.apache.bcel.internal.generic.VariableLengthInstruction {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle)
                                public dump(arg0: java.io.DataOutputStream): void
                                protected updatePosition(arg0: int, arg1: int): int
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class GOTO_W extends com.sun.org.apache.bcel.internal.generic.GotoInstruction {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle)
                                public dump(arg0: java.io.DataOutputStream): void
                                protected initFromFile(arg0: com.sun.org.apache.bcel.internal.util.ByteSequence, arg1: boolean): void
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            abstract class GotoInstruction extends com.sun.org.apache.bcel.internal.generic.BranchInstruction implements com.sun.org.apache.bcel.internal.generic.UnconditionalBranch {
                                public static class: java.lang.Class<any>
                            }
                            class I2B extends com.sun.org.apache.bcel.internal.generic.ConversionInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class I2C extends com.sun.org.apache.bcel.internal.generic.ConversionInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class I2D extends com.sun.org.apache.bcel.internal.generic.ConversionInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class I2F extends com.sun.org.apache.bcel.internal.generic.ConversionInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class I2L extends com.sun.org.apache.bcel.internal.generic.ConversionInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class I2S extends com.sun.org.apache.bcel.internal.generic.ConversionInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class IADD extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class IALOAD extends com.sun.org.apache.bcel.internal.generic.ArrayInstruction implements com.sun.org.apache.bcel.internal.generic.StackProducer {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class IALOAD$$Lambda extends com.sun.org.apache.bcel.internal.generic.ArrayInstruction implements com.sun.org.apache.bcel.internal.generic.StackProducer {
                                public constructor()
                            }
                            class IAND extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class IASTORE extends com.sun.org.apache.bcel.internal.generic.ArrayInstruction implements com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class IASTORE$$Lambda extends com.sun.org.apache.bcel.internal.generic.ArrayInstruction implements com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                public constructor()
                            }
                            class ICONST extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.ConstantPushInstruction , com.sun.org.apache.bcel.internal.generic.TypedInstruction {
                                public constructor(arg0: int)
                                public getValue(): java.lang.Number
                                public getType(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.Type
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class ICONST$$Lambda extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.ConstantPushInstruction , com.sun.org.apache.bcel.internal.generic.TypedInstruction {
                                public constructor(arg0: int)
                            }
                            class IDIV extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction implements com.sun.org.apache.bcel.internal.generic.ExceptionThrower {
                                public constructor()
                                public getExceptions(): java.lang.Class[]
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class IDIV$$Lambda extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction implements com.sun.org.apache.bcel.internal.generic.ExceptionThrower {
                                public constructor()
                            }
                            class IFEQ extends com.sun.org.apache.bcel.internal.generic.IfInstruction {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle)
                                public negate(): com.sun.org.apache.bcel.internal.generic.IfInstruction
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class IFGE extends com.sun.org.apache.bcel.internal.generic.IfInstruction {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle)
                                public negate(): com.sun.org.apache.bcel.internal.generic.IfInstruction
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class IFGT extends com.sun.org.apache.bcel.internal.generic.IfInstruction {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle)
                                public negate(): com.sun.org.apache.bcel.internal.generic.IfInstruction
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class IFLE extends com.sun.org.apache.bcel.internal.generic.IfInstruction {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle)
                                public negate(): com.sun.org.apache.bcel.internal.generic.IfInstruction
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class IFLT extends com.sun.org.apache.bcel.internal.generic.IfInstruction {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle)
                                public negate(): com.sun.org.apache.bcel.internal.generic.IfInstruction
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class IFNE extends com.sun.org.apache.bcel.internal.generic.IfInstruction {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle)
                                public negate(): com.sun.org.apache.bcel.internal.generic.IfInstruction
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class IFNONNULL extends com.sun.org.apache.bcel.internal.generic.IfInstruction {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle)
                                public negate(): com.sun.org.apache.bcel.internal.generic.IfInstruction
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class IFNULL extends com.sun.org.apache.bcel.internal.generic.IfInstruction {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle)
                                public negate(): com.sun.org.apache.bcel.internal.generic.IfInstruction
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class IF_ACMPEQ extends com.sun.org.apache.bcel.internal.generic.IfInstruction {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle)
                                public negate(): com.sun.org.apache.bcel.internal.generic.IfInstruction
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class IF_ACMPNE extends com.sun.org.apache.bcel.internal.generic.IfInstruction {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle)
                                public negate(): com.sun.org.apache.bcel.internal.generic.IfInstruction
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class IF_ICMPEQ extends com.sun.org.apache.bcel.internal.generic.IfInstruction {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle)
                                public negate(): com.sun.org.apache.bcel.internal.generic.IfInstruction
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class IF_ICMPGE extends com.sun.org.apache.bcel.internal.generic.IfInstruction {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle)
                                public negate(): com.sun.org.apache.bcel.internal.generic.IfInstruction
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class IF_ICMPGT extends com.sun.org.apache.bcel.internal.generic.IfInstruction {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle)
                                public negate(): com.sun.org.apache.bcel.internal.generic.IfInstruction
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class IF_ICMPLE extends com.sun.org.apache.bcel.internal.generic.IfInstruction {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle)
                                public negate(): com.sun.org.apache.bcel.internal.generic.IfInstruction
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class IF_ICMPLT extends com.sun.org.apache.bcel.internal.generic.IfInstruction {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle)
                                public negate(): com.sun.org.apache.bcel.internal.generic.IfInstruction
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class IF_ICMPNE extends com.sun.org.apache.bcel.internal.generic.IfInstruction {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle)
                                public negate(): com.sun.org.apache.bcel.internal.generic.IfInstruction
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class IINC extends com.sun.org.apache.bcel.internal.generic.LocalVariableInstruction {
                                public constructor(arg0: int, arg1: int)
                                public dump(arg0: java.io.DataOutputStream): void
                                protected initFromFile(arg0: com.sun.org.apache.bcel.internal.util.ByteSequence, arg1: boolean): void
                                public toString(arg0: boolean): string
                                public setIndex(arg0: int): void
                                public getIncrement(): int
                                public setIncrement(arg0: int): void
                                public getType(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.Type
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class ILOAD extends com.sun.org.apache.bcel.internal.generic.LoadInstruction {
                                public constructor(arg0: int)
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class IMPDEP1 extends com.sun.org.apache.bcel.internal.generic.Instruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class IMPDEP2 extends com.sun.org.apache.bcel.internal.generic.Instruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class IMUL extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class INEG extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class INSTANCEOF extends com.sun.org.apache.bcel.internal.generic.CPInstruction implements com.sun.org.apache.bcel.internal.generic.LoadClass , com.sun.org.apache.bcel.internal.generic.ExceptionThrower , com.sun.org.apache.bcel.internal.generic.StackProducer , com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                public constructor(arg0: int)
                                public getExceptions(): java.lang.Class[]
                                public getLoadClassType(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.ObjectType
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class INSTANCEOF$$Lambda extends com.sun.org.apache.bcel.internal.generic.CPInstruction implements com.sun.org.apache.bcel.internal.generic.LoadClass , com.sun.org.apache.bcel.internal.generic.ExceptionThrower , com.sun.org.apache.bcel.internal.generic.StackProducer , com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                public constructor(arg0: int)
                            }
                            class INVOKEINTERFACE extends com.sun.org.apache.bcel.internal.generic.InvokeInstruction {
                                public constructor(arg0: int, arg1: int)
                                public dump(arg0: java.io.DataOutputStream): void
                                public getCount(): int
                                protected initFromFile(arg0: com.sun.org.apache.bcel.internal.util.ByteSequence, arg1: boolean): void
                                public toString(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): string
                                public consumeStack(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): int
                                public getExceptions(): java.lang.Class[]
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class INVOKESPECIAL extends com.sun.org.apache.bcel.internal.generic.InvokeInstruction {
                                public constructor(arg0: int)
                                public getExceptions(): java.lang.Class[]
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class INVOKESTATIC extends com.sun.org.apache.bcel.internal.generic.InvokeInstruction {
                                public constructor(arg0: int)
                                public getExceptions(): java.lang.Class[]
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class INVOKEVIRTUAL extends com.sun.org.apache.bcel.internal.generic.InvokeInstruction {
                                public constructor(arg0: int)
                                public getExceptions(): java.lang.Class[]
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class IOR extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class IREM extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction implements com.sun.org.apache.bcel.internal.generic.ExceptionThrower {
                                public constructor()
                                public getExceptions(): java.lang.Class[]
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class IREM$$Lambda extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction implements com.sun.org.apache.bcel.internal.generic.ExceptionThrower {
                                public constructor()
                            }
                            class IRETURN extends com.sun.org.apache.bcel.internal.generic.ReturnInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class ISHL extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class ISHR extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class ISTORE extends com.sun.org.apache.bcel.internal.generic.StoreInstruction {
                                public constructor(arg0: int)
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class ISUB extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class IUSHR extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class IXOR extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            abstract class IfInstruction extends com.sun.org.apache.bcel.internal.generic.BranchInstruction implements com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                protected constructor(arg0: short, arg1: com.sun.org.apache.bcel.internal.generic.InstructionHandle)
                                public negate(): com.sun.org.apache.bcel.internal.generic.IfInstruction
                                public static class: java.lang.Class<any>
                            }
                            abstract class IfInstruction$$Lambda extends com.sun.org.apache.bcel.internal.generic.BranchInstruction implements com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                protected constructor(arg0: short, arg1: com.sun.org.apache.bcel.internal.generic.InstructionHandle)
                            }
                            interface IndexedInstruction {
                                getIndex(): int
                                setIndex(arg0: int): void
                            }
                            abstract class Instruction implements java.lang.Cloneable , java.io.Serializable {
                                protected length: short
                                protected opcode: short
                                public constructor(arg0: short, arg1: short)
                                public dump(arg0: java.io.DataOutputStream): void
                                public getName(): string
                                public toString(arg0: boolean): string
                                public toString(): string
                                public toString(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): string
                                public copy(): com.sun.org.apache.bcel.internal.generic.Instruction
                                protected initFromFile(arg0: com.sun.org.apache.bcel.internal.util.ByteSequence, arg1: boolean): void
                                public static readInstruction(arg0: com.sun.org.apache.bcel.internal.util.ByteSequence): com.sun.org.apache.bcel.internal.generic.Instruction
                                public consumeStack(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): int
                                public produceStack(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): int
                                public getOpcode(): short
                                public getLength(): int
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static getComparator(): com.sun.org.apache.bcel.internal.generic.InstructionComparator
                                public static setComparator(arg0: com.sun.org.apache.bcel.internal.generic.InstructionComparator): void
                                public equals(arg0: java.lang.Object): boolean
                                public static class: java.lang.Class<any>
                            }
                            interface InstructionComparator {
                                DEFAULT: com.sun.org.apache.bcel.internal.generic.InstructionComparator
                                equals(arg0: com.sun.org.apache.bcel.internal.generic.Instruction, arg1: com.sun.org.apache.bcel.internal.generic.Instruction): boolean
                            }
                            class InstructionFactory implements com.sun.org.apache.bcel.internal.generic.InstructionConstants , java.io.Serializable {
                                protected cg: com.sun.org.apache.bcel.internal.generic.ClassGen
                                protected cp: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.ClassGen, arg1: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen)
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.ClassGen)
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen)
                                public createInvoke(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.bcel.internal.generic.Type, arg3: com.sun.org.apache.bcel.internal.generic.Type[], arg4: short): com.sun.org.apache.bcel.internal.generic.InvokeInstruction
                                public createPrintln(arg0: java.lang.String | string): com.sun.org.apache.bcel.internal.generic.InstructionList
                                public createConstant(arg0: java.lang.Object): com.sun.org.apache.bcel.internal.generic.Instruction
                                public createAppend(arg0: com.sun.org.apache.bcel.internal.generic.Type): com.sun.org.apache.bcel.internal.generic.Instruction
                                public createFieldAccess(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.bcel.internal.generic.Type, arg3: short): com.sun.org.apache.bcel.internal.generic.FieldInstruction
                                public static createThis(): com.sun.org.apache.bcel.internal.generic.Instruction
                                public static createReturn(arg0: com.sun.org.apache.bcel.internal.generic.Type): com.sun.org.apache.bcel.internal.generic.ReturnInstruction
                                public static createBinaryOperation(arg0: java.lang.String | string, arg1: com.sun.org.apache.bcel.internal.generic.Type): com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction
                                public static createPop(arg0: int): com.sun.org.apache.bcel.internal.generic.StackInstruction
                                public static createDup(arg0: int): com.sun.org.apache.bcel.internal.generic.StackInstruction
                                public static createDup_2(arg0: int): com.sun.org.apache.bcel.internal.generic.StackInstruction
                                public static createDup_1(arg0: int): com.sun.org.apache.bcel.internal.generic.StackInstruction
                                public static createStore(arg0: com.sun.org.apache.bcel.internal.generic.Type, arg1: int): com.sun.org.apache.bcel.internal.generic.LocalVariableInstruction
                                public static createLoad(arg0: com.sun.org.apache.bcel.internal.generic.Type, arg1: int): com.sun.org.apache.bcel.internal.generic.LocalVariableInstruction
                                public static createArrayLoad(arg0: com.sun.org.apache.bcel.internal.generic.Type): com.sun.org.apache.bcel.internal.generic.ArrayInstruction
                                public static createArrayStore(arg0: com.sun.org.apache.bcel.internal.generic.Type): com.sun.org.apache.bcel.internal.generic.ArrayInstruction
                                public createCast(arg0: com.sun.org.apache.bcel.internal.generic.Type, arg1: com.sun.org.apache.bcel.internal.generic.Type): com.sun.org.apache.bcel.internal.generic.Instruction
                                public createGetField(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.bcel.internal.generic.Type): com.sun.org.apache.bcel.internal.generic.GETFIELD
                                public createGetStatic(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.bcel.internal.generic.Type): com.sun.org.apache.bcel.internal.generic.GETSTATIC
                                public createPutField(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.bcel.internal.generic.Type): com.sun.org.apache.bcel.internal.generic.PUTFIELD
                                public createPutStatic(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.bcel.internal.generic.Type): com.sun.org.apache.bcel.internal.generic.PUTSTATIC
                                public createCheckCast(arg0: com.sun.org.apache.bcel.internal.generic.ReferenceType): com.sun.org.apache.bcel.internal.generic.CHECKCAST
                                public createInstanceOf(arg0: com.sun.org.apache.bcel.internal.generic.ReferenceType): com.sun.org.apache.bcel.internal.generic.INSTANCEOF
                                public createNew(arg0: com.sun.org.apache.bcel.internal.generic.ObjectType): com.sun.org.apache.bcel.internal.generic.NEW
                                public createNew(arg0: java.lang.String | string): com.sun.org.apache.bcel.internal.generic.NEW
                                public createNewArray(arg0: com.sun.org.apache.bcel.internal.generic.Type, arg1: short): com.sun.org.apache.bcel.internal.generic.Instruction
                                public static createNull(arg0: com.sun.org.apache.bcel.internal.generic.Type): com.sun.org.apache.bcel.internal.generic.Instruction
                                public static createBranchInstruction(arg0: short, arg1: com.sun.org.apache.bcel.internal.generic.InstructionHandle): com.sun.org.apache.bcel.internal.generic.BranchInstruction
                                public setClassGen(arg0: com.sun.org.apache.bcel.internal.generic.ClassGen): void
                                public getClassGen(): com.sun.org.apache.bcel.internal.generic.ClassGen
                                public setConstantPool(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): void
                                public getConstantPool(): com.sun.org.apache.bcel.internal.generic.ConstantPoolGen
                                public static class: java.lang.Class<any>
                            }
                            class InstructionHandle implements java.io.Serializable {
                                protected i_position: int
                                public getNext(): com.sun.org.apache.bcel.internal.generic.InstructionHandle
                                public getPrev(): com.sun.org.apache.bcel.internal.generic.InstructionHandle
                                public getInstruction(): com.sun.org.apache.bcel.internal.generic.Instruction
                                public setInstruction(arg0: com.sun.org.apache.bcel.internal.generic.Instruction): void
                                public swapInstruction(arg0: com.sun.org.apache.bcel.internal.generic.Instruction): com.sun.org.apache.bcel.internal.generic.Instruction
                                protected constructor(arg0: com.sun.org.apache.bcel.internal.generic.Instruction)
                                protected updatePosition(arg0: int, arg1: int): int
                                public getPosition(): int
                                protected addHandle(): void
                                public removeAllTargeters(): void
                                public removeTargeter(arg0: com.sun.org.apache.bcel.internal.generic.InstructionTargeter): void
                                public addTargeter(arg0: com.sun.org.apache.bcel.internal.generic.InstructionTargeter): void
                                public hasTargeters(): boolean
                                public getTargeters(): com.sun.org.apache.bcel.internal.generic.InstructionTargeter[]
                                public toString(arg0: boolean): string
                                public toString(): string
                                public addAttribute(arg0: java.lang.Object, arg1: java.lang.Object): void
                                public removeAttribute(arg0: java.lang.Object): void
                                public getAttribute(arg0: java.lang.Object): java.lang.Object
                                public getAttributes(): java.util.Collection
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class InstructionList implements java.io.Serializable {
                                public constructor()
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.Instruction)
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.BranchInstruction)
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.CompoundInstruction | com.sun.org.apache.bcel.internal.generic.CompoundInstruction$$Lambda)
                                public isEmpty(): boolean
                                public static findHandle(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle[], arg1: int[], arg2: int, arg3: int): com.sun.org.apache.bcel.internal.generic.InstructionHandle
                                public findHandle(arg0: int): com.sun.org.apache.bcel.internal.generic.InstructionHandle
                                public constructor(arg0: byte[])
                                public append(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle, arg1: com.sun.org.apache.bcel.internal.generic.InstructionList): com.sun.org.apache.bcel.internal.generic.InstructionHandle
                                public append(arg0: com.sun.org.apache.bcel.internal.generic.Instruction, arg1: com.sun.org.apache.bcel.internal.generic.InstructionList): com.sun.org.apache.bcel.internal.generic.InstructionHandle
                                public append(arg0: com.sun.org.apache.bcel.internal.generic.InstructionList): com.sun.org.apache.bcel.internal.generic.InstructionHandle
                                public append(arg0: com.sun.org.apache.bcel.internal.generic.Instruction): com.sun.org.apache.bcel.internal.generic.InstructionHandle
                                public append(arg0: com.sun.org.apache.bcel.internal.generic.BranchInstruction): com.sun.org.apache.bcel.internal.generic.BranchHandle
                                public append(arg0: com.sun.org.apache.bcel.internal.generic.Instruction, arg1: com.sun.org.apache.bcel.internal.generic.Instruction): com.sun.org.apache.bcel.internal.generic.InstructionHandle
                                public append(arg0: com.sun.org.apache.bcel.internal.generic.Instruction, arg1: com.sun.org.apache.bcel.internal.generic.CompoundInstruction | com.sun.org.apache.bcel.internal.generic.CompoundInstruction$$Lambda): com.sun.org.apache.bcel.internal.generic.InstructionHandle
                                public append(arg0: com.sun.org.apache.bcel.internal.generic.CompoundInstruction | com.sun.org.apache.bcel.internal.generic.CompoundInstruction$$Lambda): com.sun.org.apache.bcel.internal.generic.InstructionHandle
                                public append(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle, arg1: com.sun.org.apache.bcel.internal.generic.CompoundInstruction | com.sun.org.apache.bcel.internal.generic.CompoundInstruction$$Lambda): com.sun.org.apache.bcel.internal.generic.InstructionHandle
                                public append(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle, arg1: com.sun.org.apache.bcel.internal.generic.Instruction): com.sun.org.apache.bcel.internal.generic.InstructionHandle
                                public append(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle, arg1: com.sun.org.apache.bcel.internal.generic.BranchInstruction): com.sun.org.apache.bcel.internal.generic.BranchHandle
                                public insert(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle, arg1: com.sun.org.apache.bcel.internal.generic.InstructionList): com.sun.org.apache.bcel.internal.generic.InstructionHandle
                                public insert(arg0: com.sun.org.apache.bcel.internal.generic.InstructionList): com.sun.org.apache.bcel.internal.generic.InstructionHandle
                                public insert(arg0: com.sun.org.apache.bcel.internal.generic.Instruction, arg1: com.sun.org.apache.bcel.internal.generic.InstructionList): com.sun.org.apache.bcel.internal.generic.InstructionHandle
                                public insert(arg0: com.sun.org.apache.bcel.internal.generic.Instruction): com.sun.org.apache.bcel.internal.generic.InstructionHandle
                                public insert(arg0: com.sun.org.apache.bcel.internal.generic.BranchInstruction): com.sun.org.apache.bcel.internal.generic.BranchHandle
                                public insert(arg0: com.sun.org.apache.bcel.internal.generic.Instruction, arg1: com.sun.org.apache.bcel.internal.generic.Instruction): com.sun.org.apache.bcel.internal.generic.InstructionHandle
                                public insert(arg0: com.sun.org.apache.bcel.internal.generic.Instruction, arg1: com.sun.org.apache.bcel.internal.generic.CompoundInstruction | com.sun.org.apache.bcel.internal.generic.CompoundInstruction$$Lambda): com.sun.org.apache.bcel.internal.generic.InstructionHandle
                                public insert(arg0: com.sun.org.apache.bcel.internal.generic.CompoundInstruction | com.sun.org.apache.bcel.internal.generic.CompoundInstruction$$Lambda): com.sun.org.apache.bcel.internal.generic.InstructionHandle
                                public insert(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle, arg1: com.sun.org.apache.bcel.internal.generic.Instruction): com.sun.org.apache.bcel.internal.generic.InstructionHandle
                                public insert(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle, arg1: com.sun.org.apache.bcel.internal.generic.CompoundInstruction | com.sun.org.apache.bcel.internal.generic.CompoundInstruction$$Lambda): com.sun.org.apache.bcel.internal.generic.InstructionHandle
                                public insert(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle, arg1: com.sun.org.apache.bcel.internal.generic.BranchInstruction): com.sun.org.apache.bcel.internal.generic.BranchHandle
                                public move(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle, arg1: com.sun.org.apache.bcel.internal.generic.InstructionHandle, arg2: com.sun.org.apache.bcel.internal.generic.InstructionHandle): void
                                public move(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle, arg1: com.sun.org.apache.bcel.internal.generic.InstructionHandle): void
                                public delete(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle): void
                                public delete(arg0: com.sun.org.apache.bcel.internal.generic.Instruction): void
                                public delete(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle, arg1: com.sun.org.apache.bcel.internal.generic.InstructionHandle): void
                                public delete(arg0: com.sun.org.apache.bcel.internal.generic.Instruction, arg1: com.sun.org.apache.bcel.internal.generic.Instruction): void
                                public contains(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle): boolean
                                public contains(arg0: com.sun.org.apache.bcel.internal.generic.Instruction): boolean
                                public setPositions(): void
                                public setPositions(arg0: boolean): void
                                public getByteCode(): byte[]
                                public getInstructions(): com.sun.org.apache.bcel.internal.generic.Instruction[]
                                public toString(): string
                                public toString(arg0: boolean): string
                                public iterator(): java.util.Iterator
                                public getInstructionHandles(): com.sun.org.apache.bcel.internal.generic.InstructionHandle[]
                                public getInstructionPositions(): int[]
                                public copy(): com.sun.org.apache.bcel.internal.generic.InstructionList
                                public replaceConstantPool(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen, arg1: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): void
                                public dispose(): void
                                public getStart(): com.sun.org.apache.bcel.internal.generic.InstructionHandle
                                public getEnd(): com.sun.org.apache.bcel.internal.generic.InstructionHandle
                                public getLength(): int
                                public size(): int
                                public redirectBranches(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle, arg1: com.sun.org.apache.bcel.internal.generic.InstructionHandle): void
                                public redirectLocalVariables(arg0: com.sun.org.apache.bcel.internal.generic.LocalVariableGen[], arg1: com.sun.org.apache.bcel.internal.generic.InstructionHandle, arg2: com.sun.org.apache.bcel.internal.generic.InstructionHandle): void
                                public redirectExceptionHandlers(arg0: com.sun.org.apache.bcel.internal.generic.CodeExceptionGen[], arg1: com.sun.org.apache.bcel.internal.generic.InstructionHandle, arg2: com.sun.org.apache.bcel.internal.generic.InstructionHandle): void
                                public addObserver(arg0: com.sun.org.apache.bcel.internal.generic.InstructionListObserver | com.sun.org.apache.bcel.internal.generic.InstructionListObserver$$Lambda): void
                                public removeObserver(arg0: com.sun.org.apache.bcel.internal.generic.InstructionListObserver | com.sun.org.apache.bcel.internal.generic.InstructionListObserver$$Lambda): void
                                public update(): void
                                public static class: java.lang.Class<any>
                            }
                            interface InstructionListObserver {
                                notify(arg0: com.sun.org.apache.bcel.internal.generic.InstructionList): void
                            }
                            interface InstructionListObserver$$Lambda {
                                (arg0: com.sun.org.apache.bcel.internal.generic.InstructionList): void
                            }
                            interface InstructionTargeter {
                                containsTarget(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle): boolean
                                updateTarget(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle, arg1: com.sun.org.apache.bcel.internal.generic.InstructionHandle): void
                            }
                            abstract class InvokeInstruction extends com.sun.org.apache.bcel.internal.generic.FieldOrMethod implements com.sun.org.apache.bcel.internal.generic.ExceptionThrower , com.sun.org.apache.bcel.internal.generic.TypedInstruction , com.sun.org.apache.bcel.internal.generic.StackConsumer , com.sun.org.apache.bcel.internal.generic.StackProducer {
                                protected constructor(arg0: short, arg1: int)
                                public toString(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): string
                                public consumeStack(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): int
                                public produceStack(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): int
                                public getType(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.Type
                                public getMethodName(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): string
                                public getReturnType(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.Type
                                public getArgumentTypes(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.Type[]
                                public static class: java.lang.Class<any>
                            }
                            abstract class InvokeInstruction$$Lambda extends com.sun.org.apache.bcel.internal.generic.FieldOrMethod implements com.sun.org.apache.bcel.internal.generic.ExceptionThrower , com.sun.org.apache.bcel.internal.generic.TypedInstruction , com.sun.org.apache.bcel.internal.generic.StackConsumer , com.sun.org.apache.bcel.internal.generic.StackProducer {
                                protected constructor(arg0: short, arg1: int)
                            }
                            class JSR extends com.sun.org.apache.bcel.internal.generic.JsrInstruction implements com.sun.org.apache.bcel.internal.generic.VariableLengthInstruction {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle)
                                public dump(arg0: java.io.DataOutputStream): void
                                protected updatePosition(arg0: int, arg1: int): int
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class JSR_W extends com.sun.org.apache.bcel.internal.generic.JsrInstruction {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle)
                                public dump(arg0: java.io.DataOutputStream): void
                                protected initFromFile(arg0: com.sun.org.apache.bcel.internal.util.ByteSequence, arg1: boolean): void
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            abstract class JsrInstruction extends com.sun.org.apache.bcel.internal.generic.BranchInstruction implements com.sun.org.apache.bcel.internal.generic.UnconditionalBranch , com.sun.org.apache.bcel.internal.generic.TypedInstruction , com.sun.org.apache.bcel.internal.generic.StackProducer {
                                public getType(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.Type
                                public physicalSuccessor(): com.sun.org.apache.bcel.internal.generic.InstructionHandle
                                public static class: java.lang.Class<any>
                            }
                            abstract class JsrInstruction$$Lambda extends com.sun.org.apache.bcel.internal.generic.BranchInstruction implements com.sun.org.apache.bcel.internal.generic.UnconditionalBranch , com.sun.org.apache.bcel.internal.generic.TypedInstruction , com.sun.org.apache.bcel.internal.generic.StackProducer {
                                public (arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.Type
                            }
                            class L2D extends com.sun.org.apache.bcel.internal.generic.ConversionInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class L2F extends com.sun.org.apache.bcel.internal.generic.ConversionInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class L2I extends com.sun.org.apache.bcel.internal.generic.ConversionInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class LADD extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class LALOAD extends com.sun.org.apache.bcel.internal.generic.ArrayInstruction implements com.sun.org.apache.bcel.internal.generic.StackProducer {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class LALOAD$$Lambda extends com.sun.org.apache.bcel.internal.generic.ArrayInstruction implements com.sun.org.apache.bcel.internal.generic.StackProducer {
                                public constructor()
                            }
                            class LAND extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class LASTORE extends com.sun.org.apache.bcel.internal.generic.ArrayInstruction implements com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class LASTORE$$Lambda extends com.sun.org.apache.bcel.internal.generic.ArrayInstruction implements com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                public constructor()
                            }
                            class LCMP extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.TypedInstruction , com.sun.org.apache.bcel.internal.generic.StackProducer , com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                public constructor()
                                public getType(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.Type
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class LCMP$$Lambda extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.TypedInstruction , com.sun.org.apache.bcel.internal.generic.StackProducer , com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                public constructor()
                            }
                            class LCONST extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.ConstantPushInstruction , com.sun.org.apache.bcel.internal.generic.TypedInstruction {
                                public constructor(arg0: long)
                                public getValue(): java.lang.Number
                                public getType(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.Type
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class LCONST$$Lambda extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.ConstantPushInstruction , com.sun.org.apache.bcel.internal.generic.TypedInstruction {
                                public constructor(arg0: long)
                            }
                            class LDC extends com.sun.org.apache.bcel.internal.generic.CPInstruction implements com.sun.org.apache.bcel.internal.generic.PushInstruction , com.sun.org.apache.bcel.internal.generic.ExceptionThrower , com.sun.org.apache.bcel.internal.generic.TypedInstruction {
                                public constructor(arg0: int)
                                protected setSize(): void
                                public dump(arg0: java.io.DataOutputStream): void
                                public setIndex(arg0: int): void
                                protected initFromFile(arg0: com.sun.org.apache.bcel.internal.util.ByteSequence, arg1: boolean): void
                                public getValue(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): java.lang.Object
                                public getType(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.Type
                                public getExceptions(): java.lang.Class[]
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class LDC$$Lambda extends com.sun.org.apache.bcel.internal.generic.CPInstruction implements com.sun.org.apache.bcel.internal.generic.PushInstruction , com.sun.org.apache.bcel.internal.generic.ExceptionThrower , com.sun.org.apache.bcel.internal.generic.TypedInstruction {
                                public constructor(arg0: int)
                            }
                            class LDC2_W extends com.sun.org.apache.bcel.internal.generic.CPInstruction implements com.sun.org.apache.bcel.internal.generic.PushInstruction , com.sun.org.apache.bcel.internal.generic.TypedInstruction {
                                public constructor(arg0: int)
                                public getType(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.Type
                                public getValue(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): java.lang.Number
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class LDC2_W$$Lambda extends com.sun.org.apache.bcel.internal.generic.CPInstruction implements com.sun.org.apache.bcel.internal.generic.PushInstruction , com.sun.org.apache.bcel.internal.generic.TypedInstruction {
                                public constructor(arg0: int)
                            }
                            class LDC_W extends com.sun.org.apache.bcel.internal.generic.LDC {
                                public constructor(arg0: int)
                                protected initFromFile(arg0: com.sun.org.apache.bcel.internal.util.ByteSequence, arg1: boolean): void
                                public static class: java.lang.Class<any>
                            }
                            class LDIV extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction implements com.sun.org.apache.bcel.internal.generic.ExceptionThrower {
                                public constructor()
                                public getExceptions(): java.lang.Class[]
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class LDIV$$Lambda extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction implements com.sun.org.apache.bcel.internal.generic.ExceptionThrower {
                                public constructor()
                            }
                            class LLOAD extends com.sun.org.apache.bcel.internal.generic.LoadInstruction {
                                public constructor(arg0: int)
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class LMUL extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class LNEG extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class LOOKUPSWITCH extends com.sun.org.apache.bcel.internal.generic.Select {
                                public constructor(arg0: int[], arg1: com.sun.org.apache.bcel.internal.generic.InstructionHandle[], arg2: com.sun.org.apache.bcel.internal.generic.InstructionHandle)
                                public dump(arg0: java.io.DataOutputStream): void
                                protected initFromFile(arg0: com.sun.org.apache.bcel.internal.util.ByteSequence, arg1: boolean): void
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class LOR extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class LREM extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction implements com.sun.org.apache.bcel.internal.generic.ExceptionThrower {
                                public constructor()
                                public getExceptions(): java.lang.Class[]
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class LREM$$Lambda extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction implements com.sun.org.apache.bcel.internal.generic.ExceptionThrower {
                                public constructor()
                            }
                            class LRETURN extends com.sun.org.apache.bcel.internal.generic.ReturnInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class LSHL extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class LSHR extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class LSTORE extends com.sun.org.apache.bcel.internal.generic.StoreInstruction {
                                public constructor(arg0: int)
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class LSUB extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class LUSHR extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class LXOR extends com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class LineNumberGen implements com.sun.org.apache.bcel.internal.generic.InstructionTargeter , java.lang.Cloneable , java.io.Serializable {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle, arg1: int)
                                public containsTarget(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle): boolean
                                public updateTarget(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle, arg1: com.sun.org.apache.bcel.internal.generic.InstructionHandle): void
                                public getLineNumber(): com.sun.org.apache.bcel.internal.classfile.LineNumber
                                public setInstruction(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle): void
                                public clone(): java.lang.Object
                                public getInstruction(): com.sun.org.apache.bcel.internal.generic.InstructionHandle
                                public setSourceLine(arg0: int): void
                                public getSourceLine(): int
                                public static class: java.lang.Class<any>
                            }
                            interface LoadClass {
                                getLoadClassType(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.ObjectType
                                getType(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.Type
                            }
                            abstract class LoadInstruction extends com.sun.org.apache.bcel.internal.generic.LocalVariableInstruction implements com.sun.org.apache.bcel.internal.generic.PushInstruction {
                                protected constructor(arg0: short, arg1: short, arg2: int)
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class LocalVariableGen implements com.sun.org.apache.bcel.internal.generic.InstructionTargeter , com.sun.org.apache.bcel.internal.generic.NamedAndTyped , java.lang.Cloneable , java.io.Serializable {
                                public constructor(arg0: int, arg1: java.lang.String | string, arg2: com.sun.org.apache.bcel.internal.generic.Type, arg3: com.sun.org.apache.bcel.internal.generic.InstructionHandle, arg4: com.sun.org.apache.bcel.internal.generic.InstructionHandle)
                                public getLocalVariable(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.classfile.LocalVariable
                                public getIndex(): int
                                public setName(arg0: java.lang.String | string): void
                                public getName(): string
                                public setType(arg0: com.sun.org.apache.bcel.internal.generic.Type): void
                                public getType(): com.sun.org.apache.bcel.internal.generic.Type
                                public getStart(): com.sun.org.apache.bcel.internal.generic.InstructionHandle
                                public getEnd(): com.sun.org.apache.bcel.internal.generic.InstructionHandle
                                public setStart(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle): void
                                public setEnd(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle): void
                                public updateTarget(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle, arg1: com.sun.org.apache.bcel.internal.generic.InstructionHandle): void
                                public containsTarget(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle): boolean
                                public equals(arg0: java.lang.Object): boolean
                                public hashCode(): int
                                public toString(): string
                                public clone(): java.lang.Object
                                public static class: java.lang.Class<any>
                            }
                            abstract class LocalVariableInstruction extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.TypedInstruction , com.sun.org.apache.bcel.internal.generic.IndexedInstruction {
                                protected n: int
                                protected constructor(arg0: short, arg1: short, arg2: int)
                                public dump(arg0: java.io.DataOutputStream): void
                                public toString(arg0: boolean): string
                                protected initFromFile(arg0: com.sun.org.apache.bcel.internal.util.ByteSequence, arg1: boolean): void
                                public getIndex(): int
                                public setIndex(arg0: int): void
                                public getCanonicalTag(): short
                                public getType(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.Type
                                public static class: java.lang.Class<any>
                            }
                            class MONITORENTER extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.ExceptionThrower , com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                public constructor()
                                public getExceptions(): java.lang.Class[]
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class MONITORENTER$$Lambda extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.ExceptionThrower , com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                public constructor()
                            }
                            class MONITOREXIT extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.ExceptionThrower , com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                public constructor()
                                public getExceptions(): java.lang.Class[]
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class MONITOREXIT$$Lambda extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.ExceptionThrower , com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                public constructor()
                            }
                            class MULTIANEWARRAY extends com.sun.org.apache.bcel.internal.generic.CPInstruction implements com.sun.org.apache.bcel.internal.generic.LoadClass , com.sun.org.apache.bcel.internal.generic.AllocationInstruction , com.sun.org.apache.bcel.internal.generic.ExceptionThrower {
                                public constructor(arg0: int, arg1: short)
                                public dump(arg0: java.io.DataOutputStream): void
                                protected initFromFile(arg0: com.sun.org.apache.bcel.internal.util.ByteSequence, arg1: boolean): void
                                public getDimensions(): short
                                public toString(arg0: boolean): string
                                public toString(arg0: com.sun.org.apache.bcel.internal.classfile.ConstantPool): string
                                public consumeStack(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): int
                                public getExceptions(): java.lang.Class[]
                                public getLoadClassType(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.ObjectType
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class MULTIANEWARRAY$$Lambda extends com.sun.org.apache.bcel.internal.generic.CPInstruction implements com.sun.org.apache.bcel.internal.generic.LoadClass , com.sun.org.apache.bcel.internal.generic.AllocationInstruction , com.sun.org.apache.bcel.internal.generic.ExceptionThrower {
                                public constructor(arg0: int, arg1: short)
                            }
                            class MethodGen extends com.sun.org.apache.bcel.internal.generic.FieldGenOrMethodGen {
                                public constructor(arg0: int, arg1: com.sun.org.apache.bcel.internal.generic.Type, arg2: com.sun.org.apache.bcel.internal.generic.Type[], arg3: java.lang.String[], arg4: java.lang.String | string, arg5: java.lang.String | string, arg6: com.sun.org.apache.bcel.internal.generic.InstructionList, arg7: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen)
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.Method, arg1: java.lang.String | string, arg2: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen)
                                public addLocalVariable(arg0: java.lang.String | string, arg1: com.sun.org.apache.bcel.internal.generic.Type, arg2: int, arg3: com.sun.org.apache.bcel.internal.generic.InstructionHandle, arg4: com.sun.org.apache.bcel.internal.generic.InstructionHandle): com.sun.org.apache.bcel.internal.generic.LocalVariableGen
                                public addLocalVariable(arg0: java.lang.String | string, arg1: com.sun.org.apache.bcel.internal.generic.Type, arg2: com.sun.org.apache.bcel.internal.generic.InstructionHandle, arg3: com.sun.org.apache.bcel.internal.generic.InstructionHandle): com.sun.org.apache.bcel.internal.generic.LocalVariableGen
                                public removeLocalVariable(arg0: com.sun.org.apache.bcel.internal.generic.LocalVariableGen): void
                                public removeLocalVariables(): void
                                public getLocalVariables(): com.sun.org.apache.bcel.internal.generic.LocalVariableGen[]
                                public getLocalVariableTable(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.classfile.LocalVariableTable
                                public getLocalVariableTypeTable(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.classfile.LocalVariableTypeTable
                                public addLineNumber(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle, arg1: int): com.sun.org.apache.bcel.internal.generic.LineNumberGen
                                public removeLineNumber(arg0: com.sun.org.apache.bcel.internal.generic.LineNumberGen): void
                                public removeLineNumbers(): void
                                public getLineNumbers(): com.sun.org.apache.bcel.internal.generic.LineNumberGen[]
                                public getLineNumberTable(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.classfile.LineNumberTable
                                public addExceptionHandler(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle, arg1: com.sun.org.apache.bcel.internal.generic.InstructionHandle, arg2: com.sun.org.apache.bcel.internal.generic.InstructionHandle, arg3: com.sun.org.apache.bcel.internal.generic.ObjectType): com.sun.org.apache.bcel.internal.generic.CodeExceptionGen
                                public removeExceptionHandler(arg0: com.sun.org.apache.bcel.internal.generic.CodeExceptionGen): void
                                public removeExceptionHandlers(): void
                                public getExceptionHandlers(): com.sun.org.apache.bcel.internal.generic.CodeExceptionGen[]
                                public addException(arg0: java.lang.String | string): void
                                public removeException(arg0: java.lang.String | string): void
                                public removeExceptions(): void
                                public getExceptions(): java.lang.String[]
                                public addCodeAttribute(arg0: com.sun.org.apache.bcel.internal.classfile.Attribute): void
                                public removeCodeAttribute(arg0: com.sun.org.apache.bcel.internal.classfile.Attribute): void
                                public removeCodeAttributes(): void
                                public getCodeAttributes(): com.sun.org.apache.bcel.internal.classfile.Attribute[]
                                public getMethod(): com.sun.org.apache.bcel.internal.classfile.Method
                                public removeNOPs(): void
                                public setMaxLocals(arg0: int): void
                                public getMaxLocals(): int
                                public setMaxStack(arg0: int): void
                                public getMaxStack(): int
                                public getClassName(): string
                                public setClassName(arg0: java.lang.String | string): void
                                public setReturnType(arg0: com.sun.org.apache.bcel.internal.generic.Type): void
                                public getReturnType(): com.sun.org.apache.bcel.internal.generic.Type
                                public setArgumentTypes(arg0: com.sun.org.apache.bcel.internal.generic.Type[]): void
                                public getArgumentTypes(): com.sun.org.apache.bcel.internal.generic.Type[]
                                public setArgumentType(arg0: int, arg1: com.sun.org.apache.bcel.internal.generic.Type): void
                                public getArgumentType(arg0: int): com.sun.org.apache.bcel.internal.generic.Type
                                public setArgumentNames(arg0: java.lang.String[]): void
                                public getArgumentNames(): java.lang.String[]
                                public setArgumentName(arg0: int, arg1: java.lang.String | string): void
                                public getArgumentName(arg0: int): string
                                public getInstructionList(): com.sun.org.apache.bcel.internal.generic.InstructionList
                                public setInstructionList(arg0: com.sun.org.apache.bcel.internal.generic.InstructionList): void
                                public getSignature(): string
                                public setMaxStack(): void
                                public setMaxLocals(): void
                                public stripAttributes(arg0: boolean): void
                                public static getMaxStack(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen, arg1: com.sun.org.apache.bcel.internal.generic.InstructionList, arg2: com.sun.org.apache.bcel.internal.generic.CodeExceptionGen[]): int
                                public addObserver(arg0: com.sun.org.apache.bcel.internal.generic.MethodObserver | com.sun.org.apache.bcel.internal.generic.MethodObserver$$Lambda): void
                                public removeObserver(arg0: com.sun.org.apache.bcel.internal.generic.MethodObserver | com.sun.org.apache.bcel.internal.generic.MethodObserver$$Lambda): void
                                public update(): void
                                public toString(): string
                                public copy(arg0: java.lang.String | string, arg1: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.MethodGen
                                public static class: java.lang.Class<any>
                            }
                            interface MethodObserver {
                                notify(arg0: com.sun.org.apache.bcel.internal.generic.MethodGen): void
                            }
                            interface MethodObserver$$Lambda {
                                (arg0: com.sun.org.apache.bcel.internal.generic.MethodGen): void
                            }
                            class NEW extends com.sun.org.apache.bcel.internal.generic.CPInstruction implements com.sun.org.apache.bcel.internal.generic.LoadClass , com.sun.org.apache.bcel.internal.generic.AllocationInstruction , com.sun.org.apache.bcel.internal.generic.ExceptionThrower , com.sun.org.apache.bcel.internal.generic.StackProducer {
                                public constructor(arg0: int)
                                public getExceptions(): java.lang.Class[]
                                public getLoadClassType(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.ObjectType
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class NEW$$Lambda extends com.sun.org.apache.bcel.internal.generic.CPInstruction implements com.sun.org.apache.bcel.internal.generic.LoadClass , com.sun.org.apache.bcel.internal.generic.AllocationInstruction , com.sun.org.apache.bcel.internal.generic.ExceptionThrower , com.sun.org.apache.bcel.internal.generic.StackProducer {
                                public constructor(arg0: int)
                            }
                            class NEWARRAY extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.AllocationInstruction , com.sun.org.apache.bcel.internal.generic.ExceptionThrower , com.sun.org.apache.bcel.internal.generic.StackProducer {
                                public constructor(arg0: byte)
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.BasicType)
                                public dump(arg0: java.io.DataOutputStream): void
                                public getTypecode(): byte
                                public getType(): com.sun.org.apache.bcel.internal.generic.Type
                                public toString(arg0: boolean): string
                                protected initFromFile(arg0: com.sun.org.apache.bcel.internal.util.ByteSequence, arg1: boolean): void
                                public getExceptions(): java.lang.Class[]
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class NEWARRAY$$Lambda extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.AllocationInstruction , com.sun.org.apache.bcel.internal.generic.ExceptionThrower , com.sun.org.apache.bcel.internal.generic.StackProducer {
                                public constructor(arg0: byte)
                            }
                            class NOP extends com.sun.org.apache.bcel.internal.generic.Instruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            interface NamedAndTyped {
                                getName(): string
                                getType(): com.sun.org.apache.bcel.internal.generic.Type
                                setName(arg0: java.lang.String | string): void
                                setType(arg0: com.sun.org.apache.bcel.internal.generic.Type): void
                            }
                            class ObjectType extends com.sun.org.apache.bcel.internal.generic.ReferenceType {
                                public constructor(arg0: java.lang.String | string)
                                public getClassName(): string
                                public hashCode(): int
                                public equals(arg0: java.lang.Object): boolean
                                public referencesClass(): boolean
                                public referencesInterface(): boolean
                                public subclassOf(arg0: com.sun.org.apache.bcel.internal.generic.ObjectType): boolean
                                public accessibleTo(arg0: com.sun.org.apache.bcel.internal.generic.ObjectType): boolean
                                public static class: java.lang.Class<any>
                            }
                            class POP extends com.sun.org.apache.bcel.internal.generic.StackInstruction implements com.sun.org.apache.bcel.internal.generic.PopInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class POP2 extends com.sun.org.apache.bcel.internal.generic.StackInstruction implements com.sun.org.apache.bcel.internal.generic.PopInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class PUSH implements com.sun.org.apache.bcel.internal.generic.CompoundInstruction , com.sun.org.apache.bcel.internal.generic.VariableLengthInstruction , com.sun.org.apache.bcel.internal.generic.InstructionConstants {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen, arg1: int)
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen, arg1: boolean)
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen, arg1: float)
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen, arg1: long)
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen, arg1: double)
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen, arg1: java.lang.String | string)
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen, arg1: java.lang.Number)
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen, arg1: java.lang.Character)
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen, arg1: java.lang.Boolean | boolean)
                                public getInstructionList(): com.sun.org.apache.bcel.internal.generic.InstructionList
                                public getInstruction(): com.sun.org.apache.bcel.internal.generic.Instruction
                                public toString(): string
                                public static class: java.lang.Class<any>
                            }
                            class PUTFIELD extends com.sun.org.apache.bcel.internal.generic.FieldInstruction implements com.sun.org.apache.bcel.internal.generic.PopInstruction , com.sun.org.apache.bcel.internal.generic.ExceptionThrower {
                                public constructor(arg0: int)
                                public consumeStack(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): int
                                public getExceptions(): java.lang.Class[]
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class PUTFIELD$$Lambda extends com.sun.org.apache.bcel.internal.generic.FieldInstruction implements com.sun.org.apache.bcel.internal.generic.PopInstruction , com.sun.org.apache.bcel.internal.generic.ExceptionThrower {
                                public constructor(arg0: int)
                            }
                            class PUTSTATIC extends com.sun.org.apache.bcel.internal.generic.FieldInstruction implements com.sun.org.apache.bcel.internal.generic.ExceptionThrower , com.sun.org.apache.bcel.internal.generic.PopInstruction {
                                public constructor(arg0: int)
                                public consumeStack(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): int
                                public getExceptions(): java.lang.Class[]
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            interface PopInstruction extends com.sun.org.apache.bcel.internal.generic.StackConsumer {
                            }
                            interface PushInstruction extends com.sun.org.apache.bcel.internal.generic.StackProducer {
                            }
                            class RET extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.IndexedInstruction , com.sun.org.apache.bcel.internal.generic.TypedInstruction {
                                public constructor(arg0: int)
                                public dump(arg0: java.io.DataOutputStream): void
                                protected initFromFile(arg0: com.sun.org.apache.bcel.internal.util.ByteSequence, arg1: boolean): void
                                public getIndex(): int
                                public setIndex(arg0: int): void
                                public toString(arg0: boolean): string
                                public getType(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.Type
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class RET$$Lambda extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.IndexedInstruction , com.sun.org.apache.bcel.internal.generic.TypedInstruction {
                                public constructor(arg0: int)
                            }
                            class RETURN extends com.sun.org.apache.bcel.internal.generic.ReturnInstruction {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            abstract class ReferenceType extends com.sun.org.apache.bcel.internal.generic.Type {
                                protected constructor(arg0: byte, arg1: java.lang.String | string)
                                public isCastableTo(arg0: com.sun.org.apache.bcel.internal.generic.Type): boolean
                                public isAssignmentCompatibleWith(arg0: com.sun.org.apache.bcel.internal.generic.Type): boolean
                                public getFirstCommonSuperclass(arg0: com.sun.org.apache.bcel.internal.generic.ReferenceType): com.sun.org.apache.bcel.internal.generic.ReferenceType
                                public firstCommonSuperclass(arg0: com.sun.org.apache.bcel.internal.generic.ReferenceType): com.sun.org.apache.bcel.internal.generic.ReferenceType
                                public static class: java.lang.Class<any>
                            }
                            abstract class ReturnInstruction extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.ExceptionThrower , com.sun.org.apache.bcel.internal.generic.TypedInstruction , com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                protected constructor(arg0: short)
                                public getType(): com.sun.org.apache.bcel.internal.generic.Type
                                public getExceptions(): java.lang.Class[]
                                public getType(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.Type
                                public static class: java.lang.Class<any>
                            }
                            abstract class ReturnInstruction$$Lambda extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.ExceptionThrower , com.sun.org.apache.bcel.internal.generic.TypedInstruction , com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                protected constructor(arg0: short)
                            }
                            class ReturnaddressType extends com.sun.org.apache.bcel.internal.generic.Type {
                                public static NO_TARGET: com.sun.org.apache.bcel.internal.generic.ReturnaddressType
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle)
                                public hashCode(): int
                                public equals(arg0: java.lang.Object): boolean
                                public getTarget(): com.sun.org.apache.bcel.internal.generic.InstructionHandle
                                public static class: java.lang.Class<any>
                            }
                            class SALOAD extends com.sun.org.apache.bcel.internal.generic.ArrayInstruction implements com.sun.org.apache.bcel.internal.generic.StackProducer {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class SALOAD$$Lambda extends com.sun.org.apache.bcel.internal.generic.ArrayInstruction implements com.sun.org.apache.bcel.internal.generic.StackProducer {
                                public constructor()
                            }
                            class SASTORE extends com.sun.org.apache.bcel.internal.generic.ArrayInstruction implements com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class SASTORE$$Lambda extends com.sun.org.apache.bcel.internal.generic.ArrayInstruction implements com.sun.org.apache.bcel.internal.generic.StackConsumer {
                                public constructor()
                            }
                            class SIPUSH extends com.sun.org.apache.bcel.internal.generic.Instruction implements com.sun.org.apache.bcel.internal.generic.ConstantPushInstruction {
                                public constructor(arg0: short)
                                public dump(arg0: java.io.DataOutputStream): void
                                public toString(arg0: boolean): string
                                protected initFromFile(arg0: com.sun.org.apache.bcel.internal.util.ByteSequence, arg1: boolean): void
                                public getValue(): java.lang.Number
                                public getType(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.Type
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class SWAP extends com.sun.org.apache.bcel.internal.generic.StackInstruction implements com.sun.org.apache.bcel.internal.generic.StackConsumer , com.sun.org.apache.bcel.internal.generic.StackProducer {
                                public constructor()
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class SWAP$$Lambda extends com.sun.org.apache.bcel.internal.generic.StackInstruction implements com.sun.org.apache.bcel.internal.generic.StackConsumer , com.sun.org.apache.bcel.internal.generic.StackProducer {
                                public constructor()
                            }
                            class SWITCH implements com.sun.org.apache.bcel.internal.generic.CompoundInstruction {
                                public constructor(arg0: int[], arg1: com.sun.org.apache.bcel.internal.generic.InstructionHandle[], arg2: com.sun.org.apache.bcel.internal.generic.InstructionHandle, arg3: int)
                                public constructor(arg0: int[], arg1: com.sun.org.apache.bcel.internal.generic.InstructionHandle[], arg2: com.sun.org.apache.bcel.internal.generic.InstructionHandle)
                                public getInstructionList(): com.sun.org.apache.bcel.internal.generic.InstructionList
                                public getInstruction(): com.sun.org.apache.bcel.internal.generic.Instruction
                                public static class: java.lang.Class<any>
                            }
                            class SWITCH$$Lambda implements com.sun.org.apache.bcel.internal.generic.CompoundInstruction {
                                public constructor(arg0: int[], arg1: com.sun.org.apache.bcel.internal.generic.InstructionHandle[], arg2: com.sun.org.apache.bcel.internal.generic.InstructionHandle, arg3: int)
                            }
                            abstract class Select extends com.sun.org.apache.bcel.internal.generic.BranchInstruction implements com.sun.org.apache.bcel.internal.generic.VariableLengthInstruction , com.sun.org.apache.bcel.internal.generic.StackProducer {
                                protected match: int[]
                                protected indices: int[]
                                protected targets: com.sun.org.apache.bcel.internal.generic.InstructionHandle[]
                                protected fixed_length: int
                                protected match_length: int
                                protected padding: int
                                protected updatePosition(arg0: int, arg1: int): int
                                public dump(arg0: java.io.DataOutputStream): void
                                protected initFromFile(arg0: com.sun.org.apache.bcel.internal.util.ByteSequence, arg1: boolean): void
                                public toString(arg0: boolean): string
                                public setTarget(arg0: int, arg1: com.sun.org.apache.bcel.internal.generic.InstructionHandle): void
                                public updateTarget(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle, arg1: com.sun.org.apache.bcel.internal.generic.InstructionHandle): void
                                public containsTarget(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle): boolean
                                public getMatchs(): int[]
                                public getIndices(): int[]
                                public getTargets(): com.sun.org.apache.bcel.internal.generic.InstructionHandle[]
                                public static class: java.lang.Class<any>
                            }
                            abstract class Select$$Lambda extends com.sun.org.apache.bcel.internal.generic.BranchInstruction implements com.sun.org.apache.bcel.internal.generic.VariableLengthInstruction , com.sun.org.apache.bcel.internal.generic.StackProducer {
                                protected match: int[]
                            }
                            interface StackConsumer {
                                consumeStack(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): int
                            }
                            interface StackConsumer$$Lambda {
                                (arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): int
                            }
                            abstract class StackInstruction extends com.sun.org.apache.bcel.internal.generic.Instruction {
                                protected constructor(arg0: short)
                                public getType(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.Type
                                public static class: java.lang.Class<any>
                            }
                            interface StackProducer {
                                produceStack(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): int
                            }
                            interface StackProducer$$Lambda {
                                (arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): int
                            }
                            abstract class StoreInstruction extends com.sun.org.apache.bcel.internal.generic.LocalVariableInstruction implements com.sun.org.apache.bcel.internal.generic.PopInstruction {
                                protected constructor(arg0: short, arg1: short, arg2: int)
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class TABLESWITCH extends com.sun.org.apache.bcel.internal.generic.Select {
                                public constructor(arg0: int[], arg1: com.sun.org.apache.bcel.internal.generic.InstructionHandle[], arg2: com.sun.org.apache.bcel.internal.generic.InstructionHandle)
                                public dump(arg0: java.io.DataOutputStream): void
                                protected initFromFile(arg0: com.sun.org.apache.bcel.internal.util.ByteSequence, arg1: boolean): void
                                public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                public static class: java.lang.Class<any>
                            }
                            class TargetLostException extends java.lang.Exception {
                                public getTargets(): com.sun.org.apache.bcel.internal.generic.InstructionHandle[]
                                public static class: java.lang.Class<any>
                            }
                            abstract class Type implements java.io.Serializable {
                                protected type: byte
                                protected signature: string
                                public static VOID: com.sun.org.apache.bcel.internal.generic.BasicType
                                public static BOOLEAN: com.sun.org.apache.bcel.internal.generic.BasicType
                                public static INT: com.sun.org.apache.bcel.internal.generic.BasicType
                                public static SHORT: com.sun.org.apache.bcel.internal.generic.BasicType
                                public static BYTE: com.sun.org.apache.bcel.internal.generic.BasicType
                                public static LONG: com.sun.org.apache.bcel.internal.generic.BasicType
                                public static DOUBLE: com.sun.org.apache.bcel.internal.generic.BasicType
                                public static FLOAT: com.sun.org.apache.bcel.internal.generic.BasicType
                                public static CHAR: com.sun.org.apache.bcel.internal.generic.BasicType
                                public static OBJECT: com.sun.org.apache.bcel.internal.generic.ObjectType
                                public static STRING: com.sun.org.apache.bcel.internal.generic.ObjectType
                                public static STRINGBUFFER: com.sun.org.apache.bcel.internal.generic.ObjectType
                                public static THROWABLE: com.sun.org.apache.bcel.internal.generic.ObjectType
                                public static NO_ARGS: com.sun.org.apache.bcel.internal.generic.Type[]
                                public static NULL: com.sun.org.apache.bcel.internal.generic.ReferenceType
                                public static UNKNOWN: com.sun.org.apache.bcel.internal.generic.Type
                                protected constructor(arg0: byte, arg1: java.lang.String | string)
                                public getSignature(): string
                                public getType(): byte
                                public getSize(): int
                                public toString(): string
                                public static getMethodSignature(arg0: com.sun.org.apache.bcel.internal.generic.Type, arg1: com.sun.org.apache.bcel.internal.generic.Type[]): string
                                public static getType(arg0: java.lang.String | string): com.sun.org.apache.bcel.internal.generic.Type
                                public static getReturnType(arg0: java.lang.String | string): com.sun.org.apache.bcel.internal.generic.Type
                                public static getArgumentTypes(arg0: java.lang.String | string): com.sun.org.apache.bcel.internal.generic.Type[]
                                public static getType(arg0: java.lang.Class): com.sun.org.apache.bcel.internal.generic.Type
                                public static getSignature(arg0: java.lang.reflect.Method): string
                                public static class: java.lang.Class<any>
                            }
                            interface TypedInstruction {
                                getType(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.Type
                            }
                            interface TypedInstruction$$Lambda {
                                (arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): com.sun.org.apache.bcel.internal.generic.Type
                            }
                            interface UnconditionalBranch {
                            }
                            interface VariableLengthInstruction {
                            }
                            interface Visitor {
                                visitStackInstruction(arg0: com.sun.org.apache.bcel.internal.generic.StackInstruction): void
                                visitLocalVariableInstruction(arg0: com.sun.org.apache.bcel.internal.generic.LocalVariableInstruction): void
                                visitBranchInstruction(arg0: com.sun.org.apache.bcel.internal.generic.BranchInstruction): void
                                visitLoadClass(arg0: com.sun.org.apache.bcel.internal.generic.LoadClass): void
                                visitFieldInstruction(arg0: com.sun.org.apache.bcel.internal.generic.FieldInstruction | com.sun.org.apache.bcel.internal.generic.FieldInstruction$$Lambda): void
                                visitIfInstruction(arg0: com.sun.org.apache.bcel.internal.generic.IfInstruction | com.sun.org.apache.bcel.internal.generic.IfInstruction$$Lambda): void
                                visitConversionInstruction(arg0: com.sun.org.apache.bcel.internal.generic.ConversionInstruction | com.sun.org.apache.bcel.internal.generic.ConversionInstruction$$Lambda): void
                                visitPopInstruction(arg0: com.sun.org.apache.bcel.internal.generic.PopInstruction): void
                                visitStoreInstruction(arg0: com.sun.org.apache.bcel.internal.generic.StoreInstruction): void
                                visitTypedInstruction(arg0: com.sun.org.apache.bcel.internal.generic.TypedInstruction | com.sun.org.apache.bcel.internal.generic.TypedInstruction$$Lambda): void
                                visitSelect(arg0: com.sun.org.apache.bcel.internal.generic.Select | com.sun.org.apache.bcel.internal.generic.Select$$Lambda): void
                                visitJsrInstruction(arg0: com.sun.org.apache.bcel.internal.generic.JsrInstruction | com.sun.org.apache.bcel.internal.generic.JsrInstruction$$Lambda): void
                                visitGotoInstruction(arg0: com.sun.org.apache.bcel.internal.generic.GotoInstruction): void
                                visitUnconditionalBranch(arg0: com.sun.org.apache.bcel.internal.generic.UnconditionalBranch): void
                                visitPushInstruction(arg0: com.sun.org.apache.bcel.internal.generic.PushInstruction): void
                                visitArithmeticInstruction(arg0: com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction | com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction$$Lambda): void
                                visitCPInstruction(arg0: com.sun.org.apache.bcel.internal.generic.CPInstruction): void
                                visitInvokeInstruction(arg0: com.sun.org.apache.bcel.internal.generic.InvokeInstruction | com.sun.org.apache.bcel.internal.generic.InvokeInstruction$$Lambda): void
                                visitArrayInstruction(arg0: com.sun.org.apache.bcel.internal.generic.ArrayInstruction | com.sun.org.apache.bcel.internal.generic.ArrayInstruction$$Lambda): void
                                visitAllocationInstruction(arg0: com.sun.org.apache.bcel.internal.generic.AllocationInstruction): void
                                visitReturnInstruction(arg0: com.sun.org.apache.bcel.internal.generic.ReturnInstruction | com.sun.org.apache.bcel.internal.generic.ReturnInstruction$$Lambda): void
                                visitFieldOrMethod(arg0: com.sun.org.apache.bcel.internal.generic.FieldOrMethod): void
                                visitConstantPushInstruction(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPushInstruction): void
                                visitExceptionThrower(arg0: com.sun.org.apache.bcel.internal.generic.ExceptionThrower | com.sun.org.apache.bcel.internal.generic.ExceptionThrower$$Lambda): void
                                visitLoadInstruction(arg0: com.sun.org.apache.bcel.internal.generic.LoadInstruction): void
                                visitVariableLengthInstruction(arg0: com.sun.org.apache.bcel.internal.generic.VariableLengthInstruction): void
                                visitStackProducer(arg0: com.sun.org.apache.bcel.internal.generic.StackProducer | com.sun.org.apache.bcel.internal.generic.StackProducer$$Lambda): void
                                visitStackConsumer(arg0: com.sun.org.apache.bcel.internal.generic.StackConsumer | com.sun.org.apache.bcel.internal.generic.StackConsumer$$Lambda): void
                                visitACONST_NULL(arg0: com.sun.org.apache.bcel.internal.generic.ACONST_NULL | com.sun.org.apache.bcel.internal.generic.ACONST_NULL$$Lambda): void
                                visitGETSTATIC(arg0: com.sun.org.apache.bcel.internal.generic.GETSTATIC | com.sun.org.apache.bcel.internal.generic.GETSTATIC$$Lambda): void
                                visitIF_ICMPLT(arg0: com.sun.org.apache.bcel.internal.generic.IF_ICMPLT): void
                                visitMONITOREXIT(arg0: com.sun.org.apache.bcel.internal.generic.MONITOREXIT | com.sun.org.apache.bcel.internal.generic.MONITOREXIT$$Lambda): void
                                visitIFLT(arg0: com.sun.org.apache.bcel.internal.generic.IFLT): void
                                visitLSTORE(arg0: com.sun.org.apache.bcel.internal.generic.LSTORE): void
                                visitPOP2(arg0: com.sun.org.apache.bcel.internal.generic.POP2): void
                                visitBASTORE(arg0: com.sun.org.apache.bcel.internal.generic.BASTORE | com.sun.org.apache.bcel.internal.generic.BASTORE$$Lambda): void
                                visitISTORE(arg0: com.sun.org.apache.bcel.internal.generic.ISTORE): void
                                visitCHECKCAST(arg0: com.sun.org.apache.bcel.internal.generic.CHECKCAST | com.sun.org.apache.bcel.internal.generic.CHECKCAST$$Lambda): void
                                visitFCMPG(arg0: com.sun.org.apache.bcel.internal.generic.FCMPG | com.sun.org.apache.bcel.internal.generic.FCMPG$$Lambda): void
                                visitI2F(arg0: com.sun.org.apache.bcel.internal.generic.I2F): void
                                visitATHROW(arg0: com.sun.org.apache.bcel.internal.generic.ATHROW | com.sun.org.apache.bcel.internal.generic.ATHROW$$Lambda): void
                                visitDCMPL(arg0: com.sun.org.apache.bcel.internal.generic.DCMPL | com.sun.org.apache.bcel.internal.generic.DCMPL$$Lambda): void
                                visitARRAYLENGTH(arg0: com.sun.org.apache.bcel.internal.generic.ARRAYLENGTH | com.sun.org.apache.bcel.internal.generic.ARRAYLENGTH$$Lambda): void
                                visitDUP(arg0: com.sun.org.apache.bcel.internal.generic.DUP): void
                                visitINVOKESTATIC(arg0: com.sun.org.apache.bcel.internal.generic.INVOKESTATIC): void
                                visitLCONST(arg0: com.sun.org.apache.bcel.internal.generic.LCONST | com.sun.org.apache.bcel.internal.generic.LCONST$$Lambda): void
                                visitDREM(arg0: com.sun.org.apache.bcel.internal.generic.DREM): void
                                visitIFGE(arg0: com.sun.org.apache.bcel.internal.generic.IFGE): void
                                visitCALOAD(arg0: com.sun.org.apache.bcel.internal.generic.CALOAD | com.sun.org.apache.bcel.internal.generic.CALOAD$$Lambda): void
                                visitLASTORE(arg0: com.sun.org.apache.bcel.internal.generic.LASTORE | com.sun.org.apache.bcel.internal.generic.LASTORE$$Lambda): void
                                visitI2D(arg0: com.sun.org.apache.bcel.internal.generic.I2D): void
                                visitDADD(arg0: com.sun.org.apache.bcel.internal.generic.DADD): void
                                visitINVOKESPECIAL(arg0: com.sun.org.apache.bcel.internal.generic.INVOKESPECIAL): void
                                visitIAND(arg0: com.sun.org.apache.bcel.internal.generic.IAND): void
                                visitPUTFIELD(arg0: com.sun.org.apache.bcel.internal.generic.PUTFIELD | com.sun.org.apache.bcel.internal.generic.PUTFIELD$$Lambda): void
                                visitILOAD(arg0: com.sun.org.apache.bcel.internal.generic.ILOAD): void
                                visitDLOAD(arg0: com.sun.org.apache.bcel.internal.generic.DLOAD): void
                                visitDCONST(arg0: com.sun.org.apache.bcel.internal.generic.DCONST | com.sun.org.apache.bcel.internal.generic.DCONST$$Lambda): void
                                visitNEW(arg0: com.sun.org.apache.bcel.internal.generic.NEW | com.sun.org.apache.bcel.internal.generic.NEW$$Lambda): void
                                visitIFNULL(arg0: com.sun.org.apache.bcel.internal.generic.IFNULL): void
                                visitLSUB(arg0: com.sun.org.apache.bcel.internal.generic.LSUB): void
                                visitL2I(arg0: com.sun.org.apache.bcel.internal.generic.L2I): void
                                visitISHR(arg0: com.sun.org.apache.bcel.internal.generic.ISHR): void
                                visitTABLESWITCH(arg0: com.sun.org.apache.bcel.internal.generic.TABLESWITCH): void
                                visitIINC(arg0: com.sun.org.apache.bcel.internal.generic.IINC): void
                                visitDRETURN(arg0: com.sun.org.apache.bcel.internal.generic.DRETURN): void
                                visitFSTORE(arg0: com.sun.org.apache.bcel.internal.generic.FSTORE): void
                                visitDASTORE(arg0: com.sun.org.apache.bcel.internal.generic.DASTORE | com.sun.org.apache.bcel.internal.generic.DASTORE$$Lambda): void
                                visitIALOAD(arg0: com.sun.org.apache.bcel.internal.generic.IALOAD | com.sun.org.apache.bcel.internal.generic.IALOAD$$Lambda): void
                                visitDDIV(arg0: com.sun.org.apache.bcel.internal.generic.DDIV): void
                                visitIF_ICMPGE(arg0: com.sun.org.apache.bcel.internal.generic.IF_ICMPGE): void
                                visitLAND(arg0: com.sun.org.apache.bcel.internal.generic.LAND): void
                                visitIDIV(arg0: com.sun.org.apache.bcel.internal.generic.IDIV | com.sun.org.apache.bcel.internal.generic.IDIV$$Lambda): void
                                visitLOR(arg0: com.sun.org.apache.bcel.internal.generic.LOR): void
                                visitCASTORE(arg0: com.sun.org.apache.bcel.internal.generic.CASTORE | com.sun.org.apache.bcel.internal.generic.CASTORE$$Lambda): void
                                visitFREM(arg0: com.sun.org.apache.bcel.internal.generic.FREM): void
                                visitLDC(arg0: com.sun.org.apache.bcel.internal.generic.LDC | com.sun.org.apache.bcel.internal.generic.LDC$$Lambda): void
                                visitBIPUSH(arg0: com.sun.org.apache.bcel.internal.generic.BIPUSH): void
                                visitDSTORE(arg0: com.sun.org.apache.bcel.internal.generic.DSTORE): void
                                visitF2L(arg0: com.sun.org.apache.bcel.internal.generic.F2L): void
                                visitFMUL(arg0: com.sun.org.apache.bcel.internal.generic.FMUL): void
                                visitLLOAD(arg0: com.sun.org.apache.bcel.internal.generic.LLOAD): void
                                visitJSR(arg0: com.sun.org.apache.bcel.internal.generic.JSR): void
                                visitFSUB(arg0: com.sun.org.apache.bcel.internal.generic.FSUB): void
                                visitSASTORE(arg0: com.sun.org.apache.bcel.internal.generic.SASTORE | com.sun.org.apache.bcel.internal.generic.SASTORE$$Lambda): void
                                visitALOAD(arg0: com.sun.org.apache.bcel.internal.generic.ALOAD): void
                                visitDUP2_X2(arg0: com.sun.org.apache.bcel.internal.generic.DUP2_X2): void
                                visitRETURN(arg0: com.sun.org.apache.bcel.internal.generic.RETURN): void
                                visitDALOAD(arg0: com.sun.org.apache.bcel.internal.generic.DALOAD | com.sun.org.apache.bcel.internal.generic.DALOAD$$Lambda): void
                                visitSIPUSH(arg0: com.sun.org.apache.bcel.internal.generic.SIPUSH): void
                                visitDSUB(arg0: com.sun.org.apache.bcel.internal.generic.DSUB): void
                                visitL2F(arg0: com.sun.org.apache.bcel.internal.generic.L2F): void
                                visitIF_ICMPGT(arg0: com.sun.org.apache.bcel.internal.generic.IF_ICMPGT): void
                                visitF2D(arg0: com.sun.org.apache.bcel.internal.generic.F2D): void
                                visitI2L(arg0: com.sun.org.apache.bcel.internal.generic.I2L): void
                                visitIF_ACMPNE(arg0: com.sun.org.apache.bcel.internal.generic.IF_ACMPNE): void
                                visitPOP(arg0: com.sun.org.apache.bcel.internal.generic.POP): void
                                visitI2S(arg0: com.sun.org.apache.bcel.internal.generic.I2S): void
                                visitIFEQ(arg0: com.sun.org.apache.bcel.internal.generic.IFEQ): void
                                visitSWAP(arg0: com.sun.org.apache.bcel.internal.generic.SWAP | com.sun.org.apache.bcel.internal.generic.SWAP$$Lambda): void
                                visitIOR(arg0: com.sun.org.apache.bcel.internal.generic.IOR): void
                                visitIREM(arg0: com.sun.org.apache.bcel.internal.generic.IREM | com.sun.org.apache.bcel.internal.generic.IREM$$Lambda): void
                                visitIASTORE(arg0: com.sun.org.apache.bcel.internal.generic.IASTORE | com.sun.org.apache.bcel.internal.generic.IASTORE$$Lambda): void
                                visitNEWARRAY(arg0: com.sun.org.apache.bcel.internal.generic.NEWARRAY | com.sun.org.apache.bcel.internal.generic.NEWARRAY$$Lambda): void
                                visitINVOKEINTERFACE(arg0: com.sun.org.apache.bcel.internal.generic.INVOKEINTERFACE): void
                                visitINEG(arg0: com.sun.org.apache.bcel.internal.generic.INEG): void
                                visitLCMP(arg0: com.sun.org.apache.bcel.internal.generic.LCMP | com.sun.org.apache.bcel.internal.generic.LCMP$$Lambda): void
                                visitJSR_W(arg0: com.sun.org.apache.bcel.internal.generic.JSR_W): void
                                visitMULTIANEWARRAY(arg0: com.sun.org.apache.bcel.internal.generic.MULTIANEWARRAY | com.sun.org.apache.bcel.internal.generic.MULTIANEWARRAY$$Lambda): void
                                visitDUP_X2(arg0: com.sun.org.apache.bcel.internal.generic.DUP_X2): void
                                visitSALOAD(arg0: com.sun.org.apache.bcel.internal.generic.SALOAD | com.sun.org.apache.bcel.internal.generic.SALOAD$$Lambda): void
                                visitIFNONNULL(arg0: com.sun.org.apache.bcel.internal.generic.IFNONNULL): void
                                visitDMUL(arg0: com.sun.org.apache.bcel.internal.generic.DMUL): void
                                visitIFNE(arg0: com.sun.org.apache.bcel.internal.generic.IFNE): void
                                visitIF_ICMPLE(arg0: com.sun.org.apache.bcel.internal.generic.IF_ICMPLE): void
                                visitLDC2_W(arg0: com.sun.org.apache.bcel.internal.generic.LDC2_W | com.sun.org.apache.bcel.internal.generic.LDC2_W$$Lambda): void
                                visitGETFIELD(arg0: com.sun.org.apache.bcel.internal.generic.GETFIELD | com.sun.org.apache.bcel.internal.generic.GETFIELD$$Lambda): void
                                visitLADD(arg0: com.sun.org.apache.bcel.internal.generic.LADD): void
                                visitNOP(arg0: com.sun.org.apache.bcel.internal.generic.NOP): void
                                visitFALOAD(arg0: com.sun.org.apache.bcel.internal.generic.FALOAD | com.sun.org.apache.bcel.internal.generic.FALOAD$$Lambda): void
                                visitINSTANCEOF(arg0: com.sun.org.apache.bcel.internal.generic.INSTANCEOF | com.sun.org.apache.bcel.internal.generic.INSTANCEOF$$Lambda): void
                                visitIFLE(arg0: com.sun.org.apache.bcel.internal.generic.IFLE): void
                                visitLXOR(arg0: com.sun.org.apache.bcel.internal.generic.LXOR): void
                                visitLRETURN(arg0: com.sun.org.apache.bcel.internal.generic.LRETURN): void
                                visitFCONST(arg0: com.sun.org.apache.bcel.internal.generic.FCONST | com.sun.org.apache.bcel.internal.generic.FCONST$$Lambda): void
                                visitIUSHR(arg0: com.sun.org.apache.bcel.internal.generic.IUSHR): void
                                visitBALOAD(arg0: com.sun.org.apache.bcel.internal.generic.BALOAD | com.sun.org.apache.bcel.internal.generic.BALOAD$$Lambda): void
                                visitDUP2(arg0: com.sun.org.apache.bcel.internal.generic.DUP2): void
                                visitIF_ACMPEQ(arg0: com.sun.org.apache.bcel.internal.generic.IF_ACMPEQ): void
                                visitIMPDEP1(arg0: com.sun.org.apache.bcel.internal.generic.IMPDEP1): void
                                visitMONITORENTER(arg0: com.sun.org.apache.bcel.internal.generic.MONITORENTER | com.sun.org.apache.bcel.internal.generic.MONITORENTER$$Lambda): void
                                visitLSHL(arg0: com.sun.org.apache.bcel.internal.generic.LSHL): void
                                visitDCMPG(arg0: com.sun.org.apache.bcel.internal.generic.DCMPG | com.sun.org.apache.bcel.internal.generic.DCMPG$$Lambda): void
                                visitD2L(arg0: com.sun.org.apache.bcel.internal.generic.D2L): void
                                visitIMPDEP2(arg0: com.sun.org.apache.bcel.internal.generic.IMPDEP2): void
                                visitL2D(arg0: com.sun.org.apache.bcel.internal.generic.L2D): void
                                visitRET(arg0: com.sun.org.apache.bcel.internal.generic.RET | com.sun.org.apache.bcel.internal.generic.RET$$Lambda): void
                                visitIFGT(arg0: com.sun.org.apache.bcel.internal.generic.IFGT): void
                                visitIXOR(arg0: com.sun.org.apache.bcel.internal.generic.IXOR): void
                                visitINVOKEVIRTUAL(arg0: com.sun.org.apache.bcel.internal.generic.INVOKEVIRTUAL): void
                                visitFASTORE(arg0: com.sun.org.apache.bcel.internal.generic.FASTORE | com.sun.org.apache.bcel.internal.generic.FASTORE$$Lambda): void
                                visitIRETURN(arg0: com.sun.org.apache.bcel.internal.generic.IRETURN): void
                                visitIF_ICMPNE(arg0: com.sun.org.apache.bcel.internal.generic.IF_ICMPNE): void
                                visitFLOAD(arg0: com.sun.org.apache.bcel.internal.generic.FLOAD): void
                                visitLDIV(arg0: com.sun.org.apache.bcel.internal.generic.LDIV | com.sun.org.apache.bcel.internal.generic.LDIV$$Lambda): void
                                visitPUTSTATIC(arg0: com.sun.org.apache.bcel.internal.generic.PUTSTATIC): void
                                visitAALOAD(arg0: com.sun.org.apache.bcel.internal.generic.AALOAD | com.sun.org.apache.bcel.internal.generic.AALOAD$$Lambda): void
                                visitD2I(arg0: com.sun.org.apache.bcel.internal.generic.D2I): void
                                visitIF_ICMPEQ(arg0: com.sun.org.apache.bcel.internal.generic.IF_ICMPEQ): void
                                visitAASTORE(arg0: com.sun.org.apache.bcel.internal.generic.AASTORE | com.sun.org.apache.bcel.internal.generic.AASTORE$$Lambda): void
                                visitARETURN(arg0: com.sun.org.apache.bcel.internal.generic.ARETURN): void
                                visitDUP2_X1(arg0: com.sun.org.apache.bcel.internal.generic.DUP2_X1): void
                                visitFNEG(arg0: com.sun.org.apache.bcel.internal.generic.FNEG): void
                                visitGOTO_W(arg0: com.sun.org.apache.bcel.internal.generic.GOTO_W): void
                                visitD2F(arg0: com.sun.org.apache.bcel.internal.generic.D2F): void
                                visitGOTO(arg0: com.sun.org.apache.bcel.internal.generic.GOTO): void
                                visitISUB(arg0: com.sun.org.apache.bcel.internal.generic.ISUB): void
                                visitF2I(arg0: com.sun.org.apache.bcel.internal.generic.F2I): void
                                visitDNEG(arg0: com.sun.org.apache.bcel.internal.generic.DNEG): void
                                visitICONST(arg0: com.sun.org.apache.bcel.internal.generic.ICONST | com.sun.org.apache.bcel.internal.generic.ICONST$$Lambda): void
                                visitFDIV(arg0: com.sun.org.apache.bcel.internal.generic.FDIV): void
                                visitI2B(arg0: com.sun.org.apache.bcel.internal.generic.I2B): void
                                visitLNEG(arg0: com.sun.org.apache.bcel.internal.generic.LNEG): void
                                visitLREM(arg0: com.sun.org.apache.bcel.internal.generic.LREM | com.sun.org.apache.bcel.internal.generic.LREM$$Lambda): void
                                visitIMUL(arg0: com.sun.org.apache.bcel.internal.generic.IMUL): void
                                visitIADD(arg0: com.sun.org.apache.bcel.internal.generic.IADD): void
                                visitLSHR(arg0: com.sun.org.apache.bcel.internal.generic.LSHR): void
                                visitLOOKUPSWITCH(arg0: com.sun.org.apache.bcel.internal.generic.LOOKUPSWITCH): void
                                visitDUP_X1(arg0: com.sun.org.apache.bcel.internal.generic.DUP_X1): void
                                visitFCMPL(arg0: com.sun.org.apache.bcel.internal.generic.FCMPL | com.sun.org.apache.bcel.internal.generic.FCMPL$$Lambda): void
                                visitI2C(arg0: com.sun.org.apache.bcel.internal.generic.I2C): void
                                visitLMUL(arg0: com.sun.org.apache.bcel.internal.generic.LMUL): void
                                visitLUSHR(arg0: com.sun.org.apache.bcel.internal.generic.LUSHR): void
                                visitISHL(arg0: com.sun.org.apache.bcel.internal.generic.ISHL): void
                                visitLALOAD(arg0: com.sun.org.apache.bcel.internal.generic.LALOAD | com.sun.org.apache.bcel.internal.generic.LALOAD$$Lambda): void
                                visitASTORE(arg0: com.sun.org.apache.bcel.internal.generic.ASTORE): void
                                visitANEWARRAY(arg0: com.sun.org.apache.bcel.internal.generic.ANEWARRAY | com.sun.org.apache.bcel.internal.generic.ANEWARRAY$$Lambda): void
                                visitFRETURN(arg0: com.sun.org.apache.bcel.internal.generic.FRETURN): void
                                visitFADD(arg0: com.sun.org.apache.bcel.internal.generic.FADD): void
                                visitBREAKPOINT(arg0: com.sun.org.apache.bcel.internal.generic.BREAKPOINT): void
                            }
                        }
                        namespace util {
                            class AttributeHTML implements com.sun.org.apache.bcel.internal.Constants {
                                public static class: java.lang.Class<any>
                            }
                            class BCELFactory extends com.sun.org.apache.bcel.internal.generic.EmptyVisitor {
                                public start(): void
                                public visitLocalVariableInstruction(arg0: com.sun.org.apache.bcel.internal.generic.LocalVariableInstruction): void
                                public visitArrayInstruction(arg0: com.sun.org.apache.bcel.internal.generic.ArrayInstruction | com.sun.org.apache.bcel.internal.generic.ArrayInstruction$$Lambda): void
                                public visitFieldInstruction(arg0: com.sun.org.apache.bcel.internal.generic.FieldInstruction | com.sun.org.apache.bcel.internal.generic.FieldInstruction$$Lambda): void
                                public visitInvokeInstruction(arg0: com.sun.org.apache.bcel.internal.generic.InvokeInstruction | com.sun.org.apache.bcel.internal.generic.InvokeInstruction$$Lambda): void
                                public visitAllocationInstruction(arg0: com.sun.org.apache.bcel.internal.generic.AllocationInstruction): void
                                public visitLDC(arg0: com.sun.org.apache.bcel.internal.generic.LDC | com.sun.org.apache.bcel.internal.generic.LDC$$Lambda): void
                                public visitLDC2_W(arg0: com.sun.org.apache.bcel.internal.generic.LDC2_W | com.sun.org.apache.bcel.internal.generic.LDC2_W$$Lambda): void
                                public visitConstantPushInstruction(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPushInstruction): void
                                public visitINSTANCEOF(arg0: com.sun.org.apache.bcel.internal.generic.INSTANCEOF | com.sun.org.apache.bcel.internal.generic.INSTANCEOF$$Lambda): void
                                public visitCHECKCAST(arg0: com.sun.org.apache.bcel.internal.generic.CHECKCAST | com.sun.org.apache.bcel.internal.generic.CHECKCAST$$Lambda): void
                                public visitReturnInstruction(arg0: com.sun.org.apache.bcel.internal.generic.ReturnInstruction | com.sun.org.apache.bcel.internal.generic.ReturnInstruction$$Lambda): void
                                public visitBranchInstruction(arg0: com.sun.org.apache.bcel.internal.generic.BranchInstruction): void
                                public visitRET(arg0: com.sun.org.apache.bcel.internal.generic.RET | com.sun.org.apache.bcel.internal.generic.RET$$Lambda): void
                                public static class: java.lang.Class<any>
                            }
                            class BCELifier extends com.sun.org.apache.bcel.internal.classfile.EmptyVisitor {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.JavaClass | com.sun.org.apache.bcel.internal.classfile.JavaClass$$Lambda, arg1: java.io.OutputStream | java.io.OutputStream$$Lambda)
                                public start(): void
                                public visitJavaClass(arg0: com.sun.org.apache.bcel.internal.classfile.JavaClass | com.sun.org.apache.bcel.internal.classfile.JavaClass$$Lambda): void
                                public visitField(arg0: com.sun.org.apache.bcel.internal.classfile.Field): void
                                public visitMethod(arg0: com.sun.org.apache.bcel.internal.classfile.Method): void
                                public static _main(arg0: java.lang.String[]): void
                                public static class: java.lang.Class<any>
                            }
                            class ByteSequence extends java.io.DataInputStream {
                                public constructor(arg0: byte[])
                                public getIndex(): int
                                public static class: java.lang.Class<any>
                            }
                            class Class2HTML implements com.sun.org.apache.bcel.internal.Constants {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.classfile.JavaClass | com.sun.org.apache.bcel.internal.classfile.JavaClass$$Lambda, arg1: java.lang.String | string)
                                public static _main(arg0: java.lang.String[]): void
                                public static class: java.lang.Class<any>
                            }
                            class ClassQueue implements java.io.Serializable {
                                protected vec: java.util.LinkedList
                                public constructor()
                                public enqueue(arg0: com.sun.org.apache.bcel.internal.classfile.JavaClass | com.sun.org.apache.bcel.internal.classfile.JavaClass$$Lambda): void
                                public dequeue(): com.sun.org.apache.bcel.internal.classfile.JavaClass
                                public empty(): boolean
                                public toString(): string
                                public static class: java.lang.Class<any>
                            }
                            class ClassSet implements java.io.Serializable {
                                public constructor()
                                public add(arg0: com.sun.org.apache.bcel.internal.classfile.JavaClass | com.sun.org.apache.bcel.internal.classfile.JavaClass$$Lambda): boolean
                                public remove(arg0: com.sun.org.apache.bcel.internal.classfile.JavaClass | com.sun.org.apache.bcel.internal.classfile.JavaClass$$Lambda): void
                                public empty(): boolean
                                public toArray(): com.sun.org.apache.bcel.internal.classfile.JavaClass[]
                                public getClassNames(): java.lang.String[]
                                public static class: java.lang.Class<any>
                            }
                            class ClassStack implements java.io.Serializable {
                                public constructor()
                                public push(arg0: com.sun.org.apache.bcel.internal.classfile.JavaClass | com.sun.org.apache.bcel.internal.classfile.JavaClass$$Lambda): void
                                public pop(): com.sun.org.apache.bcel.internal.classfile.JavaClass
                                public top(): com.sun.org.apache.bcel.internal.classfile.JavaClass
                                public empty(): boolean
                                public static class: java.lang.Class<any>
                            }
                            class CodeHTML implements com.sun.org.apache.bcel.internal.Constants {
                                public static class: java.lang.Class<any>
                            }
                            class ConstantHTML implements com.sun.org.apache.bcel.internal.Constants {
                                public static class: java.lang.Class<any>
                            }
                            class InstructionFinder {
                                public constructor(arg0: com.sun.org.apache.bcel.internal.generic.InstructionList)
                                public reread(): void
                                public search(arg0: java.lang.String | string, arg1: com.sun.org.apache.bcel.internal.generic.InstructionHandle, arg2: com.sun.org.apache.bcel.internal.util.InstructionFinder$CodeConstraint): java.util.Iterator
                                public search(arg0: java.lang.String | string): java.util.Iterator
                                public search(arg0: java.lang.String | string, arg1: com.sun.org.apache.bcel.internal.generic.InstructionHandle): java.util.Iterator
                                public search(arg0: java.lang.String | string, arg1: com.sun.org.apache.bcel.internal.util.InstructionFinder$CodeConstraint): java.util.Iterator
                                public getInstructionList(): com.sun.org.apache.bcel.internal.generic.InstructionList
                                public static class: java.lang.Class<any>
                            }
                            class MethodHTML implements com.sun.org.apache.bcel.internal.Constants {
                                public static class: java.lang.Class<any>
                            }
                            interface Repository extends java.io.Serializable {
                                storeClass(arg0: com.sun.org.apache.bcel.internal.classfile.JavaClass | com.sun.org.apache.bcel.internal.classfile.JavaClass$$Lambda): void
                                removeClass(arg0: com.sun.org.apache.bcel.internal.classfile.JavaClass | com.sun.org.apache.bcel.internal.classfile.JavaClass$$Lambda): void
                                findClass(arg0: java.lang.String | string): com.sun.org.apache.bcel.internal.classfile.JavaClass
                                loadClass(arg0: java.lang.String | string): com.sun.org.apache.bcel.internal.classfile.JavaClass
                                loadClass(arg0: java.lang.Class): com.sun.org.apache.bcel.internal.classfile.JavaClass
                                clear(): void
                            }
                            class SyntheticRepository implements com.sun.org.apache.bcel.internal.util.Repository {
                                public static getInstance(): com.sun.org.apache.bcel.internal.util.SyntheticRepository
                                public static getInstance(arg0: com.sun.org.apache.bcel.internal.util.ClassPath): com.sun.org.apache.bcel.internal.util.SyntheticRepository
                                public storeClass(arg0: com.sun.org.apache.bcel.internal.classfile.JavaClass | com.sun.org.apache.bcel.internal.classfile.JavaClass$$Lambda): void
                                public removeClass(arg0: com.sun.org.apache.bcel.internal.classfile.JavaClass | com.sun.org.apache.bcel.internal.classfile.JavaClass$$Lambda): void
                                public findClass(arg0: java.lang.String | string): com.sun.org.apache.bcel.internal.classfile.JavaClass
                                public loadClass(arg0: java.lang.String | string): com.sun.org.apache.bcel.internal.classfile.JavaClass
                                public loadClass(arg0: java.lang.Class): com.sun.org.apache.bcel.internal.classfile.JavaClass
                                public clear(): void
                                public static class: java.lang.Class<any>
                            }
                        }
                        abstract class Repository {
                            public constructor()
                            public static getRepository(): com.sun.org.apache.bcel.internal.util.Repository
                            public static setRepository(arg0: com.sun.org.apache.bcel.internal.util.Repository): void
                            public static lookupClass(arg0: java.lang.String | string): com.sun.org.apache.bcel.internal.classfile.JavaClass
                            public static lookupClass(arg0: java.lang.Class): com.sun.org.apache.bcel.internal.classfile.JavaClass
                            public static lookupClassFile(arg0: java.lang.String | string): com.sun.org.apache.bcel.internal.util.ClassPath$ClassFile
                            public static clearCache(): void
                            public static addClass(arg0: com.sun.org.apache.bcel.internal.classfile.JavaClass | com.sun.org.apache.bcel.internal.classfile.JavaClass$$Lambda): com.sun.org.apache.bcel.internal.classfile.JavaClass
                            public static removeClass(arg0: java.lang.String | string): void
                            public static removeClass(arg0: com.sun.org.apache.bcel.internal.classfile.JavaClass | com.sun.org.apache.bcel.internal.classfile.JavaClass$$Lambda): void
                            public static getSuperClasses(arg0: com.sun.org.apache.bcel.internal.classfile.JavaClass | com.sun.org.apache.bcel.internal.classfile.JavaClass$$Lambda): com.sun.org.apache.bcel.internal.classfile.JavaClass[]
                            public static getSuperClasses(arg0: java.lang.String | string): com.sun.org.apache.bcel.internal.classfile.JavaClass[]
                            public static getInterfaces(arg0: com.sun.org.apache.bcel.internal.classfile.JavaClass | com.sun.org.apache.bcel.internal.classfile.JavaClass$$Lambda): com.sun.org.apache.bcel.internal.classfile.JavaClass[]
                            public static getInterfaces(arg0: java.lang.String | string): com.sun.org.apache.bcel.internal.classfile.JavaClass[]
                            public static instanceOf(arg0: com.sun.org.apache.bcel.internal.classfile.JavaClass | com.sun.org.apache.bcel.internal.classfile.JavaClass$$Lambda, arg1: com.sun.org.apache.bcel.internal.classfile.JavaClass | com.sun.org.apache.bcel.internal.classfile.JavaClass$$Lambda): boolean
                            public static instanceOf(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                            public static instanceOf(arg0: com.sun.org.apache.bcel.internal.classfile.JavaClass | com.sun.org.apache.bcel.internal.classfile.JavaClass$$Lambda, arg1: java.lang.String | string): boolean
                            public static instanceOf(arg0: java.lang.String | string, arg1: com.sun.org.apache.bcel.internal.classfile.JavaClass | com.sun.org.apache.bcel.internal.classfile.JavaClass$$Lambda): boolean
                            public static implementationOf(arg0: com.sun.org.apache.bcel.internal.classfile.JavaClass | com.sun.org.apache.bcel.internal.classfile.JavaClass$$Lambda, arg1: com.sun.org.apache.bcel.internal.classfile.JavaClass | com.sun.org.apache.bcel.internal.classfile.JavaClass$$Lambda): boolean
                            public static implementationOf(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                            public static implementationOf(arg0: com.sun.org.apache.bcel.internal.classfile.JavaClass | com.sun.org.apache.bcel.internal.classfile.JavaClass$$Lambda, arg1: java.lang.String | string): boolean
                            public static implementationOf(arg0: java.lang.String | string, arg1: com.sun.org.apache.bcel.internal.classfile.JavaClass | com.sun.org.apache.bcel.internal.classfile.JavaClass$$Lambda): boolean
                            public static class: java.lang.Class<any>
                        }
                    }
                }
                namespace xalan {
                    namespace internal {
                        namespace extensions {
                            interface ExpressionContext {
                                getContextNode(): org.w3c.dom.Node
                                getContextNodes(): org.w3c.dom.traversal.NodeIterator
                                getErrorListener(): javax.xml.transform.ErrorListener
                                toNumber(arg0: org.w3c.dom.Node): double
                                toString(arg0: org.w3c.dom.Node): string
                                getVariableOrParam(arg0: com.sun.org.apache.xml.internal.utils.QName): com.sun.org.apache.xpath.internal.objects.XObject
                                getXPathContext(): com.sun.org.apache.xpath.internal.XPathContext
                            }
                        }
                        namespace lib {
                            abstract class ExsltBase {
                                public constructor()
                                protected static toString(arg0: org.w3c.dom.Node): string
                                protected static toNumber(arg0: org.w3c.dom.Node): double
                                public static class: java.lang.Class<any>
                            }
                            class ExsltCommon {
                                public constructor()
                                public static objectType(arg0: java.lang.Object): string
                                public static nodeSet(arg0: com.sun.org.apache.xalan.internal.extensions.ExpressionContext, arg1: java.lang.Object): com.sun.org.apache.xpath.internal.NodeSet
                                public static class: java.lang.Class<any>
                            }
                            class ExsltDatetime {
                                public constructor()
                                public static dateTime(): string
                                public static date(arg0: java.lang.String | string): string
                                public static date(): string
                                public static time(arg0: java.lang.String | string): string
                                public static time(): string
                                public static year(arg0: java.lang.String | string): double
                                public static year(): double
                                public static monthInYear(arg0: java.lang.String | string): double
                                public static monthInYear(): double
                                public static weekInYear(arg0: java.lang.String | string): double
                                public static weekInYear(): double
                                public static dayInYear(arg0: java.lang.String | string): double
                                public static dayInYear(): double
                                public static dayInMonth(arg0: java.lang.String | string): double
                                public static dayInMonth(): double
                                public static dayOfWeekInMonth(arg0: java.lang.String | string): double
                                public static dayOfWeekInMonth(): double
                                public static dayInWeek(arg0: java.lang.String | string): double
                                public static dayInWeek(): double
                                public static hourInDay(arg0: java.lang.String | string): double
                                public static hourInDay(): double
                                public static minuteInHour(arg0: java.lang.String | string): double
                                public static minuteInHour(): double
                                public static secondInMinute(arg0: java.lang.String | string): double
                                public static secondInMinute(): double
                                public static leapYear(arg0: java.lang.String | string): com.sun.org.apache.xpath.internal.objects.XObject
                                public static leapYear(): boolean
                                public static monthName(arg0: java.lang.String | string): string
                                public static monthName(): string
                                public static monthAbbreviation(arg0: java.lang.String | string): string
                                public static monthAbbreviation(): string
                                public static dayName(arg0: java.lang.String | string): string
                                public static dayName(): string
                                public static dayAbbreviation(arg0: java.lang.String | string): string
                                public static dayAbbreviation(): string
                                public static formatDate(arg0: java.lang.String | string, arg1: java.lang.String | string): string
                                public static class: java.lang.Class<any>
                            }
                            class ExsltDynamic extends com.sun.org.apache.xalan.internal.lib.ExsltBase {
                                public static EXSL_URI: string
                                public constructor()
                                public static max(arg0: com.sun.org.apache.xalan.internal.extensions.ExpressionContext, arg1: org.w3c.dom.NodeList, arg2: java.lang.String | string): double
                                public static min(arg0: com.sun.org.apache.xalan.internal.extensions.ExpressionContext, arg1: org.w3c.dom.NodeList, arg2: java.lang.String | string): double
                                public static sum(arg0: com.sun.org.apache.xalan.internal.extensions.ExpressionContext, arg1: org.w3c.dom.NodeList, arg2: java.lang.String | string): double
                                public static map(arg0: com.sun.org.apache.xalan.internal.extensions.ExpressionContext, arg1: org.w3c.dom.NodeList, arg2: java.lang.String | string): org.w3c.dom.NodeList
                                public static evaluate(arg0: com.sun.org.apache.xalan.internal.extensions.ExpressionContext, arg1: java.lang.String | string): com.sun.org.apache.xpath.internal.objects.XObject
                                public static closure(arg0: com.sun.org.apache.xalan.internal.extensions.ExpressionContext, arg1: org.w3c.dom.NodeList, arg2: java.lang.String | string): org.w3c.dom.NodeList
                                public static class: java.lang.Class<any>
                            }
                            class ExsltMath extends com.sun.org.apache.xalan.internal.lib.ExsltBase {
                                public constructor()
                                public static max(arg0: org.w3c.dom.NodeList): double
                                public static min(arg0: org.w3c.dom.NodeList): double
                                public static highest(arg0: org.w3c.dom.NodeList): org.w3c.dom.NodeList
                                public static lowest(arg0: org.w3c.dom.NodeList): org.w3c.dom.NodeList
                                public static abs(arg0: double): double
                                public static acos(arg0: double): double
                                public static asin(arg0: double): double
                                public static atan(arg0: double): double
                                public static atan2(arg0: double, arg1: double): double
                                public static cos(arg0: double): double
                                public static exp(arg0: double): double
                                public static log(arg0: double): double
                                public static power(arg0: double, arg1: double): double
                                public static random(): double
                                public static sin(arg0: double): double
                                public static sqrt(arg0: double): double
                                public static tan(arg0: double): double
                                public static constant(arg0: java.lang.String | string, arg1: double): double
                                public static class: java.lang.Class<any>
                            }
                            class ExsltSets extends com.sun.org.apache.xalan.internal.lib.ExsltBase {
                                public constructor()
                                public static leading(arg0: org.w3c.dom.NodeList, arg1: org.w3c.dom.NodeList): org.w3c.dom.NodeList
                                public static trailing(arg0: org.w3c.dom.NodeList, arg1: org.w3c.dom.NodeList): org.w3c.dom.NodeList
                                public static intersection(arg0: org.w3c.dom.NodeList, arg1: org.w3c.dom.NodeList): org.w3c.dom.NodeList
                                public static difference(arg0: org.w3c.dom.NodeList, arg1: org.w3c.dom.NodeList): org.w3c.dom.NodeList
                                public static distinct(arg0: org.w3c.dom.NodeList): org.w3c.dom.NodeList
                                public static hasSameNode(arg0: org.w3c.dom.NodeList, arg1: org.w3c.dom.NodeList): boolean
                                public static class: java.lang.Class<any>
                            }
                            class ExsltStrings extends com.sun.org.apache.xalan.internal.lib.ExsltBase {
                                public constructor()
                                public static align(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): string
                                public static align(arg0: java.lang.String | string, arg1: java.lang.String | string): string
                                public static concat(arg0: org.w3c.dom.NodeList): string
                                public static padding(arg0: double, arg1: java.lang.String | string): string
                                public static padding(arg0: double): string
                                public static split(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.NodeList
                                public static split(arg0: java.lang.String | string): org.w3c.dom.NodeList
                                public static tokenize(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.NodeList
                                public static tokenize(arg0: java.lang.String | string): org.w3c.dom.NodeList
                                public static class: java.lang.Class<any>
                            }
                            class Extensions {
                                public static nodeset(arg0: com.sun.org.apache.xalan.internal.extensions.ExpressionContext, arg1: java.lang.Object): com.sun.org.apache.xpath.internal.NodeSet
                                public static intersection(arg0: org.w3c.dom.NodeList, arg1: org.w3c.dom.NodeList): org.w3c.dom.NodeList
                                public static difference(arg0: org.w3c.dom.NodeList, arg1: org.w3c.dom.NodeList): org.w3c.dom.NodeList
                                public static distinct(arg0: org.w3c.dom.NodeList): org.w3c.dom.NodeList
                                public static hasSameNodes(arg0: org.w3c.dom.NodeList, arg1: org.w3c.dom.NodeList): boolean
                                public static evaluate(arg0: com.sun.org.apache.xalan.internal.extensions.ExpressionContext, arg1: java.lang.String | string): com.sun.org.apache.xpath.internal.objects.XObject
                                public static tokenize(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.NodeList
                                public static tokenize(arg0: java.lang.String | string): org.w3c.dom.NodeList
                                public static class: java.lang.Class<any>
                            }
                            class NodeInfo {
                                public constructor()
                                public static systemId(arg0: com.sun.org.apache.xalan.internal.extensions.ExpressionContext): string
                                public static systemId(arg0: org.w3c.dom.NodeList): string
                                public static publicId(arg0: com.sun.org.apache.xalan.internal.extensions.ExpressionContext): string
                                public static publicId(arg0: org.w3c.dom.NodeList): string
                                public static lineNumber(arg0: com.sun.org.apache.xalan.internal.extensions.ExpressionContext): int
                                public static lineNumber(arg0: org.w3c.dom.NodeList): int
                                public static columnNumber(arg0: com.sun.org.apache.xalan.internal.extensions.ExpressionContext): int
                                public static columnNumber(arg0: org.w3c.dom.NodeList): int
                                public static class: java.lang.Class<any>
                            }
                        }
                        namespace res {
                            class XSLMessages extends com.sun.org.apache.xpath.internal.res.XPATHMessages {
                                public constructor()
                                public static createMessage(arg0: java.lang.String | string, arg1: java.lang.Object[]): string
                                public static createWarning(arg0: java.lang.String | string, arg1: java.lang.Object[]): string
                                public static class: java.lang.Class<any>
                            }
                            class XSLTErrorResources extends java.util.ListResourceBundle {
                                public static ER_INVALID_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX: string
                                public static ER_INVALID_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX_FOR_DEFAULT: string
                                public static ER_NO_CURLYBRACE: string
                                public static ER_FUNCTION_NOT_SUPPORTED: string
                                public static ER_ILLEGAL_ATTRIBUTE: string
                                public static ER_NULL_SOURCENODE_APPLYIMPORTS: string
                                public static ER_CANNOT_ADD: string
                                public static ER_NULL_SOURCENODE_HANDLEAPPLYTEMPLATES: string
                                public static ER_NO_NAME_ATTRIB: string
                                public static ER_TEMPLATE_NOT_FOUND: string
                                public static ER_CANT_RESOLVE_NAME_AVT: string
                                public static ER_REQUIRES_ATTRIB: string
                                public static ER_MUST_HAVE_TEST_ATTRIB: string
                                public static ER_BAD_VAL_ON_LEVEL_ATTRIB: string
                                public static ER_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML: string
                                public static ER_PROCESSINGINSTRUCTION_NOTVALID_NCNAME: string
                                public static ER_NEED_MATCH_ATTRIB: string
                                public static ER_NEED_NAME_OR_MATCH_ATTRIB: string
                                public static ER_CANT_RESOLVE_NSPREFIX: string
                                public static ER_ILLEGAL_VALUE: string
                                public static ER_NO_OWNERDOC: string
                                public static ER_ELEMTEMPLATEELEM_ERR: string
                                public static ER_NULL_CHILD: string
                                public static ER_NEED_SELECT_ATTRIB: string
                                public static ER_NEED_TEST_ATTRIB: string
                                public static ER_NEED_NAME_ATTRIB: string
                                public static ER_NO_CONTEXT_OWNERDOC: string
                                public static ER_COULD_NOT_CREATE_XML_PROC_LIAISON: string
                                public static ER_PROCESS_NOT_SUCCESSFUL: string
                                public static ER_NOT_SUCCESSFUL: string
                                public static ER_ENCODING_NOT_SUPPORTED: string
                                public static ER_COULD_NOT_CREATE_TRACELISTENER: string
                                public static ER_KEY_REQUIRES_NAME_ATTRIB: string
                                public static ER_KEY_REQUIRES_MATCH_ATTRIB: string
                                public static ER_KEY_REQUIRES_USE_ATTRIB: string
                                public static ER_REQUIRES_ELEMENTS_ATTRIB: string
                                public static ER_MISSING_PREFIX_ATTRIB: string
                                public static ER_BAD_STYLESHEET_URL: string
                                public static ER_FILE_NOT_FOUND: string
                                public static ER_IOEXCEPTION: string
                                public static ER_NO_HREF_ATTRIB: string
                                public static ER_STYLESHEET_INCLUDES_ITSELF: string
                                public static ER_PROCESSINCLUDE_ERROR: string
                                public static ER_MISSING_LANG_ATTRIB: string
                                public static ER_MISSING_CONTAINER_ELEMENT_COMPONENT: string
                                public static ER_CAN_ONLY_OUTPUT_TO_ELEMENT: string
                                public static ER_PROCESS_ERROR: string
                                public static ER_UNIMPLNODE_ERROR: string
                                public static ER_NO_SELECT_EXPRESSION: string
                                public static ER_CANNOT_SERIALIZE_XSLPROCESSOR: string
                                public static ER_NO_INPUT_STYLESHEET: string
                                public static ER_FAILED_PROCESS_STYLESHEET: string
                                public static ER_COULDNT_PARSE_DOC: string
                                public static ER_COULDNT_FIND_FRAGMENT: string
                                public static ER_NODE_NOT_ELEMENT: string
                                public static ER_FOREACH_NEED_MATCH_OR_NAME_ATTRIB: string
                                public static ER_TEMPLATES_NEED_MATCH_OR_NAME_ATTRIB: string
                                public static ER_NO_CLONE_OF_DOCUMENT_FRAG: string
                                public static ER_CANT_CREATE_ITEM: string
                                public static ER_XMLSPACE_ILLEGAL_VALUE: string
                                public static ER_NO_XSLKEY_DECLARATION: string
                                public static ER_CANT_CREATE_URL: string
                                public static ER_XSLFUNCTIONS_UNSUPPORTED: string
                                public static ER_PROCESSOR_ERROR: string
                                public static ER_NOT_ALLOWED_INSIDE_STYLESHEET: string
                                public static ER_RESULTNS_NOT_SUPPORTED: string
                                public static ER_DEFAULTSPACE_NOT_SUPPORTED: string
                                public static ER_INDENTRESULT_NOT_SUPPORTED: string
                                public static ER_ILLEGAL_ATTRIB: string
                                public static ER_UNKNOWN_XSL_ELEM: string
                                public static ER_BAD_XSLSORT_USE: string
                                public static ER_MISPLACED_XSLWHEN: string
                                public static ER_XSLWHEN_NOT_PARENTED_BY_XSLCHOOSE: string
                                public static ER_MISPLACED_XSLOTHERWISE: string
                                public static ER_XSLOTHERWISE_NOT_PARENTED_BY_XSLCHOOSE: string
                                public static ER_NOT_ALLOWED_INSIDE_TEMPLATE: string
                                public static ER_UNKNOWN_EXT_NS_PREFIX: string
                                public static ER_IMPORTS_AS_FIRST_ELEM: string
                                public static ER_IMPORTING_ITSELF: string
                                public static ER_XMLSPACE_ILLEGAL_VAL: string
                                public static ER_PROCESSSTYLESHEET_NOT_SUCCESSFUL: string
                                public static ER_SAX_EXCEPTION: string
                                public static ER_XSLT_ERROR: string
                                public static ER_CURRENCY_SIGN_ILLEGAL: string
                                public static ER_DOCUMENT_FUNCTION_INVALID_IN_STYLESHEET_DOM: string
                                public static ER_CANT_RESOLVE_PREFIX_OF_NON_PREFIX_RESOLVER: string
                                public static ER_REDIRECT_COULDNT_GET_FILENAME: string
                                public static ER_CANNOT_BUILD_FORMATTERLISTENER_IN_REDIRECT: string
                                public static ER_INVALID_PREFIX_IN_EXCLUDERESULTPREFIX: string
                                public static ER_MISSING_NS_URI: string
                                public static ER_MISSING_ARG_FOR_OPTION: string
                                public static ER_INVALID_OPTION: string
                                public static ER_MALFORMED_FORMAT_STRING: string
                                public static ER_STYLESHEET_REQUIRES_VERSION_ATTRIB: string
                                public static ER_ILLEGAL_ATTRIBUTE_VALUE: string
                                public static ER_CHOOSE_REQUIRES_WHEN: string
                                public static ER_NO_APPLY_IMPORT_IN_FOR_EACH: string
                                public static ER_CANT_USE_DTM_FOR_OUTPUT: string
                                public static ER_CANT_USE_DTM_FOR_INPUT: string
                                public static ER_CALL_TO_EXT_FAILED: string
                                public static ER_PREFIX_MUST_RESOLVE: string
                                public static ER_INVALID_UTF16_SURROGATE: string
                                public static ER_XSLATTRSET_USED_ITSELF: string
                                public static ER_CANNOT_MIX_XERCESDOM: string
                                public static ER_TOO_MANY_LISTENERS: string
                                public static ER_IN_ELEMTEMPLATEELEM_READOBJECT: string
                                public static ER_DUPLICATE_NAMED_TEMPLATE: string
                                public static ER_INVALID_KEY_CALL: string
                                public static ER_REFERENCING_ITSELF: string
                                public static ER_ILLEGAL_DOMSOURCE_INPUT: string
                                public static ER_CLASS_NOT_FOUND_FOR_OPTION: string
                                public static ER_REQUIRED_ELEM_NOT_FOUND: string
                                public static ER_INPUT_CANNOT_BE_NULL: string
                                public static ER_URI_CANNOT_BE_NULL: string
                                public static ER_FILE_CANNOT_BE_NULL: string
                                public static ER_SOURCE_CANNOT_BE_NULL: string
                                public static ER_CANNOT_INIT_BSFMGR: string
                                public static ER_CANNOT_CMPL_EXTENSN: string
                                public static ER_CANNOT_CREATE_EXTENSN: string
                                public static ER_INSTANCE_MTHD_CALL_REQUIRES: string
                                public static ER_INVALID_ELEMENT_NAME: string
                                public static ER_ELEMENT_NAME_METHOD_STATIC: string
                                public static ER_EXTENSION_FUNC_UNKNOWN: string
                                public static ER_MORE_MATCH_CONSTRUCTOR: string
                                public static ER_MORE_MATCH_METHOD: string
                                public static ER_MORE_MATCH_ELEMENT: string
                                public static ER_INVALID_CONTEXT_PASSED: string
                                public static ER_POOL_EXISTS: string
                                public static ER_NO_DRIVER_NAME: string
                                public static ER_NO_URL: string
                                public static ER_POOL_SIZE_LESSTHAN_ONE: string
                                public static ER_INVALID_DRIVER: string
                                public static ER_NO_STYLESHEETROOT: string
                                public static ER_ILLEGAL_XMLSPACE_VALUE: string
                                public static ER_PROCESSFROMNODE_FAILED: string
                                public static ER_RESOURCE_COULD_NOT_LOAD: string
                                public static ER_BUFFER_SIZE_LESSTHAN_ZERO: string
                                public static ER_UNKNOWN_ERROR_CALLING_EXTENSION: string
                                public static ER_NO_NAMESPACE_DECL: string
                                public static ER_ELEM_CONTENT_NOT_ALLOWED: string
                                public static ER_STYLESHEET_DIRECTED_TERMINATION: string
                                public static ER_ONE_OR_TWO: string
                                public static ER_TWO_OR_THREE: string
                                public static ER_COULD_NOT_LOAD_RESOURCE: string
                                public static ER_CANNOT_INIT_DEFAULT_TEMPLATES: string
                                public static ER_RESULT_NULL: string
                                public static ER_RESULT_COULD_NOT_BE_SET: string
                                public static ER_NO_OUTPUT_SPECIFIED: string
                                public static ER_CANNOT_TRANSFORM_TO_RESULT_TYPE: string
                                public static ER_CANNOT_TRANSFORM_SOURCE_TYPE: string
                                public static ER_NULL_CONTENT_HANDLER: string
                                public static ER_NULL_ERROR_HANDLER: string
                                public static ER_CANNOT_CALL_PARSE: string
                                public static ER_NO_PARENT_FOR_FILTER: string
                                public static ER_NO_STYLESHEET_IN_MEDIA: string
                                public static ER_NO_STYLESHEET_PI: string
                                public static ER_NOT_SUPPORTED: string
                                public static ER_PROPERTY_VALUE_BOOLEAN: string
                                public static ER_COULD_NOT_FIND_EXTERN_SCRIPT: string
                                public static ER_RESOURCE_COULD_NOT_FIND: string
                                public static ER_OUTPUT_PROPERTY_NOT_RECOGNIZED: string
                                public static ER_FAILED_CREATING_ELEMLITRSLT: string
                                public static ER_VALUE_SHOULD_BE_NUMBER: string
                                public static ER_VALUE_SHOULD_EQUAL: string
                                public static ER_FAILED_CALLING_METHOD: string
                                public static ER_FAILED_CREATING_ELEMTMPL: string
                                public static ER_CHARS_NOT_ALLOWED: string
                                public static ER_ATTR_NOT_ALLOWED: string
                                public static ER_BAD_VALUE: string
                                public static ER_ATTRIB_VALUE_NOT_FOUND: string
                                public static ER_ATTRIB_VALUE_NOT_RECOGNIZED: string
                                public static ER_NULL_URI_NAMESPACE: string
                                public static ER_NUMBER_TOO_BIG: string
                                public static ER_CANNOT_FIND_SAX1_DRIVER: string
                                public static ER_SAX1_DRIVER_NOT_LOADED: string
                                public static ER_SAX1_DRIVER_NOT_INSTANTIATED: string
                                public static ER_SAX1_DRIVER_NOT_IMPLEMENT_PARSER: string
                                public static ER_PARSER_PROPERTY_NOT_SPECIFIED: string
                                public static ER_PARSER_ARG_CANNOT_BE_NULL: string
                                public static ER_FEATURE: string
                                public static ER_PROPERTY: string
                                public static ER_NULL_ENTITY_RESOLVER: string
                                public static ER_NULL_DTD_HANDLER: string
                                public static ER_NO_DRIVER_NAME_SPECIFIED: string
                                public static ER_NO_URL_SPECIFIED: string
                                public static ER_POOLSIZE_LESS_THAN_ONE: string
                                public static ER_INVALID_DRIVER_NAME: string
                                public static ER_ERRORLISTENER: string
                                public static ER_ASSERT_NO_TEMPLATE_PARENT: string
                                public static ER_ASSERT_REDUNDENT_EXPR_ELIMINATOR: string
                                public static ER_NOT_ALLOWED_IN_POSITION: string
                                public static ER_NONWHITESPACE_NOT_ALLOWED_IN_POSITION: string
                                public static ER_NAMESPACE_CONTEXT_NULL_NAMESPACE: string
                                public static ER_NAMESPACE_CONTEXT_NULL_PREFIX: string
                                public static ER_XPATH_RESOLVER_NULL_QNAME: string
                                public static ER_XPATH_RESOLVER_NEGATIVE_ARITY: string
                                public static INVALID_TCHAR: string
                                public static INVALID_QNAME: string
                                public static INVALID_ENUM: string
                                public static INVALID_NMTOKEN: string
                                public static INVALID_NCNAME: string
                                public static INVALID_BOOLEAN: string
                                public static INVALID_NUMBER: string
                                public static ER_ARG_LITERAL: string
                                public static ER_DUPLICATE_GLOBAL_VAR: string
                                public static ER_DUPLICATE_VAR: string
                                public static ER_TEMPLATE_NAME_MATCH: string
                                public static ER_INVALID_PREFIX: string
                                public static ER_NO_ATTRIB_SET: string
                                public static ER_FUNCTION_NOT_FOUND: string
                                public static ER_CANT_HAVE_CONTENT_AND_SELECT: string
                                public static ER_INVALID_SET_PARAM_VALUE: string
                                public static ER_SET_FEATURE_NULL_NAME: string
                                public static ER_GET_FEATURE_NULL_NAME: string
                                public static ER_UNSUPPORTED_FEATURE: string
                                public static ER_EXTENSION_ELEMENT_NOT_ALLOWED_IN_SECURE_PROCESSING: string
                                public static WG_FOUND_CURLYBRACE: string
                                public static WG_COUNT_ATTRIB_MATCHES_NO_ANCESTOR: string
                                public static WG_EXPR_ATTRIB_CHANGED_TO_SELECT: string
                                public static WG_NO_LOCALE_IN_FORMATNUMBER: string
                                public static WG_LOCALE_NOT_FOUND: string
                                public static WG_CANNOT_MAKE_URL_FROM: string
                                public static WG_CANNOT_LOAD_REQUESTED_DOC: string
                                public static WG_CANNOT_FIND_COLLATOR: string
                                public static WG_FUNCTIONS_SHOULD_USE_URL: string
                                public static WG_ENCODING_NOT_SUPPORTED_USING_UTF8: string
                                public static WG_ENCODING_NOT_SUPPORTED_USING_JAVA: string
                                public static WG_SPECIFICITY_CONFLICTS: string
                                public static WG_PARSING_AND_PREPARING: string
                                public static WG_ATTR_TEMPLATE: string
                                public static WG_CONFLICT_BETWEEN_XSLSTRIPSPACE_AND_XSLPRESERVESPACE: string
                                public static WG_ATTRIB_NOT_HANDLED: string
                                public static WG_NO_DECIMALFORMAT_DECLARATION: string
                                public static WG_OLD_XSLT_NS: string
                                public static WG_ONE_DEFAULT_XSLDECIMALFORMAT_ALLOWED: string
                                public static WG_XSLDECIMALFORMAT_NAMES_MUST_BE_UNIQUE: string
                                public static WG_ILLEGAL_ATTRIBUTE: string
                                public static WG_COULD_NOT_RESOLVE_PREFIX: string
                                public static WG_STYLESHEET_REQUIRES_VERSION_ATTRIB: string
                                public static WG_ILLEGAL_ATTRIBUTE_NAME: string
                                public static WG_ILLEGAL_ATTRIBUTE_VALUE: string
                                public static WG_EMPTY_SECOND_ARG: string
                                public static WG_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML: string
                                public static WG_PROCESSINGINSTRUCTION_NOTVALID_NCNAME: string
                                public static WG_ILLEGAL_ATTRIBUTE_POSITION: string
                                public static NO_MODIFICATION_ALLOWED_ERR: string
                                public static BAD_CODE: string
                                public static FORMAT_FAILED: string
                                public static ERROR_STRING: string
                                public static ERROR_HEADER: string
                                public static WARNING_HEADER: string
                                public static XSL_HEADER: string
                                public static XML_HEADER: string
                                public static QUERY_HEADER: string
                                public constructor()
                                public getContents(): java.lang.Object[][]
                                public static class: java.lang.Class<any>
                            }
                            class XSLTErrorResources_de extends java.util.ListResourceBundle {
                                public static ER_INVALID_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX: string
                                public static ER_INVALID_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX_FOR_DEFAULT: string
                                public static ER_NO_CURLYBRACE: string
                                public static ER_FUNCTION_NOT_SUPPORTED: string
                                public static ER_ILLEGAL_ATTRIBUTE: string
                                public static ER_NULL_SOURCENODE_APPLYIMPORTS: string
                                public static ER_CANNOT_ADD: string
                                public static ER_NULL_SOURCENODE_HANDLEAPPLYTEMPLATES: string
                                public static ER_NO_NAME_ATTRIB: string
                                public static ER_TEMPLATE_NOT_FOUND: string
                                public static ER_CANT_RESOLVE_NAME_AVT: string
                                public static ER_REQUIRES_ATTRIB: string
                                public static ER_MUST_HAVE_TEST_ATTRIB: string
                                public static ER_BAD_VAL_ON_LEVEL_ATTRIB: string
                                public static ER_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML: string
                                public static ER_PROCESSINGINSTRUCTION_NOTVALID_NCNAME: string
                                public static ER_NEED_MATCH_ATTRIB: string
                                public static ER_NEED_NAME_OR_MATCH_ATTRIB: string
                                public static ER_CANT_RESOLVE_NSPREFIX: string
                                public static ER_ILLEGAL_VALUE: string
                                public static ER_NO_OWNERDOC: string
                                public static ER_ELEMTEMPLATEELEM_ERR: string
                                public static ER_NULL_CHILD: string
                                public static ER_NEED_SELECT_ATTRIB: string
                                public static ER_NEED_TEST_ATTRIB: string
                                public static ER_NEED_NAME_ATTRIB: string
                                public static ER_NO_CONTEXT_OWNERDOC: string
                                public static ER_COULD_NOT_CREATE_XML_PROC_LIAISON: string
                                public static ER_PROCESS_NOT_SUCCESSFUL: string
                                public static ER_NOT_SUCCESSFUL: string
                                public static ER_ENCODING_NOT_SUPPORTED: string
                                public static ER_COULD_NOT_CREATE_TRACELISTENER: string
                                public static ER_KEY_REQUIRES_NAME_ATTRIB: string
                                public static ER_KEY_REQUIRES_MATCH_ATTRIB: string
                                public static ER_KEY_REQUIRES_USE_ATTRIB: string
                                public static ER_REQUIRES_ELEMENTS_ATTRIB: string
                                public static ER_MISSING_PREFIX_ATTRIB: string
                                public static ER_BAD_STYLESHEET_URL: string
                                public static ER_FILE_NOT_FOUND: string
                                public static ER_IOEXCEPTION: string
                                public static ER_NO_HREF_ATTRIB: string
                                public static ER_STYLESHEET_INCLUDES_ITSELF: string
                                public static ER_PROCESSINCLUDE_ERROR: string
                                public static ER_MISSING_LANG_ATTRIB: string
                                public static ER_MISSING_CONTAINER_ELEMENT_COMPONENT: string
                                public static ER_CAN_ONLY_OUTPUT_TO_ELEMENT: string
                                public static ER_PROCESS_ERROR: string
                                public static ER_UNIMPLNODE_ERROR: string
                                public static ER_NO_SELECT_EXPRESSION: string
                                public static ER_CANNOT_SERIALIZE_XSLPROCESSOR: string
                                public static ER_NO_INPUT_STYLESHEET: string
                                public static ER_FAILED_PROCESS_STYLESHEET: string
                                public static ER_COULDNT_PARSE_DOC: string
                                public static ER_COULDNT_FIND_FRAGMENT: string
                                public static ER_NODE_NOT_ELEMENT: string
                                public static ER_FOREACH_NEED_MATCH_OR_NAME_ATTRIB: string
                                public static ER_TEMPLATES_NEED_MATCH_OR_NAME_ATTRIB: string
                                public static ER_NO_CLONE_OF_DOCUMENT_FRAG: string
                                public static ER_CANT_CREATE_ITEM: string
                                public static ER_XMLSPACE_ILLEGAL_VALUE: string
                                public static ER_NO_XSLKEY_DECLARATION: string
                                public static ER_CANT_CREATE_URL: string
                                public static ER_XSLFUNCTIONS_UNSUPPORTED: string
                                public static ER_PROCESSOR_ERROR: string
                                public static ER_NOT_ALLOWED_INSIDE_STYLESHEET: string
                                public static ER_RESULTNS_NOT_SUPPORTED: string
                                public static ER_DEFAULTSPACE_NOT_SUPPORTED: string
                                public static ER_INDENTRESULT_NOT_SUPPORTED: string
                                public static ER_ILLEGAL_ATTRIB: string
                                public static ER_UNKNOWN_XSL_ELEM: string
                                public static ER_BAD_XSLSORT_USE: string
                                public static ER_MISPLACED_XSLWHEN: string
                                public static ER_XSLWHEN_NOT_PARENTED_BY_XSLCHOOSE: string
                                public static ER_MISPLACED_XSLOTHERWISE: string
                                public static ER_XSLOTHERWISE_NOT_PARENTED_BY_XSLCHOOSE: string
                                public static ER_NOT_ALLOWED_INSIDE_TEMPLATE: string
                                public static ER_UNKNOWN_EXT_NS_PREFIX: string
                                public static ER_IMPORTS_AS_FIRST_ELEM: string
                                public static ER_IMPORTING_ITSELF: string
                                public static ER_XMLSPACE_ILLEGAL_VAL: string
                                public static ER_PROCESSSTYLESHEET_NOT_SUCCESSFUL: string
                                public static ER_SAX_EXCEPTION: string
                                public static ER_XSLT_ERROR: string
                                public static ER_CURRENCY_SIGN_ILLEGAL: string
                                public static ER_DOCUMENT_FUNCTION_INVALID_IN_STYLESHEET_DOM: string
                                public static ER_CANT_RESOLVE_PREFIX_OF_NON_PREFIX_RESOLVER: string
                                public static ER_REDIRECT_COULDNT_GET_FILENAME: string
                                public static ER_CANNOT_BUILD_FORMATTERLISTENER_IN_REDIRECT: string
                                public static ER_INVALID_PREFIX_IN_EXCLUDERESULTPREFIX: string
                                public static ER_MISSING_NS_URI: string
                                public static ER_MISSING_ARG_FOR_OPTION: string
                                public static ER_INVALID_OPTION: string
                                public static ER_MALFORMED_FORMAT_STRING: string
                                public static ER_STYLESHEET_REQUIRES_VERSION_ATTRIB: string
                                public static ER_ILLEGAL_ATTRIBUTE_VALUE: string
                                public static ER_CHOOSE_REQUIRES_WHEN: string
                                public static ER_NO_APPLY_IMPORT_IN_FOR_EACH: string
                                public static ER_CANT_USE_DTM_FOR_OUTPUT: string
                                public static ER_CANT_USE_DTM_FOR_INPUT: string
                                public static ER_CALL_TO_EXT_FAILED: string
                                public static ER_PREFIX_MUST_RESOLVE: string
                                public static ER_INVALID_UTF16_SURROGATE: string
                                public static ER_XSLATTRSET_USED_ITSELF: string
                                public static ER_CANNOT_MIX_XERCESDOM: string
                                public static ER_TOO_MANY_LISTENERS: string
                                public static ER_IN_ELEMTEMPLATEELEM_READOBJECT: string
                                public static ER_DUPLICATE_NAMED_TEMPLATE: string
                                public static ER_INVALID_KEY_CALL: string
                                public static ER_REFERENCING_ITSELF: string
                                public static ER_ILLEGAL_DOMSOURCE_INPUT: string
                                public static ER_CLASS_NOT_FOUND_FOR_OPTION: string
                                public static ER_REQUIRED_ELEM_NOT_FOUND: string
                                public static ER_INPUT_CANNOT_BE_NULL: string
                                public static ER_URI_CANNOT_BE_NULL: string
                                public static ER_FILE_CANNOT_BE_NULL: string
                                public static ER_SOURCE_CANNOT_BE_NULL: string
                                public static ER_CANNOT_INIT_BSFMGR: string
                                public static ER_CANNOT_CMPL_EXTENSN: string
                                public static ER_CANNOT_CREATE_EXTENSN: string
                                public static ER_INSTANCE_MTHD_CALL_REQUIRES: string
                                public static ER_INVALID_ELEMENT_NAME: string
                                public static ER_ELEMENT_NAME_METHOD_STATIC: string
                                public static ER_EXTENSION_FUNC_UNKNOWN: string
                                public static ER_MORE_MATCH_CONSTRUCTOR: string
                                public static ER_MORE_MATCH_METHOD: string
                                public static ER_MORE_MATCH_ELEMENT: string
                                public static ER_INVALID_CONTEXT_PASSED: string
                                public static ER_POOL_EXISTS: string
                                public static ER_NO_DRIVER_NAME: string
                                public static ER_NO_URL: string
                                public static ER_POOL_SIZE_LESSTHAN_ONE: string
                                public static ER_INVALID_DRIVER: string
                                public static ER_NO_STYLESHEETROOT: string
                                public static ER_ILLEGAL_XMLSPACE_VALUE: string
                                public static ER_PROCESSFROMNODE_FAILED: string
                                public static ER_RESOURCE_COULD_NOT_LOAD: string
                                public static ER_BUFFER_SIZE_LESSTHAN_ZERO: string
                                public static ER_UNKNOWN_ERROR_CALLING_EXTENSION: string
                                public static ER_NO_NAMESPACE_DECL: string
                                public static ER_ELEM_CONTENT_NOT_ALLOWED: string
                                public static ER_STYLESHEET_DIRECTED_TERMINATION: string
                                public static ER_ONE_OR_TWO: string
                                public static ER_TWO_OR_THREE: string
                                public static ER_COULD_NOT_LOAD_RESOURCE: string
                                public static ER_CANNOT_INIT_DEFAULT_TEMPLATES: string
                                public static ER_RESULT_NULL: string
                                public static ER_RESULT_COULD_NOT_BE_SET: string
                                public static ER_NO_OUTPUT_SPECIFIED: string
                                public static ER_CANNOT_TRANSFORM_TO_RESULT_TYPE: string
                                public static ER_CANNOT_TRANSFORM_SOURCE_TYPE: string
                                public static ER_NULL_CONTENT_HANDLER: string
                                public static ER_NULL_ERROR_HANDLER: string
                                public static ER_CANNOT_CALL_PARSE: string
                                public static ER_NO_PARENT_FOR_FILTER: string
                                public static ER_NO_STYLESHEET_IN_MEDIA: string
                                public static ER_NO_STYLESHEET_PI: string
                                public static ER_NOT_SUPPORTED: string
                                public static ER_PROPERTY_VALUE_BOOLEAN: string
                                public static ER_COULD_NOT_FIND_EXTERN_SCRIPT: string
                                public static ER_RESOURCE_COULD_NOT_FIND: string
                                public static ER_OUTPUT_PROPERTY_NOT_RECOGNIZED: string
                                public static ER_FAILED_CREATING_ELEMLITRSLT: string
                                public static ER_VALUE_SHOULD_BE_NUMBER: string
                                public static ER_VALUE_SHOULD_EQUAL: string
                                public static ER_FAILED_CALLING_METHOD: string
                                public static ER_FAILED_CREATING_ELEMTMPL: string
                                public static ER_CHARS_NOT_ALLOWED: string
                                public static ER_ATTR_NOT_ALLOWED: string
                                public static ER_BAD_VALUE: string
                                public static ER_ATTRIB_VALUE_NOT_FOUND: string
                                public static ER_ATTRIB_VALUE_NOT_RECOGNIZED: string
                                public static ER_NULL_URI_NAMESPACE: string
                                public static ER_NUMBER_TOO_BIG: string
                                public static ER_CANNOT_FIND_SAX1_DRIVER: string
                                public static ER_SAX1_DRIVER_NOT_LOADED: string
                                public static ER_SAX1_DRIVER_NOT_INSTANTIATED: string
                                public static ER_SAX1_DRIVER_NOT_IMPLEMENT_PARSER: string
                                public static ER_PARSER_PROPERTY_NOT_SPECIFIED: string
                                public static ER_PARSER_ARG_CANNOT_BE_NULL: string
                                public static ER_FEATURE: string
                                public static ER_PROPERTY: string
                                public static ER_NULL_ENTITY_RESOLVER: string
                                public static ER_NULL_DTD_HANDLER: string
                                public static ER_NO_DRIVER_NAME_SPECIFIED: string
                                public static ER_NO_URL_SPECIFIED: string
                                public static ER_POOLSIZE_LESS_THAN_ONE: string
                                public static ER_INVALID_DRIVER_NAME: string
                                public static ER_ERRORLISTENER: string
                                public static ER_ASSERT_NO_TEMPLATE_PARENT: string
                                public static ER_ASSERT_REDUNDENT_EXPR_ELIMINATOR: string
                                public static ER_NOT_ALLOWED_IN_POSITION: string
                                public static ER_NONWHITESPACE_NOT_ALLOWED_IN_POSITION: string
                                public static ER_NAMESPACE_CONTEXT_NULL_NAMESPACE: string
                                public static ER_NAMESPACE_CONTEXT_NULL_PREFIX: string
                                public static ER_XPATH_RESOLVER_NULL_QNAME: string
                                public static ER_XPATH_RESOLVER_NEGATIVE_ARITY: string
                                public static INVALID_TCHAR: string
                                public static INVALID_QNAME: string
                                public static INVALID_ENUM: string
                                public static INVALID_NMTOKEN: string
                                public static INVALID_NCNAME: string
                                public static INVALID_BOOLEAN: string
                                public static INVALID_NUMBER: string
                                public static ER_ARG_LITERAL: string
                                public static ER_DUPLICATE_GLOBAL_VAR: string
                                public static ER_DUPLICATE_VAR: string
                                public static ER_TEMPLATE_NAME_MATCH: string
                                public static ER_INVALID_PREFIX: string
                                public static ER_NO_ATTRIB_SET: string
                                public static ER_FUNCTION_NOT_FOUND: string
                                public static ER_CANT_HAVE_CONTENT_AND_SELECT: string
                                public static ER_INVALID_SET_PARAM_VALUE: string
                                public static ER_SET_FEATURE_NULL_NAME: string
                                public static ER_GET_FEATURE_NULL_NAME: string
                                public static ER_UNSUPPORTED_FEATURE: string
                                public static ER_EXTENSION_ELEMENT_NOT_ALLOWED_IN_SECURE_PROCESSING: string
                                public static WG_FOUND_CURLYBRACE: string
                                public static WG_COUNT_ATTRIB_MATCHES_NO_ANCESTOR: string
                                public static WG_EXPR_ATTRIB_CHANGED_TO_SELECT: string
                                public static WG_NO_LOCALE_IN_FORMATNUMBER: string
                                public static WG_LOCALE_NOT_FOUND: string
                                public static WG_CANNOT_MAKE_URL_FROM: string
                                public static WG_CANNOT_LOAD_REQUESTED_DOC: string
                                public static WG_CANNOT_FIND_COLLATOR: string
                                public static WG_FUNCTIONS_SHOULD_USE_URL: string
                                public static WG_ENCODING_NOT_SUPPORTED_USING_UTF8: string
                                public static WG_ENCODING_NOT_SUPPORTED_USING_JAVA: string
                                public static WG_SPECIFICITY_CONFLICTS: string
                                public static WG_PARSING_AND_PREPARING: string
                                public static WG_ATTR_TEMPLATE: string
                                public static WG_CONFLICT_BETWEEN_XSLSTRIPSPACE_AND_XSLPRESERVESPACE: string
                                public static WG_ATTRIB_NOT_HANDLED: string
                                public static WG_NO_DECIMALFORMAT_DECLARATION: string
                                public static WG_OLD_XSLT_NS: string
                                public static WG_ONE_DEFAULT_XSLDECIMALFORMAT_ALLOWED: string
                                public static WG_XSLDECIMALFORMAT_NAMES_MUST_BE_UNIQUE: string
                                public static WG_ILLEGAL_ATTRIBUTE: string
                                public static WG_COULD_NOT_RESOLVE_PREFIX: string
                                public static WG_STYLESHEET_REQUIRES_VERSION_ATTRIB: string
                                public static WG_ILLEGAL_ATTRIBUTE_NAME: string
                                public static WG_ILLEGAL_ATTRIBUTE_VALUE: string
                                public static WG_EMPTY_SECOND_ARG: string
                                public static WG_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML: string
                                public static WG_PROCESSINGINSTRUCTION_NOTVALID_NCNAME: string
                                public static WG_ILLEGAL_ATTRIBUTE_POSITION: string
                                public static NO_MODIFICATION_ALLOWED_ERR: string
                                public static BAD_CODE: string
                                public static FORMAT_FAILED: string
                                public static ERROR_STRING: string
                                public static ERROR_HEADER: string
                                public static WARNING_HEADER: string
                                public static XSL_HEADER: string
                                public static XML_HEADER: string
                                public static QUERY_HEADER: string
                                public constructor()
                                public getContents(): java.lang.Object[][]
                                public static class: java.lang.Class<any>
                            }
                            class XSLTErrorResources_en extends com.sun.org.apache.xalan.internal.res.XSLTErrorResources {
                                public constructor()
                                public static class: java.lang.Class<any>
                            }
                            class XSLTErrorResources_es extends java.util.ListResourceBundle {
                                public static ER_INVALID_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX: string
                                public static ER_INVALID_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX_FOR_DEFAULT: string
                                public static ER_NO_CURLYBRACE: string
                                public static ER_FUNCTION_NOT_SUPPORTED: string
                                public static ER_ILLEGAL_ATTRIBUTE: string
                                public static ER_NULL_SOURCENODE_APPLYIMPORTS: string
                                public static ER_CANNOT_ADD: string
                                public static ER_NULL_SOURCENODE_HANDLEAPPLYTEMPLATES: string
                                public static ER_NO_NAME_ATTRIB: string
                                public static ER_TEMPLATE_NOT_FOUND: string
                                public static ER_CANT_RESOLVE_NAME_AVT: string
                                public static ER_REQUIRES_ATTRIB: string
                                public static ER_MUST_HAVE_TEST_ATTRIB: string
                                public static ER_BAD_VAL_ON_LEVEL_ATTRIB: string
                                public static ER_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML: string
                                public static ER_PROCESSINGINSTRUCTION_NOTVALID_NCNAME: string
                                public static ER_NEED_MATCH_ATTRIB: string
                                public static ER_NEED_NAME_OR_MATCH_ATTRIB: string
                                public static ER_CANT_RESOLVE_NSPREFIX: string
                                public static ER_ILLEGAL_VALUE: string
                                public static ER_NO_OWNERDOC: string
                                public static ER_ELEMTEMPLATEELEM_ERR: string
                                public static ER_NULL_CHILD: string
                                public static ER_NEED_SELECT_ATTRIB: string
                                public static ER_NEED_TEST_ATTRIB: string
                                public static ER_NEED_NAME_ATTRIB: string
                                public static ER_NO_CONTEXT_OWNERDOC: string
                                public static ER_COULD_NOT_CREATE_XML_PROC_LIAISON: string
                                public static ER_PROCESS_NOT_SUCCESSFUL: string
                                public static ER_NOT_SUCCESSFUL: string
                                public static ER_ENCODING_NOT_SUPPORTED: string
                                public static ER_COULD_NOT_CREATE_TRACELISTENER: string
                                public static ER_KEY_REQUIRES_NAME_ATTRIB: string
                                public static ER_KEY_REQUIRES_MATCH_ATTRIB: string
                                public static ER_KEY_REQUIRES_USE_ATTRIB: string
                                public static ER_REQUIRES_ELEMENTS_ATTRIB: string
                                public static ER_MISSING_PREFIX_ATTRIB: string
                                public static ER_BAD_STYLESHEET_URL: string
                                public static ER_FILE_NOT_FOUND: string
                                public static ER_IOEXCEPTION: string
                                public static ER_NO_HREF_ATTRIB: string
                                public static ER_STYLESHEET_INCLUDES_ITSELF: string
                                public static ER_PROCESSINCLUDE_ERROR: string
                                public static ER_MISSING_LANG_ATTRIB: string
                                public static ER_MISSING_CONTAINER_ELEMENT_COMPONENT: string
                                public static ER_CAN_ONLY_OUTPUT_TO_ELEMENT: string
                                public static ER_PROCESS_ERROR: string
                                public static ER_UNIMPLNODE_ERROR: string
                                public static ER_NO_SELECT_EXPRESSION: string
                                public static ER_CANNOT_SERIALIZE_XSLPROCESSOR: string
                                public static ER_NO_INPUT_STYLESHEET: string
                                public static ER_FAILED_PROCESS_STYLESHEET: string
                                public static ER_COULDNT_PARSE_DOC: string
                                public static ER_COULDNT_FIND_FRAGMENT: string
                                public static ER_NODE_NOT_ELEMENT: string
                                public static ER_FOREACH_NEED_MATCH_OR_NAME_ATTRIB: string
                                public static ER_TEMPLATES_NEED_MATCH_OR_NAME_ATTRIB: string
                                public static ER_NO_CLONE_OF_DOCUMENT_FRAG: string
                                public static ER_CANT_CREATE_ITEM: string
                                public static ER_XMLSPACE_ILLEGAL_VALUE: string
                                public static ER_NO_XSLKEY_DECLARATION: string
                                public static ER_CANT_CREATE_URL: string
                                public static ER_XSLFUNCTIONS_UNSUPPORTED: string
                                public static ER_PROCESSOR_ERROR: string
                                public static ER_NOT_ALLOWED_INSIDE_STYLESHEET: string
                                public static ER_RESULTNS_NOT_SUPPORTED: string
                                public static ER_DEFAULTSPACE_NOT_SUPPORTED: string
                                public static ER_INDENTRESULT_NOT_SUPPORTED: string
                                public static ER_ILLEGAL_ATTRIB: string
                                public static ER_UNKNOWN_XSL_ELEM: string
                                public static ER_BAD_XSLSORT_USE: string
                                public static ER_MISPLACED_XSLWHEN: string
                                public static ER_XSLWHEN_NOT_PARENTED_BY_XSLCHOOSE: string
                                public static ER_MISPLACED_XSLOTHERWISE: string
                                public static ER_XSLOTHERWISE_NOT_PARENTED_BY_XSLCHOOSE: string
                                public static ER_NOT_ALLOWED_INSIDE_TEMPLATE: string
                                public static ER_UNKNOWN_EXT_NS_PREFIX: string
                                public static ER_IMPORTS_AS_FIRST_ELEM: string
                                public static ER_IMPORTING_ITSELF: string
                                public static ER_XMLSPACE_ILLEGAL_VAL: string
                                public static ER_PROCESSSTYLESHEET_NOT_SUCCESSFUL: string
                                public static ER_SAX_EXCEPTION: string
                                public static ER_XSLT_ERROR: string
                                public static ER_CURRENCY_SIGN_ILLEGAL: string
                                public static ER_DOCUMENT_FUNCTION_INVALID_IN_STYLESHEET_DOM: string
                                public static ER_CANT_RESOLVE_PREFIX_OF_NON_PREFIX_RESOLVER: string
                                public static ER_REDIRECT_COULDNT_GET_FILENAME: string
                                public static ER_CANNOT_BUILD_FORMATTERLISTENER_IN_REDIRECT: string
                                public static ER_INVALID_PREFIX_IN_EXCLUDERESULTPREFIX: string
                                public static ER_MISSING_NS_URI: string
                                public static ER_MISSING_ARG_FOR_OPTION: string
                                public static ER_INVALID_OPTION: string
                                public static ER_MALFORMED_FORMAT_STRING: string
                                public static ER_STYLESHEET_REQUIRES_VERSION_ATTRIB: string
                                public static ER_ILLEGAL_ATTRIBUTE_VALUE: string
                                public static ER_CHOOSE_REQUIRES_WHEN: string
                                public static ER_NO_APPLY_IMPORT_IN_FOR_EACH: string
                                public static ER_CANT_USE_DTM_FOR_OUTPUT: string
                                public static ER_CANT_USE_DTM_FOR_INPUT: string
                                public static ER_CALL_TO_EXT_FAILED: string
                                public static ER_PREFIX_MUST_RESOLVE: string
                                public static ER_INVALID_UTF16_SURROGATE: string
                                public static ER_XSLATTRSET_USED_ITSELF: string
                                public static ER_CANNOT_MIX_XERCESDOM: string
                                public static ER_TOO_MANY_LISTENERS: string
                                public static ER_IN_ELEMTEMPLATEELEM_READOBJECT: string
                                public static ER_DUPLICATE_NAMED_TEMPLATE: string
                                public static ER_INVALID_KEY_CALL: string
                                public static ER_REFERENCING_ITSELF: string
                                public static ER_ILLEGAL_DOMSOURCE_INPUT: string
                                public static ER_CLASS_NOT_FOUND_FOR_OPTION: string
                                public static ER_REQUIRED_ELEM_NOT_FOUND: string
                                public static ER_INPUT_CANNOT_BE_NULL: string
                                public static ER_URI_CANNOT_BE_NULL: string
                                public static ER_FILE_CANNOT_BE_NULL: string
                                public static ER_SOURCE_CANNOT_BE_NULL: string
                                public static ER_CANNOT_INIT_BSFMGR: string
                                public static ER_CANNOT_CMPL_EXTENSN: string
                                public static ER_CANNOT_CREATE_EXTENSN: string
                                public static ER_INSTANCE_MTHD_CALL_REQUIRES: string
                                public static ER_INVALID_ELEMENT_NAME: string
                                public static ER_ELEMENT_NAME_METHOD_STATIC: string
                                public static ER_EXTENSION_FUNC_UNKNOWN: string
                                public static ER_MORE_MATCH_CONSTRUCTOR: string
                                public static ER_MORE_MATCH_METHOD: string
                                public static ER_MORE_MATCH_ELEMENT: string
                                public static ER_INVALID_CONTEXT_PASSED: string
                                public static ER_POOL_EXISTS: string
                                public static ER_NO_DRIVER_NAME: string
                                public static ER_NO_URL: string
                                public static ER_POOL_SIZE_LESSTHAN_ONE: string
                                public static ER_INVALID_DRIVER: string
                                public static ER_NO_STYLESHEETROOT: string
                                public static ER_ILLEGAL_XMLSPACE_VALUE: string
                                public static ER_PROCESSFROMNODE_FAILED: string
                                public static ER_RESOURCE_COULD_NOT_LOAD: string
                                public static ER_BUFFER_SIZE_LESSTHAN_ZERO: string
                                public static ER_UNKNOWN_ERROR_CALLING_EXTENSION: string
                                public static ER_NO_NAMESPACE_DECL: string
                                public static ER_ELEM_CONTENT_NOT_ALLOWED: string
                                public static ER_STYLESHEET_DIRECTED_TERMINATION: string
                                public static ER_ONE_OR_TWO: string
                                public static ER_TWO_OR_THREE: string
                                public static ER_COULD_NOT_LOAD_RESOURCE: string
                                public static ER_CANNOT_INIT_DEFAULT_TEMPLATES: string
                                public static ER_RESULT_NULL: string
                                public static ER_RESULT_COULD_NOT_BE_SET: string
                                public static ER_NO_OUTPUT_SPECIFIED: string
                                public static ER_CANNOT_TRANSFORM_TO_RESULT_TYPE: string
                                public static ER_CANNOT_TRANSFORM_SOURCE_TYPE: string
                                public static ER_NULL_CONTENT_HANDLER: string
                                public static ER_NULL_ERROR_HANDLER: string
                                public static ER_CANNOT_CALL_PARSE: string
                                public static ER_NO_PARENT_FOR_FILTER: string
                                public static ER_NO_STYLESHEET_IN_MEDIA: string
                                public static ER_NO_STYLESHEET_PI: string
                                public static ER_NOT_SUPPORTED: string
                                public static ER_PROPERTY_VALUE_BOOLEAN: string
                                public static ER_COULD_NOT_FIND_EXTERN_SCRIPT: string
                                public static ER_RESOURCE_COULD_NOT_FIND: string
                                public static ER_OUTPUT_PROPERTY_NOT_RECOGNIZED: string
                                public static ER_FAILED_CREATING_ELEMLITRSLT: string
                                public static ER_VALUE_SHOULD_BE_NUMBER: string
                                public static ER_VALUE_SHOULD_EQUAL: string
                                public static ER_FAILED_CALLING_METHOD: string
                                public static ER_FAILED_CREATING_ELEMTMPL: string
                                public static ER_CHARS_NOT_ALLOWED: string
                                public static ER_ATTR_NOT_ALLOWED: string
                                public static ER_BAD_VALUE: string
                                public static ER_ATTRIB_VALUE_NOT_FOUND: string
                                public static ER_ATTRIB_VALUE_NOT_RECOGNIZED: string
                                public static ER_NULL_URI_NAMESPACE: string
                                public static ER_NUMBER_TOO_BIG: string
                                public static ER_CANNOT_FIND_SAX1_DRIVER: string
                                public static ER_SAX1_DRIVER_NOT_LOADED: string
                                public static ER_SAX1_DRIVER_NOT_INSTANTIATED: string
                                public static ER_SAX1_DRIVER_NOT_IMPLEMENT_PARSER: string
                                public static ER_PARSER_PROPERTY_NOT_SPECIFIED: string
                                public static ER_PARSER_ARG_CANNOT_BE_NULL: string
                                public static ER_FEATURE: string
                                public static ER_PROPERTY: string
                                public static ER_NULL_ENTITY_RESOLVER: string
                                public static ER_NULL_DTD_HANDLER: string
                                public static ER_NO_DRIVER_NAME_SPECIFIED: string
                                public static ER_NO_URL_SPECIFIED: string
                                public static ER_POOLSIZE_LESS_THAN_ONE: string
                                public static ER_INVALID_DRIVER_NAME: string
                                public static ER_ERRORLISTENER: string
                                public static ER_ASSERT_NO_TEMPLATE_PARENT: string
                                public static ER_ASSERT_REDUNDENT_EXPR_ELIMINATOR: string
                                public static ER_NOT_ALLOWED_IN_POSITION: string
                                public static ER_NONWHITESPACE_NOT_ALLOWED_IN_POSITION: string
                                public static ER_NAMESPACE_CONTEXT_NULL_NAMESPACE: string
                                public static ER_NAMESPACE_CONTEXT_NULL_PREFIX: string
                                public static ER_XPATH_RESOLVER_NULL_QNAME: string
                                public static ER_XPATH_RESOLVER_NEGATIVE_ARITY: string
                                public static INVALID_TCHAR: string
                                public static INVALID_QNAME: string
                                public static INVALID_ENUM: string
                                public static INVALID_NMTOKEN: string
                                public static INVALID_NCNAME: string
                                public static INVALID_BOOLEAN: string
                                public static INVALID_NUMBER: string
                                public static ER_ARG_LITERAL: string
                                public static ER_DUPLICATE_GLOBAL_VAR: string
                                public static ER_DUPLICATE_VAR: string
                                public static ER_TEMPLATE_NAME_MATCH: string
                                public static ER_INVALID_PREFIX: string
                                public static ER_NO_ATTRIB_SET: string
                                public static ER_FUNCTION_NOT_FOUND: string
                                public static ER_CANT_HAVE_CONTENT_AND_SELECT: string
                                public static ER_INVALID_SET_PARAM_VALUE: string
                                public static ER_SET_FEATURE_NULL_NAME: string
                                public static ER_GET_FEATURE_NULL_NAME: string
                                public static ER_UNSUPPORTED_FEATURE: string
                                public static ER_EXTENSION_ELEMENT_NOT_ALLOWED_IN_SECURE_PROCESSING: string
                                public static WG_FOUND_CURLYBRACE: string
                                public static WG_COUNT_ATTRIB_MATCHES_NO_ANCESTOR: string
                                public static WG_EXPR_ATTRIB_CHANGED_TO_SELECT: string
                                public static WG_NO_LOCALE_IN_FORMATNUMBER: string
                                public static WG_LOCALE_NOT_FOUND: string
                                public static WG_CANNOT_MAKE_URL_FROM: string
                                public static WG_CANNOT_LOAD_REQUESTED_DOC: string
                                public static WG_CANNOT_FIND_COLLATOR: string
                                public static WG_FUNCTIONS_SHOULD_USE_URL: string
                                public static WG_ENCODING_NOT_SUPPORTED_USING_UTF8: string
                                public static WG_ENCODING_NOT_SUPPORTED_USING_JAVA: string
                                public static WG_SPECIFICITY_CONFLICTS: string
                                public static WG_PARSING_AND_PREPARING: string
                                public static WG_ATTR_TEMPLATE: string
                                public static WG_CONFLICT_BETWEEN_XSLSTRIPSPACE_AND_XSLPRESERVESPACE: string
                                public static WG_ATTRIB_NOT_HANDLED: string
                                public static WG_NO_DECIMALFORMAT_DECLARATION: string
                                public static WG_OLD_XSLT_NS: string
                                public static WG_ONE_DEFAULT_XSLDECIMALFORMAT_ALLOWED: string
                                public static WG_XSLDECIMALFORMAT_NAMES_MUST_BE_UNIQUE: string
                                public static WG_ILLEGAL_ATTRIBUTE: string
                                public static WG_COULD_NOT_RESOLVE_PREFIX: string
                                public static WG_STYLESHEET_REQUIRES_VERSION_ATTRIB: string
                                public static WG_ILLEGAL_ATTRIBUTE_NAME: string
                                public static WG_ILLEGAL_ATTRIBUTE_VALUE: string
                                public static WG_EMPTY_SECOND_ARG: string
                                public static WG_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML: string
                                public static WG_PROCESSINGINSTRUCTION_NOTVALID_NCNAME: string
                                public static WG_ILLEGAL_ATTRIBUTE_POSITION: string
                                public static NO_MODIFICATION_ALLOWED_ERR: string
                                public static BAD_CODE: string
                                public static FORMAT_FAILED: string
                                public static ERROR_STRING: string
                                public static ERROR_HEADER: string
                                public static WARNING_HEADER: string
                                public static XSL_HEADER: string
                                public static XML_HEADER: string
                                public static QUERY_HEADER: string
                                public constructor()
                                public getContents(): java.lang.Object[][]
                                public static class: java.lang.Class<any>
                            }
                            class XSLTErrorResources_fr extends java.util.ListResourceBundle {
                                public static ER_INVALID_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX: string
                                public static ER_INVALID_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX_FOR_DEFAULT: string
                                public static ER_NO_CURLYBRACE: string
                                public static ER_FUNCTION_NOT_SUPPORTED: string
                                public static ER_ILLEGAL_ATTRIBUTE: string
                                public static ER_NULL_SOURCENODE_APPLYIMPORTS: string
                                public static ER_CANNOT_ADD: string
                                public static ER_NULL_SOURCENODE_HANDLEAPPLYTEMPLATES: string
                                public static ER_NO_NAME_ATTRIB: string
                                public static ER_TEMPLATE_NOT_FOUND: string
                                public static ER_CANT_RESOLVE_NAME_AVT: string
                                public static ER_REQUIRES_ATTRIB: string
                                public static ER_MUST_HAVE_TEST_ATTRIB: string
                                public static ER_BAD_VAL_ON_LEVEL_ATTRIB: string
                                public static ER_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML: string
                                public static ER_PROCESSINGINSTRUCTION_NOTVALID_NCNAME: string
                                public static ER_NEED_MATCH_ATTRIB: string
                                public static ER_NEED_NAME_OR_MATCH_ATTRIB: string
                                public static ER_CANT_RESOLVE_NSPREFIX: string
                                public static ER_ILLEGAL_VALUE: string
                                public static ER_NO_OWNERDOC: string
                                public static ER_ELEMTEMPLATEELEM_ERR: string
                                public static ER_NULL_CHILD: string
                                public static ER_NEED_SELECT_ATTRIB: string
                                public static ER_NEED_TEST_ATTRIB: string
                                public static ER_NEED_NAME_ATTRIB: string
                                public static ER_NO_CONTEXT_OWNERDOC: string
                                public static ER_COULD_NOT_CREATE_XML_PROC_LIAISON: string
                                public static ER_PROCESS_NOT_SUCCESSFUL: string
                                public static ER_NOT_SUCCESSFUL: string
                                public static ER_ENCODING_NOT_SUPPORTED: string
                                public static ER_COULD_NOT_CREATE_TRACELISTENER: string
                                public static ER_KEY_REQUIRES_NAME_ATTRIB: string
                                public static ER_KEY_REQUIRES_MATCH_ATTRIB: string
                                public static ER_KEY_REQUIRES_USE_ATTRIB: string
                                public static ER_REQUIRES_ELEMENTS_ATTRIB: string
                                public static ER_MISSING_PREFIX_ATTRIB: string
                                public static ER_BAD_STYLESHEET_URL: string
                                public static ER_FILE_NOT_FOUND: string
                                public static ER_IOEXCEPTION: string
                                public static ER_NO_HREF_ATTRIB: string
                                public static ER_STYLESHEET_INCLUDES_ITSELF: string
                                public static ER_PROCESSINCLUDE_ERROR: string
                                public static ER_MISSING_LANG_ATTRIB: string
                                public static ER_MISSING_CONTAINER_ELEMENT_COMPONENT: string
                                public static ER_CAN_ONLY_OUTPUT_TO_ELEMENT: string
                                public static ER_PROCESS_ERROR: string
                                public static ER_UNIMPLNODE_ERROR: string
                                public static ER_NO_SELECT_EXPRESSION: string
                                public static ER_CANNOT_SERIALIZE_XSLPROCESSOR: string
                                public static ER_NO_INPUT_STYLESHEET: string
                                public static ER_FAILED_PROCESS_STYLESHEET: string
                                public static ER_COULDNT_PARSE_DOC: string
                                public static ER_COULDNT_FIND_FRAGMENT: string
                                public static ER_NODE_NOT_ELEMENT: string
                                public static ER_FOREACH_NEED_MATCH_OR_NAME_ATTRIB: string
                                public static ER_TEMPLATES_NEED_MATCH_OR_NAME_ATTRIB: string
                                public static ER_NO_CLONE_OF_DOCUMENT_FRAG: string
                                public static ER_CANT_CREATE_ITEM: string
                                public static ER_XMLSPACE_ILLEGAL_VALUE: string
                                public static ER_NO_XSLKEY_DECLARATION: string
                                public static ER_CANT_CREATE_URL: string
                                public static ER_XSLFUNCTIONS_UNSUPPORTED: string
                                public static ER_PROCESSOR_ERROR: string
                                public static ER_NOT_ALLOWED_INSIDE_STYLESHEET: string
                                public static ER_RESULTNS_NOT_SUPPORTED: string
                                public static ER_DEFAULTSPACE_NOT_SUPPORTED: string
                                public static ER_INDENTRESULT_NOT_SUPPORTED: string
                                public static ER_ILLEGAL_ATTRIB: string
                                public static ER_UNKNOWN_XSL_ELEM: string
                                public static ER_BAD_XSLSORT_USE: string
                                public static ER_MISPLACED_XSLWHEN: string
                                public static ER_XSLWHEN_NOT_PARENTED_BY_XSLCHOOSE: string
                                public static ER_MISPLACED_XSLOTHERWISE: string
                                public static ER_XSLOTHERWISE_NOT_PARENTED_BY_XSLCHOOSE: string
                                public static ER_NOT_ALLOWED_INSIDE_TEMPLATE: string
                                public static ER_UNKNOWN_EXT_NS_PREFIX: string
                                public static ER_IMPORTS_AS_FIRST_ELEM: string
                                public static ER_IMPORTING_ITSELF: string
                                public static ER_XMLSPACE_ILLEGAL_VAL: string
                                public static ER_PROCESSSTYLESHEET_NOT_SUCCESSFUL: string
                                public static ER_SAX_EXCEPTION: string
                                public static ER_XSLT_ERROR: string
                                public static ER_CURRENCY_SIGN_ILLEGAL: string
                                public static ER_DOCUMENT_FUNCTION_INVALID_IN_STYLESHEET_DOM: string
                                public static ER_CANT_RESOLVE_PREFIX_OF_NON_PREFIX_RESOLVER: string
                                public static ER_REDIRECT_COULDNT_GET_FILENAME: string
                                public static ER_CANNOT_BUILD_FORMATTERLISTENER_IN_REDIRECT: string
                                public static ER_INVALID_PREFIX_IN_EXCLUDERESULTPREFIX: string
                                public static ER_MISSING_NS_URI: string
                                public static ER_MISSING_ARG_FOR_OPTION: string
                                public static ER_INVALID_OPTION: string
                                public static ER_MALFORMED_FORMAT_STRING: string
                                public static ER_STYLESHEET_REQUIRES_VERSION_ATTRIB: string
                                public static ER_ILLEGAL_ATTRIBUTE_VALUE: string
                                public static ER_CHOOSE_REQUIRES_WHEN: string
                                public static ER_NO_APPLY_IMPORT_IN_FOR_EACH: string
                                public static ER_CANT_USE_DTM_FOR_OUTPUT: string
                                public static ER_CANT_USE_DTM_FOR_INPUT: string
                                public static ER_CALL_TO_EXT_FAILED: string
                                public static ER_PREFIX_MUST_RESOLVE: string
                                public static ER_INVALID_UTF16_SURROGATE: string
                                public static ER_XSLATTRSET_USED_ITSELF: string
                                public static ER_CANNOT_MIX_XERCESDOM: string
                                public static ER_TOO_MANY_LISTENERS: string
                                public static ER_IN_ELEMTEMPLATEELEM_READOBJECT: string
                                public static ER_DUPLICATE_NAMED_TEMPLATE: string
                                public static ER_INVALID_KEY_CALL: string
                                public static ER_REFERENCING_ITSELF: string
                                public static ER_ILLEGAL_DOMSOURCE_INPUT: string
                                public static ER_CLASS_NOT_FOUND_FOR_OPTION: string
                                public static ER_REQUIRED_ELEM_NOT_FOUND: string
                                public static ER_INPUT_CANNOT_BE_NULL: string
                                public static ER_URI_CANNOT_BE_NULL: string
                                public static ER_FILE_CANNOT_BE_NULL: string
                                public static ER_SOURCE_CANNOT_BE_NULL: string
                                public static ER_CANNOT_INIT_BSFMGR: string
                                public static ER_CANNOT_CMPL_EXTENSN: string
                                public static ER_CANNOT_CREATE_EXTENSN: string
                                public static ER_INSTANCE_MTHD_CALL_REQUIRES: string
                                public static ER_INVALID_ELEMENT_NAME: string
                                public static ER_ELEMENT_NAME_METHOD_STATIC: string
                                public static ER_EXTENSION_FUNC_UNKNOWN: string
                                public static ER_MORE_MATCH_CONSTRUCTOR: string
                                public static ER_MORE_MATCH_METHOD: string
                                public static ER_MORE_MATCH_ELEMENT: string
                                public static ER_INVALID_CONTEXT_PASSED: string
                                public static ER_POOL_EXISTS: string
                                public static ER_NO_DRIVER_NAME: string
                                public static ER_NO_URL: string
                                public static ER_POOL_SIZE_LESSTHAN_ONE: string
                                public static ER_INVALID_DRIVER: string
                                public static ER_NO_STYLESHEETROOT: string
                                public static ER_ILLEGAL_XMLSPACE_VALUE: string
                                public static ER_PROCESSFROMNODE_FAILED: string
                                public static ER_RESOURCE_COULD_NOT_LOAD: string
                                public static ER_BUFFER_SIZE_LESSTHAN_ZERO: string
                                public static ER_UNKNOWN_ERROR_CALLING_EXTENSION: string
                                public static ER_NO_NAMESPACE_DECL: string
                                public static ER_ELEM_CONTENT_NOT_ALLOWED: string
                                public static ER_STYLESHEET_DIRECTED_TERMINATION: string
                                public static ER_ONE_OR_TWO: string
                                public static ER_TWO_OR_THREE: string
                                public static ER_COULD_NOT_LOAD_RESOURCE: string
                                public static ER_CANNOT_INIT_DEFAULT_TEMPLATES: string
                                public static ER_RESULT_NULL: string
                                public static ER_RESULT_COULD_NOT_BE_SET: string
                                public static ER_NO_OUTPUT_SPECIFIED: string
                                public static ER_CANNOT_TRANSFORM_TO_RESULT_TYPE: string
                                public static ER_CANNOT_TRANSFORM_SOURCE_TYPE: string
                                public static ER_NULL_CONTENT_HANDLER: string
                                public static ER_NULL_ERROR_HANDLER: string
                                public static ER_CANNOT_CALL_PARSE: string
                                public static ER_NO_PARENT_FOR_FILTER: string
                                public static ER_NO_STYLESHEET_IN_MEDIA: string
                                public static ER_NO_STYLESHEET_PI: string
                                public static ER_NOT_SUPPORTED: string
                                public static ER_PROPERTY_VALUE_BOOLEAN: string
                                public static ER_COULD_NOT_FIND_EXTERN_SCRIPT: string
                                public static ER_RESOURCE_COULD_NOT_FIND: string
                                public static ER_OUTPUT_PROPERTY_NOT_RECOGNIZED: string
                                public static ER_FAILED_CREATING_ELEMLITRSLT: string
                                public static ER_VALUE_SHOULD_BE_NUMBER: string
                                public static ER_VALUE_SHOULD_EQUAL: string
                                public static ER_FAILED_CALLING_METHOD: string
                                public static ER_FAILED_CREATING_ELEMTMPL: string
                                public static ER_CHARS_NOT_ALLOWED: string
                                public static ER_ATTR_NOT_ALLOWED: string
                                public static ER_BAD_VALUE: string
                                public static ER_ATTRIB_VALUE_NOT_FOUND: string
                                public static ER_ATTRIB_VALUE_NOT_RECOGNIZED: string
                                public static ER_NULL_URI_NAMESPACE: string
                                public static ER_NUMBER_TOO_BIG: string
                                public static ER_CANNOT_FIND_SAX1_DRIVER: string
                                public static ER_SAX1_DRIVER_NOT_LOADED: string
                                public static ER_SAX1_DRIVER_NOT_INSTANTIATED: string
                                public static ER_SAX1_DRIVER_NOT_IMPLEMENT_PARSER: string
                                public static ER_PARSER_PROPERTY_NOT_SPECIFIED: string
                                public static ER_PARSER_ARG_CANNOT_BE_NULL: string
                                public static ER_FEATURE: string
                                public static ER_PROPERTY: string
                                public static ER_NULL_ENTITY_RESOLVER: string
                                public static ER_NULL_DTD_HANDLER: string
                                public static ER_NO_DRIVER_NAME_SPECIFIED: string
                                public static ER_NO_URL_SPECIFIED: string
                                public static ER_POOLSIZE_LESS_THAN_ONE: string
                                public static ER_INVALID_DRIVER_NAME: string
                                public static ER_ERRORLISTENER: string
                                public static ER_ASSERT_NO_TEMPLATE_PARENT: string
                                public static ER_ASSERT_REDUNDENT_EXPR_ELIMINATOR: string
                                public static ER_NOT_ALLOWED_IN_POSITION: string
                                public static ER_NONWHITESPACE_NOT_ALLOWED_IN_POSITION: string
                                public static ER_NAMESPACE_CONTEXT_NULL_NAMESPACE: string
                                public static ER_NAMESPACE_CONTEXT_NULL_PREFIX: string
                                public static ER_XPATH_RESOLVER_NULL_QNAME: string
                                public static ER_XPATH_RESOLVER_NEGATIVE_ARITY: string
                                public static INVALID_TCHAR: string
                                public static INVALID_QNAME: string
                                public static INVALID_ENUM: string
                                public static INVALID_NMTOKEN: string
                                public static INVALID_NCNAME: string
                                public static INVALID_BOOLEAN: string
                                public static INVALID_NUMBER: string
                                public static ER_ARG_LITERAL: string
                                public static ER_DUPLICATE_GLOBAL_VAR: string
                                public static ER_DUPLICATE_VAR: string
                                public static ER_TEMPLATE_NAME_MATCH: string
                                public static ER_INVALID_PREFIX: string
                                public static ER_NO_ATTRIB_SET: string
                                public static ER_FUNCTION_NOT_FOUND: string
                                public static ER_CANT_HAVE_CONTENT_AND_SELECT: string
                                public static ER_INVALID_SET_PARAM_VALUE: string
                                public static ER_SET_FEATURE_NULL_NAME: string
                                public static ER_GET_FEATURE_NULL_NAME: string
                                public static ER_UNSUPPORTED_FEATURE: string
                                public static ER_EXTENSION_ELEMENT_NOT_ALLOWED_IN_SECURE_PROCESSING: string
                                public static WG_FOUND_CURLYBRACE: string
                                public static WG_COUNT_ATTRIB_MATCHES_NO_ANCESTOR: string
                                public static WG_EXPR_ATTRIB_CHANGED_TO_SELECT: string
                                public static WG_NO_LOCALE_IN_FORMATNUMBER: string
                                public static WG_LOCALE_NOT_FOUND: string
                                public static WG_CANNOT_MAKE_URL_FROM: string
                                public static WG_CANNOT_LOAD_REQUESTED_DOC: string
                                public static WG_CANNOT_FIND_COLLATOR: string
                                public static WG_FUNCTIONS_SHOULD_USE_URL: string
                                public static WG_ENCODING_NOT_SUPPORTED_USING_UTF8: string
                                public static WG_ENCODING_NOT_SUPPORTED_USING_JAVA: string
                                public static WG_SPECIFICITY_CONFLICTS: string
                                public static WG_PARSING_AND_PREPARING: string
                                public static WG_ATTR_TEMPLATE: string
                                public static WG_CONFLICT_BETWEEN_XSLSTRIPSPACE_AND_XSLPRESERVESPACE: string
                                public static WG_ATTRIB_NOT_HANDLED: string
                                public static WG_NO_DECIMALFORMAT_DECLARATION: string
                                public static WG_OLD_XSLT_NS: string
                                public static WG_ONE_DEFAULT_XSLDECIMALFORMAT_ALLOWED: string
                                public static WG_XSLDECIMALFORMAT_NAMES_MUST_BE_UNIQUE: string
                                public static WG_ILLEGAL_ATTRIBUTE: string
                                public static WG_COULD_NOT_RESOLVE_PREFIX: string
                                public static WG_STYLESHEET_REQUIRES_VERSION_ATTRIB: string
                                public static WG_ILLEGAL_ATTRIBUTE_NAME: string
                                public static WG_ILLEGAL_ATTRIBUTE_VALUE: string
                                public static WG_EMPTY_SECOND_ARG: string
                                public static WG_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML: string
                                public static WG_PROCESSINGINSTRUCTION_NOTVALID_NCNAME: string
                                public static WG_ILLEGAL_ATTRIBUTE_POSITION: string
                                public static NO_MODIFICATION_ALLOWED_ERR: string
                                public static BAD_CODE: string
                                public static FORMAT_FAILED: string
                                public static ERROR_STRING: string
                                public static ERROR_HEADER: string
                                public static WARNING_HEADER: string
                                public static XSL_HEADER: string
                                public static XML_HEADER: string
                                public static QUERY_HEADER: string
                                public constructor()
                                public getContents(): java.lang.Object[][]
                                public static class: java.lang.Class<any>
                            }
                            class XSLTErrorResources_it extends java.util.ListResourceBundle {
                                public static ER_INVALID_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX: string
                                public static ER_INVALID_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX_FOR_DEFAULT: string
                                public static ER_NO_CURLYBRACE: string
                                public static ER_FUNCTION_NOT_SUPPORTED: string
                                public static ER_ILLEGAL_ATTRIBUTE: string
                                public static ER_NULL_SOURCENODE_APPLYIMPORTS: string
                                public static ER_CANNOT_ADD: string
                                public static ER_NULL_SOURCENODE_HANDLEAPPLYTEMPLATES: string
                                public static ER_NO_NAME_ATTRIB: string
                                public static ER_TEMPLATE_NOT_FOUND: string
                                public static ER_CANT_RESOLVE_NAME_AVT: string
                                public static ER_REQUIRES_ATTRIB: string
                                public static ER_MUST_HAVE_TEST_ATTRIB: string
                                public static ER_BAD_VAL_ON_LEVEL_ATTRIB: string
                                public static ER_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML: string
                                public static ER_PROCESSINGINSTRUCTION_NOTVALID_NCNAME: string
                                public static ER_NEED_MATCH_ATTRIB: string
                                public static ER_NEED_NAME_OR_MATCH_ATTRIB: string
                                public static ER_CANT_RESOLVE_NSPREFIX: string
                                public static ER_ILLEGAL_VALUE: string
                                public static ER_NO_OWNERDOC: string
                                public static ER_ELEMTEMPLATEELEM_ERR: string
                                public static ER_NULL_CHILD: string
                                public static ER_NEED_SELECT_ATTRIB: string
                                public static ER_NEED_TEST_ATTRIB: string
                                public static ER_NEED_NAME_ATTRIB: string
                                public static ER_NO_CONTEXT_OWNERDOC: string
                                public static ER_COULD_NOT_CREATE_XML_PROC_LIAISON: string
                                public static ER_PROCESS_NOT_SUCCESSFUL: string
                                public static ER_NOT_SUCCESSFUL: string
                                public static ER_ENCODING_NOT_SUPPORTED: string
                                public static ER_COULD_NOT_CREATE_TRACELISTENER: string
                                public static ER_KEY_REQUIRES_NAME_ATTRIB: string
                                public static ER_KEY_REQUIRES_MATCH_ATTRIB: string
                                public static ER_KEY_REQUIRES_USE_ATTRIB: string
                                public static ER_REQUIRES_ELEMENTS_ATTRIB: string
                                public static ER_MISSING_PREFIX_ATTRIB: string
                                public static ER_BAD_STYLESHEET_URL: string
                                public static ER_FILE_NOT_FOUND: string
                                public static ER_IOEXCEPTION: string
                                public static ER_NO_HREF_ATTRIB: string
                                public static ER_STYLESHEET_INCLUDES_ITSELF: string
                                public static ER_PROCESSINCLUDE_ERROR: string
                                public static ER_MISSING_LANG_ATTRIB: string
                                public static ER_MISSING_CONTAINER_ELEMENT_COMPONENT: string
                                public static ER_CAN_ONLY_OUTPUT_TO_ELEMENT: string
                                public static ER_PROCESS_ERROR: string
                                public static ER_UNIMPLNODE_ERROR: string
                                public static ER_NO_SELECT_EXPRESSION: string
                                public static ER_CANNOT_SERIALIZE_XSLPROCESSOR: string
                                public static ER_NO_INPUT_STYLESHEET: string
                                public static ER_FAILED_PROCESS_STYLESHEET: string
                                public static ER_COULDNT_PARSE_DOC: string
                                public static ER_COULDNT_FIND_FRAGMENT: string
                                public static ER_NODE_NOT_ELEMENT: string
                                public static ER_FOREACH_NEED_MATCH_OR_NAME_ATTRIB: string
                                public static ER_TEMPLATES_NEED_MATCH_OR_NAME_ATTRIB: string
                                public static ER_NO_CLONE_OF_DOCUMENT_FRAG: string
                                public static ER_CANT_CREATE_ITEM: string
                                public static ER_XMLSPACE_ILLEGAL_VALUE: string
                                public static ER_NO_XSLKEY_DECLARATION: string
                                public static ER_CANT_CREATE_URL: string
                                public static ER_XSLFUNCTIONS_UNSUPPORTED: string
                                public static ER_PROCESSOR_ERROR: string
                                public static ER_NOT_ALLOWED_INSIDE_STYLESHEET: string
                                public static ER_RESULTNS_NOT_SUPPORTED: string
                                public static ER_DEFAULTSPACE_NOT_SUPPORTED: string
                                public static ER_INDENTRESULT_NOT_SUPPORTED: string
                                public static ER_ILLEGAL_ATTRIB: string
                                public static ER_UNKNOWN_XSL_ELEM: string
                                public static ER_BAD_XSLSORT_USE: string
                                public static ER_MISPLACED_XSLWHEN: string
                                public static ER_XSLWHEN_NOT_PARENTED_BY_XSLCHOOSE: string
                                public static ER_MISPLACED_XSLOTHERWISE: string
                                public static ER_XSLOTHERWISE_NOT_PARENTED_BY_XSLCHOOSE: string
                                public static ER_NOT_ALLOWED_INSIDE_TEMPLATE: string
                                public static ER_UNKNOWN_EXT_NS_PREFIX: string
                                public static ER_IMPORTS_AS_FIRST_ELEM: string
                                public static ER_IMPORTING_ITSELF: string
                                public static ER_XMLSPACE_ILLEGAL_VAL: string
                                public static ER_PROCESSSTYLESHEET_NOT_SUCCESSFUL: string
                                public static ER_SAX_EXCEPTION: string
                                public static ER_XSLT_ERROR: string
                                public static ER_CURRENCY_SIGN_ILLEGAL: string
                                public static ER_DOCUMENT_FUNCTION_INVALID_IN_STYLESHEET_DOM: string
                                public static ER_CANT_RESOLVE_PREFIX_OF_NON_PREFIX_RESOLVER: string
                                public static ER_REDIRECT_COULDNT_GET_FILENAME: string
                                public static ER_CANNOT_BUILD_FORMATTERLISTENER_IN_REDIRECT: string
                                public static ER_INVALID_PREFIX_IN_EXCLUDERESULTPREFIX: string
                                public static ER_MISSING_NS_URI: string
                                public static ER_MISSING_ARG_FOR_OPTION: string
                                public static ER_INVALID_OPTION: string
                                public static ER_MALFORMED_FORMAT_STRING: string
                                public static ER_STYLESHEET_REQUIRES_VERSION_ATTRIB: string
                                public static ER_ILLEGAL_ATTRIBUTE_VALUE: string
                                public static ER_CHOOSE_REQUIRES_WHEN: string
                                public static ER_NO_APPLY_IMPORT_IN_FOR_EACH: string
                                public static ER_CANT_USE_DTM_FOR_OUTPUT: string
                                public static ER_CANT_USE_DTM_FOR_INPUT: string
                                public static ER_CALL_TO_EXT_FAILED: string
                                public static ER_PREFIX_MUST_RESOLVE: string
                                public static ER_INVALID_UTF16_SURROGATE: string
                                public static ER_XSLATTRSET_USED_ITSELF: string
                                public static ER_CANNOT_MIX_XERCESDOM: string
                                public static ER_TOO_MANY_LISTENERS: string
                                public static ER_IN_ELEMTEMPLATEELEM_READOBJECT: string
                                public static ER_DUPLICATE_NAMED_TEMPLATE: string
                                public static ER_INVALID_KEY_CALL: string
                                public static ER_REFERENCING_ITSELF: string
                                public static ER_ILLEGAL_DOMSOURCE_INPUT: string
                                public static ER_CLASS_NOT_FOUND_FOR_OPTION: string
                                public static ER_REQUIRED_ELEM_NOT_FOUND: string
                                public static ER_INPUT_CANNOT_BE_NULL: string
                                public static ER_URI_CANNOT_BE_NULL: string
                                public static ER_FILE_CANNOT_BE_NULL: string
                                public static ER_SOURCE_CANNOT_BE_NULL: string
                                public static ER_CANNOT_INIT_BSFMGR: string
                                public static ER_CANNOT_CMPL_EXTENSN: string
                                public static ER_CANNOT_CREATE_EXTENSN: string
                                public static ER_INSTANCE_MTHD_CALL_REQUIRES: string
                                public static ER_INVALID_ELEMENT_NAME: string
                                public static ER_ELEMENT_NAME_METHOD_STATIC: string
                                public static ER_EXTENSION_FUNC_UNKNOWN: string
                                public static ER_MORE_MATCH_CONSTRUCTOR: string
                                public static ER_MORE_MATCH_METHOD: string
                                public static ER_MORE_MATCH_ELEMENT: string
                                public static ER_INVALID_CONTEXT_PASSED: string
                                public static ER_POOL_EXISTS: string
                                public static ER_NO_DRIVER_NAME: string
                                public static ER_NO_URL: string
                                public static ER_POOL_SIZE_LESSTHAN_ONE: string
                                public static ER_INVALID_DRIVER: string
                                public static ER_NO_STYLESHEETROOT: string
                                public static ER_ILLEGAL_XMLSPACE_VALUE: string
                                public static ER_PROCESSFROMNODE_FAILED: string
                                public static ER_RESOURCE_COULD_NOT_LOAD: string
                                public static ER_BUFFER_SIZE_LESSTHAN_ZERO: string
                                public static ER_UNKNOWN_ERROR_CALLING_EXTENSION: string
                                public static ER_NO_NAMESPACE_DECL: string
                                public static ER_ELEM_CONTENT_NOT_ALLOWED: string
                                public static ER_STYLESHEET_DIRECTED_TERMINATION: string
                                public static ER_ONE_OR_TWO: string
                                public static ER_TWO_OR_THREE: string
                                public static ER_COULD_NOT_LOAD_RESOURCE: string
                                public static ER_CANNOT_INIT_DEFAULT_TEMPLATES: string
                                public static ER_RESULT_NULL: string
                                public static ER_RESULT_COULD_NOT_BE_SET: string
                                public static ER_NO_OUTPUT_SPECIFIED: string
                                public static ER_CANNOT_TRANSFORM_TO_RESULT_TYPE: string
                                public static ER_CANNOT_TRANSFORM_SOURCE_TYPE: string
                                public static ER_NULL_CONTENT_HANDLER: string
                                public static ER_NULL_ERROR_HANDLER: string
                                public static ER_CANNOT_CALL_PARSE: string
                                public static ER_NO_PARENT_FOR_FILTER: string
                                public static ER_NO_STYLESHEET_IN_MEDIA: string
                                public static ER_NO_STYLESHEET_PI: string
                                public static ER_NOT_SUPPORTED: string
                                public static ER_PROPERTY_VALUE_BOOLEAN: string
                                public static ER_COULD_NOT_FIND_EXTERN_SCRIPT: string
                                public static ER_RESOURCE_COULD_NOT_FIND: string
                                public static ER_OUTPUT_PROPERTY_NOT_RECOGNIZED: string
                                public static ER_FAILED_CREATING_ELEMLITRSLT: string
                                public static ER_VALUE_SHOULD_BE_NUMBER: string
                                public static ER_VALUE_SHOULD_EQUAL: string
                                public static ER_FAILED_CALLING_METHOD: string
                                public static ER_FAILED_CREATING_ELEMTMPL: string
                                public static ER_CHARS_NOT_ALLOWED: string
                                public static ER_ATTR_NOT_ALLOWED: string
                                public static ER_BAD_VALUE: string
                                public static ER_ATTRIB_VALUE_NOT_FOUND: string
                                public static ER_ATTRIB_VALUE_NOT_RECOGNIZED: string
                                public static ER_NULL_URI_NAMESPACE: string
                                public static ER_NUMBER_TOO_BIG: string
                                public static ER_CANNOT_FIND_SAX1_DRIVER: string
                                public static ER_SAX1_DRIVER_NOT_LOADED: string
                                public static ER_SAX1_DRIVER_NOT_INSTANTIATED: string
                                public static ER_SAX1_DRIVER_NOT_IMPLEMENT_PARSER: string
                                public static ER_PARSER_PROPERTY_NOT_SPECIFIED: string
                                public static ER_PARSER_ARG_CANNOT_BE_NULL: string
                                public static ER_FEATURE: string
                                public static ER_PROPERTY: string
                                public static ER_NULL_ENTITY_RESOLVER: string
                                public static ER_NULL_DTD_HANDLER: string
                                public static ER_NO_DRIVER_NAME_SPECIFIED: string
                                public static ER_NO_URL_SPECIFIED: string
                                public static ER_POOLSIZE_LESS_THAN_ONE: string
                                public static ER_INVALID_DRIVER_NAME: string
                                public static ER_ERRORLISTENER: string
                                public static ER_ASSERT_NO_TEMPLATE_PARENT: string
                                public static ER_ASSERT_REDUNDENT_EXPR_ELIMINATOR: string
                                public static ER_NOT_ALLOWED_IN_POSITION: string
                                public static ER_NONWHITESPACE_NOT_ALLOWED_IN_POSITION: string
                                public static ER_NAMESPACE_CONTEXT_NULL_NAMESPACE: string
                                public static ER_NAMESPACE_CONTEXT_NULL_PREFIX: string
                                public static ER_XPATH_RESOLVER_NULL_QNAME: string
                                public static ER_XPATH_RESOLVER_NEGATIVE_ARITY: string
                                public static INVALID_TCHAR: string
                                public static INVALID_QNAME: string
                                public static INVALID_ENUM: string
                                public static INVALID_NMTOKEN: string
                                public static INVALID_NCNAME: string
                                public static INVALID_BOOLEAN: string
                                public static INVALID_NUMBER: string
                                public static ER_ARG_LITERAL: string
                                public static ER_DUPLICATE_GLOBAL_VAR: string
                                public static ER_DUPLICATE_VAR: string
                                public static ER_TEMPLATE_NAME_MATCH: string
                                public static ER_INVALID_PREFIX: string
                                public static ER_NO_ATTRIB_SET: string
                                public static ER_FUNCTION_NOT_FOUND: string
                                public static ER_CANT_HAVE_CONTENT_AND_SELECT: string
                                public static ER_INVALID_SET_PARAM_VALUE: string
                                public static ER_SET_FEATURE_NULL_NAME: string
                                public static ER_GET_FEATURE_NULL_NAME: string
                                public static ER_UNSUPPORTED_FEATURE: string
                                public static ER_EXTENSION_ELEMENT_NOT_ALLOWED_IN_SECURE_PROCESSING: string
                                public static WG_FOUND_CURLYBRACE: string
                                public static WG_COUNT_ATTRIB_MATCHES_NO_ANCESTOR: string
                                public static WG_EXPR_ATTRIB_CHANGED_TO_SELECT: string
                                public static WG_NO_LOCALE_IN_FORMATNUMBER: string
                                public static WG_LOCALE_NOT_FOUND: string
                                public static WG_CANNOT_MAKE_URL_FROM: string
                                public static WG_CANNOT_LOAD_REQUESTED_DOC: string
                                public static WG_CANNOT_FIND_COLLATOR: string
                                public static WG_FUNCTIONS_SHOULD_USE_URL: string
                                public static WG_ENCODING_NOT_SUPPORTED_USING_UTF8: string
                                public static WG_ENCODING_NOT_SUPPORTED_USING_JAVA: string
                                public static WG_SPECIFICITY_CONFLICTS: string
                                public static WG_PARSING_AND_PREPARING: string
                                public static WG_ATTR_TEMPLATE: string
                                public static WG_CONFLICT_BETWEEN_XSLSTRIPSPACE_AND_XSLPRESERVESPACE: string
                                public static WG_ATTRIB_NOT_HANDLED: string
                                public static WG_NO_DECIMALFORMAT_DECLARATION: string
                                public static WG_OLD_XSLT_NS: string
                                public static WG_ONE_DEFAULT_XSLDECIMALFORMAT_ALLOWED: string
                                public static WG_XSLDECIMALFORMAT_NAMES_MUST_BE_UNIQUE: string
                                public static WG_ILLEGAL_ATTRIBUTE: string
                                public static WG_COULD_NOT_RESOLVE_PREFIX: string
                                public static WG_STYLESHEET_REQUIRES_VERSION_ATTRIB: string
                                public static WG_ILLEGAL_ATTRIBUTE_NAME: string
                                public static WG_ILLEGAL_ATTRIBUTE_VALUE: string
                                public static WG_EMPTY_SECOND_ARG: string
                                public static WG_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML: string
                                public static WG_PROCESSINGINSTRUCTION_NOTVALID_NCNAME: string
                                public static WG_ILLEGAL_ATTRIBUTE_POSITION: string
                                public static NO_MODIFICATION_ALLOWED_ERR: string
                                public static BAD_CODE: string
                                public static FORMAT_FAILED: string
                                public static ERROR_STRING: string
                                public static ERROR_HEADER: string
                                public static WARNING_HEADER: string
                                public static XSL_HEADER: string
                                public static XML_HEADER: string
                                public static QUERY_HEADER: string
                                public constructor()
                                public getContents(): java.lang.Object[][]
                                public static class: java.lang.Class<any>
                            }
                            class XSLTErrorResources_ja extends java.util.ListResourceBundle {
                                public static ER_INVALID_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX: string
                                public static ER_INVALID_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX_FOR_DEFAULT: string
                                public static ER_NO_CURLYBRACE: string
                                public static ER_FUNCTION_NOT_SUPPORTED: string
                                public static ER_ILLEGAL_ATTRIBUTE: string
                                public static ER_NULL_SOURCENODE_APPLYIMPORTS: string
                                public static ER_CANNOT_ADD: string
                                public static ER_NULL_SOURCENODE_HANDLEAPPLYTEMPLATES: string
                                public static ER_NO_NAME_ATTRIB: string
                                public static ER_TEMPLATE_NOT_FOUND: string
                                public static ER_CANT_RESOLVE_NAME_AVT: string
                                public static ER_REQUIRES_ATTRIB: string
                                public static ER_MUST_HAVE_TEST_ATTRIB: string
                                public static ER_BAD_VAL_ON_LEVEL_ATTRIB: string
                                public static ER_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML: string
                                public static ER_PROCESSINGINSTRUCTION_NOTVALID_NCNAME: string
                                public static ER_NEED_MATCH_ATTRIB: string
                                public static ER_NEED_NAME_OR_MATCH_ATTRIB: string
                                public static ER_CANT_RESOLVE_NSPREFIX: string
                                public static ER_ILLEGAL_VALUE: string
                                public static ER_NO_OWNERDOC: string
                                public static ER_ELEMTEMPLATEELEM_ERR: string
                                public static ER_NULL_CHILD: string
                                public static ER_NEED_SELECT_ATTRIB: string
                                public static ER_NEED_TEST_ATTRIB: string
                                public static ER_NEED_NAME_ATTRIB: string
                                public static ER_NO_CONTEXT_OWNERDOC: string
                                public static ER_COULD_NOT_CREATE_XML_PROC_LIAISON: string
                                public static ER_PROCESS_NOT_SUCCESSFUL: string
                                public static ER_NOT_SUCCESSFUL: string
                                public static ER_ENCODING_NOT_SUPPORTED: string
                                public static ER_COULD_NOT_CREATE_TRACELISTENER: string
                                public static ER_KEY_REQUIRES_NAME_ATTRIB: string
                                public static ER_KEY_REQUIRES_MATCH_ATTRIB: string
                                public static ER_KEY_REQUIRES_USE_ATTRIB: string
                                public static ER_REQUIRES_ELEMENTS_ATTRIB: string
                                public static ER_MISSING_PREFIX_ATTRIB: string
                                public static ER_BAD_STYLESHEET_URL: string
                                public static ER_FILE_NOT_FOUND: string
                                public static ER_IOEXCEPTION: string
                                public static ER_NO_HREF_ATTRIB: string
                                public static ER_STYLESHEET_INCLUDES_ITSELF: string
                                public static ER_PROCESSINCLUDE_ERROR: string
                                public static ER_MISSING_LANG_ATTRIB: string
                                public static ER_MISSING_CONTAINER_ELEMENT_COMPONENT: string
                                public static ER_CAN_ONLY_OUTPUT_TO_ELEMENT: string
                                public static ER_PROCESS_ERROR: string
                                public static ER_UNIMPLNODE_ERROR: string
                                public static ER_NO_SELECT_EXPRESSION: string
                                public static ER_CANNOT_SERIALIZE_XSLPROCESSOR: string
                                public static ER_NO_INPUT_STYLESHEET: string
                                public static ER_FAILED_PROCESS_STYLESHEET: string
                                public static ER_COULDNT_PARSE_DOC: string
                                public static ER_COULDNT_FIND_FRAGMENT: string
                                public static ER_NODE_NOT_ELEMENT: string
                                public static ER_FOREACH_NEED_MATCH_OR_NAME_ATTRIB: string
                                public static ER_TEMPLATES_NEED_MATCH_OR_NAME_ATTRIB: string
                                public static ER_NO_CLONE_OF_DOCUMENT_FRAG: string
                                public static ER_CANT_CREATE_ITEM: string
                                public static ER_XMLSPACE_ILLEGAL_VALUE: string
                                public static ER_NO_XSLKEY_DECLARATION: string
                                public static ER_CANT_CREATE_URL: string
                                public static ER_XSLFUNCTIONS_UNSUPPORTED: string
                                public static ER_PROCESSOR_ERROR: string
                                public static ER_NOT_ALLOWED_INSIDE_STYLESHEET: string
                                public static ER_RESULTNS_NOT_SUPPORTED: string
                                public static ER_DEFAULTSPACE_NOT_SUPPORTED: string
                                public static ER_INDENTRESULT_NOT_SUPPORTED: string
                                public static ER_ILLEGAL_ATTRIB: string
                                public static ER_UNKNOWN_XSL_ELEM: string
                                public static ER_BAD_XSLSORT_USE: string
                                public static ER_MISPLACED_XSLWHEN: string
                                public static ER_XSLWHEN_NOT_PARENTED_BY_XSLCHOOSE: string
                                public static ER_MISPLACED_XSLOTHERWISE: string
                                public static ER_XSLOTHERWISE_NOT_PARENTED_BY_XSLCHOOSE: string
                                public static ER_NOT_ALLOWED_INSIDE_TEMPLATE: string
                                public static ER_UNKNOWN_EXT_NS_PREFIX: string
                                public static ER_IMPORTS_AS_FIRST_ELEM: string
                                public static ER_IMPORTING_ITSELF: string
                                public static ER_XMLSPACE_ILLEGAL_VAL: string
                                public static ER_PROCESSSTYLESHEET_NOT_SUCCESSFUL: string
                                public static ER_SAX_EXCEPTION: string
                                public static ER_XSLT_ERROR: string
                                public static ER_CURRENCY_SIGN_ILLEGAL: string
                                public static ER_DOCUMENT_FUNCTION_INVALID_IN_STYLESHEET_DOM: string
                                public static ER_CANT_RESOLVE_PREFIX_OF_NON_PREFIX_RESOLVER: string
                                public static ER_REDIRECT_COULDNT_GET_FILENAME: string
                                public static ER_CANNOT_BUILD_FORMATTERLISTENER_IN_REDIRECT: string
                                public static ER_INVALID_PREFIX_IN_EXCLUDERESULTPREFIX: string
                                public static ER_MISSING_NS_URI: string
                                public static ER_MISSING_ARG_FOR_OPTION: string
                                public static ER_INVALID_OPTION: string
                                public static ER_MALFORMED_FORMAT_STRING: string
                                public static ER_STYLESHEET_REQUIRES_VERSION_ATTRIB: string
                                public static ER_ILLEGAL_ATTRIBUTE_VALUE: string
                                public static ER_CHOOSE_REQUIRES_WHEN: string
                                public static ER_NO_APPLY_IMPORT_IN_FOR_EACH: string
                                public static ER_CANT_USE_DTM_FOR_OUTPUT: string
                                public static ER_CANT_USE_DTM_FOR_INPUT: string
                                public static ER_CALL_TO_EXT_FAILED: string
                                public static ER_PREFIX_MUST_RESOLVE: string
                                public static ER_INVALID_UTF16_SURROGATE: string
                                public static ER_XSLATTRSET_USED_ITSELF: string
                                public static ER_CANNOT_MIX_XERCESDOM: string
                                public static ER_TOO_MANY_LISTENERS: string
                                public static ER_IN_ELEMTEMPLATEELEM_READOBJECT: string
                                public static ER_DUPLICATE_NAMED_TEMPLATE: string
                                public static ER_INVALID_KEY_CALL: string
                                public static ER_REFERENCING_ITSELF: string
                                public static ER_ILLEGAL_DOMSOURCE_INPUT: string
                                public static ER_CLASS_NOT_FOUND_FOR_OPTION: string
                                public static ER_REQUIRED_ELEM_NOT_FOUND: string
                                public static ER_INPUT_CANNOT_BE_NULL: string
                                public static ER_URI_CANNOT_BE_NULL: string
                                public static ER_FILE_CANNOT_BE_NULL: string
                                public static ER_SOURCE_CANNOT_BE_NULL: string
                                public static ER_CANNOT_INIT_BSFMGR: string
                                public static ER_CANNOT_CMPL_EXTENSN: string
                                public static ER_CANNOT_CREATE_EXTENSN: string
                                public static ER_INSTANCE_MTHD_CALL_REQUIRES: string
                                public static ER_INVALID_ELEMENT_NAME: string
                                public static ER_ELEMENT_NAME_METHOD_STATIC: string
                                public static ER_EXTENSION_FUNC_UNKNOWN: string
                                public static ER_MORE_MATCH_CONSTRUCTOR: string
                                public static ER_MORE_MATCH_METHOD: string
                                public static ER_MORE_MATCH_ELEMENT: string
                                public static ER_INVALID_CONTEXT_PASSED: string
                                public static ER_POOL_EXISTS: string
                                public static ER_NO_DRIVER_NAME: string
                                public static ER_NO_URL: string
                                public static ER_POOL_SIZE_LESSTHAN_ONE: string
                                public static ER_INVALID_DRIVER: string
                                public static ER_NO_STYLESHEETROOT: string
                                public static ER_ILLEGAL_XMLSPACE_VALUE: string
                                public static ER_PROCESSFROMNODE_FAILED: string
                                public static ER_RESOURCE_COULD_NOT_LOAD: string
                                public static ER_BUFFER_SIZE_LESSTHAN_ZERO: string
                                public static ER_UNKNOWN_ERROR_CALLING_EXTENSION: string
                                public static ER_NO_NAMESPACE_DECL: string
                                public static ER_ELEM_CONTENT_NOT_ALLOWED: string
                                public static ER_STYLESHEET_DIRECTED_TERMINATION: string
                                public static ER_ONE_OR_TWO: string
                                public static ER_TWO_OR_THREE: string
                                public static ER_COULD_NOT_LOAD_RESOURCE: string
                                public static ER_CANNOT_INIT_DEFAULT_TEMPLATES: string
                                public static ER_RESULT_NULL: string
                                public static ER_RESULT_COULD_NOT_BE_SET: string
                                public static ER_NO_OUTPUT_SPECIFIED: string
                                public static ER_CANNOT_TRANSFORM_TO_RESULT_TYPE: string
                                public static ER_CANNOT_TRANSFORM_SOURCE_TYPE: string
                                public static ER_NULL_CONTENT_HANDLER: string
                                public static ER_NULL_ERROR_HANDLER: string
                                public static ER_CANNOT_CALL_PARSE: string
                                public static ER_NO_PARENT_FOR_FILTER: string
                                public static ER_NO_STYLESHEET_IN_MEDIA: string
                                public static ER_NO_STYLESHEET_PI: string
                                public static ER_NOT_SUPPORTED: string
                                public static ER_PROPERTY_VALUE_BOOLEAN: string
                                public static ER_COULD_NOT_FIND_EXTERN_SCRIPT: string
                                public static ER_RESOURCE_COULD_NOT_FIND: string
                                public static ER_OUTPUT_PROPERTY_NOT_RECOGNIZED: string
                                public static ER_FAILED_CREATING_ELEMLITRSLT: string
                                public static ER_VALUE_SHOULD_BE_NUMBER: string
                                public static ER_VALUE_SHOULD_EQUAL: string
                                public static ER_FAILED_CALLING_METHOD: string
                                public static ER_FAILED_CREATING_ELEMTMPL: string
                                public static ER_CHARS_NOT_ALLOWED: string
                                public static ER_ATTR_NOT_ALLOWED: string
                                public static ER_BAD_VALUE: string
                                public static ER_ATTRIB_VALUE_NOT_FOUND: string
                                public static ER_ATTRIB_VALUE_NOT_RECOGNIZED: string
                                public static ER_NULL_URI_NAMESPACE: string
                                public static ER_NUMBER_TOO_BIG: string
                                public static ER_CANNOT_FIND_SAX1_DRIVER: string
                                public static ER_SAX1_DRIVER_NOT_LOADED: string
                                public static ER_SAX1_DRIVER_NOT_INSTANTIATED: string
                                public static ER_SAX1_DRIVER_NOT_IMPLEMENT_PARSER: string
                                public static ER_PARSER_PROPERTY_NOT_SPECIFIED: string
                                public static ER_PARSER_ARG_CANNOT_BE_NULL: string
                                public static ER_FEATURE: string
                                public static ER_PROPERTY: string
                                public static ER_NULL_ENTITY_RESOLVER: string
                                public static ER_NULL_DTD_HANDLER: string
                                public static ER_NO_DRIVER_NAME_SPECIFIED: string
                                public static ER_NO_URL_SPECIFIED: string
                                public static ER_POOLSIZE_LESS_THAN_ONE: string
                                public static ER_INVALID_DRIVER_NAME: string
                                public static ER_ERRORLISTENER: string
                                public static ER_ASSERT_NO_TEMPLATE_PARENT: string
                                public static ER_ASSERT_REDUNDENT_EXPR_ELIMINATOR: string
                                public static ER_NOT_ALLOWED_IN_POSITION: string
                                public static ER_NONWHITESPACE_NOT_ALLOWED_IN_POSITION: string
                                public static ER_NAMESPACE_CONTEXT_NULL_NAMESPACE: string
                                public static ER_NAMESPACE_CONTEXT_NULL_PREFIX: string
                                public static ER_XPATH_RESOLVER_NULL_QNAME: string
                                public static ER_XPATH_RESOLVER_NEGATIVE_ARITY: string
                                public static INVALID_TCHAR: string
                                public static INVALID_QNAME: string
                                public static INVALID_ENUM: string
                                public static INVALID_NMTOKEN: string
                                public static INVALID_NCNAME: string
                                public static INVALID_BOOLEAN: string
                                public static INVALID_NUMBER: string
                                public static ER_ARG_LITERAL: string
                                public static ER_DUPLICATE_GLOBAL_VAR: string
                                public static ER_DUPLICATE_VAR: string
                                public static ER_TEMPLATE_NAME_MATCH: string
                                public static ER_INVALID_PREFIX: string
                                public static ER_NO_ATTRIB_SET: string
                                public static ER_FUNCTION_NOT_FOUND: string
                                public static ER_CANT_HAVE_CONTENT_AND_SELECT: string
                                public static ER_INVALID_SET_PARAM_VALUE: string
                                public static ER_SET_FEATURE_NULL_NAME: string
                                public static ER_GET_FEATURE_NULL_NAME: string
                                public static ER_UNSUPPORTED_FEATURE: string
                                public static ER_EXTENSION_ELEMENT_NOT_ALLOWED_IN_SECURE_PROCESSING: string
                                public static WG_FOUND_CURLYBRACE: string
                                public static WG_COUNT_ATTRIB_MATCHES_NO_ANCESTOR: string
                                public static WG_EXPR_ATTRIB_CHANGED_TO_SELECT: string
                                public static WG_NO_LOCALE_IN_FORMATNUMBER: string
                                public static WG_LOCALE_NOT_FOUND: string
                                public static WG_CANNOT_MAKE_URL_FROM: string
                                public static WG_CANNOT_LOAD_REQUESTED_DOC: string
                                public static WG_CANNOT_FIND_COLLATOR: string
                                public static WG_FUNCTIONS_SHOULD_USE_URL: string
                                public static WG_ENCODING_NOT_SUPPORTED_USING_UTF8: string
                                public static WG_ENCODING_NOT_SUPPORTED_USING_JAVA: string
                                public static WG_SPECIFICITY_CONFLICTS: string
                                public static WG_PARSING_AND_PREPARING: string
                                public static WG_ATTR_TEMPLATE: string
                                public static WG_CONFLICT_BETWEEN_XSLSTRIPSPACE_AND_XSLPRESERVESPACE: string
                                public static WG_ATTRIB_NOT_HANDLED: string
                                public static WG_NO_DECIMALFORMAT_DECLARATION: string
                                public static WG_OLD_XSLT_NS: string
                                public static WG_ONE_DEFAULT_XSLDECIMALFORMAT_ALLOWED: string
                                public static WG_XSLDECIMALFORMAT_NAMES_MUST_BE_UNIQUE: string
                                public static WG_ILLEGAL_ATTRIBUTE: string
                                public static WG_COULD_NOT_RESOLVE_PREFIX: string
                                public static WG_STYLESHEET_REQUIRES_VERSION_ATTRIB: string
                                public static WG_ILLEGAL_ATTRIBUTE_NAME: string
                                public static WG_ILLEGAL_ATTRIBUTE_VALUE: string
                                public static WG_EMPTY_SECOND_ARG: string
                                public static WG_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML: string
                                public static WG_PROCESSINGINSTRUCTION_NOTVALID_NCNAME: string
                                public static WG_ILLEGAL_ATTRIBUTE_POSITION: string
                                public static NO_MODIFICATION_ALLOWED_ERR: string
                                public static BAD_CODE: string
                                public static FORMAT_FAILED: string
                                public static ERROR_STRING: string
                                public static ERROR_HEADER: string
                                public static WARNING_HEADER: string
                                public static XSL_HEADER: string
                                public static XML_HEADER: string
                                public static QUERY_HEADER: string
                                public constructor()
                                public getContents(): java.lang.Object[][]
                                public static class: java.lang.Class<any>
                            }
                            class XSLTErrorResources_ko extends java.util.ListResourceBundle {
                                public static ER_INVALID_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX: string
                                public static ER_INVALID_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX_FOR_DEFAULT: string
                                public static ER_NO_CURLYBRACE: string
                                public static ER_FUNCTION_NOT_SUPPORTED: string
                                public static ER_ILLEGAL_ATTRIBUTE: string
                                public static ER_NULL_SOURCENODE_APPLYIMPORTS: string
                                public static ER_CANNOT_ADD: string
                                public static ER_NULL_SOURCENODE_HANDLEAPPLYTEMPLATES: string
                                public static ER_NO_NAME_ATTRIB: string
                                public static ER_TEMPLATE_NOT_FOUND: string
                                public static ER_CANT_RESOLVE_NAME_AVT: string
                                public static ER_REQUIRES_ATTRIB: string
                                public static ER_MUST_HAVE_TEST_ATTRIB: string
                                public static ER_BAD_VAL_ON_LEVEL_ATTRIB: string
                                public static ER_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML: string
                                public static ER_PROCESSINGINSTRUCTION_NOTVALID_NCNAME: string
                                public static ER_NEED_MATCH_ATTRIB: string
                                public static ER_NEED_NAME_OR_MATCH_ATTRIB: string
                                public static ER_CANT_RESOLVE_NSPREFIX: string
                                public static ER_ILLEGAL_VALUE: string
                                public static ER_NO_OWNERDOC: string
                                public static ER_ELEMTEMPLATEELEM_ERR: string
                                public static ER_NULL_CHILD: string
                                public static ER_NEED_SELECT_ATTRIB: string
                                public static ER_NEED_TEST_ATTRIB: string
                                public static ER_NEED_NAME_ATTRIB: string
                                public static ER_NO_CONTEXT_OWNERDOC: string
                                public static ER_COULD_NOT_CREATE_XML_PROC_LIAISON: string
                                public static ER_PROCESS_NOT_SUCCESSFUL: string
                                public static ER_NOT_SUCCESSFUL: string
                                public static ER_ENCODING_NOT_SUPPORTED: string
                                public static ER_COULD_NOT_CREATE_TRACELISTENER: string
                                public static ER_KEY_REQUIRES_NAME_ATTRIB: string
                                public static ER_KEY_REQUIRES_MATCH_ATTRIB: string
                                public static ER_KEY_REQUIRES_USE_ATTRIB: string
                                public static ER_REQUIRES_ELEMENTS_ATTRIB: string
                                public static ER_MISSING_PREFIX_ATTRIB: string
                                public static ER_BAD_STYLESHEET_URL: string
                                public static ER_FILE_NOT_FOUND: string
                                public static ER_IOEXCEPTION: string
                                public static ER_NO_HREF_ATTRIB: string
                                public static ER_STYLESHEET_INCLUDES_ITSELF: string
                                public static ER_PROCESSINCLUDE_ERROR: string
                                public static ER_MISSING_LANG_ATTRIB: string
                                public static ER_MISSING_CONTAINER_ELEMENT_COMPONENT: string
                                public static ER_CAN_ONLY_OUTPUT_TO_ELEMENT: string
                                public static ER_PROCESS_ERROR: string
                                public static ER_UNIMPLNODE_ERROR: string
                                public static ER_NO_SELECT_EXPRESSION: string
                                public static ER_CANNOT_SERIALIZE_XSLPROCESSOR: string
                                public static ER_NO_INPUT_STYLESHEET: string
                                public static ER_FAILED_PROCESS_STYLESHEET: string
                                public static ER_COULDNT_PARSE_DOC: string
                                public static ER_COULDNT_FIND_FRAGMENT: string
                                public static ER_NODE_NOT_ELEMENT: string
                                public static ER_FOREACH_NEED_MATCH_OR_NAME_ATTRIB: string
                                public static ER_TEMPLATES_NEED_MATCH_OR_NAME_ATTRIB: string
                                public static ER_NO_CLONE_OF_DOCUMENT_FRAG: string
                                public static ER_CANT_CREATE_ITEM: string
                                public static ER_XMLSPACE_ILLEGAL_VALUE: string
                                public static ER_NO_XSLKEY_DECLARATION: string
                                public static ER_CANT_CREATE_URL: string
                                public static ER_XSLFUNCTIONS_UNSUPPORTED: string
                                public static ER_PROCESSOR_ERROR: string
                                public static ER_NOT_ALLOWED_INSIDE_STYLESHEET: string
                                public static ER_RESULTNS_NOT_SUPPORTED: string
                                public static ER_DEFAULTSPACE_NOT_SUPPORTED: string
                                public static ER_INDENTRESULT_NOT_SUPPORTED: string
                                public static ER_ILLEGAL_ATTRIB: string
                                public static ER_UNKNOWN_XSL_ELEM: string
                                public static ER_BAD_XSLSORT_USE: string
                                public static ER_MISPLACED_XSLWHEN: string
                                public static ER_XSLWHEN_NOT_PARENTED_BY_XSLCHOOSE: string
                                public static ER_MISPLACED_XSLOTHERWISE: string
                                public static ER_XSLOTHERWISE_NOT_PARENTED_BY_XSLCHOOSE: string
                                public static ER_NOT_ALLOWED_INSIDE_TEMPLATE: string
                                public static ER_UNKNOWN_EXT_NS_PREFIX: string
                                public static ER_IMPORTS_AS_FIRST_ELEM: string
                                public static ER_IMPORTING_ITSELF: string
                                public static ER_XMLSPACE_ILLEGAL_VAL: string
                                public static ER_PROCESSSTYLESHEET_NOT_SUCCESSFUL: string
                                public static ER_SAX_EXCEPTION: string
                                public static ER_XSLT_ERROR: string
                                public static ER_CURRENCY_SIGN_ILLEGAL: string
                                public static ER_DOCUMENT_FUNCTION_INVALID_IN_STYLESHEET_DOM: string
                                public static ER_CANT_RESOLVE_PREFIX_OF_NON_PREFIX_RESOLVER: string
                                public static ER_REDIRECT_COULDNT_GET_FILENAME: string
                                public static ER_CANNOT_BUILD_FORMATTERLISTENER_IN_REDIRECT: string
                                public static ER_INVALID_PREFIX_IN_EXCLUDERESULTPREFIX: string
                                public static ER_MISSING_NS_URI: string
                                public static ER_MISSING_ARG_FOR_OPTION: string
                                public static ER_INVALID_OPTION: string
                                public static ER_MALFORMED_FORMAT_STRING: string
                                public static ER_STYLESHEET_REQUIRES_VERSION_ATTRIB: string
                                public static ER_ILLEGAL_ATTRIBUTE_VALUE: string
                                public static ER_CHOOSE_REQUIRES_WHEN: string
                                public static ER_NO_APPLY_IMPORT_IN_FOR_EACH: string
                                public static ER_CANT_USE_DTM_FOR_OUTPUT: string
                                public static ER_CANT_USE_DTM_FOR_INPUT: string
                                public static ER_CALL_TO_EXT_FAILED: string
                                public static ER_PREFIX_MUST_RESOLVE: string
                                public static ER_INVALID_UTF16_SURROGATE: string
                                public static ER_XSLATTRSET_USED_ITSELF: string
                                public static ER_CANNOT_MIX_XERCESDOM: string
                                public static ER_TOO_MANY_LISTENERS: string
                                public static ER_IN_ELEMTEMPLATEELEM_READOBJECT: string
                                public static ER_DUPLICATE_NAMED_TEMPLATE: string
                                public static ER_INVALID_KEY_CALL: string
                                public static ER_REFERENCING_ITSELF: string
                                public static ER_ILLEGAL_DOMSOURCE_INPUT: string
                                public static ER_CLASS_NOT_FOUND_FOR_OPTION: string
                                public static ER_REQUIRED_ELEM_NOT_FOUND: string
                                public static ER_INPUT_CANNOT_BE_NULL: string
                                public static ER_URI_CANNOT_BE_NULL: string
                                public static ER_FILE_CANNOT_BE_NULL: string
                                public static ER_SOURCE_CANNOT_BE_NULL: string
                                public static ER_CANNOT_INIT_BSFMGR: string
                                public static ER_CANNOT_CMPL_EXTENSN: string
                                public static ER_CANNOT_CREATE_EXTENSN: string
                                public static ER_INSTANCE_MTHD_CALL_REQUIRES: string
                                public static ER_INVALID_ELEMENT_NAME: string
                                public static ER_ELEMENT_NAME_METHOD_STATIC: string
                                public static ER_EXTENSION_FUNC_UNKNOWN: string
                                public static ER_MORE_MATCH_CONSTRUCTOR: string
                                public static ER_MORE_MATCH_METHOD: string
                                public static ER_MORE_MATCH_ELEMENT: string
                                public static ER_INVALID_CONTEXT_PASSED: string
                                public static ER_POOL_EXISTS: string
                                public static ER_NO_DRIVER_NAME: string
                                public static ER_NO_URL: string
                                public static ER_POOL_SIZE_LESSTHAN_ONE: string
                                public static ER_INVALID_DRIVER: string
                                public static ER_NO_STYLESHEETROOT: string
                                public static ER_ILLEGAL_XMLSPACE_VALUE: string
                                public static ER_PROCESSFROMNODE_FAILED: string
                                public static ER_RESOURCE_COULD_NOT_LOAD: string
                                public static ER_BUFFER_SIZE_LESSTHAN_ZERO: string
                                public static ER_UNKNOWN_ERROR_CALLING_EXTENSION: string
                                public static ER_NO_NAMESPACE_DECL: string
                                public static ER_ELEM_CONTENT_NOT_ALLOWED: string
                                public static ER_STYLESHEET_DIRECTED_TERMINATION: string
                                public static ER_ONE_OR_TWO: string
                                public static ER_TWO_OR_THREE: string
                                public static ER_COULD_NOT_LOAD_RESOURCE: string
                                public static ER_CANNOT_INIT_DEFAULT_TEMPLATES: string
                                public static ER_RESULT_NULL: string
                                public static ER_RESULT_COULD_NOT_BE_SET: string
                                public static ER_NO_OUTPUT_SPECIFIED: string
                                public static ER_CANNOT_TRANSFORM_TO_RESULT_TYPE: string
                                public static ER_CANNOT_TRANSFORM_SOURCE_TYPE: string
                                public static ER_NULL_CONTENT_HANDLER: string
                                public static ER_NULL_ERROR_HANDLER: string
                                public static ER_CANNOT_CALL_PARSE: string
                                public static ER_NO_PARENT_FOR_FILTER: string
                                public static ER_NO_STYLESHEET_IN_MEDIA: string
                                public static ER_NO_STYLESHEET_PI: string
                                public static ER_NOT_SUPPORTED: string
                                public static ER_PROPERTY_VALUE_BOOLEAN: string
                                public static ER_COULD_NOT_FIND_EXTERN_SCRIPT: string
                                public static ER_RESOURCE_COULD_NOT_FIND: string
                                public static ER_OUTPUT_PROPERTY_NOT_RECOGNIZED: string
                                public static ER_FAILED_CREATING_ELEMLITRSLT: string
                                public static ER_VALUE_SHOULD_BE_NUMBER: string
                                public static ER_VALUE_SHOULD_EQUAL: string
                                public static ER_FAILED_CALLING_METHOD: string
                                public static ER_FAILED_CREATING_ELEMTMPL: string
                                public static ER_CHARS_NOT_ALLOWED: string
                                public static ER_ATTR_NOT_ALLOWED: string
                                public static ER_BAD_VALUE: string
                                public static ER_ATTRIB_VALUE_NOT_FOUND: string
                                public static ER_ATTRIB_VALUE_NOT_RECOGNIZED: string
                                public static ER_NULL_URI_NAMESPACE: string
                                public static ER_NUMBER_TOO_BIG: string
                                public static ER_CANNOT_FIND_SAX1_DRIVER: string
                                public static ER_SAX1_DRIVER_NOT_LOADED: string
                                public static ER_SAX1_DRIVER_NOT_INSTANTIATED: string
                                public static ER_SAX1_DRIVER_NOT_IMPLEMENT_PARSER: string
                                public static ER_PARSER_PROPERTY_NOT_SPECIFIED: string
                                public static ER_PARSER_ARG_CANNOT_BE_NULL: string
                                public static ER_FEATURE: string
                                public static ER_PROPERTY: string
                                public static ER_NULL_ENTITY_RESOLVER: string
                                public static ER_NULL_DTD_HANDLER: string
                                public static ER_NO_DRIVER_NAME_SPECIFIED: string
                                public static ER_NO_URL_SPECIFIED: string
                                public static ER_POOLSIZE_LESS_THAN_ONE: string
                                public static ER_INVALID_DRIVER_NAME: string
                                public static ER_ERRORLISTENER: string
                                public static ER_ASSERT_NO_TEMPLATE_PARENT: string
                                public static ER_ASSERT_REDUNDENT_EXPR_ELIMINATOR: string
                                public static ER_NOT_ALLOWED_IN_POSITION: string
                                public static ER_NONWHITESPACE_NOT_ALLOWED_IN_POSITION: string
                                public static ER_NAMESPACE_CONTEXT_NULL_NAMESPACE: string
                                public static ER_NAMESPACE_CONTEXT_NULL_PREFIX: string
                                public static ER_XPATH_RESOLVER_NULL_QNAME: string
                                public static ER_XPATH_RESOLVER_NEGATIVE_ARITY: string
                                public static INVALID_TCHAR: string
                                public static INVALID_QNAME: string
                                public static INVALID_ENUM: string
                                public static INVALID_NMTOKEN: string
                                public static INVALID_NCNAME: string
                                public static INVALID_BOOLEAN: string
                                public static INVALID_NUMBER: string
                                public static ER_ARG_LITERAL: string
                                public static ER_DUPLICATE_GLOBAL_VAR: string
                                public static ER_DUPLICATE_VAR: string
                                public static ER_TEMPLATE_NAME_MATCH: string
                                public static ER_INVALID_PREFIX: string
                                public static ER_NO_ATTRIB_SET: string
                                public static ER_FUNCTION_NOT_FOUND: string
                                public static ER_CANT_HAVE_CONTENT_AND_SELECT: string
                                public static ER_INVALID_SET_PARAM_VALUE: string
                                public static ER_SET_FEATURE_NULL_NAME: string
                                public static ER_GET_FEATURE_NULL_NAME: string
                                public static ER_UNSUPPORTED_FEATURE: string
                                public static ER_EXTENSION_ELEMENT_NOT_ALLOWED_IN_SECURE_PROCESSING: string
                                public static WG_FOUND_CURLYBRACE: string
                                public static WG_COUNT_ATTRIB_MATCHES_NO_ANCESTOR: string
                                public static WG_EXPR_ATTRIB_CHANGED_TO_SELECT: string
                                public static WG_NO_LOCALE_IN_FORMATNUMBER: string
                                public static WG_LOCALE_NOT_FOUND: string
                                public static WG_CANNOT_MAKE_URL_FROM: string
                                public static WG_CANNOT_LOAD_REQUESTED_DOC: string
                                public static WG_CANNOT_FIND_COLLATOR: string
                                public static WG_FUNCTIONS_SHOULD_USE_URL: string
                                public static WG_ENCODING_NOT_SUPPORTED_USING_UTF8: string
                                public static WG_ENCODING_NOT_SUPPORTED_USING_JAVA: string
                                public static WG_SPECIFICITY_CONFLICTS: string
                                public static WG_PARSING_AND_PREPARING: string
                                public static WG_ATTR_TEMPLATE: string
                                public static WG_CONFLICT_BETWEEN_XSLSTRIPSPACE_AND_XSLPRESERVESPACE: string
                                public static WG_ATTRIB_NOT_HANDLED: string
                                public static WG_NO_DECIMALFORMAT_DECLARATION: string
                                public static WG_OLD_XSLT_NS: string
                                public static WG_ONE_DEFAULT_XSLDECIMALFORMAT_ALLOWED: string
                                public static WG_XSLDECIMALFORMAT_NAMES_MUST_BE_UNIQUE: string
                                public static WG_ILLEGAL_ATTRIBUTE: string
                                public static WG_COULD_NOT_RESOLVE_PREFIX: string
                                public static WG_STYLESHEET_REQUIRES_VERSION_ATTRIB: string
                                public static WG_ILLEGAL_ATTRIBUTE_NAME: string
                                public static WG_ILLEGAL_ATTRIBUTE_VALUE: string
                                public static WG_EMPTY_SECOND_ARG: string
                                public static WG_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML: string
                                public static WG_PROCESSINGINSTRUCTION_NOTVALID_NCNAME: string
                                public static WG_ILLEGAL_ATTRIBUTE_POSITION: string
                                public static NO_MODIFICATION_ALLOWED_ERR: string
                                public static BAD_CODE: string
                                public static FORMAT_FAILED: string
                                public static ERROR_STRING: string
                                public static ERROR_HEADER: string
                                public static WARNING_HEADER: string
                                public static XSL_HEADER: string
                                public static XML_HEADER: string
                                public static QUERY_HEADER: string
                                public constructor()
                                public getContents(): java.lang.Object[][]
                                public static class: java.lang.Class<any>
                            }
                            class XSLTErrorResources_pt_BR extends java.util.ListResourceBundle {
                                public static ER_INVALID_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX: string
                                public static ER_INVALID_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX_FOR_DEFAULT: string
                                public static ER_NO_CURLYBRACE: string
                                public static ER_FUNCTION_NOT_SUPPORTED: string
                                public static ER_ILLEGAL_ATTRIBUTE: string
                                public static ER_NULL_SOURCENODE_APPLYIMPORTS: string
                                public static ER_CANNOT_ADD: string
                                public static ER_NULL_SOURCENODE_HANDLEAPPLYTEMPLATES: string
                                public static ER_NO_NAME_ATTRIB: string
                                public static ER_TEMPLATE_NOT_FOUND: string
                                public static ER_CANT_RESOLVE_NAME_AVT: string
                                public static ER_REQUIRES_ATTRIB: string
                                public static ER_MUST_HAVE_TEST_ATTRIB: string
                                public static ER_BAD_VAL_ON_LEVEL_ATTRIB: string
                                public static ER_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML: string
                                public static ER_PROCESSINGINSTRUCTION_NOTVALID_NCNAME: string
                                public static ER_NEED_MATCH_ATTRIB: string
                                public static ER_NEED_NAME_OR_MATCH_ATTRIB: string
                                public static ER_CANT_RESOLVE_NSPREFIX: string
                                public static ER_ILLEGAL_VALUE: string
                                public static ER_NO_OWNERDOC: string
                                public static ER_ELEMTEMPLATEELEM_ERR: string
                                public static ER_NULL_CHILD: string
                                public static ER_NEED_SELECT_ATTRIB: string
                                public static ER_NEED_TEST_ATTRIB: string
                                public static ER_NEED_NAME_ATTRIB: string
                                public static ER_NO_CONTEXT_OWNERDOC: string
                                public static ER_COULD_NOT_CREATE_XML_PROC_LIAISON: string
                                public static ER_PROCESS_NOT_SUCCESSFUL: string
                                public static ER_NOT_SUCCESSFUL: string
                                public static ER_ENCODING_NOT_SUPPORTED: string
                                public static ER_COULD_NOT_CREATE_TRACELISTENER: string
                                public static ER_KEY_REQUIRES_NAME_ATTRIB: string
                                public static ER_KEY_REQUIRES_MATCH_ATTRIB: string
                                public static ER_KEY_REQUIRES_USE_ATTRIB: string
                                public static ER_REQUIRES_ELEMENTS_ATTRIB: string
                                public static ER_MISSING_PREFIX_ATTRIB: string
                                public static ER_BAD_STYLESHEET_URL: string
                                public static ER_FILE_NOT_FOUND: string
                                public static ER_IOEXCEPTION: string
                                public static ER_NO_HREF_ATTRIB: string
                                public static ER_STYLESHEET_INCLUDES_ITSELF: string
                                public static ER_PROCESSINCLUDE_ERROR: string
                                public static ER_MISSING_LANG_ATTRIB: string
                                public static ER_MISSING_CONTAINER_ELEMENT_COMPONENT: string
                                public static ER_CAN_ONLY_OUTPUT_TO_ELEMENT: string
                                public static ER_PROCESS_ERROR: string
                                public static ER_UNIMPLNODE_ERROR: string
                                public static ER_NO_SELECT_EXPRESSION: string
                                public static ER_CANNOT_SERIALIZE_XSLPROCESSOR: string
                                public static ER_NO_INPUT_STYLESHEET: string
                                public static ER_FAILED_PROCESS_STYLESHEET: string
                                public static ER_COULDNT_PARSE_DOC: string
                                public static ER_COULDNT_FIND_FRAGMENT: string
                                public static ER_NODE_NOT_ELEMENT: string
                                public static ER_FOREACH_NEED_MATCH_OR_NAME_ATTRIB: string
                                public static ER_TEMPLATES_NEED_MATCH_OR_NAME_ATTRIB: string
                                public static ER_NO_CLONE_OF_DOCUMENT_FRAG: string
                                public static ER_CANT_CREATE_ITEM: string
                                public static ER_XMLSPACE_ILLEGAL_VALUE: string
                                public static ER_NO_XSLKEY_DECLARATION: string
                                public static ER_CANT_CREATE_URL: string
                                public static ER_XSLFUNCTIONS_UNSUPPORTED: string
                                public static ER_PROCESSOR_ERROR: string
                                public static ER_NOT_ALLOWED_INSIDE_STYLESHEET: string
                                public static ER_RESULTNS_NOT_SUPPORTED: string
                                public static ER_DEFAULTSPACE_NOT_SUPPORTED: string
                                public static ER_INDENTRESULT_NOT_SUPPORTED: string
                                public static ER_ILLEGAL_ATTRIB: string
                                public static ER_UNKNOWN_XSL_ELEM: string
                                public static ER_BAD_XSLSORT_USE: string
                                public static ER_MISPLACED_XSLWHEN: string
                                public static ER_XSLWHEN_NOT_PARENTED_BY_XSLCHOOSE: string
                                public static ER_MISPLACED_XSLOTHERWISE: string
                                public static ER_XSLOTHERWISE_NOT_PARENTED_BY_XSLCHOOSE: string
                                public static ER_NOT_ALLOWED_INSIDE_TEMPLATE: string
                                public static ER_UNKNOWN_EXT_NS_PREFIX: string
                                public static ER_IMPORTS_AS_FIRST_ELEM: string
                                public static ER_IMPORTING_ITSELF: string
                                public static ER_XMLSPACE_ILLEGAL_VAL: string
                                public static ER_PROCESSSTYLESHEET_NOT_SUCCESSFUL: string
                                public static ER_SAX_EXCEPTION: string
                                public static ER_XSLT_ERROR: string
                                public static ER_CURRENCY_SIGN_ILLEGAL: string
                                public static ER_DOCUMENT_FUNCTION_INVALID_IN_STYLESHEET_DOM: string
                                public static ER_CANT_RESOLVE_PREFIX_OF_NON_PREFIX_RESOLVER: string
                                public static ER_REDIRECT_COULDNT_GET_FILENAME: string
                                public static ER_CANNOT_BUILD_FORMATTERLISTENER_IN_REDIRECT: string
                                public static ER_INVALID_PREFIX_IN_EXCLUDERESULTPREFIX: string
                                public static ER_MISSING_NS_URI: string
                                public static ER_MISSING_ARG_FOR_OPTION: string
                                public static ER_INVALID_OPTION: string
                                public static ER_MALFORMED_FORMAT_STRING: string
                                public static ER_STYLESHEET_REQUIRES_VERSION_ATTRIB: string
                                public static ER_ILLEGAL_ATTRIBUTE_VALUE: string
                                public static ER_CHOOSE_REQUIRES_WHEN: string
                                public static ER_NO_APPLY_IMPORT_IN_FOR_EACH: string
                                public static ER_CANT_USE_DTM_FOR_OUTPUT: string
                                public static ER_CANT_USE_DTM_FOR_INPUT: string
                                public static ER_CALL_TO_EXT_FAILED: string
                                public static ER_PREFIX_MUST_RESOLVE: string
                                public static ER_INVALID_UTF16_SURROGATE: string
                                public static ER_XSLATTRSET_USED_ITSELF: string
                                public static ER_CANNOT_MIX_XERCESDOM: string
                                public static ER_TOO_MANY_LISTENERS: string
                                public static ER_IN_ELEMTEMPLATEELEM_READOBJECT: string
                                public static ER_DUPLICATE_NAMED_TEMPLATE: string
                                public static ER_INVALID_KEY_CALL: string
                                public static ER_REFERENCING_ITSELF: string
                                public static ER_ILLEGAL_DOMSOURCE_INPUT: string
                                public static ER_CLASS_NOT_FOUND_FOR_OPTION: string
                                public static ER_REQUIRED_ELEM_NOT_FOUND: string
                                public static ER_INPUT_CANNOT_BE_NULL: string
                                public static ER_URI_CANNOT_BE_NULL: string
                                public static ER_FILE_CANNOT_BE_NULL: string
                                public static ER_SOURCE_CANNOT_BE_NULL: string
                                public static ER_CANNOT_INIT_BSFMGR: string
                                public static ER_CANNOT_CMPL_EXTENSN: string
                                public static ER_CANNOT_CREATE_EXTENSN: string
                                public static ER_INSTANCE_MTHD_CALL_REQUIRES: string
                                public static ER_INVALID_ELEMENT_NAME: string
                                public static ER_ELEMENT_NAME_METHOD_STATIC: string
                                public static ER_EXTENSION_FUNC_UNKNOWN: string
                                public static ER_MORE_MATCH_CONSTRUCTOR: string
                                public static ER_MORE_MATCH_METHOD: string
                                public static ER_MORE_MATCH_ELEMENT: string
                                public static ER_INVALID_CONTEXT_PASSED: string
                                public static ER_POOL_EXISTS: string
                                public static ER_NO_DRIVER_NAME: string
                                public static ER_NO_URL: string
                                public static ER_POOL_SIZE_LESSTHAN_ONE: string
                                public static ER_INVALID_DRIVER: string
                                public static ER_NO_STYLESHEETROOT: string
                                public static ER_ILLEGAL_XMLSPACE_VALUE: string
                                public static ER_PROCESSFROMNODE_FAILED: string
                                public static ER_RESOURCE_COULD_NOT_LOAD: string
                                public static ER_BUFFER_SIZE_LESSTHAN_ZERO: string
                                public static ER_UNKNOWN_ERROR_CALLING_EXTENSION: string
                                public static ER_NO_NAMESPACE_DECL: string
                                public static ER_ELEM_CONTENT_NOT_ALLOWED: string
                                public static ER_STYLESHEET_DIRECTED_TERMINATION: string
                                public static ER_ONE_OR_TWO: string
                                public static ER_TWO_OR_THREE: string
                                public static ER_COULD_NOT_LOAD_RESOURCE: string
                                public static ER_CANNOT_INIT_DEFAULT_TEMPLATES: string
                                public static ER_RESULT_NULL: string
                                public static ER_RESULT_COULD_NOT_BE_SET: string
                                public static ER_NO_OUTPUT_SPECIFIED: string
                                public static ER_CANNOT_TRANSFORM_TO_RESULT_TYPE: string
                                public static ER_CANNOT_TRANSFORM_SOURCE_TYPE: string
                                public static ER_NULL_CONTENT_HANDLER: string
                                public static ER_NULL_ERROR_HANDLER: string
                                public static ER_CANNOT_CALL_PARSE: string
                                public static ER_NO_PARENT_FOR_FILTER: string
                                public static ER_NO_STYLESHEET_IN_MEDIA: string
                                public static ER_NO_STYLESHEET_PI: string
                                public static ER_NOT_SUPPORTED: string
                                public static ER_PROPERTY_VALUE_BOOLEAN: string
                                public static ER_COULD_NOT_FIND_EXTERN_SCRIPT: string
                                public static ER_RESOURCE_COULD_NOT_FIND: string
                                public static ER_OUTPUT_PROPERTY_NOT_RECOGNIZED: string
                                public static ER_FAILED_CREATING_ELEMLITRSLT: string
                                public static ER_VALUE_SHOULD_BE_NUMBER: string
                                public static ER_VALUE_SHOULD_EQUAL: string
                                public static ER_FAILED_CALLING_METHOD: string
                                public static ER_FAILED_CREATING_ELEMTMPL: string
                                public static ER_CHARS_NOT_ALLOWED: string
                                public static ER_ATTR_NOT_ALLOWED: string
                                public static ER_BAD_VALUE: string
                                public static ER_ATTRIB_VALUE_NOT_FOUND: string
                                public static ER_ATTRIB_VALUE_NOT_RECOGNIZED: string
                                public static ER_NULL_URI_NAMESPACE: string
                                public static ER_NUMBER_TOO_BIG: string
                                public static ER_CANNOT_FIND_SAX1_DRIVER: string
                                public static ER_SAX1_DRIVER_NOT_LOADED: string
                                public static ER_SAX1_DRIVER_NOT_INSTANTIATED: string
                                public static ER_SAX1_DRIVER_NOT_IMPLEMENT_PARSER: string
                                public static ER_PARSER_PROPERTY_NOT_SPECIFIED: string
                                public static ER_PARSER_ARG_CANNOT_BE_NULL: string
                                public static ER_FEATURE: string
                                public static ER_PROPERTY: string
                                public static ER_NULL_ENTITY_RESOLVER: string
                                public static ER_NULL_DTD_HANDLER: string
                                public static ER_NO_DRIVER_NAME_SPECIFIED: string
                                public static ER_NO_URL_SPECIFIED: string
                                public static ER_POOLSIZE_LESS_THAN_ONE: string
                                public static ER_INVALID_DRIVER_NAME: string
                                public static ER_ERRORLISTENER: string
                                public static ER_ASSERT_NO_TEMPLATE_PARENT: string
                                public static ER_ASSERT_REDUNDENT_EXPR_ELIMINATOR: string
                                public static ER_NOT_ALLOWED_IN_POSITION: string
                                public static ER_NONWHITESPACE_NOT_ALLOWED_IN_POSITION: string
                                public static ER_NAMESPACE_CONTEXT_NULL_NAMESPACE: string
                                public static ER_NAMESPACE_CONTEXT_NULL_PREFIX: string
                                public static ER_XPATH_RESOLVER_NULL_QNAME: string
                                public static ER_XPATH_RESOLVER_NEGATIVE_ARITY: string
                                public static INVALID_TCHAR: string
                                public static INVALID_QNAME: string
                                public static INVALID_ENUM: string
                                public static INVALID_NMTOKEN: string
                                public static INVALID_NCNAME: string
                                public static INVALID_BOOLEAN: string
                                public static INVALID_NUMBER: string
                                public static ER_ARG_LITERAL: string
                                public static ER_DUPLICATE_GLOBAL_VAR: string
                                public static ER_DUPLICATE_VAR: string
                                public static ER_TEMPLATE_NAME_MATCH: string
                                public static ER_INVALID_PREFIX: string
                                public static ER_NO_ATTRIB_SET: string
                                public static ER_FUNCTION_NOT_FOUND: string
                                public static ER_CANT_HAVE_CONTENT_AND_SELECT: string
                                public static ER_INVALID_SET_PARAM_VALUE: string
                                public static ER_SET_FEATURE_NULL_NAME: string
                                public static ER_GET_FEATURE_NULL_NAME: string
                                public static ER_UNSUPPORTED_FEATURE: string
                                public static ER_EXTENSION_ELEMENT_NOT_ALLOWED_IN_SECURE_PROCESSING: string
                                public static WG_FOUND_CURLYBRACE: string
                                public static WG_COUNT_ATTRIB_MATCHES_NO_ANCESTOR: string
                                public static WG_EXPR_ATTRIB_CHANGED_TO_SELECT: string
                                public static WG_NO_LOCALE_IN_FORMATNUMBER: string
                                public static WG_LOCALE_NOT_FOUND: string
                                public static WG_CANNOT_MAKE_URL_FROM: string
                                public static WG_CANNOT_LOAD_REQUESTED_DOC: string
                                public static WG_CANNOT_FIND_COLLATOR: string
                                public static WG_FUNCTIONS_SHOULD_USE_URL: string
                                public static WG_ENCODING_NOT_SUPPORTED_USING_UTF8: string
                                public static WG_ENCODING_NOT_SUPPORTED_USING_JAVA: string
                                public static WG_SPECIFICITY_CONFLICTS: string
                                public static WG_PARSING_AND_PREPARING: string
                                public static WG_ATTR_TEMPLATE: string
                                public static WG_CONFLICT_BETWEEN_XSLSTRIPSPACE_AND_XSLPRESERVESPACE: string
                                public static WG_ATTRIB_NOT_HANDLED: string
                                public static WG_NO_DECIMALFORMAT_DECLARATION: string
                                public static WG_OLD_XSLT_NS: string
                                public static WG_ONE_DEFAULT_XSLDECIMALFORMAT_ALLOWED: string
                                public static WG_XSLDECIMALFORMAT_NAMES_MUST_BE_UNIQUE: string
                                public static WG_ILLEGAL_ATTRIBUTE: string
                                public static WG_COULD_NOT_RESOLVE_PREFIX: string
                                public static WG_STYLESHEET_REQUIRES_VERSION_ATTRIB: string
                                public static WG_ILLEGAL_ATTRIBUTE_NAME: string
                                public static WG_ILLEGAL_ATTRIBUTE_VALUE: string
                                public static WG_EMPTY_SECOND_ARG: string
                                public static WG_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML: string
                                public static WG_PROCESSINGINSTRUCTION_NOTVALID_NCNAME: string
                                public static WG_ILLEGAL_ATTRIBUTE_POSITION: string
                                public static NO_MODIFICATION_ALLOWED_ERR: string
                                public static BAD_CODE: string
                                public static FORMAT_FAILED: string
                                public static ERROR_STRING: string
                                public static ERROR_HEADER: string
                                public static WARNING_HEADER: string
                                public static XSL_HEADER: string
                                public static XML_HEADER: string
                                public static QUERY_HEADER: string
                                public constructor()
                                public getContents(): java.lang.Object[][]
                                public static class: java.lang.Class<any>
                            }
                            class XSLTErrorResources_sv extends java.util.ListResourceBundle {
                                public static ER_INVALID_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX: string
                                public static ER_INVALID_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX_FOR_DEFAULT: string
                                public static ER_NO_CURLYBRACE: string
                                public static ER_FUNCTION_NOT_SUPPORTED: string
                                public static ER_ILLEGAL_ATTRIBUTE: string
                                public static ER_NULL_SOURCENODE_APPLYIMPORTS: string
                                public static ER_CANNOT_ADD: string
                                public static ER_NULL_SOURCENODE_HANDLEAPPLYTEMPLATES: string
                                public static ER_NO_NAME_ATTRIB: string
                                public static ER_TEMPLATE_NOT_FOUND: string
                                public static ER_CANT_RESOLVE_NAME_AVT: string
                                public static ER_REQUIRES_ATTRIB: string
                                public static ER_MUST_HAVE_TEST_ATTRIB: string
                                public static ER_BAD_VAL_ON_LEVEL_ATTRIB: string
                                public static ER_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML: string
                                public static ER_PROCESSINGINSTRUCTION_NOTVALID_NCNAME: string
                                public static ER_NEED_MATCH_ATTRIB: string
                                public static ER_NEED_NAME_OR_MATCH_ATTRIB: string
                                public static ER_CANT_RESOLVE_NSPREFIX: string
                                public static ER_ILLEGAL_VALUE: string
                                public static ER_NO_OWNERDOC: string
                                public static ER_ELEMTEMPLATEELEM_ERR: string
                                public static ER_NULL_CHILD: string
                                public static ER_NEED_SELECT_ATTRIB: string
                                public static ER_NEED_TEST_ATTRIB: string
                                public static ER_NEED_NAME_ATTRIB: string
                                public static ER_NO_CONTEXT_OWNERDOC: string
                                public static ER_COULD_NOT_CREATE_XML_PROC_LIAISON: string
                                public static ER_PROCESS_NOT_SUCCESSFUL: string
                                public static ER_NOT_SUCCESSFUL: string
                                public static ER_ENCODING_NOT_SUPPORTED: string
                                public static ER_COULD_NOT_CREATE_TRACELISTENER: string
                                public static ER_KEY_REQUIRES_NAME_ATTRIB: string
                                public static ER_KEY_REQUIRES_MATCH_ATTRIB: string
                                public static ER_KEY_REQUIRES_USE_ATTRIB: string
                                public static ER_REQUIRES_ELEMENTS_ATTRIB: string
                                public static ER_MISSING_PREFIX_ATTRIB: string
                                public static ER_BAD_STYLESHEET_URL: string
                                public static ER_FILE_NOT_FOUND: string
                                public static ER_IOEXCEPTION: string
                                public static ER_NO_HREF_ATTRIB: string
                                public static ER_STYLESHEET_INCLUDES_ITSELF: string
                                public static ER_PROCESSINCLUDE_ERROR: string
                                public static ER_MISSING_LANG_ATTRIB: string
                                public static ER_MISSING_CONTAINER_ELEMENT_COMPONENT: string
                                public static ER_CAN_ONLY_OUTPUT_TO_ELEMENT: string
                                public static ER_PROCESS_ERROR: string
                                public static ER_UNIMPLNODE_ERROR: string
                                public static ER_NO_SELECT_EXPRESSION: string
                                public static ER_CANNOT_SERIALIZE_XSLPROCESSOR: string
                                public static ER_NO_INPUT_STYLESHEET: string
                                public static ER_FAILED_PROCESS_STYLESHEET: string
                                public static ER_COULDNT_PARSE_DOC: string
                                public static ER_COULDNT_FIND_FRAGMENT: string
                                public static ER_NODE_NOT_ELEMENT: string
                                public static ER_FOREACH_NEED_MATCH_OR_NAME_ATTRIB: string
                                public static ER_TEMPLATES_NEED_MATCH_OR_NAME_ATTRIB: string
                                public static ER_NO_CLONE_OF_DOCUMENT_FRAG: string
                                public static ER_CANT_CREATE_ITEM: string
                                public static ER_XMLSPACE_ILLEGAL_VALUE: string
                                public static ER_NO_XSLKEY_DECLARATION: string
                                public static ER_CANT_CREATE_URL: string
                                public static ER_XSLFUNCTIONS_UNSUPPORTED: string
                                public static ER_PROCESSOR_ERROR: string
                                public static ER_NOT_ALLOWED_INSIDE_STYLESHEET: string
                                public static ER_RESULTNS_NOT_SUPPORTED: string
                                public static ER_DEFAULTSPACE_NOT_SUPPORTED: string
                                public static ER_INDENTRESULT_NOT_SUPPORTED: string
                                public static ER_ILLEGAL_ATTRIB: string
                                public static ER_UNKNOWN_XSL_ELEM: string
                                public static ER_BAD_XSLSORT_USE: string
                                public static ER_MISPLACED_XSLWHEN: string
                                public static ER_XSLWHEN_NOT_PARENTED_BY_XSLCHOOSE: string
                                public static ER_MISPLACED_XSLOTHERWISE: string
                                public static ER_XSLOTHERWISE_NOT_PARENTED_BY_XSLCHOOSE: string
                                public static ER_NOT_ALLOWED_INSIDE_TEMPLATE: string
                                public static ER_UNKNOWN_EXT_NS_PREFIX: string
                                public static ER_IMPORTS_AS_FIRST_ELEM: string
                                public static ER_IMPORTING_ITSELF: string
                                public static ER_XMLSPACE_ILLEGAL_VAL: string
                                public static ER_PROCESSSTYLESHEET_NOT_SUCCESSFUL: string
                                public static ER_SAX_EXCEPTION: string
                                public static ER_XSLT_ERROR: string
                                public static ER_CURRENCY_SIGN_ILLEGAL: string
                                public static ER_DOCUMENT_FUNCTION_INVALID_IN_STYLESHEET_DOM: string
                                public static ER_CANT_RESOLVE_PREFIX_OF_NON_PREFIX_RESOLVER: string
                                public static ER_REDIRECT_COULDNT_GET_FILENAME: string
                                public static ER_CANNOT_BUILD_FORMATTERLISTENER_IN_REDIRECT: string
                                public static ER_INVALID_PREFIX_IN_EXCLUDERESULTPREFIX: string
                                public static ER_MISSING_NS_URI: string
                                public static ER_MISSING_ARG_FOR_OPTION: string
                                public static ER_INVALID_OPTION: string
                                public static ER_MALFORMED_FORMAT_STRING: string
                                public static ER_STYLESHEET_REQUIRES_VERSION_ATTRIB: string
                                public static ER_ILLEGAL_ATTRIBUTE_VALUE: string
                                public static ER_CHOOSE_REQUIRES_WHEN: string
                                public static ER_NO_APPLY_IMPORT_IN_FOR_EACH: string
                                public static ER_CANT_USE_DTM_FOR_OUTPUT: string
                                public static ER_CANT_USE_DTM_FOR_INPUT: string
                                public static ER_CALL_TO_EXT_FAILED: string
                                public static ER_PREFIX_MUST_RESOLVE: string
                                public static ER_INVALID_UTF16_SURROGATE: string
                                public static ER_XSLATTRSET_USED_ITSELF: string
                                public static ER_CANNOT_MIX_XERCESDOM: string
                                public static ER_TOO_MANY_LISTENERS: string
                                public static ER_IN_ELEMTEMPLATEELEM_READOBJECT: string
                                public static ER_DUPLICATE_NAMED_TEMPLATE: string
                                public static ER_INVALID_KEY_CALL: string
                                public static ER_REFERENCING_ITSELF: string
                                public static ER_ILLEGAL_DOMSOURCE_INPUT: string
                                public static ER_CLASS_NOT_FOUND_FOR_OPTION: string
                                public static ER_REQUIRED_ELEM_NOT_FOUND: string
                                public static ER_INPUT_CANNOT_BE_NULL: string
                                public static ER_URI_CANNOT_BE_NULL: string
                                public static ER_FILE_CANNOT_BE_NULL: string
                                public static ER_SOURCE_CANNOT_BE_NULL: string
                                public static ER_CANNOT_INIT_BSFMGR: string
                                public static ER_CANNOT_CMPL_EXTENSN: string
                                public static ER_CANNOT_CREATE_EXTENSN: string
                                public static ER_INSTANCE_MTHD_CALL_REQUIRES: string
                                public static ER_INVALID_ELEMENT_NAME: string
                                public static ER_ELEMENT_NAME_METHOD_STATIC: string
                                public static ER_EXTENSION_FUNC_UNKNOWN: string
                                public static ER_MORE_MATCH_CONSTRUCTOR: string
                                public static ER_MORE_MATCH_METHOD: string
                                public static ER_MORE_MATCH_ELEMENT: string
                                public static ER_INVALID_CONTEXT_PASSED: string
                                public static ER_POOL_EXISTS: string
                                public static ER_NO_DRIVER_NAME: string
                                public static ER_NO_URL: string
                                public static ER_POOL_SIZE_LESSTHAN_ONE: string
                                public static ER_INVALID_DRIVER: string
                                public static ER_NO_STYLESHEETROOT: string
                                public static ER_ILLEGAL_XMLSPACE_VALUE: string
                                public static ER_PROCESSFROMNODE_FAILED: string
                                public static ER_RESOURCE_COULD_NOT_LOAD: string
                                public static ER_BUFFER_SIZE_LESSTHAN_ZERO: string
                                public static ER_UNKNOWN_ERROR_CALLING_EXTENSION: string
                                public static ER_NO_NAMESPACE_DECL: string
                                public static ER_ELEM_CONTENT_NOT_ALLOWED: string
                                public static ER_STYLESHEET_DIRECTED_TERMINATION: string
                                public static ER_ONE_OR_TWO: string
                                public static ER_TWO_OR_THREE: string
                                public static ER_COULD_NOT_LOAD_RESOURCE: string
                                public static ER_CANNOT_INIT_DEFAULT_TEMPLATES: string
                                public static ER_RESULT_NULL: string
                                public static ER_RESULT_COULD_NOT_BE_SET: string
                                public static ER_NO_OUTPUT_SPECIFIED: string
                                public static ER_CANNOT_TRANSFORM_TO_RESULT_TYPE: string
                                public static ER_CANNOT_TRANSFORM_SOURCE_TYPE: string
                                public static ER_NULL_CONTENT_HANDLER: string
                                public static ER_NULL_ERROR_HANDLER: string
                                public static ER_CANNOT_CALL_PARSE: string
                                public static ER_NO_PARENT_FOR_FILTER: string
                                public static ER_NO_STYLESHEET_IN_MEDIA: string
                                public static ER_NO_STYLESHEET_PI: string
                                public static ER_NOT_SUPPORTED: string
                                public static ER_PROPERTY_VALUE_BOOLEAN: string
                                public static ER_COULD_NOT_FIND_EXTERN_SCRIPT: string
                                public static ER_RESOURCE_COULD_NOT_FIND: string
                                public static ER_OUTPUT_PROPERTY_NOT_RECOGNIZED: string
                                public static ER_FAILED_CREATING_ELEMLITRSLT: string
                                public static ER_VALUE_SHOULD_BE_NUMBER: string
                                public static ER_VALUE_SHOULD_EQUAL: string
                                public static ER_FAILED_CALLING_METHOD: string
                                public static ER_FAILED_CREATING_ELEMTMPL: string
                                public static ER_CHARS_NOT_ALLOWED: string
                                public static ER_ATTR_NOT_ALLOWED: string
                                public static ER_BAD_VALUE: string
                                public static ER_ATTRIB_VALUE_NOT_FOUND: string
                                public static ER_ATTRIB_VALUE_NOT_RECOGNIZED: string
                                public static ER_NULL_URI_NAMESPACE: string
                                public static ER_NUMBER_TOO_BIG: string
                                public static ER_CANNOT_FIND_SAX1_DRIVER: string
                                public static ER_SAX1_DRIVER_NOT_LOADED: string
                                public static ER_SAX1_DRIVER_NOT_INSTANTIATED: string
                                public static ER_SAX1_DRIVER_NOT_IMPLEMENT_PARSER: string
                                public static ER_PARSER_PROPERTY_NOT_SPECIFIED: string
                                public static ER_PARSER_ARG_CANNOT_BE_NULL: string
                                public static ER_FEATURE: string
                                public static ER_PROPERTY: string
                                public static ER_NULL_ENTITY_RESOLVER: string
                                public static ER_NULL_DTD_HANDLER: string
                                public static ER_NO_DRIVER_NAME_SPECIFIED: string
                                public static ER_NO_URL_SPECIFIED: string
                                public static ER_POOLSIZE_LESS_THAN_ONE: string
                                public static ER_INVALID_DRIVER_NAME: string
                                public static ER_ERRORLISTENER: string
                                public static ER_ASSERT_NO_TEMPLATE_PARENT: string
                                public static ER_ASSERT_REDUNDENT_EXPR_ELIMINATOR: string
                                public static ER_NOT_ALLOWED_IN_POSITION: string
                                public static ER_NONWHITESPACE_NOT_ALLOWED_IN_POSITION: string
                                public static ER_NAMESPACE_CONTEXT_NULL_NAMESPACE: string
                                public static ER_NAMESPACE_CONTEXT_NULL_PREFIX: string
                                public static ER_XPATH_RESOLVER_NULL_QNAME: string
                                public static ER_XPATH_RESOLVER_NEGATIVE_ARITY: string
                                public static INVALID_TCHAR: string
                                public static INVALID_QNAME: string
                                public static INVALID_ENUM: string
                                public static INVALID_NMTOKEN: string
                                public static INVALID_NCNAME: string
                                public static INVALID_BOOLEAN: string
                                public static INVALID_NUMBER: string
                                public static ER_ARG_LITERAL: string
                                public static ER_DUPLICATE_GLOBAL_VAR: string
                                public static ER_DUPLICATE_VAR: string
                                public static ER_TEMPLATE_NAME_MATCH: string
                                public static ER_INVALID_PREFIX: string
                                public static ER_NO_ATTRIB_SET: string
                                public static ER_FUNCTION_NOT_FOUND: string
                                public static ER_CANT_HAVE_CONTENT_AND_SELECT: string
                                public static ER_INVALID_SET_PARAM_VALUE: string
                                public static ER_SET_FEATURE_NULL_NAME: string
                                public static ER_GET_FEATURE_NULL_NAME: string
                                public static ER_UNSUPPORTED_FEATURE: string
                                public static ER_EXTENSION_ELEMENT_NOT_ALLOWED_IN_SECURE_PROCESSING: string
                                public static WG_FOUND_CURLYBRACE: string
                                public static WG_COUNT_ATTRIB_MATCHES_NO_ANCESTOR: string
                                public static WG_EXPR_ATTRIB_CHANGED_TO_SELECT: string
                                public static WG_NO_LOCALE_IN_FORMATNUMBER: string
                                public static WG_LOCALE_NOT_FOUND: string
                                public static WG_CANNOT_MAKE_URL_FROM: string
                                public static WG_CANNOT_LOAD_REQUESTED_DOC: string
                                public static WG_CANNOT_FIND_COLLATOR: string
                                public static WG_FUNCTIONS_SHOULD_USE_URL: string
                                public static WG_ENCODING_NOT_SUPPORTED_USING_UTF8: string
                                public static WG_ENCODING_NOT_SUPPORTED_USING_JAVA: string
                                public static WG_SPECIFICITY_CONFLICTS: string
                                public static WG_PARSING_AND_PREPARING: string
                                public static WG_ATTR_TEMPLATE: string
                                public static WG_CONFLICT_BETWEEN_XSLSTRIPSPACE_AND_XSLPRESERVESPACE: string
                                public static WG_ATTRIB_NOT_HANDLED: string
                                public static WG_NO_DECIMALFORMAT_DECLARATION: string
                                public static WG_OLD_XSLT_NS: string
                                public static WG_ONE_DEFAULT_XSLDECIMALFORMAT_ALLOWED: string
                                public static WG_XSLDECIMALFORMAT_NAMES_MUST_BE_UNIQUE: string
                                public static WG_ILLEGAL_ATTRIBUTE: string
                                public static WG_COULD_NOT_RESOLVE_PREFIX: string
                                public static WG_STYLESHEET_REQUIRES_VERSION_ATTRIB: string
                                public static WG_ILLEGAL_ATTRIBUTE_NAME: string
                                public static WG_ILLEGAL_ATTRIBUTE_VALUE: string
                                public static WG_EMPTY_SECOND_ARG: string
                                public static WG_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML: string
                                public static WG_PROCESSINGINSTRUCTION_NOTVALID_NCNAME: string
                                public static WG_ILLEGAL_ATTRIBUTE_POSITION: string
                                public static NO_MODIFICATION_ALLOWED_ERR: string
                                public static BAD_CODE: string
                                public static FORMAT_FAILED: string
                                public static ERROR_STRING: string
                                public static ERROR_HEADER: string
                                public static WARNING_HEADER: string
                                public static XSL_HEADER: string
                                public static XML_HEADER: string
                                public static QUERY_HEADER: string
                                public constructor()
                                public getContents(): java.lang.Object[][]
                                public static class: java.lang.Class<any>
                            }
                            class XSLTErrorResources_zh_CN extends java.util.ListResourceBundle {
                                public static ER_INVALID_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX: string
                                public static ER_INVALID_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX_FOR_DEFAULT: string
                                public static ER_NO_CURLYBRACE: string
                                public static ER_FUNCTION_NOT_SUPPORTED: string
                                public static ER_ILLEGAL_ATTRIBUTE: string
                                public static ER_NULL_SOURCENODE_APPLYIMPORTS: string
                                public static ER_CANNOT_ADD: string
                                public static ER_NULL_SOURCENODE_HANDLEAPPLYTEMPLATES: string
                                public static ER_NO_NAME_ATTRIB: string
                                public static ER_TEMPLATE_NOT_FOUND: string
                                public static ER_CANT_RESOLVE_NAME_AVT: string
                                public static ER_REQUIRES_ATTRIB: string
                                public static ER_MUST_HAVE_TEST_ATTRIB: string
                                public static ER_BAD_VAL_ON_LEVEL_ATTRIB: string
                                public static ER_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML: string
                                public static ER_PROCESSINGINSTRUCTION_NOTVALID_NCNAME: string
                                public static ER_NEED_MATCH_ATTRIB: string
                                public static ER_NEED_NAME_OR_MATCH_ATTRIB: string
                                public static ER_CANT_RESOLVE_NSPREFIX: string
                                public static ER_ILLEGAL_VALUE: string
                                public static ER_NO_OWNERDOC: string
                                public static ER_ELEMTEMPLATEELEM_ERR: string
                                public static ER_NULL_CHILD: string
                                public static ER_NEED_SELECT_ATTRIB: string
                                public static ER_NEED_TEST_ATTRIB: string
                                public static ER_NEED_NAME_ATTRIB: string
                                public static ER_NO_CONTEXT_OWNERDOC: string
                                public static ER_COULD_NOT_CREATE_XML_PROC_LIAISON: string
                                public static ER_PROCESS_NOT_SUCCESSFUL: string
                                public static ER_NOT_SUCCESSFUL: string
                                public static ER_ENCODING_NOT_SUPPORTED: string
                                public static ER_COULD_NOT_CREATE_TRACELISTENER: string
                                public static ER_KEY_REQUIRES_NAME_ATTRIB: string
                                public static ER_KEY_REQUIRES_MATCH_ATTRIB: string
                                public static ER_KEY_REQUIRES_USE_ATTRIB: string
                                public static ER_REQUIRES_ELEMENTS_ATTRIB: string
                                public static ER_MISSING_PREFIX_ATTRIB: string
                                public static ER_BAD_STYLESHEET_URL: string
                                public static ER_FILE_NOT_FOUND: string
                                public static ER_IOEXCEPTION: string
                                public static ER_NO_HREF_ATTRIB: string
                                public static ER_STYLESHEET_INCLUDES_ITSELF: string
                                public static ER_PROCESSINCLUDE_ERROR: string
                                public static ER_MISSING_LANG_ATTRIB: string
                                public static ER_MISSING_CONTAINER_ELEMENT_COMPONENT: string
                                public static ER_CAN_ONLY_OUTPUT_TO_ELEMENT: string
                                public static ER_PROCESS_ERROR: string
                                public static ER_UNIMPLNODE_ERROR: string
                                public static ER_NO_SELECT_EXPRESSION: string
                                public static ER_CANNOT_SERIALIZE_XSLPROCESSOR: string
                                public static ER_NO_INPUT_STYLESHEET: string
                                public static ER_FAILED_PROCESS_STYLESHEET: string
                                public static ER_COULDNT_PARSE_DOC: string
                                public static ER_COULDNT_FIND_FRAGMENT: string
                                public static ER_NODE_NOT_ELEMENT: string
                                public static ER_FOREACH_NEED_MATCH_OR_NAME_ATTRIB: string
                                public static ER_TEMPLATES_NEED_MATCH_OR_NAME_ATTRIB: string
                                public static ER_NO_CLONE_OF_DOCUMENT_FRAG: string
                                public static ER_CANT_CREATE_ITEM: string
                                public static ER_XMLSPACE_ILLEGAL_VALUE: string
                                public static ER_NO_XSLKEY_DECLARATION: string
                                public static ER_CANT_CREATE_URL: string
                                public static ER_XSLFUNCTIONS_UNSUPPORTED: string
                                public static ER_PROCESSOR_ERROR: string
                                public static ER_NOT_ALLOWED_INSIDE_STYLESHEET: string
                                public static ER_RESULTNS_NOT_SUPPORTED: string
                                public static ER_DEFAULTSPACE_NOT_SUPPORTED: string
                                public static ER_INDENTRESULT_NOT_SUPPORTED: string
                                public static ER_ILLEGAL_ATTRIB: string
                                public static ER_UNKNOWN_XSL_ELEM: string
                                public static ER_BAD_XSLSORT_USE: string
                                public static ER_MISPLACED_XSLWHEN: string
                                public static ER_XSLWHEN_NOT_PARENTED_BY_XSLCHOOSE: string
                                public static ER_MISPLACED_XSLOTHERWISE: string
                                public static ER_XSLOTHERWISE_NOT_PARENTED_BY_XSLCHOOSE: string
                                public static ER_NOT_ALLOWED_INSIDE_TEMPLATE: string
                                public static ER_UNKNOWN_EXT_NS_PREFIX: string
                                public static ER_IMPORTS_AS_FIRST_ELEM: string
                                public static ER_IMPORTING_ITSELF: string
                                public static ER_XMLSPACE_ILLEGAL_VAL: string
                                public static ER_PROCESSSTYLESHEET_NOT_SUCCESSFUL: string
                                public static ER_SAX_EXCEPTION: string
                                public static ER_XSLT_ERROR: string
                                public static ER_CURRENCY_SIGN_ILLEGAL: string
                                public static ER_DOCUMENT_FUNCTION_INVALID_IN_STYLESHEET_DOM: string
                                public static ER_CANT_RESOLVE_PREFIX_OF_NON_PREFIX_RESOLVER: string
                                public static ER_REDIRECT_COULDNT_GET_FILENAME: string
                                public static ER_CANNOT_BUILD_FORMATTERLISTENER_IN_REDIRECT: string
                                public static ER_INVALID_PREFIX_IN_EXCLUDERESULTPREFIX: string
                                public static ER_MISSING_NS_URI: string
                                public static ER_MISSING_ARG_FOR_OPTION: string
                                public static ER_INVALID_OPTION: string
                                public static ER_MALFORMED_FORMAT_STRING: string
                                public static ER_STYLESHEET_REQUIRES_VERSION_ATTRIB: string
                                public static ER_ILLEGAL_ATTRIBUTE_VALUE: string
                                public static ER_CHOOSE_REQUIRES_WHEN: string
                                public static ER_NO_APPLY_IMPORT_IN_FOR_EACH: string
                                public static ER_CANT_USE_DTM_FOR_OUTPUT: string
                                public static ER_CANT_USE_DTM_FOR_INPUT: string
                                public static ER_CALL_TO_EXT_FAILED: string
                                public static ER_PREFIX_MUST_RESOLVE: string
                                public static ER_INVALID_UTF16_SURROGATE: string
                                public static ER_XSLATTRSET_USED_ITSELF: string
                                public static ER_CANNOT_MIX_XERCESDOM: string
                                public static ER_TOO_MANY_LISTENERS: string
                                public static ER_IN_ELEMTEMPLATEELEM_READOBJECT: string
                                public static ER_DUPLICATE_NAMED_TEMPLATE: string
                                public static ER_INVALID_KEY_CALL: string
                                public static ER_REFERENCING_ITSELF: string
                                public static ER_ILLEGAL_DOMSOURCE_INPUT: string
                                public static ER_CLASS_NOT_FOUND_FOR_OPTION: string
                                public static ER_REQUIRED_ELEM_NOT_FOUND: string
                                public static ER_INPUT_CANNOT_BE_NULL: string
                                public static ER_URI_CANNOT_BE_NULL: string
                                public static ER_FILE_CANNOT_BE_NULL: string
                                public static ER_SOURCE_CANNOT_BE_NULL: string
                                public static ER_CANNOT_INIT_BSFMGR: string
                                public static ER_CANNOT_CMPL_EXTENSN: string
                                public static ER_CANNOT_CREATE_EXTENSN: string
                                public static ER_INSTANCE_MTHD_CALL_REQUIRES: string
                                public static ER_INVALID_ELEMENT_NAME: string
                                public static ER_ELEMENT_NAME_METHOD_STATIC: string
                                public static ER_EXTENSION_FUNC_UNKNOWN: string
                                public static ER_MORE_MATCH_CONSTRUCTOR: string
                                public static ER_MORE_MATCH_METHOD: string
                                public static ER_MORE_MATCH_ELEMENT: string
                                public static ER_INVALID_CONTEXT_PASSED: string
                                public static ER_POOL_EXISTS: string
                                public static ER_NO_DRIVER_NAME: string
                                public static ER_NO_URL: string
                                public static ER_POOL_SIZE_LESSTHAN_ONE: string
                                public static ER_INVALID_DRIVER: string
                                public static ER_NO_STYLESHEETROOT: string
                                public static ER_ILLEGAL_XMLSPACE_VALUE: string
                                public static ER_PROCESSFROMNODE_FAILED: string
                                public static ER_RESOURCE_COULD_NOT_LOAD: string
                                public static ER_BUFFER_SIZE_LESSTHAN_ZERO: string
                                public static ER_UNKNOWN_ERROR_CALLING_EXTENSION: string
                                public static ER_NO_NAMESPACE_DECL: string
                                public static ER_ELEM_CONTENT_NOT_ALLOWED: string
                                public static ER_STYLESHEET_DIRECTED_TERMINATION: string
                                public static ER_ONE_OR_TWO: string
                                public static ER_TWO_OR_THREE: string
                                public static ER_COULD_NOT_LOAD_RESOURCE: string
                                public static ER_CANNOT_INIT_DEFAULT_TEMPLATES: string
                                public static ER_RESULT_NULL: string
                                public static ER_RESULT_COULD_NOT_BE_SET: string
                                public static ER_NO_OUTPUT_SPECIFIED: string
                                public static ER_CANNOT_TRANSFORM_TO_RESULT_TYPE: string
                                public static ER_CANNOT_TRANSFORM_SOURCE_TYPE: string
                                public static ER_NULL_CONTENT_HANDLER: string
                                public static ER_NULL_ERROR_HANDLER: string
                                public static ER_CANNOT_CALL_PARSE: string
                                public static ER_NO_PARENT_FOR_FILTER: string
                                public static ER_NO_STYLESHEET_IN_MEDIA: string
                                public static ER_NO_STYLESHEET_PI: string
                                public static ER_NOT_SUPPORTED: string
                                public static ER_PROPERTY_VALUE_BOOLEAN: string
                                public static ER_COULD_NOT_FIND_EXTERN_SCRIPT: string
                                public static ER_RESOURCE_COULD_NOT_FIND: string
                                public static ER_OUTPUT_PROPERTY_NOT_RECOGNIZED: string
                                public static ER_FAILED_CREATING_ELEMLITRSLT: string
                                public static ER_VALUE_SHOULD_BE_NUMBER: string
                                public static ER_VALUE_SHOULD_EQUAL: string
                                public static ER_FAILED_CALLING_METHOD: string
                                public static ER_FAILED_CREATING_ELEMTMPL: string
                                public static ER_CHARS_NOT_ALLOWED: string
                                public static ER_ATTR_NOT_ALLOWED: string
                                public static ER_BAD_VALUE: string
                                public static ER_ATTRIB_VALUE_NOT_FOUND: string
                                public static ER_ATTRIB_VALUE_NOT_RECOGNIZED: string
                                public static ER_NULL_URI_NAMESPACE: string
                                public static ER_NUMBER_TOO_BIG: string
                                public static ER_CANNOT_FIND_SAX1_DRIVER: string
                                public static ER_SAX1_DRIVER_NOT_LOADED: string
                                public static ER_SAX1_DRIVER_NOT_INSTANTIATED: string
                                public static ER_SAX1_DRIVER_NOT_IMPLEMENT_PARSER: string
                                public static ER_PARSER_PROPERTY_NOT_SPECIFIED: string
                                public static ER_PARSER_ARG_CANNOT_BE_NULL: string
                                public static ER_FEATURE: string
                                public static ER_PROPERTY: string
                                public static ER_NULL_ENTITY_RESOLVER: string
                                public static ER_NULL_DTD_HANDLER: string
                                public static ER_NO_DRIVER_NAME_SPECIFIED: string
                                public static ER_NO_URL_SPECIFIED: string
                                public static ER_POOLSIZE_LESS_THAN_ONE: string
                                public static ER_INVALID_DRIVER_NAME: string
                                public static ER_ERRORLISTENER: string
                                public static ER_ASSERT_NO_TEMPLATE_PARENT: string
                                public static ER_ASSERT_REDUNDENT_EXPR_ELIMINATOR: string
                                public static ER_NOT_ALLOWED_IN_POSITION: string
                                public static ER_NONWHITESPACE_NOT_ALLOWED_IN_POSITION: string
                                public static ER_NAMESPACE_CONTEXT_NULL_NAMESPACE: string
                                public static ER_NAMESPACE_CONTEXT_NULL_PREFIX: string
                                public static ER_XPATH_RESOLVER_NULL_QNAME: string
                                public static ER_XPATH_RESOLVER_NEGATIVE_ARITY: string
                                public static INVALID_TCHAR: string
                                public static INVALID_QNAME: string
                                public static INVALID_ENUM: string
                                public static INVALID_NMTOKEN: string
                                public static INVALID_NCNAME: string
                                public static INVALID_BOOLEAN: string
                                public static INVALID_NUMBER: string
                                public static ER_ARG_LITERAL: string
                                public static ER_DUPLICATE_GLOBAL_VAR: string
                                public static ER_DUPLICATE_VAR: string
                                public static ER_TEMPLATE_NAME_MATCH: string
                                public static ER_INVALID_PREFIX: string
                                public static ER_NO_ATTRIB_SET: string
                                public static ER_FUNCTION_NOT_FOUND: string
                                public static ER_CANT_HAVE_CONTENT_AND_SELECT: string
                                public static ER_INVALID_SET_PARAM_VALUE: string
                                public static ER_SET_FEATURE_NULL_NAME: string
                                public static ER_GET_FEATURE_NULL_NAME: string
                                public static ER_UNSUPPORTED_FEATURE: string
                                public static ER_EXTENSION_ELEMENT_NOT_ALLOWED_IN_SECURE_PROCESSING: string
                                public static WG_FOUND_CURLYBRACE: string
                                public static WG_COUNT_ATTRIB_MATCHES_NO_ANCESTOR: string
                                public static WG_EXPR_ATTRIB_CHANGED_TO_SELECT: string
                                public static WG_NO_LOCALE_IN_FORMATNUMBER: string
                                public static WG_LOCALE_NOT_FOUND: string
                                public static WG_CANNOT_MAKE_URL_FROM: string
                                public static WG_CANNOT_LOAD_REQUESTED_DOC: string
                                public static WG_CANNOT_FIND_COLLATOR: string
                                public static WG_FUNCTIONS_SHOULD_USE_URL: string
                                public static WG_ENCODING_NOT_SUPPORTED_USING_UTF8: string
                                public static WG_ENCODING_NOT_SUPPORTED_USING_JAVA: string
                                public static WG_SPECIFICITY_CONFLICTS: string
                                public static WG_PARSING_AND_PREPARING: string
                                public static WG_ATTR_TEMPLATE: string
                                public static WG_CONFLICT_BETWEEN_XSLSTRIPSPACE_AND_XSLPRESERVESPACE: string
                                public static WG_ATTRIB_NOT_HANDLED: string
                                public static WG_NO_DECIMALFORMAT_DECLARATION: string
                                public static WG_OLD_XSLT_NS: string
                                public static WG_ONE_DEFAULT_XSLDECIMALFORMAT_ALLOWED: string
                                public static WG_XSLDECIMALFORMAT_NAMES_MUST_BE_UNIQUE: string
                                public static WG_ILLEGAL_ATTRIBUTE: string
                                public static WG_COULD_NOT_RESOLVE_PREFIX: string
                                public static WG_STYLESHEET_REQUIRES_VERSION_ATTRIB: string
                                public static WG_ILLEGAL_ATTRIBUTE_NAME: string
                                public static WG_ILLEGAL_ATTRIBUTE_VALUE: string
                                public static WG_EMPTY_SECOND_ARG: string
                                public static WG_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML: string
                                public static WG_PROCESSINGINSTRUCTION_NOTVALID_NCNAME: string
                                public static WG_ILLEGAL_ATTRIBUTE_POSITION: string
                                public static NO_MODIFICATION_ALLOWED_ERR: string
                                public static BAD_CODE: string
                                public static FORMAT_FAILED: string
                                public static ERROR_STRING: string
                                public static ERROR_HEADER: string
                                public static WARNING_HEADER: string
                                public static XSL_HEADER: string
                                public static XML_HEADER: string
                                public static QUERY_HEADER: string
                                public constructor()
                                public getContents(): java.lang.Object[][]
                                public static class: java.lang.Class<any>
                            }
                            class XSLTErrorResources_zh_TW extends java.util.ListResourceBundle {
                                public static ER_INVALID_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX: string
                                public static ER_INVALID_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX_FOR_DEFAULT: string
                                public static ER_NO_CURLYBRACE: string
                                public static ER_FUNCTION_NOT_SUPPORTED: string
                                public static ER_ILLEGAL_ATTRIBUTE: string
                                public static ER_NULL_SOURCENODE_APPLYIMPORTS: string
                                public static ER_CANNOT_ADD: string
                                public static ER_NULL_SOURCENODE_HANDLEAPPLYTEMPLATES: string
                                public static ER_NO_NAME_ATTRIB: string
                                public static ER_TEMPLATE_NOT_FOUND: string
                                public static ER_CANT_RESOLVE_NAME_AVT: string
                                public static ER_REQUIRES_ATTRIB: string
                                public static ER_MUST_HAVE_TEST_ATTRIB: string
                                public static ER_BAD_VAL_ON_LEVEL_ATTRIB: string
                                public static ER_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML: string
                                public static ER_PROCESSINGINSTRUCTION_NOTVALID_NCNAME: string
                                public static ER_NEED_MATCH_ATTRIB: string
                                public static ER_NEED_NAME_OR_MATCH_ATTRIB: string
                                public static ER_CANT_RESOLVE_NSPREFIX: string
                                public static ER_ILLEGAL_VALUE: string
                                public static ER_NO_OWNERDOC: string
                                public static ER_ELEMTEMPLATEELEM_ERR: string
                                public static ER_NULL_CHILD: string
                                public static ER_NEED_SELECT_ATTRIB: string
                                public static ER_NEED_TEST_ATTRIB: string
                                public static ER_NEED_NAME_ATTRIB: string
                                public static ER_NO_CONTEXT_OWNERDOC: string
                                public static ER_COULD_NOT_CREATE_XML_PROC_LIAISON: string
                                public static ER_PROCESS_NOT_SUCCESSFUL: string
                                public static ER_NOT_SUCCESSFUL: string
                                public static ER_ENCODING_NOT_SUPPORTED: string
                                public static ER_COULD_NOT_CREATE_TRACELISTENER: string
                                public static ER_KEY_REQUIRES_NAME_ATTRIB: string
                                public static ER_KEY_REQUIRES_MATCH_ATTRIB: string
                                public static ER_KEY_REQUIRES_USE_ATTRIB: string
                                public static ER_REQUIRES_ELEMENTS_ATTRIB: string
                                public static ER_MISSING_PREFIX_ATTRIB: string
                                public static ER_BAD_STYLESHEET_URL: string
                                public static ER_FILE_NOT_FOUND: string
                                public static ER_IOEXCEPTION: string
                                public static ER_NO_HREF_ATTRIB: string
                                public static ER_STYLESHEET_INCLUDES_ITSELF: string
                                public static ER_PROCESSINCLUDE_ERROR: string
                                public static ER_MISSING_LANG_ATTRIB: string
                                public static ER_MISSING_CONTAINER_ELEMENT_COMPONENT: string
                                public static ER_CAN_ONLY_OUTPUT_TO_ELEMENT: string
                                public static ER_PROCESS_ERROR: string
                                public static ER_UNIMPLNODE_ERROR: string
                                public static ER_NO_SELECT_EXPRESSION: string
                                public static ER_CANNOT_SERIALIZE_XSLPROCESSOR: string
                                public static ER_NO_INPUT_STYLESHEET: string
                                public static ER_FAILED_PROCESS_STYLESHEET: string
                                public static ER_COULDNT_PARSE_DOC: string
                                public static ER_COULDNT_FIND_FRAGMENT: string
                                public static ER_NODE_NOT_ELEMENT: string
                                public static ER_FOREACH_NEED_MATCH_OR_NAME_ATTRIB: string
                                public static ER_TEMPLATES_NEED_MATCH_OR_NAME_ATTRIB: string
                                public static ER_NO_CLONE_OF_DOCUMENT_FRAG: string
                                public static ER_CANT_CREATE_ITEM: string
                                public static ER_XMLSPACE_ILLEGAL_VALUE: string
                                public static ER_NO_XSLKEY_DECLARATION: string
                                public static ER_CANT_CREATE_URL: string
                                public static ER_XSLFUNCTIONS_UNSUPPORTED: string
                                public static ER_PROCESSOR_ERROR: string
                                public static ER_NOT_ALLOWED_INSIDE_STYLESHEET: string
                                public static ER_RESULTNS_NOT_SUPPORTED: string
                                public static ER_DEFAULTSPACE_NOT_SUPPORTED: string
                                public static ER_INDENTRESULT_NOT_SUPPORTED: string
                                public static ER_ILLEGAL_ATTRIB: string
                                public static ER_UNKNOWN_XSL_ELEM: string
                                public static ER_BAD_XSLSORT_USE: string
                                public static ER_MISPLACED_XSLWHEN: string
                                public static ER_XSLWHEN_NOT_PARENTED_BY_XSLCHOOSE: string
                                public static ER_MISPLACED_XSLOTHERWISE: string
                                public static ER_XSLOTHERWISE_NOT_PARENTED_BY_XSLCHOOSE: string
                                public static ER_NOT_ALLOWED_INSIDE_TEMPLATE: string
                                public static ER_UNKNOWN_EXT_NS_PREFIX: string
                                public static ER_IMPORTS_AS_FIRST_ELEM: string
                                public static ER_IMPORTING_ITSELF: string
                                public static ER_XMLSPACE_ILLEGAL_VAL: string
                                public static ER_PROCESSSTYLESHEET_NOT_SUCCESSFUL: string
                                public static ER_SAX_EXCEPTION: string
                                public static ER_XSLT_ERROR: string
                                public static ER_CURRENCY_SIGN_ILLEGAL: string
                                public static ER_DOCUMENT_FUNCTION_INVALID_IN_STYLESHEET_DOM: string
                                public static ER_CANT_RESOLVE_PREFIX_OF_NON_PREFIX_RESOLVER: string
                                public static ER_REDIRECT_COULDNT_GET_FILENAME: string
                                public static ER_CANNOT_BUILD_FORMATTERLISTENER_IN_REDIRECT: string
                                public static ER_INVALID_PREFIX_IN_EXCLUDERESULTPREFIX: string
                                public static ER_MISSING_NS_URI: string
                                public static ER_MISSING_ARG_FOR_OPTION: string
                                public static ER_INVALID_OPTION: string
                                public static ER_MALFORMED_FORMAT_STRING: string
                                public static ER_STYLESHEET_REQUIRES_VERSION_ATTRIB: string
                                public static ER_ILLEGAL_ATTRIBUTE_VALUE: string
                                public static ER_CHOOSE_REQUIRES_WHEN: string
                                public static ER_NO_APPLY_IMPORT_IN_FOR_EACH: string
                                public static ER_CANT_USE_DTM_FOR_OUTPUT: string
                                public static ER_CANT_USE_DTM_FOR_INPUT: string
                                public static ER_CALL_TO_EXT_FAILED: string
                                public static ER_PREFIX_MUST_RESOLVE: string
                                public static ER_INVALID_UTF16_SURROGATE: string
                                public static ER_XSLATTRSET_USED_ITSELF: string
                                public static ER_CANNOT_MIX_XERCESDOM: string
                                public static ER_TOO_MANY_LISTENERS: string
                                public static ER_IN_ELEMTEMPLATEELEM_READOBJECT: string
                                public static ER_DUPLICATE_NAMED_TEMPLATE: string
                                public static ER_INVALID_KEY_CALL: string
                                public static ER_REFERENCING_ITSELF: string
                                public static ER_ILLEGAL_DOMSOURCE_INPUT: string
                                public static ER_CLASS_NOT_FOUND_FOR_OPTION: string
                                public static ER_REQUIRED_ELEM_NOT_FOUND: string
                                public static ER_INPUT_CANNOT_BE_NULL: string
                                public static ER_URI_CANNOT_BE_NULL: string
                                public static ER_FILE_CANNOT_BE_NULL: string
                                public static ER_SOURCE_CANNOT_BE_NULL: string
                                public static ER_CANNOT_INIT_BSFMGR: string
                                public static ER_CANNOT_CMPL_EXTENSN: string
                                public static ER_CANNOT_CREATE_EXTENSN: string
                                public static ER_INSTANCE_MTHD_CALL_REQUIRES: string
                                public static ER_INVALID_ELEMENT_NAME: string
                                public static ER_ELEMENT_NAME_METHOD_STATIC: string
                                public static ER_EXTENSION_FUNC_UNKNOWN: string
                                public static ER_MORE_MATCH_CONSTRUCTOR: string
                                public static ER_MORE_MATCH_METHOD: string
                                public static ER_MORE_MATCH_ELEMENT: string
                                public static ER_INVALID_CONTEXT_PASSED: string
                                public static ER_POOL_EXISTS: string
                                public static ER_NO_DRIVER_NAME: string
                                public static ER_NO_URL: string
                                public static ER_POOL_SIZE_LESSTHAN_ONE: string
                                public static ER_INVALID_DRIVER: string
                                public static ER_NO_STYLESHEETROOT: string
                                public static ER_ILLEGAL_XMLSPACE_VALUE: string
                                public static ER_PROCESSFROMNODE_FAILED: string
                                public static ER_RESOURCE_COULD_NOT_LOAD: string
                                public static ER_BUFFER_SIZE_LESSTHAN_ZERO: string
                                public static ER_UNKNOWN_ERROR_CALLING_EXTENSION: string
                                public static ER_NO_NAMESPACE_DECL: string
                                public static ER_ELEM_CONTENT_NOT_ALLOWED: string
                                public static ER_STYLESHEET_DIRECTED_TERMINATION: string
                                public static ER_ONE_OR_TWO: string
                                public static ER_TWO_OR_THREE: string
                                public static ER_COULD_NOT_LOAD_RESOURCE: string
                                public static ER_CANNOT_INIT_DEFAULT_TEMPLATES: string
                                public static ER_RESULT_NULL: string
                                public static ER_RESULT_COULD_NOT_BE_SET: string
                                public static ER_NO_OUTPUT_SPECIFIED: string
                                public static ER_CANNOT_TRANSFORM_TO_RESULT_TYPE: string
                                public static ER_CANNOT_TRANSFORM_SOURCE_TYPE: string
                                public static ER_NULL_CONTENT_HANDLER: string
                                public static ER_NULL_ERROR_HANDLER: string
                                public static ER_CANNOT_CALL_PARSE: string
                                public static ER_NO_PARENT_FOR_FILTER: string
                                public static ER_NO_STYLESHEET_IN_MEDIA: string
                                public static ER_NO_STYLESHEET_PI: string
                                public static ER_NOT_SUPPORTED: string
                                public static ER_PROPERTY_VALUE_BOOLEAN: string
                                public static ER_COULD_NOT_FIND_EXTERN_SCRIPT: string
                                public static ER_RESOURCE_COULD_NOT_FIND: string
                                public static ER_OUTPUT_PROPERTY_NOT_RECOGNIZED: string
                                public static ER_FAILED_CREATING_ELEMLITRSLT: string
                                public static ER_VALUE_SHOULD_BE_NUMBER: string
                                public static ER_VALUE_SHOULD_EQUAL: string
                                public static ER_FAILED_CALLING_METHOD: string
                                public static ER_FAILED_CREATING_ELEMTMPL: string
                                public static ER_CHARS_NOT_ALLOWED: string
                                public static ER_ATTR_NOT_ALLOWED: string
                                public static ER_BAD_VALUE: string
                                public static ER_ATTRIB_VALUE_NOT_FOUND: string
                                public static ER_ATTRIB_VALUE_NOT_RECOGNIZED: string
                                public static ER_NULL_URI_NAMESPACE: string
                                public static ER_NUMBER_TOO_BIG: string
                                public static ER_CANNOT_FIND_SAX1_DRIVER: string
                                public static ER_SAX1_DRIVER_NOT_LOADED: string
                                public static ER_SAX1_DRIVER_NOT_INSTANTIATED: string
                                public static ER_SAX1_DRIVER_NOT_IMPLEMENT_PARSER: string
                                public static ER_PARSER_PROPERTY_NOT_SPECIFIED: string
                                public static ER_PARSER_ARG_CANNOT_BE_NULL: string
                                public static ER_FEATURE: string
                                public static ER_PROPERTY: string
                                public static ER_NULL_ENTITY_RESOLVER: string
                                public static ER_NULL_DTD_HANDLER: string
                                public static ER_NO_DRIVER_NAME_SPECIFIED: string
                                public static ER_NO_URL_SPECIFIED: string
                                public static ER_POOLSIZE_LESS_THAN_ONE: string
                                public static ER_INVALID_DRIVER_NAME: string
                                public static ER_ERRORLISTENER: string
                                public static ER_ASSERT_NO_TEMPLATE_PARENT: string
                                public static ER_ASSERT_REDUNDENT_EXPR_ELIMINATOR: string
                                public static ER_NOT_ALLOWED_IN_POSITION: string
                                public static ER_NONWHITESPACE_NOT_ALLOWED_IN_POSITION: string
                                public static ER_NAMESPACE_CONTEXT_NULL_NAMESPACE: string
                                public static ER_NAMESPACE_CONTEXT_NULL_PREFIX: string
                                public static ER_XPATH_RESOLVER_NULL_QNAME: string
                                public static ER_XPATH_RESOLVER_NEGATIVE_ARITY: string
                                public static INVALID_TCHAR: string
                                public static INVALID_QNAME: string
                                public static INVALID_ENUM: string
                                public static INVALID_NMTOKEN: string
                                public static INVALID_NCNAME: string
                                public static INVALID_BOOLEAN: string
                                public static INVALID_NUMBER: string
                                public static ER_ARG_LITERAL: string
                                public static ER_DUPLICATE_GLOBAL_VAR: string
                                public static ER_DUPLICATE_VAR: string
                                public static ER_TEMPLATE_NAME_MATCH: string
                                public static ER_INVALID_PREFIX: string
                                public static ER_NO_ATTRIB_SET: string
                                public static ER_FUNCTION_NOT_FOUND: string
                                public static ER_CANT_HAVE_CONTENT_AND_SELECT: string
                                public static ER_INVALID_SET_PARAM_VALUE: string
                                public static ER_SET_FEATURE_NULL_NAME: string
                                public static ER_GET_FEATURE_NULL_NAME: string
                                public static ER_UNSUPPORTED_FEATURE: string
                                public static ER_EXTENSION_ELEMENT_NOT_ALLOWED_IN_SECURE_PROCESSING: string
                                public static WG_FOUND_CURLYBRACE: string
                                public static WG_COUNT_ATTRIB_MATCHES_NO_ANCESTOR: string
                                public static WG_EXPR_ATTRIB_CHANGED_TO_SELECT: string
                                public static WG_NO_LOCALE_IN_FORMATNUMBER: string
                                public static WG_LOCALE_NOT_FOUND: string
                                public static WG_CANNOT_MAKE_URL_FROM: string
                                public static WG_CANNOT_LOAD_REQUESTED_DOC: string
                                public static WG_CANNOT_FIND_COLLATOR: string
                                public static WG_FUNCTIONS_SHOULD_USE_URL: string
                                public static WG_ENCODING_NOT_SUPPORTED_USING_UTF8: string
                                public static WG_ENCODING_NOT_SUPPORTED_USING_JAVA: string
                                public static WG_SPECIFICITY_CONFLICTS: string
                                public static WG_PARSING_AND_PREPARING: string
                                public static WG_ATTR_TEMPLATE: string
                                public static WG_CONFLICT_BETWEEN_XSLSTRIPSPACE_AND_XSLPRESERVESPACE: string
                                public static WG_ATTRIB_NOT_HANDLED: string
                                public static WG_NO_DECIMALFORMAT_DECLARATION: string
                                public static WG_OLD_XSLT_NS: string
                                public static WG_ONE_DEFAULT_XSLDECIMALFORMAT_ALLOWED: string
                                public static WG_XSLDECIMALFORMAT_NAMES_MUST_BE_UNIQUE: string
                                public static WG_ILLEGAL_ATTRIBUTE: string
                                public static WG_COULD_NOT_RESOLVE_PREFIX: string
                                public static WG_STYLESHEET_REQUIRES_VERSION_ATTRIB: string
                                public static WG_ILLEGAL_ATTRIBUTE_NAME: string
                                public static WG_ILLEGAL_ATTRIBUTE_VALUE: string
                                public static WG_EMPTY_SECOND_ARG: string
                                public static WG_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML: string
                                public static WG_PROCESSINGINSTRUCTION_NOTVALID_NCNAME: string
                                public static WG_ILLEGAL_ATTRIBUTE_POSITION: string
                                public static NO_MODIFICATION_ALLOWED_ERR: string
                                public static BAD_CODE: string
                                public static FORMAT_FAILED: string
                                public static ERROR_STRING: string
                                public static ERROR_HEADER: string
                                public static WARNING_HEADER: string
                                public static XSL_HEADER: string
                                public static XML_HEADER: string
                                public static QUERY_HEADER: string
                                public constructor()
                                public getContents(): java.lang.Object[][]
                                public static class: java.lang.Class<any>
                            }
                        }
                        namespace templates {
                            class Constants extends com.sun.org.apache.xml.internal.utils.Constants {
                                public static ELEMNAME_UNDEFINED: int
                                public static ELEMNAME_WITHPARAM: int
                                public static ELEMNAME_ADDATTRIBUTE: int
                                public static ELEMNAME_ANCHOR: int
                                public static ELEMNAME_APPLY_TEMPLATES: int
                                public static ELEMNAME_USE: int
                                public static ELEMNAME_CHILDREN: int
                                public static ELEMNAME_CHOOSE: int
                                public static ELEMNAME_COMMENT: int
                                public static ELEMNAME_CONSTRUCT: int
                                public static ELEMNAME_CONTENTS: int
                                public static ELEMNAME_COPY: int
                                public static ELEMNAME_COPY_OF: int
                                public static ELEMNAME_DECIMALFORMAT: int
                                public static ELEMNAME_DEFINEATTRIBUTESET: int
                                public static ELEMNAME_DEFINESCRIPT: int
                                public static ELEMNAME_DISPLAYIF: int
                                public static ELEMNAME_EMPTY: int
                                public static ELEMNAME_EVAL: int
                                public static ELEMNAME_EXPECTEDCHILDREN: int
                                public static ELEMNAME_EXTENSION: int
                                public static ELEMNAME_EXTENSIONHANDLER: int
                                public static ELEMNAME_FOREACH: int
                                public static ELEMNAME_KEY: int
                                public static ELEMNAME_IF: int
                                public static ELEMNAME_IMPORT: int
                                public static ELEMNAME_INCLUDE: int
                                public static ELEMNAME_CALLTEMPLATE: int
                                public static ELEMNAME_PARAMVARIABLE: int
                                public static ELEMNAME_NUMBER: int
                                public static ELEMNAME_NSALIAS: int
                                public static ELEMNAME_OTHERWISE: int
                                public static ELEMNAME_PI: int
                                public static ELEMNAME_PRESERVESPACE: int
                                public static ELEMNAME_REMOVEATTRIBUTE: int
                                public static ELEMNAME_TEMPLATE: int
                                public static ELEMNAME_SORT: int
                                public static ELEMNAME_STRIPSPACE: int
                                public static ELEMNAME_STYLESHEET: int
                                public static ELEMNAME_TEXT: int
                                public static ELEMNAME_VALUEOF: int
                                public static ELEMNAME_WHEN: int
                                public static ELEMNAME_ROOT: int
                                public static ELEMNAME_ANY: int
                                public static ELEMNAME_ELEMENT: int
                                public static ELEMNAME_TARGETELEMENT: int
                                public static ELEMNAME_ATTRIBUTE: int
                                public static ELEMNAME_TARGETATTRIBUTE: int
                                public static ELEMNAME_URL: int
                                public static ELEMNAME_CALL: int
                                public static ELEMNAME_FALLBACK: int
                                public static ELEMNAME_TARGETPI: int
                                public static ELEMNAME_TARGETCOMMENT: int
                                public static ELEMNAME_TARGETTEXT: int
                                public static ELEMNAME_CSSSTYLECONVERSION: int
                                public static ELEMNAME_COUNTER: int
                                public static ELEMNAME_COUNTERS: int
                                public static ELEMNAME_COUNTERINCREMENT: int
                                public static ELEMNAME_COUNTERRESET: int
                                public static ELEMNAME_COUNTERSCOPE: int
                                public static ELEMNAME_APPLY_IMPORTS: int
                                public static ELEMNAME_VARIABLE: int
                                public static ELEMNAME_MESSAGE: int
                                public static ELEMNAME_LOCALE: int
                                public static ELEMNAME_LITERALRESULT: int
                                public static ELEMNAME_TEXTLITERALRESULT: int
                                public static ELEMNAME_EXTENSIONCALL: int
                                public static ELEMNAME_EXTENSIONDECL: int
                                public static ELEMNAME_EXTENSIONSCRIPT: int
                                public static ELEMNAME_OUTPUT: int
                                public static ELEMNAME_COMPONENT: int
                                public static ELEMNAME_SCRIPT: int
                                public static ELEMNAME_ANCHOR_STRING: string
                                public static ELEMNAME_ANY_STRING: string
                                public static ELEMNAME_APPLY_IMPORTS_STRING: string
                                public static ELEMNAME_APPLY_TEMPLATES_STRING: string
                                public static ELEMNAME_ARG_STRING: string
                                public static ELEMNAME_ATTRIBUTESET_STRING: string
                                public static ELEMNAME_ATTRIBUTE_STRING: string
                                public static ELEMNAME_CALLTEMPLATEARG_STRING: string
                                public static ELEMNAME_CALLTEMPLATE_STRING: string
                                public static ELEMNAME_CALL_STRING: string
                                public static ELEMNAME_CHILDREN_STRING: string
                                public static ELEMNAME_CHOOSE_STRING: string
                                public static ELEMNAME_COMMENT_STRING: string
                                public static ELEMNAME_COMPONENT_STRING: string
                                public static ELEMNAME_CONSTRUCT_STRING: string
                                public static ELEMNAME_CONTENTS_STRING: string
                                public static ELEMNAME_COPY_OF_STRING: string
                                public static ELEMNAME_COPY_STRING: string
                                public static ELEMNAME_COUNTERINCREMENT_STRING: string
                                public static ELEMNAME_COUNTERRESET_STRING: string
                                public static ELEMNAME_COUNTERSCOPE_STRING: string
                                public static ELEMNAME_COUNTERS_STRING: string
                                public static ELEMNAME_COUNTER_STRING: string
                                public static ELEMNAME_CSSSTYLECONVERSION_STRING: string
                                public static ELEMNAME_DECIMALFORMAT_STRING: string
                                public static ELEMNAME_DISPLAYIF_STRING: string
                                public static ELEMNAME_ELEMENT_STRING: string
                                public static ELEMNAME_EMPTY_STRING: string
                                public static ELEMNAME_EVAL_STRING: string
                                public static ELEMNAME_EXPECTEDCHILDREN_STRING: string
                                public static ELEMNAME_EXTENSIONHANDLER_STRING: string
                                public static ELEMNAME_EXTENSION_STRING: string
                                public static ELEMNAME_FALLBACK_STRING: string
                                public static ELEMNAME_FOREACH_STRING: string
                                public static ELEMNAME_IF_STRING: string
                                public static ELEMNAME_IMPORT_STRING: string
                                public static ELEMNAME_INCLUDE_STRING: string
                                public static ELEMNAME_KEY_STRING: string
                                public static ELEMNAME_LOCALE_STRING: string
                                public static ELEMNAME_MESSAGE_STRING: string
                                public static ELEMNAME_NSALIAS_STRING: string
                                public static ELEMNAME_NUMBER_STRING: string
                                public static ELEMNAME_OTHERWISE_STRING: string
                                public static ELEMNAME_OUTPUT_STRING: string
                                public static ELEMNAME_PARAMVARIABLE_STRING: string
                                public static ELEMNAME_PI_OLD_STRING: string
                                public static ELEMNAME_PI_STRING: string
                                public static ELEMNAME_PRESERVESPACE_STRING: string
                                public static ELEMNAME_ROOT_STRING: string
                                public static ELEMNAME_SCRIPT_STRING: string
                                public static ELEMNAME_SORT_STRING: string
                                public static ELEMNAME_STRIPSPACE_STRING: string
                                public static ELEMNAME_STYLESHEET_STRING: string
                                public static ELEMNAME_TARGETATTRIBUTE_STRING: string
                                public static ELEMNAME_TARGETCOMMENT_STRING: string
                                public static ELEMNAME_TARGETELEMENT_STRING: string
                                public static ELEMNAME_TARGETPI_STRING: string
                                public static ELEMNAME_TARGETTEXT_STRING: string
                                public static ELEMNAME_TEMPLATE_STRING: string
                                public static ELEMNAME_TEXT_STRING: string
                                public static ELEMNAME_TRANSFORM_STRING: string
                                public static ELEMNAME_URL_STRING: string
                                public static ELEMNAME_USE_STRING: string
                                public static ELEMNAME_VALUEOF_STRING: string
                                public static ELEMNAME_VARIABLE_STRING: string
                                public static ELEMNAME_WHEN_STRING: string
                                public static ELEMNAME_WITHPARAM_STRING: string
                                public static EXSLT_ELEMNAME_FUNCTION_STRING: string
                                public static EXSLT_ELEMNAME_FUNCRESULT_STRING: string
                                public static EXSLT_ELEMNAME_FUNCTION: int
                                public static EXSLT_ELEMNAME_FUNCRESULT: int
                                public static ATTRNAME_AMOUNT: string
                                public static ATTRNAME_ANCESTOR: string
                                public static ATTRNAME_ARCHIVE: string
                                public static ATTRNAME_ATTRIBUTE: string
                                public static ATTRNAME_ATTRIBUTE_SET: string
                                public static ATTRNAME_CASEORDER: string
                                public static ATTRNAME_CLASS: string
                                public static ATTRNAME_CLASSID: string
                                public static ATTRNAME_CODEBASE: string
                                public static ATTRNAME_CODETYPE: string
                                public static ATTRNAME_CONDITION: string
                                public static ATTRNAME_COPYTYPE: string
                                public static ATTRNAME_COUNT: string
                                public static ATTRNAME_DATATYPE: string
                                public static ATTRNAME_DECIMALSEPARATOR: string
                                public static ATTRNAME_DEFAULT: string
                                public static ATTRNAME_DEFAULTSPACE: string
                                public static ATTRNAME_DEPTH: string
                                public static ATTRNAME_DIGIT: string
                                public static ATTRNAME_DIGITGROUPSEP: string
                                public static ATTRNAME_DISABLE_OUTPUT_ESCAPING: string
                                public static ATTRNAME_ELEMENT: string
                                public static ATTRNAME_ELEMENTS: string
                                public static ATTRNAME_EXCLUDE_RESULT_PREFIXES: string
                                public static ATTRNAME_EXPR: string
                                public static ATTRNAME_EXTENSIONELEMENTPREFIXES: string
                                public static ATTRNAME_FORMAT: string
                                public static ATTRNAME_FROM: string
                                public static ATTRNAME_GROUPINGSEPARATOR: string
                                public static ATTRNAME_GROUPINGSIZE: string
                                public static ATTRNAME_HREF: string
                                public static ATTRNAME_ID: string
                                public static ATTRNAME_IMPORTANCE: string
                                public static ATTRNAME_INDENTRESULT: string
                                public static ATTRNAME_INFINITY: string
                                public static ATTRNAME_LANG: string
                                public static ATTRNAME_LETTERVALUE: string
                                public static ATTRNAME_LEVEL: string
                                public static ATTRNAME_MATCH: string
                                public static ATTRNAME_METHOD: string
                                public static ATTRNAME_MINUSSIGN: string
                                public static ATTRNAME_MODE: string
                                public static ATTRNAME_NAME: string
                                public static ATTRNAME_NAMESPACE: string
                                public static ATTRNAME_NAN: string
                                public static ATTRNAME_NDIGITSPERGROUP: string
                                public static ATTRNAME_NS: string
                                public static ATTRNAME_ONLY: string
                                public static ATTRNAME_ORDER: string
                                public static ATTRNAME_OUTPUT_CDATA_SECTION_ELEMENTS: string
                                public static ATTRNAME_OUTPUT_DOCTYPE_PUBLIC: string
                                public static ATTRNAME_OUTPUT_DOCTYPE_SYSTEM: string
                                public static ATTRNAME_OUTPUT_ENCODING: string
                                public static ATTRNAME_OUTPUT_INDENT: string
                                public static ATTRNAME_OUTPUT_MEDIATYPE: string
                                public static ATTRNAME_OUTPUT_METHOD: string
                                public static ATTRNAME_OUTPUT_OMITXMLDECL: string
                                public static ATTRNAME_OUTPUT_STANDALONE: string
                                public static ATTRNAME_OUTPUT_VERSION: string
                                public static ATTRNAME_PATTERNSEPARATOR: string
                                public static ATTRNAME_PERCENT: string
                                public static ATTRNAME_PERMILLE: string
                                public static ATTRNAME_PRIORITY: string
                                public static ATTRNAME_REFID: string
                                public static ATTRNAME_RESULTNS: string
                                public static ATTRNAME_RESULT_PREFIX: string
                                public static ATTRNAME_SELECT: string
                                public static ATTRNAME_SEQUENCESRC: string
                                public static ATTRNAME_STYLE: string
                                public static ATTRNAME_STYLESHEET_PREFIX: string
                                public static ATTRNAME_TERMINATE: string
                                public static ATTRNAME_TEST: string
                                public static ATTRNAME_TOSTRING: string
                                public static ATTRNAME_TYPE: string
                                public static ATTRNAME_USE: string
                                public static ATTRNAME_USEATTRIBUTESETS: string
                                public static ATTRNAME_VALUE: string
                                public static ATTRNAME_VERSION: string
                                public static ATTRNAME_XMLNS: string
                                public static ATTRNAME_XMLNSDEF: string
                                public static ATTRNAME_XMLSPACE: string
                                public static ATTRNAME_ZERODIGIT: string
                                public static TATTRNAME_OUTPUT_METHOD: int
                                public static TATTRNAME_AMOUNT: int
                                public static TATTRNAME_ANCESTOR: int
                                public static TATTRNAME_ARCHIVE: int
                                public static TATTRNAME_ATTRIBUTE: int
                                public static TATTRNAME_ATTRIBUTE_SET: int
                                public static TATTRNAME_CASEORDER: int
                                public static TATTRNAME_CLASS: int
                                public static TATTRNAME_CLASSID: int
                                public static TATTRNAME_CODEBASE: int
                                public static TATTRNAME_CODETYPE: int
                                public static TATTRNAME_CONDITION: int
                                public static TATTRNAME_COPYTYPE: int
                                public static TATTRNAME_COUNT: int
                                public static TATTRNAME_DATATYPE: int
                                public static TATTRNAME_DEFAULT: int
                                public static TATTRNAME_DEFAULTSPACE: int
                                public static TATTRNAME_DEPTH: int
                                public static TATTRNAME_DIGITGROUPSEP: int
                                public static TATTRNAME_DISABLE_OUTPUT_ESCAPING: int
                                public static TATTRNAME_ELEMENT: int
                                public static TATTRNAME_ELEMENTS: int
                                public static TATTRNAME_EXPR: int
                                public static TATTRNAME_EXTENSIONELEMENTPREFIXES: int
                                public static TATTRNAME_FORMAT: int
                                public static TATTRNAME_FROM: int
                                public static TATTRNAME_GROUPINGSEPARATOR: int
                                public static TATTRNAME_GROUPINGSIZE: int
                                public static TATTRNAME_HREF: int
                                public static TATTRNAME_ID: int
                                public static TATTRNAME_IMPORTANCE: int
                                public static TATTRNAME_INDENTRESULT: int
                                public static TATTRNAME_LANG: int
                                public static TATTRNAME_LETTERVALUE: int
                                public static TATTRNAME_LEVEL: int
                                public static TATTRNAME_MATCH: int
                                public static TATTRNAME_METHOD: int
                                public static TATTRNAME_MODE: int
                                public static TATTRNAME_NAME: int
                                public static TATTRNAME_NAMESPACE: int
                                public static TATTRNAME_NDIGITSPERGROUP: int
                                public static TATTRNAME_NS: int
                                public static TATTRNAME_ONLY: int
                                public static TATTRNAME_ORDER: int
                                public static TATTRNAME_OUTPUT_CDATA_SECTION_ELEMENTS: int
                                public static TATTRNAME_OUTPUT_DOCTYPE_PUBLIC: int
                                public static TATTRNAME_OUTPUT_DOCTYPE_SYSTEM: int
                                public static TATTRNAME_OUTPUT_ENCODING: int
                                public static TATTRNAME_OUTPUT_INDENT: int
                                public static TATTRNAME_OUTPUT_MEDIATYPE: int
                                public static TATTRNAME_OUTPUT_STANDALONE: int
                                public static TATTRNAME_OUTPUT_VERSION: int
                                public static TATTRNAME_OUTPUT_OMITXMLDECL: int
                                public static TATTRNAME_PRIORITY: int
                                public static TATTRNAME_REFID: int
                                public static TATTRNAME_RESULTNS: int
                                public static TATTRNAME_SELECT: int
                                public static TATTRNAME_SEQUENCESRC: int
                                public static TATTRNAME_STYLE: int
                                public static TATTRNAME_TEST: int
                                public static TATTRNAME_TOSTRING: int
                                public static TATTRNAME_TYPE: int
                                public static TATTRNAME_USE: int
                                public static TATTRNAME_USEATTRIBUTESETS: int
                                public static TATTRNAME_VALUE: int
                                public static TATTRNAME_XMLNSDEF: int
                                public static TATTRNAME_XMLNS: int
                                public static TATTRNAME_XMLSPACE: int
                                public static TATTRNAME_EXCLUDE_RESULT_PREFIXES: int
                                public static ATTRVAL_OUTPUT_METHOD_HTML: string
                                public static ATTRVAL_OUTPUT_METHOD_XML: string
                                public static ATTRVAL_OUTPUT_METHOD_TEXT: string
                                public static ATTRVAL_PRESERVE: int
                                public static ATTRVAL_STRIP: int
                                public static ATTRVAL_YES: boolean
                                public static ATTRVAL_NO: boolean
                                public static ATTRVAL_ALPHABETIC: string
                                public static ATTRVAL_OTHER: string
                                public static ATTRVAL_TRADITIONAL: string
                                public static ATTRVAL_SINGLE: string
                                public static ATTRVAL_MULTI: string
                                public static ATTRVAL_ANY: string
                                public static ATTRVAL_DEFAULT_PREFIX: string
                                public static NUMBERLETTER_ALPHABETIC: int
                                public static NUMBERLETTER_TRADITIONAL: int
                                public static NUMBERLEVEL_SINGLE: int
                                public static NUMBERLEVEL_MULTI: int
                                public static NUMBERLEVEL_ANY: int
                                public static MAX_MULTI_COUNTING_DEPTH: int
                                public static ATTRVAL_THIS: string
                                public static ATTRVAL_PARENT: string
                                public static ATTRVAL_ANCESTOR: string
                                public static ATTRVAL_ID: string
                                public static ATTRVAL_DATATYPE_TEXT: string
                                public static ATTRVAL_DATATYPE_NUMBER: string
                                public static ATTRVAL_ORDER_ASCENDING: string
                                public static ATTRVAL_ORDER_DESCENDING: string
                                public static ATTRVAL_CASEORDER_UPPER: string
                                public static ATTRVAL_CASEORDER_LOWER: string
                                public static SORTDATATYPE_TEXT: int
                                public static SORTDATATYPE_NUMBER: int
                                public static SORTORDER_ASCENDING: int
                                public static SORTORDER_DESCENDING: int
                                public static SORTCASEORDER_UPPERFIRST: int
                                public static SORTCASEORDER_LOWERFIRST: int
                                public static ATTRVAL_INFINITY: string
                                public static ATTRVAL_NAN: string
                                public static DEFAULT_DECIMAL_FORMAT: string
                                public static ATTRNAME_XXXX: string
                                public constructor()
                                public static class: java.lang.Class<any>
                            }
                        }
                        namespace utils {
                            class ConfigurationError extends java.lang.Error {
                                public getException(): java.lang.Exception
                                public static class: java.lang.Class<any>
                            }
                            abstract class FeaturePropertyBase {
                                public constructor()
                                public setValue(arg0: java.lang.Enum, arg1: com.sun.org.apache.xalan.internal.utils.FeaturePropertyBase$State, arg2: java.lang.String | string): void
                                public setValue(arg0: int, arg1: com.sun.org.apache.xalan.internal.utils.FeaturePropertyBase$State, arg2: java.lang.String | string): void
                                public setValue(arg0: java.lang.String | string, arg1: com.sun.org.apache.xalan.internal.utils.FeaturePropertyBase$State, arg2: java.lang.Object): boolean
                                public setValue(arg0: java.lang.String | string, arg1: com.sun.org.apache.xalan.internal.utils.FeaturePropertyBase$State, arg2: boolean): boolean
                                public getValue(arg0: java.lang.Enum): string
                                public getValue(arg0: java.lang.String | string): string
                                public getValueAsString(arg0: java.lang.String | string): string
                                public getValueByIndex(arg0: int): string
                                public getIndex(arg0: java.lang.String | string): int
                                public getIndex<E extends java.lang.Enum<E>>(arg0: java.lang.Class<E>, arg1: java.lang.String | string): int
                                public static class: java.lang.Class<any>
                            }
                            class ObjectFactory {
                                public constructor()
                                public static findClassLoader(): java.lang.ClassLoader
                                public static newInstance(arg0: java.lang.String | string, arg1: boolean): java.lang.Object
                                public static findProviderClass(arg0: java.lang.String | string, arg1: boolean): java.lang.Class<any>
                                public static class: java.lang.Class<any>
                            }
                            class XMLSecurityManager {
                                public constructor()
                                public constructor(arg0: boolean)
                                public setSecureProcessing(arg0: boolean): void
                                public setLimit(arg0: java.lang.String | string, arg1: com.sun.org.apache.xalan.internal.utils.XMLSecurityManager$State, arg2: java.lang.Object): boolean
                                public setLimit(arg0: com.sun.org.apache.xalan.internal.utils.XMLSecurityManager$Limit, arg1: com.sun.org.apache.xalan.internal.utils.XMLSecurityManager$State, arg2: int): void
                                public setLimit(arg0: int, arg1: com.sun.org.apache.xalan.internal.utils.XMLSecurityManager$State, arg2: java.lang.Object): void
                                public setLimit(arg0: int, arg1: com.sun.org.apache.xalan.internal.utils.XMLSecurityManager$State, arg2: int): void
                                public getLimitAsString(arg0: java.lang.String | string): string
                                public getLimitValueAsString(arg0: com.sun.org.apache.xalan.internal.utils.XMLSecurityManager$Limit): string
                                public getLimit(arg0: com.sun.org.apache.xalan.internal.utils.XMLSecurityManager$Limit): int
                                public getLimitByIndex(arg0: int): int
                                public getLimitValueByIndex(arg0: int): string
                                public getState(arg0: com.sun.org.apache.xalan.internal.utils.XMLSecurityManager$Limit): com.sun.org.apache.xalan.internal.utils.XMLSecurityManager$State
                                public getStateLiteral(arg0: com.sun.org.apache.xalan.internal.utils.XMLSecurityManager$Limit): string
                                public getIndex(arg0: java.lang.String | string): int
                                public isSet(arg0: int): boolean
                                public printEntityCountInfo(): boolean
                                public static printWarning(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: org.xml.sax.SAXException): void
                                public static class: java.lang.Class<any>
                            }
                            class XMLSecurityPropertyManager extends com.sun.org.apache.xalan.internal.utils.FeaturePropertyBase {
                                public constructor()
                                public getIndex(arg0: java.lang.String | string): int
                                public static class: java.lang.Class<any>
                            }
                        }
                        namespace xsltc {
                            namespace compiler {
                                namespace util {
                                    class AttributeSetMethodGenerator extends com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator {
                                        protected static CURRENT_INDEX: int
                                        public constructor(arg0: java.lang.String | string, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator)
                                        public getLocalIndex(arg0: java.lang.String | string): int
                                        public loadParameter(arg0: int): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public storeParameter(arg0: int): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public static class: java.lang.Class<any>
                                    }
                                    class BooleanType extends com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type {
                                        protected constructor()
                                        public toString(): string
                                        public identicalTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type): boolean
                                        public toSignature(): string
                                        public isSimple(): boolean
                                        public toJCType(): com.sun.org.apache.bcel.internal.generic.Type
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: java.lang.Class): void
                                        public translateFrom(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: java.lang.Class): void
                                        public translateBox(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                        public translateUnBox(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                        public LOAD(arg0: int): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public STORE(arg0: int): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public GT(arg0: boolean): com.sun.org.apache.bcel.internal.generic.BranchInstruction
                                        public GE(arg0: boolean): com.sun.org.apache.bcel.internal.generic.BranchInstruction
                                        public LT(arg0: boolean): com.sun.org.apache.bcel.internal.generic.BranchInstruction
                                        public LE(arg0: boolean): com.sun.org.apache.bcel.internal.generic.BranchInstruction
                                        public static class: java.lang.Class<any>
                                    }
                                    class ClassGenerator extends com.sun.org.apache.bcel.internal.generic.ClassGen {
                                        protected static TRANSLET_INDEX: int
                                        protected static INVALID_INDEX: int
                                        public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: int, arg4: java.lang.String[], arg5: com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet)
                                        public getParser(): com.sun.org.apache.xalan.internal.xsltc.compiler.Parser
                                        public getStylesheet(): com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet
                                        public getClassName(): string
                                        public loadTranslet(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public getDOMClass(): string
                                        public getDOMClassSig(): string
                                        public getApplyTemplatesSig(): string
                                        public getApplyTemplatesSigForImport(): string
                                        public isExternal(): boolean
                                        public addMethod(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                        public static class: java.lang.Class<any>
                                    }
                                    class CompareGenerator extends com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator {
                                        public constructor(arg0: int, arg1: com.sun.org.apache.bcel.internal.generic.Type, arg2: com.sun.org.apache.bcel.internal.generic.Type[], arg3: java.lang.String[], arg4: java.lang.String | string, arg5: java.lang.String | string, arg6: com.sun.org.apache.bcel.internal.generic.InstructionList, arg7: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen)
                                        public loadLastNode(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public loadCurrentNode(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public storeCurrentNode(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public loadDOM(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public getHandlerIndex(): int
                                        public getIteratorIndex(): int
                                        public storeIterator(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public loadIterator(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public getLocalIndex(arg0: java.lang.String | string): int
                                        public static class: java.lang.Class<any>
                                    }
                                    class ErrorMessages extends java.util.ListResourceBundle {
                                        public constructor()
                                        public getContents(): java.lang.Object[][]
                                        public static class: java.lang.Class<any>
                                    }
                                    class ErrorMessages_ca extends java.util.ListResourceBundle {
                                        public constructor()
                                        public getContents(): java.lang.Object[][]
                                        public static class: java.lang.Class<any>
                                    }
                                    class ErrorMessages_cs extends java.util.ListResourceBundle {
                                        public constructor()
                                        public getContents(): java.lang.Object[][]
                                        public static class: java.lang.Class<any>
                                    }
                                    class ErrorMessages_de extends java.util.ListResourceBundle {
                                        public constructor()
                                        public getContents(): java.lang.Object[][]
                                        public static class: java.lang.Class<any>
                                    }
                                    class ErrorMessages_es extends java.util.ListResourceBundle {
                                        public constructor()
                                        public getContents(): java.lang.Object[][]
                                        public static class: java.lang.Class<any>
                                    }
                                    class ErrorMessages_fr extends java.util.ListResourceBundle {
                                        public constructor()
                                        public getContents(): java.lang.Object[][]
                                        public static class: java.lang.Class<any>
                                    }
                                    class ErrorMessages_it extends java.util.ListResourceBundle {
                                        public constructor()
                                        public getContents(): java.lang.Object[][]
                                        public static class: java.lang.Class<any>
                                    }
                                    class ErrorMessages_ja extends java.util.ListResourceBundle {
                                        public constructor()
                                        public getContents(): java.lang.Object[][]
                                        public static class: java.lang.Class<any>
                                    }
                                    class ErrorMessages_ko extends java.util.ListResourceBundle {
                                        public constructor()
                                        public getContents(): java.lang.Object[][]
                                        public static class: java.lang.Class<any>
                                    }
                                    class ErrorMessages_pt_BR extends java.util.ListResourceBundle {
                                        public constructor()
                                        public getContents(): java.lang.Object[][]
                                        public static class: java.lang.Class<any>
                                    }
                                    class ErrorMessages_sk extends java.util.ListResourceBundle {
                                        public constructor()
                                        public getContents(): java.lang.Object[][]
                                        public static class: java.lang.Class<any>
                                    }
                                    class ErrorMessages_sv extends java.util.ListResourceBundle {
                                        public constructor()
                                        public getContents(): java.lang.Object[][]
                                        public static class: java.lang.Class<any>
                                    }
                                    class ErrorMessages_zh_CN extends java.util.ListResourceBundle {
                                        public constructor()
                                        public getContents(): java.lang.Object[][]
                                        public static class: java.lang.Class<any>
                                    }
                                    class ErrorMessages_zh_TW extends java.util.ListResourceBundle {
                                        public constructor()
                                        public getContents(): java.lang.Object[][]
                                        public static class: java.lang.Class<any>
                                    }
                                    class ErrorMsg {
                                        public static MULTIPLE_STYLESHEET_ERR: string
                                        public static TEMPLATE_REDEF_ERR: string
                                        public static TEMPLATE_UNDEF_ERR: string
                                        public static VARIABLE_REDEF_ERR: string
                                        public static VARIABLE_UNDEF_ERR: string
                                        public static CLASS_NOT_FOUND_ERR: string
                                        public static METHOD_NOT_FOUND_ERR: string
                                        public static ARGUMENT_CONVERSION_ERR: string
                                        public static FILE_NOT_FOUND_ERR: string
                                        public static INVALID_URI_ERR: string
                                        public static FILE_ACCESS_ERR: string
                                        public static MISSING_ROOT_ERR: string
                                        public static NAMESPACE_UNDEF_ERR: string
                                        public static FUNCTION_RESOLVE_ERR: string
                                        public static NEED_LITERAL_ERR: string
                                        public static XPATH_PARSER_ERR: string
                                        public static REQUIRED_ATTR_ERR: string
                                        public static ILLEGAL_CHAR_ERR: string
                                        public static ILLEGAL_PI_ERR: string
                                        public static STRAY_ATTRIBUTE_ERR: string
                                        public static ILLEGAL_ATTRIBUTE_ERR: string
                                        public static CIRCULAR_INCLUDE_ERR: string
                                        public static RESULT_TREE_SORT_ERR: string
                                        public static SYMBOLS_REDEF_ERR: string
                                        public static XSL_VERSION_ERR: string
                                        public static CIRCULAR_VARIABLE_ERR: string
                                        public static ILLEGAL_BINARY_OP_ERR: string
                                        public static ILLEGAL_ARG_ERR: string
                                        public static DOCUMENT_ARG_ERR: string
                                        public static MISSING_WHEN_ERR: string
                                        public static MULTIPLE_OTHERWISE_ERR: string
                                        public static STRAY_OTHERWISE_ERR: string
                                        public static STRAY_WHEN_ERR: string
                                        public static WHEN_ELEMENT_ERR: string
                                        public static UNNAMED_ATTRIBSET_ERR: string
                                        public static ILLEGAL_CHILD_ERR: string
                                        public static ILLEGAL_ELEM_NAME_ERR: string
                                        public static ILLEGAL_ATTR_NAME_ERR: string
                                        public static ILLEGAL_TEXT_NODE_ERR: string
                                        public static SAX_PARSER_CONFIG_ERR: string
                                        public static INTERNAL_ERR: string
                                        public static UNSUPPORTED_XSL_ERR: string
                                        public static UNSUPPORTED_EXT_ERR: string
                                        public static MISSING_XSLT_URI_ERR: string
                                        public static MISSING_XSLT_TARGET_ERR: string
                                        public static ACCESSING_XSLT_TARGET_ERR: string
                                        public static NOT_IMPLEMENTED_ERR: string
                                        public static NOT_STYLESHEET_ERR: string
                                        public static ELEMENT_PARSE_ERR: string
                                        public static KEY_USE_ATTR_ERR: string
                                        public static OUTPUT_VERSION_ERR: string
                                        public static ILLEGAL_RELAT_OP_ERR: string
                                        public static ATTRIBSET_UNDEF_ERR: string
                                        public static ATTR_VAL_TEMPLATE_ERR: string
                                        public static UNKNOWN_SIG_TYPE_ERR: string
                                        public static DATA_CONVERSION_ERR: string
                                        public static NO_TRANSLET_CLASS_ERR: string
                                        public static NO_MAIN_TRANSLET_ERR: string
                                        public static TRANSLET_CLASS_ERR: string
                                        public static TRANSLET_OBJECT_ERR: string
                                        public static ERROR_LISTENER_NULL_ERR: string
                                        public static JAXP_UNKNOWN_SOURCE_ERR: string
                                        public static JAXP_NO_SOURCE_ERR: string
                                        public static JAXP_COMPILE_ERR: string
                                        public static JAXP_INVALID_ATTR_ERR: string
                                        public static JAXP_INVALID_ATTR_VALUE_ERR: string
                                        public static JAXP_SET_RESULT_ERR: string
                                        public static JAXP_NO_TRANSLET_ERR: string
                                        public static JAXP_NO_HANDLER_ERR: string
                                        public static JAXP_NO_RESULT_ERR: string
                                        public static JAXP_UNKNOWN_PROP_ERR: string
                                        public static SAX2DOM_ADAPTER_ERR: string
                                        public static XSLTC_SOURCE_ERR: string
                                        public static ER_RESULT_NULL: string
                                        public static JAXP_INVALID_SET_PARAM_VALUE: string
                                        public static JAXP_SET_FEATURE_NULL_NAME: string
                                        public static JAXP_GET_FEATURE_NULL_NAME: string
                                        public static JAXP_UNSUPPORTED_FEATURE: string
                                        public static JAXP_SECUREPROCESSING_FEATURE: string
                                        public static COMPILE_STDIN_ERR: string
                                        public static COMPILE_USAGE_STR: string
                                        public static TRANSFORM_USAGE_STR: string
                                        public static STRAY_SORT_ERR: string
                                        public static UNSUPPORTED_ENCODING: string
                                        public static SYNTAX_ERR: string
                                        public static CONSTRUCTOR_NOT_FOUND: string
                                        public static NO_JAVA_FUNCT_THIS_REF: string
                                        public static TYPE_CHECK_ERR: string
                                        public static TYPE_CHECK_UNK_LOC_ERR: string
                                        public static ILLEGAL_CMDLINE_OPTION_ERR: string
                                        public static CMDLINE_OPT_MISSING_ARG_ERR: string
                                        public static WARNING_PLUS_WRAPPED_MSG: string
                                        public static WARNING_MSG: string
                                        public static FATAL_ERR_PLUS_WRAPPED_MSG: string
                                        public static FATAL_ERR_MSG: string
                                        public static ERROR_PLUS_WRAPPED_MSG: string
                                        public static ERROR_MSG: string
                                        public static TRANSFORM_WITH_TRANSLET_STR: string
                                        public static TRANSFORM_WITH_JAR_STR: string
                                        public static COULD_NOT_CREATE_TRANS_FACT: string
                                        public static TRANSLET_NAME_JAVA_CONFLICT: string
                                        public static INVALID_QNAME_ERR: string
                                        public static INVALID_NCNAME_ERR: string
                                        public static INVALID_METHOD_IN_OUTPUT: string
                                        public static OUTLINE_ERR_TRY_CATCH: string
                                        public static OUTLINE_ERR_UNBALANCED_MARKERS: string
                                        public static OUTLINE_ERR_DELETED_TARGET: string
                                        public static OUTLINE_ERR_METHOD_TOO_BIG: string
                                        public static DESERIALIZE_TRANSLET_ERR: string
                                        public static ERROR_MESSAGES_KEY: string
                                        public static COMPILER_ERROR_KEY: string
                                        public static COMPILER_WARNING_KEY: string
                                        public static RUNTIME_ERROR_KEY: string
                                        public constructor(arg0: java.lang.String | string)
                                        public constructor(arg0: java.lang.String | string, arg1: java.lang.Throwable)
                                        public constructor(arg0: java.lang.String | string, arg1: int)
                                        public constructor(arg0: java.lang.String | string, arg1: int, arg2: java.lang.Object)
                                        public constructor(arg0: java.lang.String | string, arg1: java.lang.Object)
                                        public constructor(arg0: java.lang.String | string, arg1: java.lang.Object, arg2: java.lang.Object)
                                        public constructor(arg0: java.lang.String | string, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode)
                                        public constructor(arg0: java.lang.String | string, arg1: java.lang.Object, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode)
                                        public constructor(arg0: java.lang.String | string, arg1: java.lang.Object, arg2: java.lang.Object, arg3: com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode)
                                        public getCause(): java.lang.Throwable
                                        public toString(): string
                                        public toString(arg0: java.lang.Object): string
                                        public toString(arg0: java.lang.Object, arg1: java.lang.Object): string
                                        public setWarningError(arg0: boolean): void
                                        public isWarningError(): boolean
                                        public static class: java.lang.Class<any>
                                    }
                                    class FilterGenerator extends com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator {
                                        public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: int, arg4: java.lang.String[], arg5: com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet)
                                        public loadTranslet(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public isExternal(): boolean
                                        public static class: java.lang.Class<any>
                                    }
                                    class IntType extends com.sun.org.apache.xalan.internal.xsltc.compiler.util.NumberType {
                                        protected constructor()
                                        public toString(): string
                                        public identicalTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type): boolean
                                        public toSignature(): string
                                        public toJCType(): com.sun.org.apache.bcel.internal.generic.Type
                                        public distanceTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type): int
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType): void
                                        public translateToDesynthesized(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType): com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: java.lang.Class): void
                                        public translateBox(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                        public translateUnBox(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                        public ADD(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public SUB(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public MUL(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public DIV(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public REM(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public NEG(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public LOAD(arg0: int): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public STORE(arg0: int): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public GT(arg0: boolean): com.sun.org.apache.bcel.internal.generic.BranchInstruction
                                        public GE(arg0: boolean): com.sun.org.apache.bcel.internal.generic.BranchInstruction
                                        public LT(arg0: boolean): com.sun.org.apache.bcel.internal.generic.BranchInstruction
                                        public LE(arg0: boolean): com.sun.org.apache.bcel.internal.generic.BranchInstruction
                                        public static class: java.lang.Class<any>
                                    }
                                    class InternalError extends java.lang.Error {
                                        public constructor(arg0: java.lang.String | string)
                                        public static class: java.lang.Class<any>
                                    }
                                    abstract class MarkerInstruction extends com.sun.org.apache.bcel.internal.generic.Instruction {
                                        public constructor()
                                        public accept(arg0: com.sun.org.apache.bcel.internal.generic.Visitor): void
                                        public consumeStack(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): int
                                        public produceStack(arg0: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen): int
                                        public copy(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public dump(arg0: java.io.DataOutputStream): void
                                        public static class: java.lang.Class<any>
                                    }
                                    class MatchGenerator extends com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator {
                                        public constructor(arg0: int, arg1: com.sun.org.apache.bcel.internal.generic.Type, arg2: com.sun.org.apache.bcel.internal.generic.Type[], arg3: java.lang.String[], arg4: java.lang.String | string, arg5: java.lang.String | string, arg6: com.sun.org.apache.bcel.internal.generic.InstructionList, arg7: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen)
                                        public loadCurrentNode(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public storeCurrentNode(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public getHandlerIndex(): int
                                        public loadDOM(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public setDomIndex(arg0: int): void
                                        public getIteratorIndex(): int
                                        public setIteratorIndex(arg0: int): void
                                        public getLocalIndex(arg0: java.lang.String | string): int
                                        public static class: java.lang.Class<any>
                                    }
                                    class MethodGenerator extends com.sun.org.apache.bcel.internal.generic.MethodGen implements com.sun.org.apache.xalan.internal.xsltc.compiler.Constants {
                                        protected static INVALID_INDEX: int
                                        public constructor(arg0: int, arg1: com.sun.org.apache.bcel.internal.generic.Type, arg2: com.sun.org.apache.bcel.internal.generic.Type[], arg3: java.lang.String[], arg4: java.lang.String | string, arg5: java.lang.String | string, arg6: com.sun.org.apache.bcel.internal.generic.InstructionList, arg7: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen)
                                        public addLocalVariable(arg0: java.lang.String | string, arg1: com.sun.org.apache.bcel.internal.generic.Type, arg2: com.sun.org.apache.bcel.internal.generic.InstructionHandle, arg3: com.sun.org.apache.bcel.internal.generic.InstructionHandle): com.sun.org.apache.bcel.internal.generic.LocalVariableGen
                                        public addLocalVariable2(arg0: java.lang.String | string, arg1: com.sun.org.apache.bcel.internal.generic.Type, arg2: com.sun.org.apache.bcel.internal.generic.InstructionHandle): com.sun.org.apache.bcel.internal.generic.LocalVariableGen
                                        public removeLocalVariable(arg0: com.sun.org.apache.bcel.internal.generic.LocalVariableGen): void
                                        public loadDOM(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public storeDOM(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public storeHandler(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public loadHandler(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public storeIterator(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public loadIterator(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public setStartNode(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public reset(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public nextNode(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public startElement(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public endElement(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public startDocument(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public endDocument(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public attribute(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public uniqueAttribute(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public namespace(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public loadCurrentNode(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public storeCurrentNode(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public loadContextNode(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public storeContextNode(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public getLocalIndex(arg0: java.lang.String | string): int
                                        public getLocalVariable(arg0: java.lang.String | string): com.sun.org.apache.bcel.internal.generic.LocalVariableGen
                                        public setMaxLocals(): void
                                        public addInstructionList(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Pattern, arg1: com.sun.org.apache.bcel.internal.generic.InstructionList): void
                                        public getInstructionList(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Pattern): com.sun.org.apache.bcel.internal.generic.InstructionList
                                        public outlineChunks(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: int): com.sun.org.apache.bcel.internal.classfile.Method[]
                                        public markChunkStart(): void
                                        public markChunkEnd(): void
                                        protected getThisMethod(): com.sun.org.apache.bcel.internal.classfile.Method
                                        public static class: java.lang.Class<any>
                                    }
                                    class MethodType extends com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type {
                                        public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type)
                                        public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type)
                                        public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type)
                                        public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type, arg3: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type)
                                        public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type, arg1: java.util.Vector)
                                        public toString(): string
                                        public toSignature(): string
                                        public toSignature(arg0: java.lang.String | string): string
                                        public toJCType(): com.sun.org.apache.bcel.internal.generic.Type
                                        public identicalTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type): boolean
                                        public distanceTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type): int
                                        public resultType(): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                        public argsType(): java.util.Vector
                                        public argsCount(): int
                                        public static class: java.lang.Class<any>
                                    }
                                    class MultiHashtable<K, V> {
                                        public constructor()
                                        public put(arg0: K, arg1: V): java.util.Set<V>
                                        public maps(arg0: K, arg1: V): V
                                        public makeUnmodifiable(): void
                                        public static class: java.lang.Class<any>
                                    }
                                    class NamedMethodGenerator extends com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator {
                                        protected static CURRENT_INDEX: int
                                        public constructor(arg0: int, arg1: com.sun.org.apache.bcel.internal.generic.Type, arg2: com.sun.org.apache.bcel.internal.generic.Type[], arg3: java.lang.String[], arg4: java.lang.String | string, arg5: java.lang.String | string, arg6: com.sun.org.apache.bcel.internal.generic.InstructionList, arg7: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen)
                                        public getLocalIndex(arg0: java.lang.String | string): int
                                        public loadParameter(arg0: int): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public storeParameter(arg0: int): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public static class: java.lang.Class<any>
                                    }
                                    class NodeCounterGenerator extends com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator {
                                        public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: int, arg4: java.lang.String[], arg5: com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet)
                                        public setTransletIndex(arg0: int): void
                                        public loadTranslet(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public isExternal(): boolean
                                        public static class: java.lang.Class<any>
                                    }
                                    class NodeSetType extends com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type {
                                        protected constructor()
                                        public toString(): string
                                        public identicalTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type): boolean
                                        public toSignature(): string
                                        public toJCType(): com.sun.org.apache.bcel.internal.generic.Type
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type): void
                                        public translateFrom(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: java.lang.Class): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType): void
                                        public translateToDesynthesized(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType): com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: java.lang.Class): void
                                        public translateBox(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                        public translateUnBox(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                        public getClassName(): string
                                        public LOAD(arg0: int): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public STORE(arg0: int): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public static class: java.lang.Class<any>
                                    }
                                    class NodeSortRecordFactGenerator extends com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator {
                                        public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: int, arg4: java.lang.String[], arg5: com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet)
                                        public isExternal(): boolean
                                        public static class: java.lang.Class<any>
                                    }
                                    class NodeSortRecordGenerator extends com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator {
                                        public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: int, arg4: java.lang.String[], arg5: com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet)
                                        public loadTranslet(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public isExternal(): boolean
                                        public static class: java.lang.Class<any>
                                    }
                                    class NodeType extends com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type {
                                        protected constructor()
                                        protected constructor(arg0: int)
                                        public getType(): int
                                        public toString(): string
                                        public identicalTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type): boolean
                                        public hashCode(): int
                                        public toSignature(): string
                                        public toJCType(): com.sun.org.apache.bcel.internal.generic.Type
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType): void
                                        public translateToDesynthesized(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType): com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: java.lang.Class): void
                                        public translateBox(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                        public translateUnBox(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                        public getClassName(): string
                                        public LOAD(arg0: int): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public STORE(arg0: int): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public static class: java.lang.Class<any>
                                    }
                                    abstract class NumberType extends com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type {
                                        public constructor()
                                        public isNumber(): boolean
                                        public isSimple(): boolean
                                        public static class: java.lang.Class<any>
                                    }
                                    class ObjectType extends com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type {
                                        protected constructor(arg0: java.lang.String | string)
                                        protected constructor(arg0: java.lang.Class)
                                        public hashCode(): int
                                        public equals(arg0: java.lang.Object): boolean
                                        public getJavaClassName(): string
                                        public getJavaClass(): java.lang.Class
                                        public toString(): string
                                        public identicalTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type): boolean
                                        public toSignature(): string
                                        public toJCType(): com.sun.org.apache.bcel.internal.generic.Type
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: java.lang.Class): void
                                        public translateFrom(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: java.lang.Class): void
                                        public LOAD(arg0: int): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public STORE(arg0: int): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public static class: java.lang.Class<any>
                                    }
                                    class OutlineableChunkEnd extends com.sun.org.apache.xalan.internal.xsltc.compiler.util.MarkerInstruction {
                                        public static OUTLINEABLECHUNKEND: com.sun.org.apache.bcel.internal.generic.Instruction
                                        public getName(): string
                                        public toString(): string
                                        public toString(arg0: boolean): string
                                        public static class: java.lang.Class<any>
                                    }
                                    class OutlineableChunkStart extends com.sun.org.apache.xalan.internal.xsltc.compiler.util.MarkerInstruction {
                                        public static OUTLINEABLECHUNKSTART: com.sun.org.apache.bcel.internal.generic.Instruction
                                        public getName(): string
                                        public toString(): string
                                        public toString(arg0: boolean): string
                                        public static class: java.lang.Class<any>
                                    }
                                    class RealType extends com.sun.org.apache.xalan.internal.xsltc.compiler.util.NumberType {
                                        protected constructor()
                                        public toString(): string
                                        public identicalTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type): boolean
                                        public toSignature(): string
                                        public toJCType(): com.sun.org.apache.bcel.internal.generic.Type
                                        public distanceTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type): int
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType): void
                                        public translateToDesynthesized(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType): com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: java.lang.Class): void
                                        public translateFrom(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: java.lang.Class): void
                                        public translateBox(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                        public translateUnBox(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                        public ADD(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public SUB(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public MUL(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public DIV(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public REM(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public NEG(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public LOAD(arg0: int): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public STORE(arg0: int): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public POP(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public CMP(arg0: boolean): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public DUP(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public static class: java.lang.Class<any>
                                    }
                                    class ReferenceType extends com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type {
                                        protected constructor()
                                        public toString(): string
                                        public identicalTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type): boolean
                                        public toSignature(): string
                                        public toJCType(): com.sun.org.apache.bcel.internal.generic.Type
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: java.lang.Class): void
                                        public translateFrom(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: java.lang.Class): void
                                        public translateToDesynthesized(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType): com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList
                                        public translateBox(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                        public translateUnBox(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                        public LOAD(arg0: int): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public STORE(arg0: int): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public static class: java.lang.Class<any>
                                    }
                                    class ResultTreeType extends com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type {
                                        protected constructor()
                                        public constructor(arg0: java.lang.String | string)
                                        public toString(): string
                                        public identicalTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type): boolean
                                        public toSignature(): string
                                        public toJCType(): com.sun.org.apache.bcel.internal.generic.Type
                                        public getMethodName(): string
                                        public implementedAsMethod(): boolean
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType): void
                                        public translateToDesynthesized(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType): com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: java.lang.Class): void
                                        public translateBox(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                        public translateUnBox(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                        public getClassName(): string
                                        public LOAD(arg0: int): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public STORE(arg0: int): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public static class: java.lang.Class<any>
                                    }
                                    class RtMethodGenerator extends com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator {
                                        public constructor(arg0: int, arg1: com.sun.org.apache.bcel.internal.generic.Type, arg2: com.sun.org.apache.bcel.internal.generic.Type[], arg3: java.lang.String[], arg4: java.lang.String | string, arg5: java.lang.String | string, arg6: com.sun.org.apache.bcel.internal.generic.InstructionList, arg7: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen)
                                        public getIteratorIndex(): int
                                        public storeHandler(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public loadHandler(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public getLocalIndex(arg0: java.lang.String | string): int
                                        public static class: java.lang.Class<any>
                                    }
                                    class SlotAllocator {
                                        public initialize(arg0: com.sun.org.apache.bcel.internal.generic.LocalVariableGen[]): void
                                        public allocateSlot(arg0: com.sun.org.apache.bcel.internal.generic.Type): int
                                        public releaseSlot(arg0: com.sun.org.apache.bcel.internal.generic.LocalVariableGen): void
                                        public static class: java.lang.Class<any>
                                    }
                                    class StringStack extends java.util.Stack {
                                        public constructor()
                                        public peekString(): string
                                        public popString(): string
                                        public pushString(arg0: java.lang.String | string): string
                                        public static class: java.lang.Class<any>
                                    }
                                    class StringType extends com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type {
                                        protected constructor()
                                        public toString(): string
                                        public identicalTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type): boolean
                                        public toSignature(): string
                                        public isSimple(): boolean
                                        public toJCType(): com.sun.org.apache.bcel.internal.generic.Type
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType): void
                                        public translateToDesynthesized(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType): com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: java.lang.Class): void
                                        public translateFrom(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: java.lang.Class): void
                                        public translateBox(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                        public translateUnBox(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                        public getClassName(): string
                                        public LOAD(arg0: int): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public STORE(arg0: int): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public static class: java.lang.Class<any>
                                    }
                                    class TestGenerator extends com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator {
                                        public constructor(arg0: int, arg1: com.sun.org.apache.bcel.internal.generic.Type, arg2: com.sun.org.apache.bcel.internal.generic.Type[], arg3: java.lang.String[], arg4: java.lang.String | string, arg5: java.lang.String | string, arg6: com.sun.org.apache.bcel.internal.generic.InstructionList, arg7: com.sun.org.apache.bcel.internal.generic.ConstantPoolGen)
                                        public getHandlerIndex(): int
                                        public getIteratorIndex(): int
                                        public setDomIndex(arg0: int): void
                                        public loadDOM(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public loadCurrentNode(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public loadContextNode(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public storeContextNode(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public storeCurrentNode(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public storeIterator(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public loadIterator(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public getLocalIndex(arg0: java.lang.String | string): int
                                        public static class: java.lang.Class<any>
                                    }
                                    abstract class Type implements com.sun.org.apache.xalan.internal.xsltc.compiler.Constants {
                                        public static Int: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                        public static Real: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                        public static Boolean: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                        public static NodeSet: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                        public static String: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                        public static ResultTree: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                        public static Reference: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                        public static Void: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                        public static Object: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                        public static ObjectString: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                        public static Node: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                        public static Root: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                        public static Element: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                        public static Attribute: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                        public static Text: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                        public static Comment: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                        public static Processing_Instruction: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                        public constructor()
                                        public static newObjectType(arg0: java.lang.String | string): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                        public static newObjectType(arg0: java.lang.Class): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                        public toString(): string
                                        public identicalTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type): boolean
                                        public isNumber(): boolean
                                        public implementedAsMethod(): boolean
                                        public isSimple(): boolean
                                        public toJCType(): com.sun.org.apache.bcel.internal.generic.Type
                                        public distanceTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type): int
                                        public toSignature(): string
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type): void
                                        public translateToDesynthesized(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type): com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList
                                        public translateToDesynthesized(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType): com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: java.lang.Class): void
                                        public translateFrom(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: java.lang.Class): void
                                        public translateBox(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                        public translateUnBox(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                        public getClassName(): string
                                        public ADD(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public SUB(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public MUL(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public DIV(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public REM(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public NEG(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public LOAD(arg0: int): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public STORE(arg0: int): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public POP(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public GT(arg0: boolean): com.sun.org.apache.bcel.internal.generic.BranchInstruction
                                        public GE(arg0: boolean): com.sun.org.apache.bcel.internal.generic.BranchInstruction
                                        public LT(arg0: boolean): com.sun.org.apache.bcel.internal.generic.BranchInstruction
                                        public LE(arg0: boolean): com.sun.org.apache.bcel.internal.generic.BranchInstruction
                                        public CMP(arg0: boolean): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public DUP(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public static class: java.lang.Class<any>
                                    }
                                    class TypeCheckError extends java.lang.Exception {
                                        public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode)
                                        public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg)
                                        public constructor(arg0: java.lang.String | string, arg1: java.lang.Object)
                                        public constructor(arg0: java.lang.String | string, arg1: java.lang.Object, arg2: java.lang.Object)
                                        public getErrorMsg(): com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg
                                        public getMessage(): string
                                        public toString(): string
                                        public static class: java.lang.Class<any>
                                    }
                                    class Util {
                                        public constructor()
                                        public static noExtName(arg0: java.lang.String | string): string
                                        public static baseName(arg0: java.lang.String | string): string
                                        public static pathName(arg0: java.lang.String | string): string
                                        public static toJavaName(arg0: java.lang.String | string): string
                                        public static getJCRefType(arg0: java.lang.String | string): com.sun.org.apache.bcel.internal.generic.Type
                                        public static internalName(arg0: java.lang.String | string): string
                                        public static println(arg0: java.lang.String | string): void
                                        public static println(arg0: char): void
                                        public static TRACE1(): void
                                        public static TRACE2(): void
                                        public static TRACE3(): void
                                        public static replace(arg0: java.lang.String | string, arg1: char, arg2: java.lang.String | string): string
                                        public static replace(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String[]): string
                                        public static escape(arg0: java.lang.String | string): string
                                        public static getLocalName(arg0: java.lang.String | string): string
                                        public static getPrefix(arg0: java.lang.String | string): string
                                        public static isLiteral(arg0: java.lang.String | string): boolean
                                        public static isValidQNames(arg0: java.lang.String | string): boolean
                                        public static class: java.lang.Class<any>
                                    }
                                    class VoidType extends com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type {
                                        protected constructor()
                                        public toString(): string
                                        public identicalTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type): boolean
                                        public toSignature(): string
                                        public toJCType(): com.sun.org.apache.bcel.internal.generic.Type
                                        public POP(): com.sun.org.apache.bcel.internal.generic.Instruction
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type): void
                                        public translateTo(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType): void
                                        public translateFrom(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: java.lang.Class): void
                                        public static class: java.lang.Class<any>
                                    }
                                }
                                class AbsoluteLocationPath extends com.sun.org.apache.xalan.internal.xsltc.compiler.Expression {
                                    public constructor()
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Expression)
                                    public setParser(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public getPath(): com.sun.org.apache.xalan.internal.xsltc.compiler.Expression
                                    public toString(): string
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class AbsolutePathPattern extends com.sun.org.apache.xalan.internal.xsltc.compiler.LocationPathPattern {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.RelativePathPattern)
                                    public setParser(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public isWildcard(): boolean
                                    public getKernelPattern(): com.sun.org.apache.xalan.internal.xsltc.compiler.StepPattern
                                    public reduceKernelPattern(): void
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public toString(): string
                                    public static class: java.lang.Class<any>
                                }
                                class AlternativePattern extends com.sun.org.apache.xalan.internal.xsltc.compiler.Pattern {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Pattern, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.Pattern)
                                    public setParser(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public getLeft(): com.sun.org.apache.xalan.internal.xsltc.compiler.Pattern
                                    public getRight(): com.sun.org.apache.xalan.internal.xsltc.compiler.Pattern
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public getPriority(): double
                                    public toString(): string
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class AncestorPattern extends com.sun.org.apache.xalan.internal.xsltc.compiler.RelativePathPattern {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.RelativePathPattern)
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Pattern, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.RelativePathPattern)
                                    public getLoopHandle(): com.sun.org.apache.bcel.internal.generic.InstructionHandle
                                    public setParser(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public isWildcard(): boolean
                                    public getKernelPattern(): com.sun.org.apache.xalan.internal.xsltc.compiler.StepPattern
                                    public reduceKernelPattern(): void
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public toString(): string
                                    public static class: java.lang.Class<any>
                                }
                                class ApplyImports extends com.sun.org.apache.xalan.internal.xsltc.compiler.Instruction {
                                    public display(arg0: int): void
                                    public hasWithParams(): boolean
                                    public parseContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class ApplyTemplates extends com.sun.org.apache.xalan.internal.xsltc.compiler.Instruction {
                                    public display(arg0: int): void
                                    public hasWithParams(): boolean
                                    public parseContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class ArgumentList {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Expression, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.ArgumentList)
                                    public toString(): string
                                    public static class: java.lang.Class<any>
                                }
                                class Attribute extends com.sun.org.apache.xalan.internal.xsltc.compiler.Instruction {
                                    public display(arg0: int): void
                                    public parseContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public static class: java.lang.Class<any>
                                }
                                class AttributeSet extends com.sun.org.apache.xalan.internal.xsltc.compiler.TopLevelElement {
                                    public getName(): com.sun.org.apache.xalan.internal.xsltc.compiler.QName
                                    public getMethodName(): string
                                    public ignore(): void
                                    public parseContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public toString(): string
                                    public static class: java.lang.Class<any>
                                }
                                abstract class AttributeValue extends com.sun.org.apache.xalan.internal.xsltc.compiler.Expression {
                                    public static create(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode, arg1: java.lang.String | string, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): com.sun.org.apache.xalan.internal.xsltc.compiler.AttributeValue
                                    public static class: java.lang.Class<any>
                                }
                                class AttributeValueTemplate extends com.sun.org.apache.xalan.internal.xsltc.compiler.AttributeValue {
                                    public constructor(arg0: java.lang.String | string, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode)
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public toString(): string
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class BinOpExpr extends com.sun.org.apache.xalan.internal.xsltc.compiler.Expression {
                                    public static PLUS: int
                                    public static MINUS: int
                                    public static TIMES: int
                                    public static DIV: int
                                    public static MOD: int
                                    public constructor(arg0: int, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.Expression, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.Expression)
                                    public hasPositionCall(): boolean
                                    public hasLastCall(): boolean
                                    public setParser(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public toString(): string
                                    public static class: java.lang.Class<any>
                                }
                                class BooleanCall extends com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName, arg1: java.util.Vector)
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class BooleanExpr extends com.sun.org.apache.xalan.internal.xsltc.compiler.Expression {
                                    public constructor(arg0: boolean)
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public toString(): string
                                    public getValue(): boolean
                                    public contextDependent(): boolean
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public translateDesynthesized(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class CallTemplate extends com.sun.org.apache.xalan.internal.xsltc.compiler.Instruction {
                                    public display(arg0: int): void
                                    public hasWithParams(): boolean
                                    public parseContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public getCalleeTemplate(): com.sun.org.apache.xalan.internal.xsltc.compiler.Template
                                    public static class: java.lang.Class<any>
                                }
                                class CastCall extends com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName, arg1: java.util.Vector)
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class CastExpr extends com.sun.org.apache.xalan.internal.xsltc.compiler.Expression {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Expression, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type)
                                    public getExpr(): com.sun.org.apache.xalan.internal.xsltc.compiler.Expression
                                    public hasPositionCall(): boolean
                                    public hasLastCall(): boolean
                                    public toString(): string
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translateDesynthesized(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class CeilingCall extends com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName, arg1: java.util.Vector)
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class Choose extends com.sun.org.apache.xalan.internal.xsltc.compiler.Instruction {
                                    public display(arg0: int): void
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                interface Closure {
                                    inInnerClass(): boolean
                                    getParentClosure(): com.sun.org.apache.xalan.internal.xsltc.compiler.Closure
                                    getInnerClassName(): string
                                    addVariable(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.VariableRefBase): void
                                }
                                class Comment extends com.sun.org.apache.xalan.internal.xsltc.compiler.Instruction {
                                    public parseContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class CompilerException extends java.lang.Exception {
                                    public constructor()
                                    public constructor(arg0: java.lang.Exception)
                                    public constructor(arg0: java.lang.String | string)
                                    public getMessage(): string
                                    public static class: java.lang.Class<any>
                                }
                                class ConcatCall extends com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName, arg1: java.util.Vector)
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                interface Constants extends com.sun.org.apache.bcel.internal.generic.InstructionConstants {
                                    INTERNAL: int
                                    UNSUPPORTED: int
                                    FATAL: int
                                    ERROR: int
                                    WARNING: int
                                    EMPTYSTRING: string
                                    NAMESPACE_FEATURE: string
                                    TRANSLET_INTF: string
                                    TRANSLET_INTF_SIG: string
                                    ATTRIBUTES_SIG: string
                                    NODE_ITERATOR_SIG: string
                                    DOM_INTF_SIG: string
                                    DOM_IMPL_CLASS: string
                                    SAX_IMPL_CLASS: string
                                    DOM_IMPL_SIG: string
                                    SAX_IMPL_SIG: string
                                    DOM_ADAPTER_CLASS: string
                                    DOM_ADAPTER_SIG: string
                                    MULTI_DOM_CLASS: string
                                    MULTI_DOM_SIG: string
                                    STRING: string
                                    ACC_PUBLIC: int
                                    ACC_SUPER: int
                                    ACC_FINAL: int
                                    ACC_PRIVATE: int
                                    ACC_PROTECTED: int
                                    ACC_STATIC: int
                                    STRING_SIG: string
                                    STRING_BUFFER_SIG: string
                                    OBJECT_SIG: string
                                    DOUBLE_SIG: string
                                    INTEGER_SIG: string
                                    COLLATOR_CLASS: string
                                    COLLATOR_SIG: string
                                    NODE: string
                                    NODE_ITERATOR: string
                                    NODE_ITERATOR_BASE: string
                                    SORT_ITERATOR: string
                                    SORT_ITERATOR_SIG: string
                                    NODE_SORT_RECORD: string
                                    NODE_SORT_FACTORY: string
                                    NODE_SORT_RECORD_SIG: string
                                    NODE_SORT_FACTORY_SIG: string
                                    LOCALE_CLASS: string
                                    LOCALE_SIG: string
                                    STRING_VALUE_HANDLER: string
                                    STRING_VALUE_HANDLER_SIG: string
                                    OUTPUT_HANDLER: string
                                    OUTPUT_HANDLER_SIG: string
                                    FILTER_INTERFACE: string
                                    FILTER_INTERFACE_SIG: string
                                    UNION_ITERATOR_CLASS: string
                                    STEP_ITERATOR_CLASS: string
                                    CACHED_NODE_LIST_ITERATOR_CLASS: string
                                    NTH_ITERATOR_CLASS: string
                                    ABSOLUTE_ITERATOR: string
                                    DUP_FILTERED_ITERATOR: string
                                    CURRENT_NODE_LIST_ITERATOR: string
                                    CURRENT_NODE_LIST_FILTER: string
                                    CURRENT_NODE_LIST_ITERATOR_SIG: string
                                    CURRENT_NODE_LIST_FILTER_SIG: string
                                    FILTER_STEP_ITERATOR: string
                                    FILTER_ITERATOR: string
                                    SINGLETON_ITERATOR: string
                                    MATCHING_ITERATOR: string
                                    NODE_SIG: string
                                    GET_PARENT: string
                                    GET_PARENT_SIG: string
                                    NEXT_SIG: string
                                    NEXT: string
                                    NEXTID: string
                                    MAKE_NODE: string
                                    MAKE_NODE_LIST: string
                                    GET_UNPARSED_ENTITY_URI: string
                                    STRING_TO_REAL: string
                                    STRING_TO_REAL_SIG: string
                                    STRING_TO_INT: string
                                    STRING_TO_INT_SIG: string
                                    XSLT_PACKAGE: string
                                    COMPILER_PACKAGE: string
                                    RUNTIME_PACKAGE: string
                                    TRANSLET_CLASS: string
                                    TRANSLET_SIG: string
                                    UNION_ITERATOR_SIG: string
                                    TRANSLET_OUTPUT_SIG: string
                                    MAKE_NODE_SIG: string
                                    MAKE_NODE_SIG2: string
                                    MAKE_NODE_LIST_SIG: string
                                    MAKE_NODE_LIST_SIG2: string
                                    STREAM_XML_OUTPUT: string
                                    OUTPUT_BASE: string
                                    LOAD_DOCUMENT_CLASS: string
                                    KEY_INDEX_CLASS: string
                                    KEY_INDEX_SIG: string
                                    KEY_INDEX_ITERATOR_SIG: string
                                    DOM_INTF: string
                                    DOM_IMPL: string
                                    SAX_IMPL: string
                                    STRING_CLASS: string
                                    OBJECT_CLASS: string
                                    BOOLEAN_CLASS: string
                                    STRING_BUFFER_CLASS: string
                                    STRING_WRITER: string
                                    WRITER_SIG: string
                                    TRANSLET_OUTPUT_BASE: string
                                    TRANSLET_OUTPUT_INTERFACE: string
                                    BASIS_LIBRARY_CLASS: string
                                    ATTRIBUTE_LIST_IMPL_CLASS: string
                                    DOUBLE_CLASS: string
                                    INTEGER_CLASS: string
                                    RUNTIME_NODE_CLASS: string
                                    MATH_CLASS: string
                                    BOOLEAN_VALUE: string
                                    BOOLEAN_VALUE_SIG: string
                                    INT_VALUE: string
                                    INT_VALUE_SIG: string
                                    DOUBLE_VALUE: string
                                    DOUBLE_VALUE_SIG: string
                                    DOM_PNAME: string
                                    NODE_PNAME: string
                                    TRANSLET_OUTPUT_PNAME: string
                                    ITERATOR_PNAME: string
                                    DOCUMENT_PNAME: string
                                    TRANSLET_PNAME: string
                                    INVOKE_METHOD: string
                                    GET_NODE_NAME: string
                                    CHARACTERSW: string
                                    GET_CHILDREN: string
                                    GET_TYPED_CHILDREN: string
                                    CHARACTERS: string
                                    APPLY_TEMPLATES: string
                                    GET_NODE_TYPE: string
                                    GET_NODE_VALUE: string
                                    GET_ELEMENT_VALUE: string
                                    GET_ATTRIBUTE_VALUE: string
                                    HAS_ATTRIBUTE: string
                                    ADD_ITERATOR: string
                                    SET_START_NODE: string
                                    RESET: string
                                    ATTR_SET_SIG: string
                                    GET_NODE_NAME_SIG: string
                                    CHARACTERSW_SIG: string
                                    CHARACTERS_SIG: string
                                    GET_CHILDREN_SIG: string
                                    GET_TYPED_CHILDREN_SIG: string
                                    GET_NODE_TYPE_SIG: string
                                    GET_NODE_VALUE_SIG: string
                                    GET_ELEMENT_VALUE_SIG: string
                                    GET_ATTRIBUTE_VALUE_SIG: string
                                    HAS_ATTRIBUTE_SIG: string
                                    GET_ITERATOR_SIG: string
                                    NAMES_INDEX: string
                                    NAMES_INDEX_SIG: string
                                    URIS_INDEX: string
                                    URIS_INDEX_SIG: string
                                    TYPES_INDEX: string
                                    TYPES_INDEX_SIG: string
                                    NAMESPACE_INDEX: string
                                    NAMESPACE_INDEX_SIG: string
                                    HASIDCALL_INDEX: string
                                    HASIDCALL_INDEX_SIG: string
                                    TRANSLET_VERSION_INDEX: string
                                    TRANSLET_VERSION_INDEX_SIG: string
                                    DOM_FIELD: string
                                    STATIC_NAMES_ARRAY_FIELD: string
                                    STATIC_URIS_ARRAY_FIELD: string
                                    STATIC_TYPES_ARRAY_FIELD: string
                                    STATIC_NAMESPACE_ARRAY_FIELD: string
                                    STATIC_CHAR_DATA_FIELD: string
                                    STATIC_CHAR_DATA_FIELD_SIG: string
                                    FORMAT_SYMBOLS_FIELD: string
                                    ITERATOR_FIELD_SIG: string
                                    NODE_FIELD: string
                                    NODE_FIELD_SIG: string
                                    EMPTYATTR_FIELD: string
                                    ATTRIBUTE_LIST_FIELD: string
                                    CLEAR_ATTRIBUTES: string
                                    ADD_ATTRIBUTE: string
                                    ATTRIBUTE_LIST_IMPL_SIG: string
                                    CLEAR_ATTRIBUTES_SIG: string
                                    ADD_ATTRIBUTE_SIG: string
                                    ADD_ITERATOR_SIG: string
                                    ORDER_ITERATOR: string
                                    ORDER_ITERATOR_SIG: string
                                    SET_START_NODE_SIG: string
                                    NODE_COUNTER: string
                                    NODE_COUNTER_SIG: string
                                    DEFAULT_NODE_COUNTER: string
                                    DEFAULT_NODE_COUNTER_SIG: string
                                    TRANSLET_FIELD: string
                                    TRANSLET_FIELD_SIG: string
                                    RESET_SIG: string
                                    GET_PARAMETER: string
                                    ADD_PARAMETER: string
                                    PUSH_PARAM_FRAME: string
                                    PUSH_PARAM_FRAME_SIG: string
                                    POP_PARAM_FRAME: string
                                    POP_PARAM_FRAME_SIG: string
                                    GET_PARAMETER_SIG: string
                                    ADD_PARAMETER_SIG: string
                                    STRIP_SPACE: string
                                    STRIP_SPACE_INTF: string
                                    STRIP_SPACE_SIG: string
                                    STRIP_SPACE_PARAMS: string
                                    GET_NODE_VALUE_ITERATOR: string
                                    GET_NODE_VALUE_ITERATOR_SIG: string
                                    GET_UNPARSED_ENTITY_URI_SIG: string
                                    POSITION_INDEX: int
                                    LAST_INDEX: int
                                    XMLNS_PREFIX: string
                                    XMLNS_STRING: string
                                    XMLNS_URI: string
                                    XSLT_URI: string
                                    XHTML_URI: string
                                    TRANSLET_URI: string
                                    REDIRECT_URI: string
                                    FALLBACK_CLASS: string
                                    RTF_INITIAL_SIZE: int
                                }
                                class ContainsCall extends com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName, arg1: java.util.Vector)
                                    public isBoolean(): boolean
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public translateDesynthesized(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class Copy extends com.sun.org.apache.xalan.internal.xsltc.compiler.Instruction {
                                    public parseContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public display(arg0: int): void
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class CopyOf extends com.sun.org.apache.xalan.internal.xsltc.compiler.Instruction {
                                    public display(arg0: int): void
                                    public parseContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class CurrentCall extends com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName)
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class DecimalFormatting extends com.sun.org.apache.xalan.internal.xsltc.compiler.TopLevelElement {
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public parseContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static translateDefaultDFS(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class DocumentCall extends com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName, arg1: java.util.Vector)
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class ElementAvailableCall extends com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName, arg1: java.util.Vector)
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public evaluateAtCompileTime(): java.lang.Object
                                    public getResult(): boolean
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class EqualityExpr extends com.sun.org.apache.xalan.internal.xsltc.compiler.Expression {
                                    public constructor(arg0: int, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.Expression, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.Expression)
                                    public setParser(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public toString(): string
                                    public getLeft(): com.sun.org.apache.xalan.internal.xsltc.compiler.Expression
                                    public getRight(): com.sun.org.apache.xalan.internal.xsltc.compiler.Expression
                                    public getOp(): boolean
                                    public hasPositionCall(): boolean
                                    public hasLastCall(): boolean
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translateDesynthesized(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                abstract class Expression extends com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode {
                                    protected _type: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    protected _trueList: com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList
                                    protected _falseList: com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList
                                    public getType(): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public toString(): string
                                    public hasPositionCall(): boolean
                                    public hasLastCall(): boolean
                                    public evaluateAtCompileTime(): java.lang.Object
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public compile(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): com.sun.org.apache.bcel.internal.generic.InstructionList
                                    public translateDesynthesized(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public startIterator(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public synthesize(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public desynthesize(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public getFalseList(): com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList
                                    public getTrueList(): com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList
                                    public backPatchFalseList(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle): void
                                    public backPatchTrueList(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle): void
                                    public lookupPrimop(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable, arg1: java.lang.String | string, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodType): com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodType
                                    public static class: java.lang.Class<any>
                                }
                                class Fallback extends com.sun.org.apache.xalan.internal.xsltc.compiler.Instruction {
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public activate(): void
                                    public toString(): string
                                    public parseContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class FilterExpr extends com.sun.org.apache.xalan.internal.xsltc.compiler.Expression {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Expression, arg1: java.util.Vector)
                                    protected getExpr(): com.sun.org.apache.xalan.internal.xsltc.compiler.Expression
                                    public setParser(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public toString(): string
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public translatePredicates(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: int): void
                                    public static class: java.lang.Class<any>
                                }
                                class FilterParentPath extends com.sun.org.apache.xalan.internal.xsltc.compiler.Expression {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Expression, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.Expression)
                                    public setParser(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public toString(): string
                                    public setDescendantAxis(): void
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class FilteredAbsoluteLocationPath extends com.sun.org.apache.xalan.internal.xsltc.compiler.Expression {
                                    public constructor()
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Expression)
                                    public setParser(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public getPath(): com.sun.org.apache.xalan.internal.xsltc.compiler.Expression
                                    public toString(): string
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class FloorCall extends com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName, arg1: java.util.Vector)
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class FlowList {
                                    public constructor()
                                    public constructor(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle)
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList)
                                    public add(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle): com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList
                                    public append(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList): com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList
                                    public backPatch(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle): void
                                    public copyAndRedirect(arg0: com.sun.org.apache.bcel.internal.generic.InstructionList, arg1: com.sun.org.apache.bcel.internal.generic.InstructionList): com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList
                                    public static class: java.lang.Class<any>
                                }
                                class ForEach extends com.sun.org.apache.xalan.internal.xsltc.compiler.Instruction {
                                    public display(arg0: int): void
                                    public parseContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public initializeVariables(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class FormatNumberCall extends com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName, arg1: java.util.Vector)
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class FunctionAvailableCall extends com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName, arg1: java.util.Vector)
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public evaluateAtCompileTime(): java.lang.Object
                                    public getResult(): boolean
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class FunctionCall extends com.sun.org.apache.xalan.internal.xsltc.compiler.Expression {
                                    protected static EXT_XSLTC: string
                                    protected static JAVA_EXT_XSLTC: string
                                    protected static EXT_XALAN: string
                                    protected static JAVA_EXT_XALAN: string
                                    protected static JAVA_EXT_XALAN_OLD: string
                                    protected static EXSLT_COMMON: string
                                    protected static EXSLT_MATH: string
                                    protected static EXSLT_SETS: string
                                    protected static EXSLT_DATETIME: string
                                    protected static EXSLT_STRINGS: string
                                    protected static XALAN_CLASSPACKAGE_NAMESPACE: string
                                    protected static NAMESPACE_FORMAT_JAVA: int
                                    protected static NAMESPACE_FORMAT_CLASS: int
                                    protected static NAMESPACE_FORMAT_PACKAGE: int
                                    protected static NAMESPACE_FORMAT_CLASS_OR_PACKAGE: int
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName, arg1: java.util.Vector)
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName)
                                    public getName(): string
                                    public setParser(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public getClassNameFromUri(arg0: java.lang.String | string): string
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public typeCheckStandard(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public typeCheckConstructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public typeCheckExternal(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public typeCheckArgs(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): java.util.Vector
                                    protected argument(arg0: int): com.sun.org.apache.xalan.internal.xsltc.compiler.Expression
                                    protected argument(): com.sun.org.apache.xalan.internal.xsltc.compiler.Expression
                                    protected argumentCount(): int
                                    protected setArgument(arg0: int, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.Expression): void
                                    public translateDesynthesized(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public toString(): string
                                    public isStandard(): boolean
                                    public isExtension(): boolean
                                    protected static replaceDash(arg0: java.lang.String | string): string
                                    public static class: java.lang.Class<any>
                                }
                                class GenerateIdCall extends com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName, arg1: java.util.Vector)
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                abstract class IdKeyPattern extends com.sun.org.apache.xalan.internal.xsltc.compiler.LocationPathPattern {
                                    protected _left: com.sun.org.apache.xalan.internal.xsltc.compiler.RelativePathPattern
                                    public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string)
                                    public getIndexName(): string
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public isWildcard(): boolean
                                    public setLeft(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.RelativePathPattern): void
                                    public getKernelPattern(): com.sun.org.apache.xalan.internal.xsltc.compiler.StepPattern
                                    public reduceKernelPattern(): void
                                    public toString(): string
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class IdPattern extends com.sun.org.apache.xalan.internal.xsltc.compiler.IdKeyPattern {
                                    public constructor(arg0: java.lang.String | string)
                                    public static class: java.lang.Class<any>
                                }
                                class If extends com.sun.org.apache.xalan.internal.xsltc.compiler.Instruction {
                                    public display(arg0: int): void
                                    public parseContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class IllegalCharException extends java.lang.Exception {
                                    public constructor(arg0: java.lang.String | string)
                                    public static class: java.lang.Class<any>
                                }
                                class Import extends com.sun.org.apache.xalan.internal.xsltc.compiler.TopLevelElement {
                                    public getImportedStylesheet(): com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet
                                    public parseContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class Include extends com.sun.org.apache.xalan.internal.xsltc.compiler.TopLevelElement {
                                    public getIncludedStylesheet(): com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet
                                    public parseContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                abstract class Instruction extends com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode {
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class IntExpr extends com.sun.org.apache.xalan.internal.xsltc.compiler.Expression {
                                    public constructor(arg0: int)
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public toString(): string
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class Key extends com.sun.org.apache.xalan.internal.xsltc.compiler.TopLevelElement {
                                    public parseContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public getName(): string
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public traverseNodeSet(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: int): void
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class KeyCall extends com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName, arg1: java.util.Vector)
                                    public addParentDependency(): void
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class KeyPattern extends com.sun.org.apache.xalan.internal.xsltc.compiler.IdKeyPattern {
                                    public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string)
                                    public static class: java.lang.Class<any>
                                }
                                class LangCall extends com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName, arg1: java.util.Vector)
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public getType(): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class LastCall extends com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName)
                                    public hasPositionCall(): boolean
                                    public hasLastCall(): boolean
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class LiteralAttribute extends com.sun.org.apache.xalan.internal.xsltc.compiler.Instruction {
                                    public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser, arg3: com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode)
                                    public display(arg0: int): void
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    protected contextDependent(): boolean
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public getName(): string
                                    public getValue(): com.sun.org.apache.xalan.internal.xsltc.compiler.AttributeValue
                                    public static class: java.lang.Class<any>
                                }
                                class LiteralElement extends com.sun.org.apache.xalan.internal.xsltc.compiler.Instruction {
                                    public getName(): com.sun.org.apache.xalan.internal.xsltc.compiler.QName
                                    public display(arg0: int): void
                                    public registerNamespace(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable, arg3: boolean): void
                                    public addAttribute(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode): void
                                    public setFirstAttribute(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode): void
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public getNamespaceScope(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode): java.util.Set<java.util.Map$Entry<java.lang.String, java.lang.String>>
                                    public parseContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    protected contextDependent(): boolean
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public getElemDesc(): com.sun.org.apache.xml.internal.serializer.ElemDesc
                                    public allAttributesUnique(): boolean
                                    public static class: java.lang.Class<any>
                                }
                                class LiteralExpr extends com.sun.org.apache.xalan.internal.xsltc.compiler.Expression {
                                    public constructor(arg0: java.lang.String | string)
                                    public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string)
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public toString(): string
                                    protected contextDependent(): boolean
                                    protected getValue(): string
                                    protected getNamespace(): string
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class LocalNameCall extends com.sun.org.apache.xalan.internal.xsltc.compiler.NameBase {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName)
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName, arg1: java.util.Vector)
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                abstract class LocationPathPattern extends com.sun.org.apache.xalan.internal.xsltc.compiler.Pattern {
                                    public constructor()
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public setTemplate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Template): void
                                    public getTemplate(): com.sun.org.apache.xalan.internal.xsltc.compiler.Template
                                    public getPriority(): double
                                    public getDefaultPriority(): double
                                    public noSmallerThan(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.LocationPathPattern): boolean
                                    public getKernelPattern(): com.sun.org.apache.xalan.internal.xsltc.compiler.StepPattern
                                    public reduceKernelPattern(): void
                                    public isWildcard(): boolean
                                    public getAxis(): int
                                    public toString(): string
                                    public static class: java.lang.Class<any>
                                }
                                class LogicalExpr extends com.sun.org.apache.xalan.internal.xsltc.compiler.Expression {
                                    public static OR: int
                                    public static AND: int
                                    public constructor(arg0: int, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.Expression, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.Expression)
                                    public hasPositionCall(): boolean
                                    public hasLastCall(): boolean
                                    public evaluateAtCompileTime(): java.lang.Object
                                    public getOp(): int
                                    public setParser(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public toString(): string
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public translateDesynthesized(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class Message extends com.sun.org.apache.xalan.internal.xsltc.compiler.Instruction {
                                    public parseContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class Mode implements com.sun.org.apache.xalan.internal.xsltc.compiler.Constants {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet, arg2: java.lang.String | string)
                                    public functionName(): string
                                    public functionName(arg0: int, arg1: int): string
                                    public getStylesheet(): com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet
                                    public addTemplate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Template): void
                                    public processPatterns(arg0: java.util.Map<java.lang.String, com.sun.org.apache.xalan.internal.xsltc.compiler.Key>): void
                                    public static compileGetChildren(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: int): void
                                    public compileApplyTemplates(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator): void
                                    public compileApplyImports(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: int, arg2: int): void
                                    public getTemplateInstructionHandle(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Template): com.sun.org.apache.bcel.internal.generic.InstructionHandle
                                    public static class: java.lang.Class<any>
                                }
                                class NameBase extends com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName)
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName, arg1: java.util.Vector)
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public getType(): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class NameCall extends com.sun.org.apache.xalan.internal.xsltc.compiler.NameBase {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName)
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName, arg1: java.util.Vector)
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class NamespaceAlias extends com.sun.org.apache.xalan.internal.xsltc.compiler.TopLevelElement {
                                    public parseContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class NamespaceUriCall extends com.sun.org.apache.xalan.internal.xsltc.compiler.NameBase {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName)
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName, arg1: java.util.Vector)
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                interface NodeTest {
                                    TEXT: int
                                    COMMENT: int
                                    PI: int
                                    ROOT: int
                                    ELEMENT: int
                                    ATTRIBUTE: int
                                    GTYPE: int
                                    ANODE: int
                                }
                                class NotCall extends com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName, arg1: java.util.Vector)
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public translateDesynthesized(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class Number extends com.sun.org.apache.xalan.internal.xsltc.compiler.Instruction implements com.sun.org.apache.xalan.internal.xsltc.compiler.Closure {
                                    public inInnerClass(): boolean
                                    public getParentClosure(): com.sun.org.apache.xalan.internal.xsltc.compiler.Closure
                                    public getInnerClassName(): string
                                    public addVariable(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.VariableRefBase): void
                                    public parseContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public hasValue(): boolean
                                    public isDefault(): boolean
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class NumberCall extends com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName, arg1: java.util.Vector)
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class Otherwise extends com.sun.org.apache.xalan.internal.xsltc.compiler.Instruction {
                                    public display(arg0: int): void
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class Output extends com.sun.org.apache.xalan.internal.xsltc.compiler.TopLevelElement {
                                    public display(arg0: int): void
                                    public disable(): void
                                    public enabled(): boolean
                                    public getCdata(): string
                                    public getOutputMethod(): string
                                    public mergeOutput(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Output): void
                                    public parseContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class Param extends com.sun.org.apache.xalan.internal.xsltc.compiler.VariableBase {
                                    public toString(): string
                                    public setLoadInstruction(arg0: com.sun.org.apache.bcel.internal.generic.Instruction): com.sun.org.apache.bcel.internal.generic.Instruction
                                    public setStoreInstruction(arg0: com.sun.org.apache.bcel.internal.generic.Instruction): com.sun.org.apache.bcel.internal.generic.Instruction
                                    public display(arg0: int): void
                                    public parseContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class ParameterRef extends com.sun.org.apache.xalan.internal.xsltc.compiler.VariableRefBase {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Param)
                                    public toString(): string
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class ParentLocationPath extends com.sun.org.apache.xalan.internal.xsltc.compiler.RelativeLocationPath {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.RelativeLocationPath, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.Expression)
                                    public setAxis(arg0: int): void
                                    public getAxis(): int
                                    public getPath(): com.sun.org.apache.xalan.internal.xsltc.compiler.RelativeLocationPath
                                    public getStep(): com.sun.org.apache.xalan.internal.xsltc.compiler.Expression
                                    public setParser(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public toString(): string
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public enableNodeOrdering(): void
                                    public checkAxisMismatch(): boolean
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public translateStep(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class ParentPattern extends com.sun.org.apache.xalan.internal.xsltc.compiler.RelativePathPattern {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Pattern, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.RelativePathPattern)
                                    public setParser(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public isWildcard(): boolean
                                    public getKernelPattern(): com.sun.org.apache.xalan.internal.xsltc.compiler.StepPattern
                                    public reduceKernelPattern(): void
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public toString(): string
                                    public static class: java.lang.Class<any>
                                }
                                class Parser implements com.sun.org.apache.xalan.internal.xsltc.compiler.Constants , org.xml.sax.ContentHandler {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC, arg1: boolean)
                                    public init(): void
                                    public setOutput(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Output): void
                                    public getOutput(): com.sun.org.apache.xalan.internal.xsltc.compiler.Output
                                    public getOutputProperties(): java.util.Properties
                                    public addVariable(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Variable): void
                                    public addParameter(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Param): void
                                    public removeVariable(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName): void
                                    public lookupVariable(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName): com.sun.org.apache.xalan.internal.xsltc.compiler.VariableBase
                                    public setXSLTC(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC): void
                                    public getXSLTC(): com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC
                                    public getCurrentImportPrecedence(): int
                                    public getNextImportPrecedence(): int
                                    public setCurrentStylesheet(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet): void
                                    public getCurrentStylesheet(): com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet
                                    public getTopLevelStylesheet(): com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet
                                    public getQNameSafe(arg0: java.lang.String | string): com.sun.org.apache.xalan.internal.xsltc.compiler.QName
                                    public getQName(arg0: java.lang.String | string): com.sun.org.apache.xalan.internal.xsltc.compiler.QName
                                    public getQNameIgnoreDefaultNs(arg0: java.lang.String | string): com.sun.org.apache.xalan.internal.xsltc.compiler.QName
                                    public getQName(arg0: java.lang.String | string, arg1: boolean): com.sun.org.apache.xalan.internal.xsltc.compiler.QName
                                    public getQName(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): com.sun.org.apache.xalan.internal.xsltc.compiler.QName
                                    public getQName(arg0: java.lang.String | string, arg1: java.lang.String | string): com.sun.org.apache.xalan.internal.xsltc.compiler.QName
                                    public getQName(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.QName): com.sun.org.apache.xalan.internal.xsltc.compiler.QName
                                    public getUseAttributeSets(): com.sun.org.apache.xalan.internal.xsltc.compiler.QName
                                    public getExtensionElementPrefixes(): com.sun.org.apache.xalan.internal.xsltc.compiler.QName
                                    public getExcludeResultPrefixes(): com.sun.org.apache.xalan.internal.xsltc.compiler.QName
                                    public makeStylesheet(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode): com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet
                                    public createAST(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet): void
                                    public parse(arg0: org.xml.sax.XMLReader, arg1: org.xml.sax.InputSource): com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode
                                    public parse(arg0: org.xml.sax.InputSource): com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode
                                    public getDocumentRoot(): com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode
                                    protected setPIParameters(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                    public elementSupported(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                                    public functionSupported(arg0: java.lang.String | string): boolean
                                    public getSymbolTable(): com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable
                                    public getTemplate(): com.sun.org.apache.xalan.internal.xsltc.compiler.Template
                                    public setTemplate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Template): void
                                    public getTemplateIndex(): int
                                    public makeInstance(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: org.xml.sax.Attributes): com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode
                                    public parseExpression(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode, arg1: java.lang.String | string): com.sun.org.apache.xalan.internal.xsltc.compiler.Expression
                                    public parseExpression(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode, arg1: java.lang.String | string, arg2: java.lang.String | string): com.sun.org.apache.xalan.internal.xsltc.compiler.Expression
                                    public parsePattern(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode, arg1: java.lang.String | string): com.sun.org.apache.xalan.internal.xsltc.compiler.Pattern
                                    public parsePattern(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode, arg1: java.lang.String | string, arg2: java.lang.String | string): com.sun.org.apache.xalan.internal.xsltc.compiler.Pattern
                                    public errorsFound(): boolean
                                    public printErrors(): void
                                    public printWarnings(): void
                                    public reportError(arg0: int, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg): void
                                    public getErrors(): java.util.ArrayList<com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg>
                                    public getWarnings(): java.util.ArrayList<com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg>
                                    public startDocument(): void
                                    public endDocument(): void
                                    public startPrefixMapping(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                    public endPrefixMapping(arg0: java.lang.String | string): void
                                    public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: org.xml.sax.Attributes): void
                                    public endElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                    public characters(arg0: char[], arg1: int, arg2: int): void
                                    public processingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                    public ignorableWhitespace(arg0: char[], arg1: int, arg2: int): void
                                    public skippedEntity(arg0: java.lang.String | string): void
                                    public setDocumentLocator(arg0: org.xml.sax.Locator): void
                                    public static class: java.lang.Class<any>
                                }
                                abstract class Pattern extends com.sun.org.apache.xalan.internal.xsltc.compiler.Expression {
                                    public constructor()
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public getPriority(): double
                                    public lookupPrimop(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable, arg1: java.lang.String | string, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodType): com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodType
                                    public backPatchTrueList(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle): void
                                    public backPatchFalseList(arg0: com.sun.org.apache.bcel.internal.generic.InstructionHandle): void
                                    public getTrueList(): com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList
                                    public getFalseList(): com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList
                                    public desynthesize(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public synthesize(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public startIterator(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public translateDesynthesized(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public evaluateAtCompileTime(): java.lang.Object
                                    public hasLastCall(): boolean
                                    public hasPositionCall(): boolean
                                    public getType(): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public static class: java.lang.Class<any>
                                }
                                class PositionCall extends com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName)
                                    public hasPositionCall(): boolean
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class Predicate extends com.sun.org.apache.xalan.internal.xsltc.compiler.Expression implements com.sun.org.apache.xalan.internal.xsltc.compiler.Closure {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Expression)
                                    public setParser(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public isNthPositionFilter(): boolean
                                    public isNthDescendant(): boolean
                                    public dontOptimize(): void
                                    public hasPositionCall(): boolean
                                    public hasLastCall(): boolean
                                    public inInnerClass(): boolean
                                    public getParentClosure(): com.sun.org.apache.xalan.internal.xsltc.compiler.Closure
                                    public getInnerClassName(): string
                                    public addVariable(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.VariableRefBase): void
                                    public getPosType(): int
                                    public parentIsPattern(): boolean
                                    public getExpr(): com.sun.org.apache.xalan.internal.xsltc.compiler.Expression
                                    public toString(): string
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public isBooleanTest(): boolean
                                    public isNodeValueTest(): boolean
                                    public getStep(): com.sun.org.apache.xalan.internal.xsltc.compiler.Step
                                    public getCompareValue(): com.sun.org.apache.xalan.internal.xsltc.compiler.Expression
                                    public translateFilter(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class ProcessingInstruction extends com.sun.org.apache.xalan.internal.xsltc.compiler.Instruction {
                                    public parseContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class ProcessingInstructionPattern extends com.sun.org.apache.xalan.internal.xsltc.compiler.StepPattern {
                                    public constructor(arg0: java.lang.String | string)
                                    public getDefaultPriority(): double
                                    public toString(): string
                                    public reduceKernelPattern(): void
                                    public isWildcard(): boolean
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class QName {
                                    public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string)
                                    public clearNamespace(): void
                                    public toString(): string
                                    public getStringRep(): string
                                    public equals(arg0: java.lang.Object): boolean
                                    public getLocalPart(): string
                                    public getNamespace(): string
                                    public getPrefix(): string
                                    public hashCode(): int
                                    public dump(): string
                                    public static class: java.lang.Class<any>
                                }
                                class RealExpr extends com.sun.org.apache.xalan.internal.xsltc.compiler.Expression {
                                    public constructor(arg0: double)
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public toString(): string
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class RelationalExpr extends com.sun.org.apache.xalan.internal.xsltc.compiler.Expression {
                                    public constructor(arg0: int, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.Expression, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.Expression)
                                    public setParser(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public hasPositionCall(): boolean
                                    public hasLastCall(): boolean
                                    public hasReferenceArgs(): boolean
                                    public hasNodeArgs(): boolean
                                    public hasNodeSetArgs(): boolean
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public translateDesynthesized(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public toString(): string
                                    public static class: java.lang.Class<any>
                                }
                                abstract class RelativeLocationPath extends com.sun.org.apache.xalan.internal.xsltc.compiler.Expression {
                                    public getAxis(): int
                                    public setAxis(arg0: int): void
                                    public static class: java.lang.Class<any>
                                }
                                abstract class RelativePathPattern extends com.sun.org.apache.xalan.internal.xsltc.compiler.LocationPathPattern {
                                    public static class: java.lang.Class<any>
                                }
                                class RoundCall extends com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName, arg1: java.util.Vector)
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class SimpleAttributeValue extends com.sun.org.apache.xalan.internal.xsltc.compiler.AttributeValue {
                                    public constructor(arg0: java.lang.String | string)
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public toString(): string
                                    protected contextDependent(): boolean
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class Sort extends com.sun.org.apache.xalan.internal.xsltc.compiler.Instruction implements com.sun.org.apache.xalan.internal.xsltc.compiler.Closure {
                                    public inInnerClass(): boolean
                                    public getParentClosure(): com.sun.org.apache.xalan.internal.xsltc.compiler.Closure
                                    public getInnerClassName(): string
                                    public addVariable(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.VariableRefBase): void
                                    public parseContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translateSortType(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public translateSortOrder(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public translateCaseOrder(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public translateLang(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public translateSelect(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static translateSortIterator(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.Expression, arg3: java.util.Vector<com.sun.org.apache.xalan.internal.xsltc.compiler.Sort>): void
                                    public static compileSortRecordFactory(arg0: java.util.Vector<com.sun.org.apache.xalan.internal.xsltc.compiler.Sort>, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static compileSortRecordFactory(arg0: java.util.Vector<com.sun.org.apache.xalan.internal.xsltc.compiler.Sort>, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg3: java.lang.String | string): string
                                    public static class: java.lang.Class<any>
                                }
                                interface SourceLoader {
                                    loadSource(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC): org.xml.sax.InputSource
                                }
                                interface SourceLoader$$Lambda {
                                    (arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC): org.xml.sax.InputSource
                                }
                                class StartsWithCall extends com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName, arg1: java.util.Vector)
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class Step extends com.sun.org.apache.xalan.internal.xsltc.compiler.RelativeLocationPath {
                                    public constructor(arg0: int, arg1: int, arg2: java.util.Vector)
                                    public setParser(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public getAxis(): int
                                    public setAxis(arg0: int): void
                                    public getNodeType(): int
                                    public getPredicates(): java.util.Vector
                                    public addPredicates(arg0: java.util.Vector): void
                                    public isAbbreviatedDot(): boolean
                                    public isAbbreviatedDDot(): boolean
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public translatePredicates(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: int): void
                                    public toString(): string
                                    public static class: java.lang.Class<any>
                                }
                                class StepPattern extends com.sun.org.apache.xalan.internal.xsltc.compiler.RelativePathPattern {
                                    protected _axis: int
                                    protected _nodeType: int
                                    protected _predicates: java.util.Vector
                                    public constructor(arg0: int, arg1: int, arg2: java.util.Vector)
                                    public setParser(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public getNodeType(): int
                                    public setPriority(arg0: double): void
                                    public getKernelPattern(): com.sun.org.apache.xalan.internal.xsltc.compiler.StepPattern
                                    public isWildcard(): boolean
                                    public setPredicates(arg0: java.util.Vector): com.sun.org.apache.xalan.internal.xsltc.compiler.StepPattern
                                    protected hasPredicates(): boolean
                                    public getDefaultPriority(): double
                                    public getAxis(): int
                                    public reduceKernelPattern(): void
                                    public toString(): string
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class StringCall extends com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName, arg1: java.util.Vector)
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class StringLengthCall extends com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName, arg1: java.util.Vector)
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class Stylesheet extends com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode {
                                    public _importedFrom: com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet
                                    public _includedFrom: com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet
                                    public static UNKNOWN_OUTPUT: int
                                    public static XML_OUTPUT: int
                                    public static HTML_OUTPUT: int
                                    public static TEXT_OUTPUT: int
                                    public constructor()
                                    public getOutputMethod(): int
                                    public getTemplateInlining(): boolean
                                    public setTemplateInlining(arg0: boolean): void
                                    public isSimplified(): boolean
                                    public setSimplified(): void
                                    public setHasIdCall(arg0: boolean): void
                                    public setOutputProperty(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                    public setOutputProperties(arg0: java.util.Properties): void
                                    public getOutputProperties(): java.util.Properties
                                    public getLastOutputElement(): com.sun.org.apache.xalan.internal.xsltc.compiler.Output
                                    public setMultiDocument(arg0: boolean): void
                                    public isMultiDocument(): boolean
                                    public setCallsNodeset(arg0: boolean): void
                                    public callsNodeset(): boolean
                                    public numberFormattingUsed(): void
                                    public setImportPrecedence(arg0: int): void
                                    public getImportPrecedence(): int
                                    public getMinimumDescendantPrecedence(): int
                                    public checkForLoop(arg0: java.lang.String | string): boolean
                                    public setParser(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public setParentStylesheet(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet): void
                                    public getParentStylesheet(): com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet
                                    public setImportingStylesheet(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet): void
                                    public setIncludingStylesheet(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet): void
                                    public addIncludedStylesheet(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet): void
                                    public setSystemId(arg0: java.lang.String | string): void
                                    public getSystemId(): string
                                    public setSourceLoader(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SourceLoader | com.sun.org.apache.xalan.internal.xsltc.compiler.SourceLoader$$Lambda): void
                                    public getSourceLoader(): com.sun.org.apache.xalan.internal.xsltc.compiler.SourceLoader
                                    public hasGlobals(): boolean
                                    public hasLocalParams(): boolean
                                    protected addPrefixMapping(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                    public isExtension(arg0: java.lang.String | string): boolean
                                    public declareExtensionPrefixes(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public parseContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public parseOwnChildren(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public processModes(): void
                                    public getMode(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName): com.sun.org.apache.xalan.internal.xsltc.compiler.Mode
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public translate(): void
                                    public addParam(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Param): int
                                    public addVariable(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Variable): int
                                    public display(arg0: int): void
                                    public getNamespace(arg0: java.lang.String | string): string
                                    public getClassName(): string
                                    public getTemplates(): java.util.Vector
                                    public getAllValidTemplates(): java.util.Vector
                                    protected addTemplate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Template): void
                                    public static class: java.lang.Class<any>
                                }
                                class SymbolTable {
                                    public getDecimalFormatting(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName): com.sun.org.apache.xalan.internal.xsltc.compiler.DecimalFormatting
                                    public addDecimalFormatting(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.DecimalFormatting): void
                                    public getKey(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName): com.sun.org.apache.xalan.internal.xsltc.compiler.Key
                                    public addKey(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.Key): void
                                    public addStylesheet(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet): com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet
                                    public lookupStylesheet(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName): com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet
                                    public addTemplate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Template): com.sun.org.apache.xalan.internal.xsltc.compiler.Template
                                    public lookupTemplate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName): com.sun.org.apache.xalan.internal.xsltc.compiler.Template
                                    public addVariable(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Variable): com.sun.org.apache.xalan.internal.xsltc.compiler.Variable
                                    public addParam(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Param): com.sun.org.apache.xalan.internal.xsltc.compiler.Param
                                    public lookupVariable(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName): com.sun.org.apache.xalan.internal.xsltc.compiler.Variable
                                    public lookupParam(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName): com.sun.org.apache.xalan.internal.xsltc.compiler.Param
                                    public lookupName(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName): com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode
                                    public addAttributeSet(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.AttributeSet): com.sun.org.apache.xalan.internal.xsltc.compiler.AttributeSet
                                    public lookupAttributeSet(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName): com.sun.org.apache.xalan.internal.xsltc.compiler.AttributeSet
                                    public addPrimop(arg0: java.lang.String | string, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodType): void
                                    public lookupPrimop(arg0: java.lang.String | string): java.util.Vector
                                    public generateNamespacePrefix(): string
                                    public setCurrentNode(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode): void
                                    public lookupNamespace(arg0: java.lang.String | string): string
                                    public addPrefixAlias(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                    public lookupPrefixAlias(arg0: java.lang.String | string): string
                                    public excludeURI(arg0: java.lang.String | string): void
                                    public excludeNamespaces(arg0: java.lang.String | string): void
                                    public isExcludedNamespace(arg0: java.lang.String | string): boolean
                                    public unExcludeNamespaces(arg0: java.lang.String | string): void
                                    public pushExcludedNamespacesContext(): void
                                    public popExcludedNamespacesContext(): void
                                    public static class: java.lang.Class<any>
                                }
                                abstract class SyntaxTreeNode implements com.sun.org.apache.xalan.internal.xsltc.compiler.Constants {
                                    protected _parent: com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode
                                    protected _qname: com.sun.org.apache.xalan.internal.xsltc.compiler.QName
                                    protected _attributes: org.xml.sax.helpers.AttributesImpl
                                    protected static Dummy: com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode
                                    protected static IndentIncrement: int
                                    public constructor()
                                    public constructor(arg0: int)
                                    public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string)
                                    protected setLineNumber(arg0: int): void
                                    public getLineNumber(): int
                                    protected setQName(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName): void
                                    protected setQName(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                    protected getQName(): com.sun.org.apache.xalan.internal.xsltc.compiler.QName
                                    protected setAttributes(arg0: org.xml.sax.helpers.AttributesImpl): void
                                    protected getAttribute(arg0: java.lang.String | string): string
                                    protected getAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string): string
                                    protected hasAttribute(arg0: java.lang.String | string): boolean
                                    protected addAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                    protected getAttributes(): org.xml.sax.Attributes
                                    protected setPrefixMapping(arg0: java.util.Map<java.lang.String, java.lang.String>): void
                                    protected getPrefixMapping(): java.util.Map<java.lang.String, java.lang.String>
                                    protected addPrefixMapping(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                    protected lookupNamespace(arg0: java.lang.String | string): string
                                    protected lookupPrefix(arg0: java.lang.String | string): string
                                    protected setParser(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public getParser(): com.sun.org.apache.xalan.internal.xsltc.compiler.Parser
                                    protected setParent(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode): void
                                    protected getParent(): com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode
                                    protected isDummy(): boolean
                                    protected getImportPrecedence(): int
                                    public getStylesheet(): com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet
                                    protected getTemplate(): com.sun.org.apache.xalan.internal.xsltc.compiler.Template
                                    protected getXSLTC(): com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC
                                    protected getSymbolTable(): com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable
                                    public parseContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    protected parseChildren(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    protected updateScope(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode): com.sun.org.apache.xalan.internal.xsltc.compiler.QName
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    protected typeCheckContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    protected translateContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    protected compileResultTree(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    protected contextDependent(): boolean
                                    protected dependentContents(): boolean
                                    protected addElement(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode): void
                                    protected setFirstElement(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode): void
                                    protected removeElement(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode): void
                                    protected getContents(): java.util.List<com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode>
                                    protected hasContents(): boolean
                                    protected elementCount(): int
                                    protected elements(): java.util.Iterator<com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode>
                                    protected elementAt(arg0: int): com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode
                                    protected lastChild(): com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode
                                    public display(arg0: int): void
                                    protected displayContents(arg0: int): void
                                    protected indent(arg0: int): void
                                    protected reportError(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser, arg2: java.lang.String | string, arg3: java.lang.String | string): void
                                    protected reportWarning(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser, arg2: java.lang.String | string, arg3: java.lang.String | string): void
                                    public static class: java.lang.Class<any>
                                }
                                class Template extends com.sun.org.apache.xalan.internal.xsltc.compiler.TopLevelElement {
                                    public constructor()
                                    public hasParams(): boolean
                                    public isSimplified(): boolean
                                    public setSimplified(): void
                                    public isSimpleNamedTemplate(): boolean
                                    public addParameter(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Param): void
                                    public getParameters(): java.util.Vector<com.sun.org.apache.xalan.internal.xsltc.compiler.Param>
                                    public disable(): void
                                    public disabled(): boolean
                                    public getPriority(): double
                                    public getPosition(): int
                                    public isNamed(): boolean
                                    public getPattern(): com.sun.org.apache.xalan.internal.xsltc.compiler.Pattern
                                    public getName(): com.sun.org.apache.xalan.internal.xsltc.compiler.QName
                                    public setName(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName): void
                                    public getModeName(): com.sun.org.apache.xalan.internal.xsltc.compiler.QName
                                    public compareTo(arg0: java.lang.Object): int
                                    public display(arg0: int): void
                                    public getStylesheet(): com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet
                                    public parseContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public parseSimplified(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public getDependencies(): java.util.Vector
                                    public addDependency(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.TopLevelElement): void
                                    public compile(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): com.sun.org.apache.bcel.internal.generic.InstructionList
                                    public static class: java.lang.Class<any>
                                }
                                class TestSeq {
                                    public constructor(arg0: java.util.Vector, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.Mode)
                                    public constructor(arg0: java.util.Vector, arg1: int, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.Mode)
                                    public toString(): string
                                    public getInstructionList(): com.sun.org.apache.bcel.internal.generic.InstructionList
                                    public getPriority(): double
                                    public getPosition(): int
                                    public reduce(): void
                                    public findTemplates(arg0: java.util.Map<com.sun.org.apache.xalan.internal.xsltc.compiler.Template, java.lang.Object>): void
                                    public compile(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, arg2: com.sun.org.apache.bcel.internal.generic.InstructionHandle): com.sun.org.apache.bcel.internal.generic.InstructionHandle
                                    public static class: java.lang.Class<any>
                                }
                                class Text extends com.sun.org.apache.xalan.internal.xsltc.compiler.Instruction {
                                    public constructor()
                                    public constructor(arg0: java.lang.String | string)
                                    protected getText(): string
                                    protected setText(arg0: java.lang.String | string): void
                                    public display(arg0: int): void
                                    public parseContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public ignore(): void
                                    public isIgnore(): boolean
                                    public isTextElement(): boolean
                                    protected contextDependent(): boolean
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public canLoadAsArrayOffsetLength(): boolean
                                    public loadAsArrayOffsetLength(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class TopLevelElement extends com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode {
                                    protected _dependencies: java.util.Vector
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public compile(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): com.sun.org.apache.bcel.internal.generic.InstructionList
                                    public display(arg0: int): void
                                    public addDependency(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.TopLevelElement): void
                                    public getDependencies(): java.util.Vector
                                    public static class: java.lang.Class<any>
                                }
                                class TransletOutput extends com.sun.org.apache.xalan.internal.xsltc.compiler.Instruction {
                                    public display(arg0: int): void
                                    public parseContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class UnaryOpExpr extends com.sun.org.apache.xalan.internal.xsltc.compiler.Expression {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Expression)
                                    public hasPositionCall(): boolean
                                    public hasLastCall(): boolean
                                    public setParser(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public toString(): string
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class UnionPathExpr extends com.sun.org.apache.xalan.internal.xsltc.compiler.Expression {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Expression, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.Expression)
                                    public setParser(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public toString(): string
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class UnparsedEntityUriCall extends com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName, arg1: java.util.Vector)
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class UnresolvedRef extends com.sun.org.apache.xalan.internal.xsltc.compiler.VariableRefBase {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName)
                                    public getName(): com.sun.org.apache.xalan.internal.xsltc.compiler.QName
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public toString(): string
                                    public static class: java.lang.Class<any>
                                }
                                class UnsupportedElement extends com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode {
                                    public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: boolean)
                                    public setErrorMessage(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg): void
                                    public display(arg0: int): void
                                    public parseContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class UseAttributeSets extends com.sun.org.apache.xalan.internal.xsltc.compiler.Instruction {
                                    public constructor(arg0: java.lang.String | string, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser)
                                    public addAttributeSets(arg0: java.lang.String | string): void
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class ValueOf extends com.sun.org.apache.xalan.internal.xsltc.compiler.Instruction {
                                    public display(arg0: int): void
                                    public parseContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class Variable extends com.sun.org.apache.xalan.internal.xsltc.compiler.VariableBase {
                                    public getIndex(): int
                                    public parseContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public initialize(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class VariableBase extends com.sun.org.apache.xalan.internal.xsltc.compiler.TopLevelElement {
                                    protected _name: com.sun.org.apache.xalan.internal.xsltc.compiler.QName
                                    protected _escapedName: string
                                    protected _type: com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    protected _isLocal: boolean
                                    protected _local: com.sun.org.apache.bcel.internal.generic.LocalVariableGen
                                    protected _loadInstruction: com.sun.org.apache.bcel.internal.generic.Instruction
                                    protected _storeInstruction: com.sun.org.apache.bcel.internal.generic.Instruction
                                    protected _select: com.sun.org.apache.xalan.internal.xsltc.compiler.Expression
                                    protected select: string
                                    protected _refs: java.util.Vector<com.sun.org.apache.xalan.internal.xsltc.compiler.VariableRefBase>
                                    protected _ignore: boolean
                                    public disable(): void
                                    public addReference(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.VariableRefBase): void
                                    public copyReferences(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.VariableBase): void
                                    public mapRegister(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public unmapRegister(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public loadInstruction(): com.sun.org.apache.bcel.internal.generic.Instruction
                                    public storeInstruction(): com.sun.org.apache.bcel.internal.generic.Instruction
                                    public getExpression(): com.sun.org.apache.xalan.internal.xsltc.compiler.Expression
                                    public toString(): string
                                    public display(arg0: int): void
                                    public getType(): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public getName(): com.sun.org.apache.xalan.internal.xsltc.compiler.QName
                                    public getEscapedName(): string
                                    public setName(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName): void
                                    public isLocal(): boolean
                                    public parseContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public translateValue(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class VariableRef extends com.sun.org.apache.xalan.internal.xsltc.compiler.VariableRefBase {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Variable)
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class VariableRefBase extends com.sun.org.apache.xalan.internal.xsltc.compiler.Expression {
                                    protected _variable: com.sun.org.apache.xalan.internal.xsltc.compiler.VariableBase
                                    protected _closure: com.sun.org.apache.xalan.internal.xsltc.compiler.Closure
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.VariableBase)
                                    public constructor()
                                    public getVariable(): com.sun.org.apache.xalan.internal.xsltc.compiler.VariableBase
                                    public addParentDependency(): void
                                    public equals(arg0: java.lang.Object): boolean
                                    public hashCode(): int
                                    public toString(): string
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public static class: java.lang.Class<any>
                                }
                                class When extends com.sun.org.apache.xalan.internal.xsltc.compiler.Instruction {
                                    public display(arg0: int): void
                                    public getTest(): com.sun.org.apache.xalan.internal.xsltc.compiler.Expression
                                    public ignore(): boolean
                                    public parseContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class Whitespace extends com.sun.org.apache.xalan.internal.xsltc.compiler.TopLevelElement {
                                    public static USE_PREDICATE: int
                                    public static STRIP_SPACE: int
                                    public static PRESERVE_SPACE: int
                                    public static RULE_NONE: int
                                    public static RULE_ELEMENT: int
                                    public static RULE_NAMESPACE: int
                                    public static RULE_ALL: int
                                    public parseContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public getRules(): java.util.Vector
                                    public static compileStripSpace(arg0: com.sun.org.apache.bcel.internal.generic.BranchHandle[], arg1: int, arg2: com.sun.org.apache.bcel.internal.generic.InstructionList): void
                                    public static compilePreserveSpace(arg0: com.sun.org.apache.bcel.internal.generic.BranchHandle[], arg1: int, arg2: com.sun.org.apache.bcel.internal.generic.InstructionList): void
                                    public static translateRules(arg0: java.util.Vector, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator): int
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class WithParam extends com.sun.org.apache.xalan.internal.xsltc.compiler.Instruction {
                                    protected _escapedName: string
                                    public display(arg0: int): void
                                    public getEscapedName(): string
                                    public getName(): com.sun.org.apache.xalan.internal.xsltc.compiler.QName
                                    public setName(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName): void
                                    public setDoParameterOptimization(arg0: boolean): void
                                    public parseContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translateValue(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public releaseResultTree(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class XPathLexer implements com.sun.java_cup.internal.runtime.Scanner {
                                    public YYEOF: int
                                    public next_token(): com.sun.java_cup.internal.runtime.Symbol
                                    public static class: java.lang.Class<any>
                                }
                                class XPathLexer$$Lambda implements com.sun.java_cup.internal.runtime.Scanner {
                                    public YYEOF: int
                                }
                                class XPathParser extends com.sun.java_cup.internal.runtime.lr_parser {
                                    protected static _production_table: short[][]
                                    protected static _action_table: short[][]
                                    protected static _reduce_table: short[][]
                                    protected action_obj: com.sun.org.apache.xalan.internal.xsltc.compiler.CUP$XPathParser$actions
                                    public static EmptyArgs: java.util.Vector
                                    public static DummyVarRef: com.sun.org.apache.xalan.internal.xsltc.compiler.VariableRef
                                    public _symbolTable: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable
                                    public constructor()
                                    public constructor(arg0: com.sun.java_cup.internal.runtime.Scanner | com.sun.java_cup.internal.runtime.Scanner$$Lambda)
                                    public production_table(): short[][]
                                    public action_table(): short[][]
                                    public reduce_table(): short[][]
                                    protected init_actions(): void
                                    public do_action(arg0: int, arg1: com.sun.java_cup.internal.runtime.lr_parser, arg2: java.util.Stack, arg3: int): com.sun.java_cup.internal.runtime.Symbol
                                    public start_state(): int
                                    public start_production(): int
                                    public EOF_sym(): int
                                    public error_sym(): int
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser)
                                    public getLineNumber(): int
                                    public getQNameIgnoreDefaultNs(arg0: java.lang.String | string): com.sun.org.apache.xalan.internal.xsltc.compiler.QName
                                    public getQName(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): com.sun.org.apache.xalan.internal.xsltc.compiler.QName
                                    public setMultiDocument(arg0: boolean): void
                                    public setCallsNodeset(arg0: boolean): void
                                    public setHasIdCall(arg0: boolean): void
                                    public createStepPattern(arg0: int, arg1: java.lang.Object, arg2: java.util.Vector): com.sun.org.apache.xalan.internal.xsltc.compiler.StepPattern
                                    public findNodeType(arg0: int, arg1: java.lang.Object): int
                                    public parse(arg0: java.lang.String | string, arg1: int): com.sun.java_cup.internal.runtime.Symbol
                                    public addError(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg): void
                                    public report_error(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                    public report_fatal_error(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                    public insertStep(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Step, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.RelativeLocationPath): com.sun.org.apache.xalan.internal.xsltc.compiler.RelativeLocationPath
                                    public isElementAxis(arg0: int): boolean
                                    public static class: java.lang.Class<any>
                                }
                                class XSLTC {
                                    public static FILE_OUTPUT: int
                                    public static JAR_OUTPUT: int
                                    public static BYTEARRAY_OUTPUT: int
                                    public static CLASSLOADER_OUTPUT: int
                                    public static BYTEARRAY_AND_FILE_OUTPUT: int
                                    public static BYTEARRAY_AND_JAR_OUTPUT: int
                                    public constructor(arg0: jdk.xml.internal.JdkXmlFeatures)
                                    public setSecureProcessing(arg0: boolean): void
                                    public isSecureProcessing(): boolean
                                    public getFeature(arg0: jdk.xml.internal.JdkXmlFeatures$XmlFeature): boolean
                                    public getProperty(arg0: java.lang.String | string): java.lang.Object
                                    public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                    public getParser(): com.sun.org.apache.xalan.internal.xsltc.compiler.Parser
                                    public setOutputType(arg0: int): void
                                    public getOutputProperties(): java.util.Properties
                                    public init(): void
                                    public getExternalExtensionFunctions(): java.util.Map<java.lang.String, java.lang.Class>
                                    public setSourceLoader(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SourceLoader | com.sun.org.apache.xalan.internal.xsltc.compiler.SourceLoader$$Lambda): void
                                    public setTemplateInlining(arg0: boolean): void
                                    public getTemplateInlining(): boolean
                                    public setPIParameters(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                    public compile(arg0: java.net.URL): boolean
                                    public compile(arg0: java.net.URL, arg1: java.lang.String | string): boolean
                                    public compile(arg0: java.io.InputStream, arg1: java.lang.String | string): boolean
                                    public compile(arg0: org.xml.sax.InputSource, arg1: java.lang.String | string): boolean
                                    public compile(arg0: java.util.Vector): boolean
                                    public getBytecodes(): byte[][]
                                    public compile(arg0: java.lang.String | string, arg1: org.xml.sax.InputSource, arg2: int): byte[][]
                                    public compile(arg0: java.lang.String | string, arg1: org.xml.sax.InputSource): byte[][]
                                    public setXMLReader(arg0: org.xml.sax.XMLReader): void
                                    public getXMLReader(): org.xml.sax.XMLReader
                                    public getErrors(): java.util.ArrayList<com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg>
                                    public getWarnings(): java.util.ArrayList<com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg>
                                    public printErrors(): void
                                    public printWarnings(): void
                                    protected setMultiDocument(arg0: boolean): void
                                    public isMultiDocument(): boolean
                                    protected setCallsNodeset(arg0: boolean): void
                                    public callsNodeset(): boolean
                                    protected setHasIdCall(arg0: boolean): void
                                    public hasIdCall(): boolean
                                    public setClassName(arg0: java.lang.String | string): void
                                    public getClassName(): string
                                    public setDestDirectory(arg0: java.lang.String | string): boolean
                                    public setPackageName(arg0: java.lang.String | string): void
                                    public setJarFileName(arg0: java.lang.String | string): void
                                    public getJarFileName(): string
                                    public setStylesheet(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet): void
                                    public getStylesheet(): com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet
                                    public registerAttribute(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName): int
                                    public registerElement(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName): int
                                    public registerNamespacePrefix(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.QName): int
                                    public registerNamespace(arg0: java.lang.String | string): int
                                    public nextModeSerial(): int
                                    public nextStylesheetSerial(): int
                                    public nextStepPatternSerial(): int
                                    public getNumberFieldIndexes(): int[]
                                    public nextHelperClassSerial(): int
                                    public nextAttributeSetSerial(): int
                                    public getNamesIndex(): java.util.Vector
                                    public getNamespaceIndex(): java.util.Vector
                                    public getHelperClassName(): string
                                    public dumpClass(arg0: com.sun.org.apache.bcel.internal.classfile.JavaClass | com.sun.org.apache.bcel.internal.classfile.JavaClass$$Lambda): void
                                    public outputToJar(): void
                                    public setDebug(arg0: boolean): void
                                    public debug(): boolean
                                    public getCharacterData(arg0: int): string
                                    public getCharacterDataCount(): int
                                    public addCharacterData(arg0: java.lang.String | string): int
                                    public static class: java.lang.Class<any>
                                }
                                class XslAttribute extends com.sun.org.apache.xalan.internal.xsltc.compiler.Instruction {
                                    public getName(): com.sun.org.apache.xalan.internal.xsltc.compiler.AttributeValue
                                    public display(arg0: int): void
                                    public parseContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class XslElement extends com.sun.org.apache.xalan.internal.xsltc.compiler.Instruction {
                                    public display(arg0: int): void
                                    public parseContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.Parser): void
                                    public typeCheck(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable): com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type
                                    public translateLiteral(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public translate(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public translateContents(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, arg1: com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator): void
                                    public static class: java.lang.Class<any>
                                }
                                class sym {
                                    public static Literal: int
                                    public static GE: int
                                    public static NAMESPACE: int
                                    public static SLASH: int
                                    public static PI: int
                                    public static COMMENT: int
                                    public static PIPARAM: int
                                    public static FOLLOWINGSIBLING: int
                                    public static ATSIGN: int
                                    public static DSLASH: int
                                    public static LPAREN: int
                                    public static EXPRESSION: int
                                    public static INT: int
                                    public static CHILD: int
                                    public static MINUS: int
                                    public static STAR: int
                                    public static DESCENDANTORSELF: int
                                    public static RPAREN: int
                                    public static AND: int
                                    public static LT: int
                                    public static OR: int
                                    public static COMMA: int
                                    public static DDOT: int
                                    public static DIV: int
                                    public static PLUS: int
                                    public static DOT: int
                                    public static ID: int
                                    public static LE: int
                                    public static QNAME: int
                                    public static DESCENDANT: int
                                    public static PRECEDINGSIBLING: int
                                    public static EOF: int
                                    public static error: int
                                    public static SELF: int
                                    public static VBAR: int
                                    public static MOD: int
                                    public static ANCESTORORSELF: int
                                    public static PRECEDING: int
                                    public static EQ: int
                                    public static PATTERN: int
                                    public static LBRACK: int
                                    public static REAL: int
                                    public static ANCESTOR: int
                                    public static RBRACK: int
                                    public static DCOLON: int
                                    public static DOLLAR: int
                                    public static NE: int
                                    public static PARENT: int
                                    public static FOLLOWING: int
                                    public static KEY: int
                                    public static TEXT: int
                                    public static ATTRIBUTE: int
                                    public static GT: int
                                    public static NODE: int
                                    public constructor()
                                    public static class: java.lang.Class<any>
                                }
                            }
                            namespace dom {
                                class AbsoluteIterator extends com.sun.org.apache.xml.internal.dtm.ref.DTMAxisIteratorBase {
                                    public constructor(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator)
                                    public setRestartable(arg0: boolean): void
                                    public setStartNode(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public next(): int
                                    public cloneIterator(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public reset(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public setMark(): void
                                    public gotoMark(): void
                                    public static class: java.lang.Class<any>
                                }
                                class AdaptiveResultTreeImpl extends com.sun.org.apache.xalan.internal.xsltc.dom.SimpleResultTreeImpl {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.dom.XSLTCDTMManager, arg1: int, arg2: com.sun.org.apache.xml.internal.dtm.DTMWSFilter, arg3: int, arg4: boolean)
                                    public getNestedDOM(): com.sun.org.apache.xalan.internal.xsltc.DOM
                                    public getDocument(): int
                                    public getStringValue(): string
                                    public getIterator(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getChildren(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getTypedChildren(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getAxisIterator(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getTypedAxisIterator(arg0: int, arg1: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getNthDescendant(arg0: int, arg1: int, arg2: boolean): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getNamespaceAxisIterator(arg0: int, arg1: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getNodeValueIterator(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg1: int, arg2: java.lang.String | string, arg3: boolean): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public orderNodes(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg1: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getNodeName(arg0: int): string
                                    public getNodeNameX(arg0: int): string
                                    public getNamespaceName(arg0: int): string
                                    public getExpandedTypeID(arg0: int): int
                                    public getNamespaceType(arg0: int): int
                                    public getParent(arg0: int): int
                                    public getAttributeNode(arg0: int, arg1: int): int
                                    public getStringValueX(arg0: int): string
                                    public copy(arg0: int, arg1: com.sun.org.apache.xml.internal.serializer.SerializationHandler): void
                                    public copy(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg1: com.sun.org.apache.xml.internal.serializer.SerializationHandler): void
                                    public shallowCopy(arg0: int, arg1: com.sun.org.apache.xml.internal.serializer.SerializationHandler): string
                                    public lessThan(arg0: int, arg1: int): boolean
                                    public characters(arg0: int, arg1: com.sun.org.apache.xml.internal.serializer.SerializationHandler): void
                                    public makeNode(arg0: int): org.w3c.dom.Node
                                    public makeNode(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator): org.w3c.dom.Node
                                    public makeNodeList(arg0: int): org.w3c.dom.NodeList
                                    public makeNodeList(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator): org.w3c.dom.NodeList
                                    public getLanguage(arg0: int): string
                                    public getSize(): int
                                    public getDocumentURI(arg0: int): string
                                    public setFilter(arg0: com.sun.org.apache.xalan.internal.xsltc.StripFilter | com.sun.org.apache.xalan.internal.xsltc.StripFilter$$Lambda): void
                                    public setupMapping(arg0: java.lang.String[], arg1: java.lang.String[], arg2: int[], arg3: java.lang.String[]): void
                                    public isElement(arg0: int): boolean
                                    public isAttribute(arg0: int): boolean
                                    public lookupNamespace(arg0: int, arg1: java.lang.String | string): string
                                    public getNodeIdent(arg0: int): int
                                    public getNodeHandle(arg0: int): int
                                    public getResultTreeFrag(arg0: int, arg1: int): com.sun.org.apache.xalan.internal.xsltc.DOM
                                    public getOutputDomBuilder(): com.sun.org.apache.xml.internal.serializer.SerializationHandler
                                    public getNSType(arg0: int): int
                                    public getUnparsedEntityURI(arg0: java.lang.String | string): string
                                    public getElementsWithIDs(): java.util.Map<java.lang.String, java.lang.Integer>
                                    public startDocument(): void
                                    public endDocument(): void
                                    public characters(arg0: java.lang.String | string): void
                                    public characters(arg0: char[], arg1: int, arg2: int): void
                                    public setEscaping(arg0: boolean): boolean
                                    public startElement(arg0: java.lang.String | string): void
                                    public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                    public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: org.xml.sax.Attributes): void
                                    public endElement(arg0: java.lang.String | string): void
                                    public endElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                    public addAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                    public addUniqueAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: int): void
                                    public addAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string): void
                                    public namespaceAfterStartElement(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                    public comment(arg0: java.lang.String | string): void
                                    public comment(arg0: char[], arg1: int, arg2: int): void
                                    public processingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                    public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                    public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                    public getAxisTraverser(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisTraverser
                                    public hasChildNodes(arg0: int): boolean
                                    public getFirstChild(arg0: int): int
                                    public getLastChild(arg0: int): int
                                    public getAttributeNode(arg0: int, arg1: java.lang.String | string, arg2: java.lang.String | string): int
                                    public getFirstAttribute(arg0: int): int
                                    public getFirstNamespaceNode(arg0: int, arg1: boolean): int
                                    public getNextSibling(arg0: int): int
                                    public getPreviousSibling(arg0: int): int
                                    public getNextAttribute(arg0: int): int
                                    public getNextNamespaceNode(arg0: int, arg1: int, arg2: boolean): int
                                    public getOwnerDocument(arg0: int): int
                                    public getDocumentRoot(arg0: int): int
                                    public getStringValue(arg0: int): com.sun.org.apache.xml.internal.utils.XMLString
                                    public getStringValueChunkCount(arg0: int): int
                                    public getStringValueChunk(arg0: int, arg1: int, arg2: int[]): char[]
                                    public getExpandedTypeID(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: int): int
                                    public getLocalNameFromExpandedNameID(arg0: int): string
                                    public getNamespaceFromExpandedNameID(arg0: int): string
                                    public getLocalName(arg0: int): string
                                    public getPrefix(arg0: int): string
                                    public getNamespaceURI(arg0: int): string
                                    public getNodeValue(arg0: int): string
                                    public getNodeType(arg0: int): short
                                    public getLevel(arg0: int): short
                                    public isSupported(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                                    public getDocumentBaseURI(): string
                                    public setDocumentBaseURI(arg0: java.lang.String | string): void
                                    public getDocumentSystemIdentifier(arg0: int): string
                                    public getDocumentEncoding(arg0: int): string
                                    public getDocumentStandalone(arg0: int): string
                                    public getDocumentVersion(arg0: int): string
                                    public getDocumentAllDeclarationsProcessed(): boolean
                                    public getDocumentTypeDeclarationSystemIdentifier(): string
                                    public getDocumentTypeDeclarationPublicIdentifier(): string
                                    public getElementById(arg0: java.lang.String | string): int
                                    public supportsPreStripping(): boolean
                                    public isNodeAfter(arg0: int, arg1: int): boolean
                                    public isCharacterElementContentWhitespace(arg0: int): boolean
                                    public isDocumentAllDeclarationsProcessed(arg0: int): boolean
                                    public isAttributeSpecified(arg0: int): boolean
                                    public dispatchCharactersEvents(arg0: int, arg1: org.xml.sax.ContentHandler, arg2: boolean): void
                                    public dispatchToEvents(arg0: int, arg1: org.xml.sax.ContentHandler): void
                                    public getNode(arg0: int): org.w3c.dom.Node
                                    public needsTwoThreads(): boolean
                                    public getContentHandler(): org.xml.sax.ContentHandler
                                    public getLexicalHandler(): org.xml.sax.ext.LexicalHandler
                                    public getEntityResolver(): org.xml.sax.EntityResolver
                                    public getDTDHandler(): org.xml.sax.DTDHandler
                                    public getErrorHandler(): org.xml.sax.ErrorHandler
                                    public getDeclHandler(): org.xml.sax.ext.DeclHandler
                                    public appendChild(arg0: int, arg1: boolean, arg2: boolean): void
                                    public appendTextChild(arg0: java.lang.String | string): void
                                    public getSourceLocatorFor(arg0: int): javax.xml.transform.SourceLocator
                                    public documentRegistration(): void
                                    public documentRelease(): void
                                    public release(): void
                                    public static class: java.lang.Class<any>
                                }
                                abstract class AnyNodeCounter extends com.sun.org.apache.xalan.internal.xsltc.dom.NodeCounter {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.Translet, arg1: com.sun.org.apache.xalan.internal.xsltc.DOM, arg2: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator)
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.Translet, arg1: com.sun.org.apache.xalan.internal.xsltc.DOM, arg2: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg3: boolean)
                                    public setStartNode(arg0: int): com.sun.org.apache.xalan.internal.xsltc.dom.NodeCounter
                                    public getCounter(): string
                                    public static getDefaultNodeCounter(arg0: com.sun.org.apache.xalan.internal.xsltc.Translet, arg1: com.sun.org.apache.xalan.internal.xsltc.DOM, arg2: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator): com.sun.org.apache.xalan.internal.xsltc.dom.NodeCounter
                                    public static class: java.lang.Class<any>
                                }
                                class ArrayNodeListIterator implements com.sun.org.apache.xml.internal.dtm.DTMAxisIterator {
                                    public constructor(arg0: int[])
                                    public next(): int
                                    public reset(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getLast(): int
                                    public getPosition(): int
                                    public setMark(): void
                                    public gotoMark(): void
                                    public setStartNode(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getStartNode(): int
                                    public isReverse(): boolean
                                    public cloneIterator(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public setRestartable(arg0: boolean): void
                                    public getNodeByPosition(arg0: int): int
                                    public static class: java.lang.Class<any>
                                }
                                class BitArray implements java.io.Externalizable {
                                    public constructor()
                                    public constructor(arg0: int)
                                    public constructor(arg0: int, arg1: int[])
                                    public setMask(arg0: int): void
                                    public getMask(): int
                                    public size(): int
                                    public getBit(arg0: int): boolean
                                    public getNextBit(arg0: int): int
                                    public getBitNumber(arg0: int): int
                                    public data(): int[]
                                    public setBit(arg0: int): void
                                    public merge(arg0: com.sun.org.apache.xalan.internal.xsltc.dom.BitArray): com.sun.org.apache.xalan.internal.xsltc.dom.BitArray
                                    public resize(arg0: int): void
                                    public cloneArray(): com.sun.org.apache.xalan.internal.xsltc.dom.BitArray
                                    public writeExternal(arg0: java.io.ObjectOutput): void
                                    public readExternal(arg0: java.io.ObjectInput): void
                                    public static class: java.lang.Class<any>
                                }
                                class CachedNodeListIterator extends com.sun.org.apache.xml.internal.dtm.ref.DTMAxisIteratorBase {
                                    public constructor(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator)
                                    public setRestartable(arg0: boolean): void
                                    public setStartNode(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public next(): int
                                    public getPosition(): int
                                    public getNodeByPosition(arg0: int): int
                                    public getNode(arg0: int): int
                                    public cloneIterator(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public reset(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public setMark(): void
                                    public gotoMark(): void
                                    public static class: java.lang.Class<any>
                                }
                                class ClonedNodeListIterator extends com.sun.org.apache.xml.internal.dtm.ref.DTMAxisIteratorBase {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.dom.CachedNodeListIterator)
                                    public setRestartable(arg0: boolean): void
                                    public setStartNode(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public next(): int
                                    public getPosition(): int
                                    public getNodeByPosition(arg0: int): int
                                    public cloneIterator(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public reset(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public setMark(): void
                                    public gotoMark(): void
                                    public static class: java.lang.Class<any>
                                }
                                class CollatorFactoryBase implements com.sun.org.apache.xalan.internal.xsltc.CollatorFactory {
                                    public static DEFAULT_LOCALE: java.util.Locale
                                    public static DEFAULT_COLLATOR: java.text.Collator
                                    public constructor()
                                    public getCollator(arg0: java.lang.String | string, arg1: java.lang.String | string): java.text.Collator
                                    public getCollator(arg0: java.util.Locale): java.text.Collator
                                    public static class: java.lang.Class<any>
                                }
                                interface CurrentNodeListFilter {
                                    test(arg0: int, arg1: int, arg2: int, arg3: int, arg4: com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet, arg5: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator): boolean
                                }
                                interface CurrentNodeListFilter$$Lambda {
                                    (arg0: int, arg1: int, arg2: int, arg3: int, arg4: com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet, arg5: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator): boolean
                                }
                                class CurrentNodeListIterator extends com.sun.org.apache.xml.internal.dtm.ref.DTMAxisIteratorBase {
                                    public constructor(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg1: com.sun.org.apache.xalan.internal.xsltc.dom.CurrentNodeListFilter | com.sun.org.apache.xalan.internal.xsltc.dom.CurrentNodeListFilter$$Lambda, arg2: int, arg3: com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet)
                                    public constructor(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg1: boolean, arg2: com.sun.org.apache.xalan.internal.xsltc.dom.CurrentNodeListFilter | com.sun.org.apache.xalan.internal.xsltc.dom.CurrentNodeListFilter$$Lambda, arg3: int, arg4: com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet)
                                    public forceNaturalOrder(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public setRestartable(arg0: boolean): void
                                    public isReverse(): boolean
                                    public cloneIterator(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public reset(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public next(): int
                                    public setStartNode(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getLast(): int
                                    public setMark(): void
                                    public gotoMark(): void
                                    public static class: java.lang.Class<any>
                                }
                                class DOMAdapter implements com.sun.org.apache.xalan.internal.xsltc.DOM {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.DOM, arg1: java.lang.String[], arg2: java.lang.String[], arg3: int[], arg4: java.lang.String[])
                                    public setupMapping(arg0: java.lang.String[], arg1: java.lang.String[], arg2: int[], arg3: java.lang.String[]): void
                                    public getNamesArray(): java.lang.String[]
                                    public getUrisArray(): java.lang.String[]
                                    public getTypesArray(): int[]
                                    public getNamespaceArray(): java.lang.String[]
                                    public getDOMImpl(): com.sun.org.apache.xalan.internal.xsltc.DOM
                                    public getIterator(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getStringValue(): string
                                    public getChildren(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public setFilter(arg0: com.sun.org.apache.xalan.internal.xsltc.StripFilter | com.sun.org.apache.xalan.internal.xsltc.StripFilter$$Lambda): void
                                    public getTypedChildren(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getNamespaceAxisIterator(arg0: int, arg1: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getAxisIterator(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getTypedAxisIterator(arg0: int, arg1: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getMultiDOMMask(): int
                                    public setMultiDOMMask(arg0: int): void
                                    public getNthDescendant(arg0: int, arg1: int, arg2: boolean): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getNodeValueIterator(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg1: int, arg2: java.lang.String | string, arg3: boolean): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public orderNodes(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg1: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getExpandedTypeID(arg0: int): int
                                    public getNamespaceType(arg0: int): int
                                    public getNSType(arg0: int): int
                                    public getParent(arg0: int): int
                                    public getAttributeNode(arg0: int, arg1: int): int
                                    public getNodeName(arg0: int): string
                                    public getNodeNameX(arg0: int): string
                                    public getNamespaceName(arg0: int): string
                                    public getStringValueX(arg0: int): string
                                    public copy(arg0: int, arg1: com.sun.org.apache.xml.internal.serializer.SerializationHandler): void
                                    public copy(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg1: com.sun.org.apache.xml.internal.serializer.SerializationHandler): void
                                    public shallowCopy(arg0: int, arg1: com.sun.org.apache.xml.internal.serializer.SerializationHandler): string
                                    public lessThan(arg0: int, arg1: int): boolean
                                    public characters(arg0: int, arg1: com.sun.org.apache.xml.internal.serializer.SerializationHandler): void
                                    public makeNode(arg0: int): org.w3c.dom.Node
                                    public makeNode(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator): org.w3c.dom.Node
                                    public makeNodeList(arg0: int): org.w3c.dom.NodeList
                                    public makeNodeList(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator): org.w3c.dom.NodeList
                                    public getLanguage(arg0: int): string
                                    public getSize(): int
                                    public setDocumentURI(arg0: java.lang.String | string): void
                                    public getDocumentURI(): string
                                    public getDocumentURI(arg0: int): string
                                    public getDocument(): int
                                    public isElement(arg0: int): boolean
                                    public isAttribute(arg0: int): boolean
                                    public getNodeIdent(arg0: int): int
                                    public getNodeHandle(arg0: int): int
                                    public getResultTreeFrag(arg0: int, arg1: int): com.sun.org.apache.xalan.internal.xsltc.DOM
                                    public getResultTreeFrag(arg0: int, arg1: int, arg2: boolean): com.sun.org.apache.xalan.internal.xsltc.DOM
                                    public getOutputDomBuilder(): com.sun.org.apache.xml.internal.serializer.SerializationHandler
                                    public lookupNamespace(arg0: int, arg1: java.lang.String | string): string
                                    public getUnparsedEntityURI(arg0: java.lang.String | string): string
                                    public getElementsWithIDs(): java.util.Map<java.lang.String, java.lang.Integer>
                                    public release(): void
                                    public static class: java.lang.Class<any>
                                }
                                interface DOMBuilder extends com.sun.org.apache.xalan.internal.xsltc.dom.ExtendedSAX {
                                }
                                class DOMWSFilter implements com.sun.org.apache.xml.internal.dtm.DTMWSFilter {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet)
                                    public getShouldStripSpace(arg0: int, arg1: com.sun.org.apache.xml.internal.dtm.DTM): short
                                    public static class: java.lang.Class<any>
                                }
                                class DocumentCache implements com.sun.org.apache.xalan.internal.xsltc.DOMCache {
                                    public constructor(arg0: int)
                                    public constructor(arg0: int, arg1: com.sun.org.apache.xalan.internal.xsltc.dom.XSLTCDTMManager)
                                    public retrieveDocument(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xalan.internal.xsltc.Translet): com.sun.org.apache.xalan.internal.xsltc.DOM
                                    public getStatistics(arg0: java.io.PrintWriter): void
                                    public static class: java.lang.Class<any>
                                }
                                class DocumentCache$$Lambda implements com.sun.org.apache.xalan.internal.xsltc.DOMCache {
                                    public constructor(arg0: int)
                                }
                                class DupFilterIterator extends com.sun.org.apache.xml.internal.dtm.ref.DTMAxisIteratorBase {
                                    public constructor(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator)
                                    public setStartNode(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public next(): int
                                    public cloneIterator(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public setRestartable(arg0: boolean): void
                                    public setMark(): void
                                    public gotoMark(): void
                                    public reset(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public static class: java.lang.Class<any>
                                }
                                class EmptyFilter implements com.sun.org.apache.xalan.internal.xsltc.dom.Filter {
                                    public constructor()
                                    public test(arg0: int): boolean
                                    public static class: java.lang.Class<any>
                                }
                                class EmptyFilter$$Lambda implements com.sun.org.apache.xalan.internal.xsltc.dom.Filter {
                                    public constructor()
                                }
                                interface ExtendedSAX extends org.xml.sax.ContentHandler , org.xml.sax.ext.LexicalHandler , org.xml.sax.DTDHandler , org.xml.sax.ext.DeclHandler {
                                }
                                interface Filter {
                                    test(arg0: int): boolean
                                }
                                interface Filter$$Lambda {
                                    (arg0: int): boolean
                                }
                                class FilterIterator extends com.sun.org.apache.xml.internal.dtm.ref.DTMAxisIteratorBase {
                                    public constructor(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg1: com.sun.org.apache.xml.internal.dtm.DTMFilter)
                                    public isReverse(): boolean
                                    public setRestartable(arg0: boolean): void
                                    public cloneIterator(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public reset(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public next(): int
                                    public setStartNode(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public setMark(): void
                                    public gotoMark(): void
                                    public static class: java.lang.Class<any>
                                }
                                class FilteredStepIterator extends com.sun.org.apache.xalan.internal.xsltc.dom.StepIterator {
                                    public constructor(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg1: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg2: com.sun.org.apache.xalan.internal.xsltc.dom.Filter | com.sun.org.apache.xalan.internal.xsltc.dom.Filter$$Lambda)
                                    public next(): int
                                    public static class: java.lang.Class<any>
                                }
                                class ForwardPositionIterator extends com.sun.org.apache.xml.internal.dtm.ref.DTMAxisIteratorBase {
                                    public constructor(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator)
                                    public cloneIterator(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public next(): int
                                    public setStartNode(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public reset(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public setMark(): void
                                    public gotoMark(): void
                                    public static class: java.lang.Class<any>
                                }
                                class KeyIndex extends com.sun.org.apache.xml.internal.dtm.ref.DTMAxisIteratorBase {
                                    public constructor(arg0: int)
                                    public setRestartable(arg0: boolean): void
                                    public add(arg0: java.lang.String | string, arg1: int, arg2: int): void
                                    public merge(arg0: com.sun.org.apache.xalan.internal.xsltc.dom.KeyIndex): void
                                    public lookupId(arg0: java.lang.Object): void
                                    public getDOMNodeById(arg0: java.lang.String | string): com.sun.org.apache.xalan.internal.xsltc.util.IntegerArray
                                    public lookupKey(arg0: java.lang.Object): void
                                    public next(): int
                                    public containsID(arg0: int, arg1: java.lang.Object): int
                                    public containsKey(arg0: int, arg1: java.lang.Object): int
                                    public reset(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getLast(): int
                                    public getPosition(): int
                                    public setMark(): void
                                    public gotoMark(): void
                                    public setStartNode(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getStartNode(): int
                                    public isReverse(): boolean
                                    public cloneIterator(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public setDom(arg0: com.sun.org.apache.xalan.internal.xsltc.DOM, arg1: int): void
                                    public getKeyIndexIterator(arg0: java.lang.Object, arg1: boolean): com.sun.org.apache.xalan.internal.xsltc.dom.KeyIndex$KeyIndexIterator
                                    public getKeyIndexIterator(arg0: java.lang.String | string, arg1: boolean): com.sun.org.apache.xalan.internal.xsltc.dom.KeyIndex$KeyIndexIterator
                                    public getKeyIndexIterator(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg1: boolean): com.sun.org.apache.xalan.internal.xsltc.dom.KeyIndex$KeyIndexIterator
                                    public static class: java.lang.Class<any>
                                }
                                class LoadDocument {
                                    public constructor()
                                    public static documentF(arg0: java.lang.Object, arg1: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg2: java.lang.String | string, arg3: com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet, arg4: com.sun.org.apache.xalan.internal.xsltc.DOM): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public static documentF(arg0: java.lang.Object, arg1: java.lang.String | string, arg2: com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet, arg3: com.sun.org.apache.xalan.internal.xsltc.DOM): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public static class: java.lang.Class<any>
                                }
                                class MatchingIterator extends com.sun.org.apache.xml.internal.dtm.ref.DTMAxisIteratorBase {
                                    public constructor(arg0: int, arg1: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator)
                                    public setRestartable(arg0: boolean): void
                                    public cloneIterator(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public setStartNode(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public reset(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public next(): int
                                    public getLast(): int
                                    public getPosition(): int
                                    public setMark(): void
                                    public gotoMark(): void
                                    public static class: java.lang.Class<any>
                                }
                                class MultiDOM implements com.sun.org.apache.xalan.internal.xsltc.DOM {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.DOM)
                                    public nextMask(): int
                                    public setupMapping(arg0: java.lang.String[], arg1: java.lang.String[], arg2: int[], arg3: java.lang.String[]): void
                                    public addDOMAdapter(arg0: com.sun.org.apache.xalan.internal.xsltc.dom.DOMAdapter): int
                                    public getDocumentMask(arg0: java.lang.String | string): int
                                    public getDOMAdapter(arg0: java.lang.String | string): com.sun.org.apache.xalan.internal.xsltc.DOM
                                    public getDocument(): int
                                    public getDTMManager(): com.sun.org.apache.xml.internal.dtm.DTMManager
                                    public getIterator(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getStringValue(): string
                                    public getChildren(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getTypedChildren(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getAxisIterator(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getTypedAxisIterator(arg0: int, arg1: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getNthDescendant(arg0: int, arg1: int, arg2: boolean): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getNodeValueIterator(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg1: int, arg2: java.lang.String | string, arg3: boolean): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getNamespaceAxisIterator(arg0: int, arg1: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public orderNodes(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg1: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getExpandedTypeID(arg0: int): int
                                    public getNamespaceType(arg0: int): int
                                    public getNSType(arg0: int): int
                                    public getParent(arg0: int): int
                                    public getAttributeNode(arg0: int, arg1: int): int
                                    public getNodeName(arg0: int): string
                                    public getNodeNameX(arg0: int): string
                                    public getNamespaceName(arg0: int): string
                                    public getStringValueX(arg0: int): string
                                    public copy(arg0: int, arg1: com.sun.org.apache.xml.internal.serializer.SerializationHandler): void
                                    public copy(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg1: com.sun.org.apache.xml.internal.serializer.SerializationHandler): void
                                    public shallowCopy(arg0: int, arg1: com.sun.org.apache.xml.internal.serializer.SerializationHandler): string
                                    public lessThan(arg0: int, arg1: int): boolean
                                    public characters(arg0: int, arg1: com.sun.org.apache.xml.internal.serializer.SerializationHandler): void
                                    public setFilter(arg0: com.sun.org.apache.xalan.internal.xsltc.StripFilter | com.sun.org.apache.xalan.internal.xsltc.StripFilter$$Lambda): void
                                    public makeNode(arg0: int): org.w3c.dom.Node
                                    public makeNode(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator): org.w3c.dom.Node
                                    public makeNodeList(arg0: int): org.w3c.dom.NodeList
                                    public makeNodeList(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator): org.w3c.dom.NodeList
                                    public getLanguage(arg0: int): string
                                    public getSize(): int
                                    public getDocumentURI(arg0: int): string
                                    public isElement(arg0: int): boolean
                                    public isAttribute(arg0: int): boolean
                                    public getDTMId(arg0: int): int
                                    public getDTM(arg0: int): com.sun.org.apache.xalan.internal.xsltc.DOM
                                    public getNodeIdent(arg0: int): int
                                    public getNodeHandle(arg0: int): int
                                    public getResultTreeFrag(arg0: int, arg1: int): com.sun.org.apache.xalan.internal.xsltc.DOM
                                    public getResultTreeFrag(arg0: int, arg1: int, arg2: boolean): com.sun.org.apache.xalan.internal.xsltc.DOM
                                    public getMain(): com.sun.org.apache.xalan.internal.xsltc.DOM
                                    public getOutputDomBuilder(): com.sun.org.apache.xml.internal.serializer.SerializationHandler
                                    public lookupNamespace(arg0: int, arg1: java.lang.String | string): string
                                    public getUnparsedEntityURI(arg0: java.lang.String | string): string
                                    public getElementsWithIDs(): java.util.Map<java.lang.String, java.lang.Integer>
                                    public release(): void
                                    public removeDOMAdapter(arg0: com.sun.org.apache.xalan.internal.xsltc.dom.DOMAdapter): void
                                    public static class: java.lang.Class<any>
                                }
                                abstract class MultiValuedNodeHeapIterator extends com.sun.org.apache.xml.internal.dtm.ref.DTMAxisIteratorBase {
                                    public constructor()
                                    public cloneIterator(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    protected addHeapNode(arg0: com.sun.org.apache.xalan.internal.xsltc.dom.MultiValuedNodeHeapIterator$HeapNode): void
                                    public next(): int
                                    public setStartNode(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    protected init(): void
                                    public setMark(): void
                                    public gotoMark(): void
                                    public reset(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public static class: java.lang.Class<any>
                                }
                                abstract class MultipleNodeCounter extends com.sun.org.apache.xalan.internal.xsltc.dom.NodeCounter {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.Translet, arg1: com.sun.org.apache.xalan.internal.xsltc.DOM, arg2: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator)
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.Translet, arg1: com.sun.org.apache.xalan.internal.xsltc.DOM, arg2: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg3: boolean)
                                    public setStartNode(arg0: int): com.sun.org.apache.xalan.internal.xsltc.dom.NodeCounter
                                    public getCounter(): string
                                    public static getDefaultNodeCounter(arg0: com.sun.org.apache.xalan.internal.xsltc.Translet, arg1: com.sun.org.apache.xalan.internal.xsltc.DOM, arg2: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator): com.sun.org.apache.xalan.internal.xsltc.dom.NodeCounter
                                    public static class: java.lang.Class<any>
                                }
                                abstract class NodeCounter {
                                    public static END: int
                                    protected _node: int
                                    protected _nodeType: int
                                    protected _value: double
                                    public _document: com.sun.org.apache.xalan.internal.xsltc.DOM
                                    public _iterator: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public _translet: com.sun.org.apache.xalan.internal.xsltc.Translet
                                    protected _format: string
                                    protected _lang: string
                                    protected _letterValue: string
                                    protected _groupSep: string
                                    protected _groupSize: int
                                    protected _hasFrom: boolean
                                    protected constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.Translet, arg1: com.sun.org.apache.xalan.internal.xsltc.DOM, arg2: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator)
                                    protected constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.Translet, arg1: com.sun.org.apache.xalan.internal.xsltc.DOM, arg2: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg3: boolean)
                                    public setStartNode(arg0: int): com.sun.org.apache.xalan.internal.xsltc.dom.NodeCounter
                                    public setValue(arg0: double): com.sun.org.apache.xalan.internal.xsltc.dom.NodeCounter
                                    protected setFormatting(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string): void
                                    public setDefaultFormatting(): com.sun.org.apache.xalan.internal.xsltc.dom.NodeCounter
                                    public getCounter(): string
                                    public getCounter(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string): string
                                    public matchesCount(arg0: int): boolean
                                    public matchesFrom(arg0: int): boolean
                                    protected formatNumbers(arg0: int): string
                                    protected formatNumbers(arg0: int[]): string
                                    public static class: java.lang.Class<any>
                                }
                                abstract class NodeIteratorBase implements com.sun.org.apache.xalan.internal.xsltc.NodeIterator {
                                    protected _last: int
                                    protected _position: int
                                    protected _markedNode: int
                                    protected _startNode: int
                                    protected _includeSelf: boolean
                                    protected _isRestartable: boolean
                                    public constructor()
                                    public setRestartable(arg0: boolean): void
                                    public setStartNode(arg0: int): com.sun.org.apache.xalan.internal.xsltc.NodeIterator
                                    public reset(): com.sun.org.apache.xalan.internal.xsltc.NodeIterator
                                    public includeSelf(): com.sun.org.apache.xalan.internal.xsltc.NodeIterator
                                    public getLast(): int
                                    public getPosition(): int
                                    public isReverse(): boolean
                                    public cloneIterator(): com.sun.org.apache.xalan.internal.xsltc.NodeIterator
                                    protected returnNode(arg0: int): int
                                    protected resetPosition(): com.sun.org.apache.xalan.internal.xsltc.NodeIterator
                                    public static class: java.lang.Class<any>
                                }
                                abstract class NodeSortRecord {
                                    public static COMPARE_STRING: int
                                    public static COMPARE_NUMERIC: int
                                    public static COMPARE_ASCENDING: int
                                    public static COMPARE_DESCENDING: int
                                    protected _collator: java.text.Collator
                                    protected _collators: java.text.Collator[]
                                    protected _locale: java.util.Locale
                                    protected _collatorFactory: com.sun.org.apache.xalan.internal.xsltc.CollatorFactory
                                    protected _settings: com.sun.org.apache.xalan.internal.xsltc.dom.SortSettings
                                    public constructor(arg0: int)
                                    public constructor()
                                    public initialize(arg0: int, arg1: int, arg2: com.sun.org.apache.xalan.internal.xsltc.DOM, arg3: com.sun.org.apache.xalan.internal.xsltc.dom.SortSettings): void
                                    public getNode(): int
                                    public compareDocOrder(arg0: com.sun.org.apache.xalan.internal.xsltc.dom.NodeSortRecord): int
                                    public compareTo(arg0: com.sun.org.apache.xalan.internal.xsltc.dom.NodeSortRecord): int
                                    public getCollator(): java.text.Collator[]
                                    public extractValueFromDOM(arg0: com.sun.org.apache.xalan.internal.xsltc.DOM, arg1: int, arg2: int, arg3: com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet, arg4: int): string
                                    public static class: java.lang.Class<any>
                                }
                                class NodeSortRecordFactory {
                                    protected _collator: java.text.Collator
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.DOM, arg1: java.lang.String | string, arg2: com.sun.org.apache.xalan.internal.xsltc.Translet, arg3: java.lang.String[], arg4: java.lang.String[])
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.DOM, arg1: java.lang.String | string, arg2: com.sun.org.apache.xalan.internal.xsltc.Translet, arg3: java.lang.String[], arg4: java.lang.String[], arg5: java.lang.String[], arg6: java.lang.String[])
                                    public makeNodeSortRecord(arg0: int, arg1: int): com.sun.org.apache.xalan.internal.xsltc.dom.NodeSortRecord
                                    public getClassName(): string
                                    public static class: java.lang.Class<any>
                                }
                                class NthIterator extends com.sun.org.apache.xml.internal.dtm.ref.DTMAxisIteratorBase {
                                    public constructor(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg1: int)
                                    public setRestartable(arg0: boolean): void
                                    public cloneIterator(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public next(): int
                                    public setStartNode(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public reset(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getLast(): int
                                    public getPosition(): int
                                    public setMark(): void
                                    public gotoMark(): void
                                    public static class: java.lang.Class<any>
                                }
                                class SAXImpl extends com.sun.org.apache.xml.internal.dtm.ref.sax2dtm.SAX2DTM2 implements com.sun.org.apache.xalan.internal.xsltc.DOMEnhancedForDTM , com.sun.org.apache.xalan.internal.xsltc.dom.DOMBuilder {
                                    public setDocumentURI(arg0: java.lang.String | string): void
                                    public getDocumentURI(): string
                                    public getDocumentURI(arg0: int): string
                                    public setupMapping(arg0: java.lang.String[], arg1: java.lang.String[], arg2: int[], arg3: java.lang.String[]): void
                                    public lookupNamespace(arg0: int, arg1: java.lang.String | string): string
                                    public isElement(arg0: int): boolean
                                    public isAttribute(arg0: int): boolean
                                    public getSize(): int
                                    public setFilter(arg0: com.sun.org.apache.xalan.internal.xsltc.StripFilter | com.sun.org.apache.xalan.internal.xsltc.StripFilter$$Lambda): void
                                    public lessThan(arg0: int, arg1: int): boolean
                                    public makeNode(arg0: int): org.w3c.dom.Node
                                    public makeNode(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator): org.w3c.dom.Node
                                    public makeNodeList(arg0: int): org.w3c.dom.NodeList
                                    public makeNodeList(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator): org.w3c.dom.NodeList
                                    public getNodeValueIterator(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg1: int, arg2: java.lang.String | string, arg3: boolean): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public orderNodes(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg1: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getIterator(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getNSType(arg0: int): int
                                    public getNamespaceType(arg0: int): int
                                    public getGeneralizedType(arg0: java.lang.String | string): int
                                    public getGeneralizedType(arg0: java.lang.String | string, arg1: boolean): int
                                    public getMapping(arg0: java.lang.String[], arg1: java.lang.String[], arg2: int[]): short[]
                                    public getReverseMapping(arg0: java.lang.String[], arg1: java.lang.String[], arg2: int[]): int[]
                                    public getNamespaceMapping(arg0: java.lang.String[]): short[]
                                    public getReverseNamespaceMapping(arg0: java.lang.String[]): short[]
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.dom.XSLTCDTMManager, arg1: javax.xml.transform.Source, arg2: int, arg3: com.sun.org.apache.xml.internal.dtm.DTMWSFilter, arg4: com.sun.org.apache.xml.internal.utils.XMLStringFactory, arg5: boolean, arg6: boolean)
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.dom.XSLTCDTMManager, arg1: javax.xml.transform.Source, arg2: int, arg3: com.sun.org.apache.xml.internal.dtm.DTMWSFilter, arg4: com.sun.org.apache.xml.internal.utils.XMLStringFactory, arg5: boolean, arg6: int, arg7: boolean, arg8: boolean)
                                    public migrateTo(arg0: com.sun.org.apache.xml.internal.dtm.DTMManager): void
                                    public getElementById(arg0: java.lang.String | string): int
                                    public hasDOMSource(): boolean
                                    protected getShouldStripWhitespace(): boolean
                                    public characters(arg0: char[], arg1: int, arg2: int): void
                                    public startDocument(): void
                                    public endDocument(): void
                                    public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: org.xml.sax.Attributes, arg4: org.w3c.dom.Node): void
                                    public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: org.xml.sax.Attributes): void
                                    public endElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                    public processingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                    public ignorableWhitespace(arg0: char[], arg1: int, arg2: int): void
                                    public startPrefixMapping(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                    public comment(arg0: char[], arg1: int, arg2: int): void
                                    public setEscaping(arg0: boolean): boolean
                                    public print(arg0: int, arg1: int): void
                                    public getNodeName(arg0: int): string
                                    public getNamespaceName(arg0: int): string
                                    public getAttributeNode(arg0: int, arg1: int): int
                                    public getAttributeValue(arg0: int, arg1: int): string
                                    public getAttributeValue(arg0: java.lang.String | string, arg1: int): string
                                    public getChildren(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getTypedChildren(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getAxisIterator(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getTypedAxisIterator(arg0: int, arg1: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getNamespaceAxisIterator(arg0: int, arg1: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getTypedDescendantIterator(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getNthDescendant(arg0: int, arg1: int, arg2: boolean): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public characters(arg0: int, arg1: com.sun.org.apache.xml.internal.serializer.SerializationHandler): void
                                    public copy(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg1: com.sun.org.apache.xml.internal.serializer.SerializationHandler): void
                                    public copy(arg0: com.sun.org.apache.xml.internal.serializer.SerializationHandler): void
                                    public copy(arg0: int, arg1: com.sun.org.apache.xml.internal.serializer.SerializationHandler): void
                                    public shallowCopy(arg0: int, arg1: com.sun.org.apache.xml.internal.serializer.SerializationHandler): string
                                    public getLanguage(arg0: int): string
                                    public getBuilder(): com.sun.org.apache.xalan.internal.xsltc.dom.DOMBuilder
                                    public getOutputDomBuilder(): com.sun.org.apache.xml.internal.serializer.SerializationHandler
                                    public getResultTreeFrag(arg0: int, arg1: int): com.sun.org.apache.xalan.internal.xsltc.DOM
                                    public getResultTreeFrag(arg0: int, arg1: int, arg2: boolean): com.sun.org.apache.xalan.internal.xsltc.DOM
                                    public getElementsWithIDs(): java.util.Map<java.lang.String, java.lang.Integer>
                                    public getUnparsedEntityURI(arg0: java.lang.String | string): string
                                    public release(): void
                                    public static class: java.lang.Class<any>
                                }
                                class SimpleResultTreeImpl extends com.sun.org.apache.xml.internal.serializer.EmptySerializer implements com.sun.org.apache.xalan.internal.xsltc.DOM , com.sun.org.apache.xml.internal.dtm.DTM {
                                    public static RTF_ROOT: int
                                    public static RTF_TEXT: int
                                    public static NUMBER_OF_NODES: int
                                    protected _textArray: java.lang.String[]
                                    protected _dtmManager: com.sun.org.apache.xalan.internal.xsltc.dom.XSLTCDTMManager
                                    protected _size: int
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.dom.XSLTCDTMManager, arg1: int)
                                    public getDTMManager(): com.sun.org.apache.xml.internal.dtm.ref.DTMManagerDefault
                                    public getDocument(): int
                                    public getStringValue(): string
                                    public getIterator(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getChildren(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getTypedChildren(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getAxisIterator(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getTypedAxisIterator(arg0: int, arg1: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getNthDescendant(arg0: int, arg1: int, arg2: boolean): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getNamespaceAxisIterator(arg0: int, arg1: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getNodeValueIterator(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg1: int, arg2: java.lang.String | string, arg3: boolean): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public orderNodes(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg1: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getNodeName(arg0: int): string
                                    public getNodeNameX(arg0: int): string
                                    public getNamespaceName(arg0: int): string
                                    public getExpandedTypeID(arg0: int): int
                                    public getNamespaceType(arg0: int): int
                                    public getParent(arg0: int): int
                                    public getAttributeNode(arg0: int, arg1: int): int
                                    public getStringValueX(arg0: int): string
                                    public copy(arg0: int, arg1: com.sun.org.apache.xml.internal.serializer.SerializationHandler): void
                                    public copy(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg1: com.sun.org.apache.xml.internal.serializer.SerializationHandler): void
                                    public shallowCopy(arg0: int, arg1: com.sun.org.apache.xml.internal.serializer.SerializationHandler): string
                                    public lessThan(arg0: int, arg1: int): boolean
                                    public characters(arg0: int, arg1: com.sun.org.apache.xml.internal.serializer.SerializationHandler): void
                                    public makeNode(arg0: int): org.w3c.dom.Node
                                    public makeNode(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator): org.w3c.dom.Node
                                    public makeNodeList(arg0: int): org.w3c.dom.NodeList
                                    public makeNodeList(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator): org.w3c.dom.NodeList
                                    public getLanguage(arg0: int): string
                                    public getSize(): int
                                    public getDocumentURI(arg0: int): string
                                    public setFilter(arg0: com.sun.org.apache.xalan.internal.xsltc.StripFilter | com.sun.org.apache.xalan.internal.xsltc.StripFilter$$Lambda): void
                                    public setupMapping(arg0: java.lang.String[], arg1: java.lang.String[], arg2: int[], arg3: java.lang.String[]): void
                                    public isElement(arg0: int): boolean
                                    public isAttribute(arg0: int): boolean
                                    public lookupNamespace(arg0: int, arg1: java.lang.String | string): string
                                    public getNodeIdent(arg0: int): int
                                    public getNodeHandle(arg0: int): int
                                    public getResultTreeFrag(arg0: int, arg1: int): com.sun.org.apache.xalan.internal.xsltc.DOM
                                    public getResultTreeFrag(arg0: int, arg1: int, arg2: boolean): com.sun.org.apache.xalan.internal.xsltc.DOM
                                    public getOutputDomBuilder(): com.sun.org.apache.xml.internal.serializer.SerializationHandler
                                    public getNSType(arg0: int): int
                                    public getUnparsedEntityURI(arg0: java.lang.String | string): string
                                    public getElementsWithIDs(): java.util.Map<java.lang.String, java.lang.Integer>
                                    public startDocument(): void
                                    public endDocument(): void
                                    public characters(arg0: java.lang.String | string): void
                                    public characters(arg0: char[], arg1: int, arg2: int): void
                                    public setEscaping(arg0: boolean): boolean
                                    public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                    public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                    public getAxisTraverser(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisTraverser
                                    public hasChildNodes(arg0: int): boolean
                                    public getFirstChild(arg0: int): int
                                    public getLastChild(arg0: int): int
                                    public getAttributeNode(arg0: int, arg1: java.lang.String | string, arg2: java.lang.String | string): int
                                    public getFirstAttribute(arg0: int): int
                                    public getFirstNamespaceNode(arg0: int, arg1: boolean): int
                                    public getNextSibling(arg0: int): int
                                    public getPreviousSibling(arg0: int): int
                                    public getNextAttribute(arg0: int): int
                                    public getNextNamespaceNode(arg0: int, arg1: int, arg2: boolean): int
                                    public getOwnerDocument(arg0: int): int
                                    public getDocumentRoot(arg0: int): int
                                    public getStringValue(arg0: int): com.sun.org.apache.xml.internal.utils.XMLString
                                    public getStringValueChunkCount(arg0: int): int
                                    public getStringValueChunk(arg0: int, arg1: int, arg2: int[]): char[]
                                    public getExpandedTypeID(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: int): int
                                    public getLocalNameFromExpandedNameID(arg0: int): string
                                    public getNamespaceFromExpandedNameID(arg0: int): string
                                    public getLocalName(arg0: int): string
                                    public getPrefix(arg0: int): string
                                    public getNamespaceURI(arg0: int): string
                                    public getNodeValue(arg0: int): string
                                    public getNodeType(arg0: int): short
                                    public getLevel(arg0: int): short
                                    public isSupported(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                                    public getDocumentBaseURI(): string
                                    public setDocumentBaseURI(arg0: java.lang.String | string): void
                                    public getDocumentSystemIdentifier(arg0: int): string
                                    public getDocumentEncoding(arg0: int): string
                                    public getDocumentStandalone(arg0: int): string
                                    public getDocumentVersion(arg0: int): string
                                    public getDocumentAllDeclarationsProcessed(): boolean
                                    public getDocumentTypeDeclarationSystemIdentifier(): string
                                    public getDocumentTypeDeclarationPublicIdentifier(): string
                                    public getElementById(arg0: java.lang.String | string): int
                                    public supportsPreStripping(): boolean
                                    public isNodeAfter(arg0: int, arg1: int): boolean
                                    public isCharacterElementContentWhitespace(arg0: int): boolean
                                    public isDocumentAllDeclarationsProcessed(arg0: int): boolean
                                    public isAttributeSpecified(arg0: int): boolean
                                    public dispatchCharactersEvents(arg0: int, arg1: org.xml.sax.ContentHandler, arg2: boolean): void
                                    public dispatchToEvents(arg0: int, arg1: org.xml.sax.ContentHandler): void
                                    public getNode(arg0: int): org.w3c.dom.Node
                                    public needsTwoThreads(): boolean
                                    public getContentHandler(): org.xml.sax.ContentHandler
                                    public getLexicalHandler(): org.xml.sax.ext.LexicalHandler
                                    public getEntityResolver(): org.xml.sax.EntityResolver
                                    public getDTDHandler(): org.xml.sax.DTDHandler
                                    public getErrorHandler(): org.xml.sax.ErrorHandler
                                    public getDeclHandler(): org.xml.sax.ext.DeclHandler
                                    public appendChild(arg0: int, arg1: boolean, arg2: boolean): void
                                    public appendTextChild(arg0: java.lang.String | string): void
                                    public getSourceLocatorFor(arg0: int): javax.xml.transform.SourceLocator
                                    public documentRegistration(): void
                                    public documentRelease(): void
                                    public migrateTo(arg0: com.sun.org.apache.xml.internal.dtm.DTMManager): void
                                    public release(): void
                                    public static class: java.lang.Class<any>
                                }
                                abstract class SingleNodeCounter extends com.sun.org.apache.xalan.internal.xsltc.dom.NodeCounter {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.Translet, arg1: com.sun.org.apache.xalan.internal.xsltc.DOM, arg2: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator)
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.Translet, arg1: com.sun.org.apache.xalan.internal.xsltc.DOM, arg2: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg3: boolean)
                                    public setStartNode(arg0: int): com.sun.org.apache.xalan.internal.xsltc.dom.NodeCounter
                                    public getCounter(): string
                                    public static getDefaultNodeCounter(arg0: com.sun.org.apache.xalan.internal.xsltc.Translet, arg1: com.sun.org.apache.xalan.internal.xsltc.DOM, arg2: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator): com.sun.org.apache.xalan.internal.xsltc.dom.NodeCounter
                                    public static class: java.lang.Class<any>
                                }
                                class SingletonIterator extends com.sun.org.apache.xml.internal.dtm.ref.DTMAxisIteratorBase {
                                    public constructor()
                                    public constructor(arg0: int)
                                    public constructor(arg0: int, arg1: boolean)
                                    public setStartNode(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public reset(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public next(): int
                                    public setMark(): void
                                    public gotoMark(): void
                                    public static class: java.lang.Class<any>
                                }
                                class SortSettings {
                                    public static class: java.lang.Class<any>
                                }
                                class SortingIterator extends com.sun.org.apache.xml.internal.dtm.ref.DTMAxisIteratorBase {
                                    public constructor(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg1: com.sun.org.apache.xalan.internal.xsltc.dom.NodeSortRecordFactory)
                                    public next(): int
                                    public setStartNode(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getPosition(): int
                                    public getLast(): int
                                    public setMark(): void
                                    public gotoMark(): void
                                    public cloneIterator(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public static class: java.lang.Class<any>
                                }
                                class StepIterator extends com.sun.org.apache.xml.internal.dtm.ref.DTMAxisIteratorBase {
                                    protected _source: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    protected _iterator: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public constructor(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg1: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator)
                                    public setRestartable(arg0: boolean): void
                                    public cloneIterator(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public setStartNode(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public reset(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public next(): int
                                    public setMark(): void
                                    public gotoMark(): void
                                    public static class: java.lang.Class<any>
                                }
                                interface StripWhitespaceFilter {
                                    stripSpace(arg0: com.sun.org.apache.xalan.internal.xsltc.DOM, arg1: int, arg2: int): boolean
                                }
                                interface StripWhitespaceFilter$$Lambda {
                                    (arg0: com.sun.org.apache.xalan.internal.xsltc.DOM, arg1: int, arg2: int): boolean
                                }
                                class UnionIterator extends com.sun.org.apache.xalan.internal.xsltc.dom.MultiValuedNodeHeapIterator {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.DOM)
                                    public addIterator(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator): com.sun.org.apache.xalan.internal.xsltc.dom.UnionIterator
                                    public static class: java.lang.Class<any>
                                }
                                class XSLTCDTMManager extends com.sun.org.apache.xml.internal.dtm.ref.DTMManagerDefault {
                                    public constructor()
                                    public static newInstance(): com.sun.org.apache.xalan.internal.xsltc.dom.XSLTCDTMManager
                                    public static createNewDTMManagerInstance(): com.sun.org.apache.xalan.internal.xsltc.dom.XSLTCDTMManager
                                    public getDTM(arg0: javax.xml.transform.Source, arg1: boolean, arg2: com.sun.org.apache.xml.internal.dtm.DTMWSFilter, arg3: boolean, arg4: boolean): com.sun.org.apache.xml.internal.dtm.DTM
                                    public getDTM(arg0: javax.xml.transform.Source, arg1: boolean, arg2: com.sun.org.apache.xml.internal.dtm.DTMWSFilter, arg3: boolean, arg4: boolean, arg5: boolean): com.sun.org.apache.xml.internal.dtm.DTM
                                    public getDTM(arg0: javax.xml.transform.Source, arg1: boolean, arg2: com.sun.org.apache.xml.internal.dtm.DTMWSFilter, arg3: boolean, arg4: boolean, arg5: boolean, arg6: boolean): com.sun.org.apache.xml.internal.dtm.DTM
                                    public getDTM(arg0: javax.xml.transform.Source, arg1: boolean, arg2: com.sun.org.apache.xml.internal.dtm.DTMWSFilter, arg3: boolean, arg4: boolean, arg5: boolean, arg6: int, arg7: boolean): com.sun.org.apache.xml.internal.dtm.DTM
                                    public getDTM(arg0: javax.xml.transform.Source, arg1: boolean, arg2: com.sun.org.apache.xml.internal.dtm.DTMWSFilter, arg3: boolean, arg4: boolean, arg5: boolean, arg6: int, arg7: boolean, arg8: boolean): com.sun.org.apache.xml.internal.dtm.DTM
                                    public static class: java.lang.Class<any>
                                }
                            }
                            namespace runtime {
                                namespace output {
                                    interface OutputBuffer {
                                        close(): string
                                        append(arg0: char): com.sun.org.apache.xalan.internal.xsltc.runtime.output.OutputBuffer
                                        append(arg0: java.lang.String | string): com.sun.org.apache.xalan.internal.xsltc.runtime.output.OutputBuffer
                                        append(arg0: char[], arg1: int, arg2: int): com.sun.org.apache.xalan.internal.xsltc.runtime.output.OutputBuffer
                                    }
                                    class StringOutputBuffer implements com.sun.org.apache.xalan.internal.xsltc.runtime.output.OutputBuffer {
                                        public constructor()
                                        public close(): string
                                        public append(arg0: java.lang.String | string): com.sun.org.apache.xalan.internal.xsltc.runtime.output.OutputBuffer
                                        public append(arg0: char[], arg1: int, arg2: int): com.sun.org.apache.xalan.internal.xsltc.runtime.output.OutputBuffer
                                        public append(arg0: char): com.sun.org.apache.xalan.internal.xsltc.runtime.output.OutputBuffer
                                        public static class: java.lang.Class<any>
                                    }
                                    class TransletOutputHandlerFactory {
                                        public static STREAM: int
                                        public static SAX: int
                                        public static DOM: int
                                        public static STAX: int
                                        public static newInstance(): com.sun.org.apache.xalan.internal.xsltc.runtime.output.TransletOutputHandlerFactory
                                        public static newInstance(arg0: boolean): com.sun.org.apache.xalan.internal.xsltc.runtime.output.TransletOutputHandlerFactory
                                        public constructor(arg0: boolean)
                                        public setOutputType(arg0: int): void
                                        public setEncoding(arg0: java.lang.String | string): void
                                        public setOutputMethod(arg0: java.lang.String | string): void
                                        public setOutputStream(arg0: java.io.OutputStream | java.io.OutputStream$$Lambda): void
                                        public setWriter(arg0: java.io.Writer | java.io.Writer$$Lambda): void
                                        public setHandler(arg0: org.xml.sax.ContentHandler): void
                                        public setLexicalHandler(arg0: org.xml.sax.ext.LexicalHandler): void
                                        public setNode(arg0: org.w3c.dom.Node): void
                                        public getNode(): org.w3c.dom.Node
                                        public setNextSibling(arg0: org.w3c.dom.Node): void
                                        public getXMLEventWriter(): javax.xml.stream.XMLEventWriter
                                        public setXMLEventWriter(arg0: javax.xml.stream.XMLEventWriter): void
                                        public getXMLStreamWriter(): javax.xml.stream.XMLStreamWriter
                                        public setXMLStreamWriter(arg0: javax.xml.stream.XMLStreamWriter): void
                                        public setIndentNumber(arg0: int): void
                                        public getSerializationHandler(): com.sun.org.apache.xml.internal.serializer.SerializationHandler
                                        public static class: java.lang.Class<any>
                                    }
                                    class WriterOutputBuffer implements com.sun.org.apache.xalan.internal.xsltc.runtime.output.OutputBuffer {
                                        public constructor(arg0: java.io.Writer | java.io.Writer$$Lambda)
                                        public close(): string
                                        public append(arg0: java.lang.String | string): com.sun.org.apache.xalan.internal.xsltc.runtime.output.OutputBuffer
                                        public append(arg0: char[], arg1: int, arg2: int): com.sun.org.apache.xalan.internal.xsltc.runtime.output.OutputBuffer
                                        public append(arg0: char): com.sun.org.apache.xalan.internal.xsltc.runtime.output.OutputBuffer
                                        public static class: java.lang.Class<any>
                                    }
                                }
                                abstract class AbstractTranslet implements com.sun.org.apache.xalan.internal.xsltc.Translet {
                                    public _version: string
                                    public _method: string
                                    public _encoding: string
                                    public _omitHeader: boolean
                                    public _standalone: string
                                    public _isStandalone: boolean
                                    public _doctypePublic: string
                                    public _doctypeSystem: string
                                    public _indent: boolean
                                    public _mediaType: string
                                    public _cdata: java.util.Vector
                                    public _indentamount: int
                                    public static FIRST_TRANSLET_VERSION: int
                                    public static VER_SPLIT_NAMES_ARRAY: int
                                    public static CURRENT_TRANSLET_VERSION: int
                                    protected transletVersion: int
                                    protected namesArray: java.lang.String[]
                                    protected urisArray: java.lang.String[]
                                    protected typesArray: int[]
                                    protected namespaceArray: java.lang.String[]
                                    protected _templates: javax.xml.transform.Templates
                                    protected _hasIdCall: boolean
                                    protected stringValueHandler: com.sun.org.apache.xalan.internal.xsltc.runtime.StringValueHandler
                                    protected pbase: int
                                    protected pframe: int
                                    protected paramsStack: java.util.ArrayList
                                    public _formatSymbols: java.util.Map<java.lang.String, java.text.DecimalFormat>
                                    protected _domImplementation: org.w3c.dom.DOMImplementation
                                    public constructor()
                                    public printInternalState(): void
                                    public makeDOMAdapter(arg0: com.sun.org.apache.xalan.internal.xsltc.DOM): com.sun.org.apache.xalan.internal.xsltc.dom.DOMAdapter
                                    public pushParamFrame(): void
                                    public popParamFrame(): void
                                    public addParameter(arg0: java.lang.String | string, arg1: java.lang.Object): java.lang.Object
                                    public addParameter(arg0: java.lang.String | string, arg1: java.lang.Object, arg2: boolean): java.lang.Object
                                    public clearParameters(): void
                                    public getParameter(arg0: java.lang.String | string): java.lang.Object
                                    public setMessageHandler(arg0: com.sun.org.apache.xalan.internal.xsltc.runtime.MessageHandler): void
                                    public displayMessage(arg0: java.lang.String | string): void
                                    public addDecimalFormat(arg0: java.lang.String | string, arg1: java.text.DecimalFormatSymbols): void
                                    public getDecimalFormat(arg0: java.lang.String | string): java.text.DecimalFormat
                                    public prepassDocument(arg0: com.sun.org.apache.xalan.internal.xsltc.DOM): void
                                    public postInitialization(): void
                                    public setIndexSize(arg0: int): void
                                    public createKeyIndex(): com.sun.org.apache.xalan.internal.xsltc.dom.KeyIndex
                                    public buildKeyIndex(arg0: java.lang.String | string, arg1: int, arg2: java.lang.String | string): void
                                    public buildKeyIndex(arg0: java.lang.String | string, arg1: com.sun.org.apache.xalan.internal.xsltc.DOM): void
                                    public getKeyIndex(arg0: java.lang.String | string): com.sun.org.apache.xalan.internal.xsltc.dom.KeyIndex
                                    public buildKeys(arg0: com.sun.org.apache.xalan.internal.xsltc.DOM, arg1: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg2: com.sun.org.apache.xml.internal.serializer.SerializationHandler, arg3: int): void
                                    public setKeyIndexDom(arg0: java.lang.String | string, arg1: com.sun.org.apache.xalan.internal.xsltc.DOM): void
                                    public setDOMCache(arg0: com.sun.org.apache.xalan.internal.xsltc.DOMCache | com.sun.org.apache.xalan.internal.xsltc.DOMCache$$Lambda): void
                                    public getDOMCache(): com.sun.org.apache.xalan.internal.xsltc.DOMCache
                                    public openOutputHandler(arg0: java.lang.String | string, arg1: boolean): com.sun.org.apache.xml.internal.serializer.SerializationHandler
                                    public openOutputHandler(arg0: java.lang.String | string): com.sun.org.apache.xml.internal.serializer.SerializationHandler
                                    public closeOutputHandler(arg0: com.sun.org.apache.xml.internal.serializer.SerializationHandler): void
                                    public transform(arg0: com.sun.org.apache.xalan.internal.xsltc.DOM, arg1: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg2: com.sun.org.apache.xml.internal.serializer.SerializationHandler): void
                                    public transform(arg0: com.sun.org.apache.xalan.internal.xsltc.DOM, arg1: com.sun.org.apache.xml.internal.serializer.SerializationHandler): void
                                    public characters(arg0: java.lang.String | string, arg1: com.sun.org.apache.xml.internal.serializer.SerializationHandler): void
                                    public addCdataElement(arg0: java.lang.String | string): void
                                    protected transferOutputSettings(arg0: com.sun.org.apache.xml.internal.serializer.SerializationHandler): void
                                    public addAuxiliaryClass(arg0: java.lang.Class): void
                                    public setAuxiliaryClasses(arg0: java.util.Map<java.lang.String, java.lang.Class<any>>): void
                                    public getAuxiliaryClass(arg0: java.lang.String | string): java.lang.Class
                                    public getNamesArray(): java.lang.String[]
                                    public getUrisArray(): java.lang.String[]
                                    public getTypesArray(): int[]
                                    public getNamespaceArray(): java.lang.String[]
                                    public hasIdCall(): boolean
                                    public getTemplates(): javax.xml.transform.Templates
                                    public setTemplates(arg0: javax.xml.transform.Templates): void
                                    public overrideDefaultParser(): boolean
                                    public setOverrideDefaultParser(arg0: boolean): void
                                    public getAllowedProtocols(): string
                                    public setAllowedProtocols(arg0: java.lang.String | string): void
                                    public newDocument(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.Document
                                    public static class: java.lang.Class<any>
                                }
                                class Attributes implements org.xml.sax.AttributeList {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.DOM, arg1: int)
                                    public getLength(): int
                                    public getName(arg0: int): string
                                    public getType(arg0: int): string
                                    public getType(arg0: java.lang.String | string): string
                                    public getValue(arg0: int): string
                                    public getValue(arg0: java.lang.String | string): string
                                    public static class: java.lang.Class<any>
                                }
                                class BasisLibrary {
                                    public static RUN_TIME_INTERNAL_ERR: string
                                    public static RUN_TIME_COPY_ERR: string
                                    public static DATA_CONVERSION_ERR: string
                                    public static EXTERNAL_FUNC_ERR: string
                                    public static EQUALITY_EXPR_ERR: string
                                    public static INVALID_ARGUMENT_ERR: string
                                    public static FORMAT_NUMBER_ERR: string
                                    public static ITERATOR_CLONE_ERR: string
                                    public static AXIS_SUPPORT_ERR: string
                                    public static TYPED_AXIS_SUPPORT_ERR: string
                                    public static STRAY_ATTRIBUTE_ERR: string
                                    public static STRAY_NAMESPACE_ERR: string
                                    public static NAMESPACE_PREFIX_ERR: string
                                    public static DOM_ADAPTER_INIT_ERR: string
                                    public static PARSER_DTD_SUPPORT_ERR: string
                                    public static NAMESPACES_SUPPORT_ERR: string
                                    public static CANT_RESOLVE_RELATIVE_URI_ERR: string
                                    public static UNSUPPORTED_XSL_ERR: string
                                    public static UNSUPPORTED_EXT_ERR: string
                                    public static UNKNOWN_TRANSLET_VERSION_ERR: string
                                    public static INVALID_QNAME_ERR: string
                                    public static INVALID_NCNAME_ERR: string
                                    public static UNALLOWED_EXTENSION_FUNCTION_ERR: string
                                    public static UNALLOWED_EXTENSION_ELEMENT_ERR: string
                                    public static ERROR_MESSAGES_KEY: string
                                    public constructor()
                                    public static countF(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator): int
                                    public static positionF(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator): int
                                    public static sumF(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg1: com.sun.org.apache.xalan.internal.xsltc.DOM): double
                                    public static stringF(arg0: int, arg1: com.sun.org.apache.xalan.internal.xsltc.DOM): string
                                    public static stringF(arg0: java.lang.Object, arg1: com.sun.org.apache.xalan.internal.xsltc.DOM): string
                                    public static stringF(arg0: java.lang.Object, arg1: int, arg2: com.sun.org.apache.xalan.internal.xsltc.DOM): string
                                    public static numberF(arg0: int, arg1: com.sun.org.apache.xalan.internal.xsltc.DOM): double
                                    public static numberF(arg0: java.lang.Object, arg1: com.sun.org.apache.xalan.internal.xsltc.DOM): double
                                    public static roundF(arg0: double): double
                                    public static booleanF(arg0: java.lang.Object): boolean
                                    public static substringF(arg0: java.lang.String | string, arg1: double): string
                                    public static substringF(arg0: java.lang.String | string, arg1: double, arg2: double): string
                                    public static substring_afterF(arg0: java.lang.String | string, arg1: java.lang.String | string): string
                                    public static substring_beforeF(arg0: java.lang.String | string, arg1: java.lang.String | string): string
                                    public static translateF(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): string
                                    public static normalize_spaceF(arg0: int, arg1: com.sun.org.apache.xalan.internal.xsltc.DOM): string
                                    public static normalize_spaceF(arg0: java.lang.String | string): string
                                    public static generate_idF(arg0: int): string
                                    public static getLocalName(arg0: java.lang.String | string): string
                                    public static unresolved_externalF(arg0: java.lang.String | string): void
                                    public static unallowed_extension_functionF(arg0: java.lang.String | string): void
                                    public static unallowed_extension_elementF(arg0: java.lang.String | string): void
                                    public static unsupported_ElementF(arg0: java.lang.String | string, arg1: boolean): void
                                    public static namespace_uriF(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg1: com.sun.org.apache.xalan.internal.xsltc.DOM): string
                                    public static system_propertyF(arg0: java.lang.String | string): string
                                    public static namespace_uriF(arg0: int, arg1: com.sun.org.apache.xalan.internal.xsltc.DOM): string
                                    public static objectTypeF(arg0: java.lang.Object): string
                                    public static nodesetF(arg0: java.lang.Object): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public static compare(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg1: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg2: int, arg3: com.sun.org.apache.xalan.internal.xsltc.DOM): boolean
                                    public static compare(arg0: int, arg1: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg2: int, arg3: com.sun.org.apache.xalan.internal.xsltc.DOM): boolean
                                    public static compare(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg1: double, arg2: int, arg3: com.sun.org.apache.xalan.internal.xsltc.DOM): boolean
                                    public static compare(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg1: java.lang.String | string, arg2: int, arg3: com.sun.org.apache.xalan.internal.xsltc.DOM): boolean
                                    public static compare(arg0: java.lang.Object, arg1: java.lang.Object, arg2: int, arg3: com.sun.org.apache.xalan.internal.xsltc.DOM): boolean
                                    public static testLanguage(arg0: java.lang.String | string, arg1: com.sun.org.apache.xalan.internal.xsltc.DOM, arg2: int): boolean
                                    public static stringToReal(arg0: java.lang.String | string): double
                                    public static stringToInt(arg0: java.lang.String | string): int
                                    public static realToString(arg0: double): string
                                    public static realToInt(arg0: double): int
                                    public static formatNumber(arg0: double, arg1: java.lang.String | string, arg2: java.text.DecimalFormat): string
                                    public static referenceToNodeSet(arg0: java.lang.Object): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public static referenceToNodeList(arg0: java.lang.Object, arg1: com.sun.org.apache.xalan.internal.xsltc.DOM): org.w3c.dom.NodeList
                                    public static referenceToNode(arg0: java.lang.Object, arg1: com.sun.org.apache.xalan.internal.xsltc.DOM): org.w3c.dom.Node
                                    public static referenceToLong(arg0: java.lang.Object): long
                                    public static referenceToDouble(arg0: java.lang.Object): double
                                    public static referenceToBoolean(arg0: java.lang.Object): boolean
                                    public static referenceToString(arg0: java.lang.Object, arg1: com.sun.org.apache.xalan.internal.xsltc.DOM): string
                                    public static node2Iterator(arg0: org.w3c.dom.Node, arg1: com.sun.org.apache.xalan.internal.xsltc.Translet, arg2: com.sun.org.apache.xalan.internal.xsltc.DOM): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public static nodeList2Iterator(arg0: org.w3c.dom.NodeList, arg1: com.sun.org.apache.xalan.internal.xsltc.Translet, arg2: com.sun.org.apache.xalan.internal.xsltc.DOM): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public static referenceToResultTree(arg0: java.lang.Object): com.sun.org.apache.xalan.internal.xsltc.DOM
                                    public static getSingleNode(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public static copy(arg0: java.lang.Object, arg1: com.sun.org.apache.xml.internal.serializer.SerializationHandler, arg2: int, arg3: com.sun.org.apache.xalan.internal.xsltc.DOM): void
                                    public static checkAttribQName(arg0: java.lang.String | string): void
                                    public static checkNCName(arg0: java.lang.String | string): void
                                    public static checkQName(arg0: java.lang.String | string): void
                                    public static startXslElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xml.internal.serializer.SerializationHandler, arg3: com.sun.org.apache.xalan.internal.xsltc.DOM, arg4: int): string
                                    public static getPrefix(arg0: java.lang.String | string): string
                                    public static generatePrefix(): string
                                    public static resetPrefixIndex(): void
                                    public static runTimeError(arg0: java.lang.String | string): void
                                    public static runTimeError(arg0: java.lang.String | string, arg1: java.lang.Object[]): void
                                    public static runTimeError(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                    public static runTimeError(arg0: java.lang.String | string, arg1: java.lang.Object, arg2: java.lang.Object): void
                                    public static consoleOutput(arg0: java.lang.String | string): void
                                    public static replace(arg0: java.lang.String | string, arg1: char, arg2: java.lang.String | string): string
                                    public static replace(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String[]): string
                                    public static mapQNameToJavaName(arg0: java.lang.String | string): string
                                    public static getStringLength(arg0: java.lang.String | string): int
                                    public static class: java.lang.Class<any>
                                }
                                interface Constants {
                                    ANY: int
                                    ATTRIBUTE: int
                                    ROOT: int
                                    TEXT: int
                                    ELEMENT: int
                                    COMMENT: int
                                    PROCESSING_INSTRUCTION: int
                                    XSLT_URI: string
                                    NAMESPACE_FEATURE: string
                                    EMPTYSTRING: string
                                    XML_PREFIX: string
                                    XMLNS_PREFIX: string
                                    XMLNS_STRING: string
                                    XMLNS_URI: string
                                }
                                class ErrorMessages extends java.util.ListResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                class ErrorMessages_ca extends java.util.ListResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                class ErrorMessages_cs extends java.util.ListResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                class ErrorMessages_de extends java.util.ListResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                class ErrorMessages_es extends java.util.ListResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                class ErrorMessages_fr extends java.util.ListResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                class ErrorMessages_it extends java.util.ListResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                class ErrorMessages_ja extends java.util.ListResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                class ErrorMessages_ko extends java.util.ListResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                class ErrorMessages_pt_BR extends java.util.ListResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                class ErrorMessages_sk extends java.util.ListResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                class ErrorMessages_sv extends java.util.ListResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                class ErrorMessages_zh_CN extends java.util.ListResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                class ErrorMessages_zh_TW extends java.util.ListResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                class InternalRuntimeError extends java.lang.Error {
                                    public constructor(arg0: java.lang.String | string)
                                    public static class: java.lang.Class<any>
                                }
                                class MessageHandler {
                                    public constructor()
                                    public displayMessage(arg0: java.lang.String | string): void
                                    public static class: java.lang.Class<any>
                                }
                                class Node {
                                    public node: int
                                    public type: int
                                    public constructor(arg0: int, arg1: int)
                                    public static class: java.lang.Class<any>
                                }
                                class Operators {
                                    public static EQ: int
                                    public static NE: int
                                    public static GT: int
                                    public static LT: int
                                    public static GE: int
                                    public static LE: int
                                    public constructor()
                                    public static getOpNames(arg0: int): string
                                    public static swapOp(arg0: int): int
                                    public static class: java.lang.Class<any>
                                }
                                class Parameter {
                                    public _name: string
                                    public _value: java.lang.Object
                                    public _isDefault: boolean
                                    public constructor(arg0: java.lang.String | string, arg1: java.lang.Object)
                                    public constructor(arg0: java.lang.String | string, arg1: java.lang.Object, arg2: boolean)
                                    public static class: java.lang.Class<any>
                                }
                                class StringValueHandler extends com.sun.org.apache.xml.internal.serializer.EmptySerializer {
                                    public constructor()
                                    public characters(arg0: char[], arg1: int, arg2: int): void
                                    public getValue(): string
                                    public characters(arg0: java.lang.String | string): void
                                    public startElement(arg0: java.lang.String | string): void
                                    public endElement(arg0: java.lang.String | string): void
                                    public setEscaping(arg0: boolean): boolean
                                    public getValueOfPI(): string
                                    public static class: java.lang.Class<any>
                                }
                            }
                            namespace trax {
                                class DOM2SAX implements org.xml.sax.XMLReader , org.xml.sax.Locator {
                                    public constructor(arg0: org.w3c.dom.Node)
                                    public getContentHandler(): org.xml.sax.ContentHandler
                                    public setContentHandler(arg0: org.xml.sax.ContentHandler): void
                                    public parse(arg0: org.xml.sax.InputSource): void
                                    public parse(): void
                                    public getDTDHandler(): org.xml.sax.DTDHandler
                                    public getErrorHandler(): org.xml.sax.ErrorHandler
                                    public getFeature(arg0: java.lang.String | string): boolean
                                    public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                    public parse(arg0: java.lang.String | string): void
                                    public setDTDHandler(arg0: org.xml.sax.DTDHandler): void
                                    public setEntityResolver(arg0: org.xml.sax.EntityResolver | org.xml.sax.EntityResolver$$Lambda): void
                                    public getEntityResolver(): org.xml.sax.EntityResolver
                                    public setErrorHandler(arg0: org.xml.sax.ErrorHandler): void
                                    public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                    public getProperty(arg0: java.lang.String | string): java.lang.Object
                                    public getColumnNumber(): int
                                    public getLineNumber(): int
                                    public getPublicId(): string
                                    public getSystemId(): string
                                    public static class: java.lang.Class<any>
                                }
                                class DOM2TO implements org.xml.sax.XMLReader , org.xml.sax.ext.Locator2 {
                                    public constructor(arg0: org.w3c.dom.Node, arg1: com.sun.org.apache.xml.internal.serializer.SerializationHandler)
                                    public getContentHandler(): org.xml.sax.ContentHandler
                                    public setContentHandler(arg0: org.xml.sax.ContentHandler): void
                                    public parse(arg0: org.xml.sax.InputSource): void
                                    public parse(): void
                                    public getDTDHandler(): org.xml.sax.DTDHandler
                                    public getErrorHandler(): org.xml.sax.ErrorHandler
                                    public getFeature(arg0: java.lang.String | string): boolean
                                    public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                    public parse(arg0: java.lang.String | string): void
                                    public setDTDHandler(arg0: org.xml.sax.DTDHandler): void
                                    public setEntityResolver(arg0: org.xml.sax.EntityResolver | org.xml.sax.EntityResolver$$Lambda): void
                                    public getEntityResolver(): org.xml.sax.EntityResolver
                                    public setErrorHandler(arg0: org.xml.sax.ErrorHandler): void
                                    public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                    public getProperty(arg0: java.lang.String | string): java.lang.Object
                                    public getColumnNumber(): int
                                    public getLineNumber(): int
                                    public getPublicId(): string
                                    public getSystemId(): string
                                    public getXMLVersion(): string
                                    public getEncoding(): string
                                    public static class: java.lang.Class<any>
                                }
                                class OutputSettings {
                                    public constructor()
                                    public getProperties(): java.util.Properties
                                    public static class: java.lang.Class<any>
                                }
                                class SAX2DOM implements org.xml.sax.ContentHandler , org.xml.sax.ext.LexicalHandler , com.sun.org.apache.xalan.internal.xsltc.runtime.Constants {
                                    public constructor(arg0: boolean)
                                    public constructor(arg0: org.w3c.dom.Node, arg1: org.w3c.dom.Node, arg2: boolean)
                                    public constructor(arg0: org.w3c.dom.Node, arg1: boolean)
                                    public getDOM(): org.w3c.dom.Node
                                    public characters(arg0: char[], arg1: int, arg2: int): void
                                    public startDocument(): void
                                    public endDocument(): void
                                    public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: org.xml.sax.Attributes): void
                                    public endElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                    public startPrefixMapping(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                    public endPrefixMapping(arg0: java.lang.String | string): void
                                    public ignorableWhitespace(arg0: char[], arg1: int, arg2: int): void
                                    public processingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                    public setDocumentLocator(arg0: org.xml.sax.Locator): void
                                    public skippedEntity(arg0: java.lang.String | string): void
                                    public comment(arg0: char[], arg1: int, arg2: int): void
                                    public startCDATA(): void
                                    public endCDATA(): void
                                    public startEntity(arg0: java.lang.String | string): void
                                    public endDTD(): void
                                    public endEntity(arg0: java.lang.String | string): void
                                    public startDTD(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                    public static class: java.lang.Class<any>
                                }
                                abstract class SAX2StAXBaseWriter extends org.xml.sax.helpers.DefaultHandler implements org.xml.sax.ext.LexicalHandler {
                                    protected isCDATA: boolean
                                    protected CDATABuffer: java.lang.StringBuffer
                                    protected namespaces: java.util.Vector
                                    protected docLocator: org.xml.sax.Locator
                                    protected reporter: javax.xml.stream.XMLReporter
                                    public constructor()
                                    public constructor(arg0: javax.xml.stream.XMLReporter | javax.xml.stream.XMLReporter$$Lambda)
                                    public setXMLReporter(arg0: javax.xml.stream.XMLReporter | javax.xml.stream.XMLReporter$$Lambda): void
                                    public setDocumentLocator(arg0: org.xml.sax.Locator): void
                                    public getCurrentLocation(): javax.xml.stream.Location
                                    public error(arg0: org.xml.sax.SAXParseException): void
                                    public fatalError(arg0: org.xml.sax.SAXParseException): void
                                    public warning(arg0: org.xml.sax.SAXParseException): void
                                    public startDocument(): void
                                    public endDocument(): void
                                    public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: org.xml.sax.Attributes): void
                                    public endElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                    public startPrefixMapping(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                    public endPrefixMapping(arg0: java.lang.String | string): void
                                    public startCDATA(): void
                                    public characters(arg0: char[], arg1: int, arg2: int): void
                                    public endCDATA(): void
                                    public comment(arg0: char[], arg1: int, arg2: int): void
                                    public endDTD(): void
                                    public endEntity(arg0: java.lang.String | string): void
                                    public startDTD(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                    public startEntity(arg0: java.lang.String | string): void
                                    protected reportException(arg0: java.lang.String | string, arg1: org.xml.sax.SAXException): void
                                    public static parseQName(arg0: java.lang.String | string, arg1: java.lang.String[]): void
                                    public static class: java.lang.Class<any>
                                }
                                class SAX2StAXEventWriter extends com.sun.org.apache.xalan.internal.xsltc.trax.SAX2StAXBaseWriter {
                                    public constructor()
                                    public constructor(arg0: javax.xml.stream.XMLEventWriter)
                                    public constructor(arg0: javax.xml.stream.XMLEventWriter, arg1: javax.xml.stream.XMLEventFactory)
                                    public getEventWriter(): javax.xml.stream.XMLEventWriter
                                    public setEventWriter(arg0: javax.xml.stream.XMLEventWriter): void
                                    public getEventFactory(): javax.xml.stream.XMLEventFactory
                                    public setEventFactory(arg0: javax.xml.stream.XMLEventFactory): void
                                    public startDocument(): void
                                    public endDocument(): void
                                    public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: org.xml.sax.Attributes): void
                                    public endElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                    public comment(arg0: char[], arg1: int, arg2: int): void
                                    public characters(arg0: char[], arg1: int, arg2: int): void
                                    public ignorableWhitespace(arg0: char[], arg1: int, arg2: int): void
                                    public processingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                    public endCDATA(): void
                                    protected createStartEvents(arg0: org.xml.sax.Attributes, arg1: java.util.Collection[]): void
                                    protected createNamespace(arg0: java.lang.String | string, arg1: java.lang.String | string): javax.xml.stream.events.Namespace
                                    public static class: java.lang.Class<any>
                                }
                                class SAX2StAXStreamWriter extends com.sun.org.apache.xalan.internal.xsltc.trax.SAX2StAXBaseWriter {
                                    public constructor()
                                    public constructor(arg0: javax.xml.stream.XMLStreamWriter)
                                    public getStreamWriter(): javax.xml.stream.XMLStreamWriter
                                    public setStreamWriter(arg0: javax.xml.stream.XMLStreamWriter): void
                                    public startDocument(): void
                                    public endDocument(): void
                                    public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: org.xml.sax.Attributes): void
                                    public endElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                    public comment(arg0: char[], arg1: int, arg2: int): void
                                    public characters(arg0: char[], arg1: int, arg2: int): void
                                    public endCDATA(): void
                                    public ignorableWhitespace(arg0: char[], arg1: int, arg2: int): void
                                    public processingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                    public static class: java.lang.Class<any>
                                }
                                class StAXEvent2SAX implements org.xml.sax.XMLReader , org.xml.sax.Locator {
                                    public constructor(arg0: javax.xml.stream.XMLEventReader)
                                    public getContentHandler(): org.xml.sax.ContentHandler
                                    public setContentHandler(arg0: org.xml.sax.ContentHandler): void
                                    public parse(arg0: org.xml.sax.InputSource): void
                                    public parse(): void
                                    public getDTDHandler(): org.xml.sax.DTDHandler
                                    public getErrorHandler(): org.xml.sax.ErrorHandler
                                    public getFeature(arg0: java.lang.String | string): boolean
                                    public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                    public parse(arg0: java.lang.String | string): void
                                    public setDTDHandler(arg0: org.xml.sax.DTDHandler): void
                                    public setEntityResolver(arg0: org.xml.sax.EntityResolver | org.xml.sax.EntityResolver$$Lambda): void
                                    public getEntityResolver(): org.xml.sax.EntityResolver
                                    public setErrorHandler(arg0: org.xml.sax.ErrorHandler): void
                                    public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                    public getProperty(arg0: java.lang.String | string): java.lang.Object
                                    public getColumnNumber(): int
                                    public getLineNumber(): int
                                    public getPublicId(): string
                                    public getSystemId(): string
                                    public static class: java.lang.Class<any>
                                }
                                class StAXStream2SAX implements org.xml.sax.XMLReader , org.xml.sax.Locator {
                                    public constructor(arg0: javax.xml.stream.XMLStreamReader)
                                    public getContentHandler(): org.xml.sax.ContentHandler
                                    public setContentHandler(arg0: org.xml.sax.ContentHandler): void
                                    public parse(arg0: org.xml.sax.InputSource): void
                                    public parse(): void
                                    public parse(arg0: java.lang.String | string): void
                                    public bridge(): void
                                    public getDTDHandler(): org.xml.sax.DTDHandler
                                    public getErrorHandler(): org.xml.sax.ErrorHandler
                                    public getFeature(arg0: java.lang.String | string): boolean
                                    public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                    public setDTDHandler(arg0: org.xml.sax.DTDHandler): void
                                    public setEntityResolver(arg0: org.xml.sax.EntityResolver | org.xml.sax.EntityResolver$$Lambda): void
                                    public getEntityResolver(): org.xml.sax.EntityResolver
                                    public setErrorHandler(arg0: org.xml.sax.ErrorHandler): void
                                    public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                    public getProperty(arg0: java.lang.String | string): java.lang.Object
                                    public getColumnNumber(): int
                                    public getLineNumber(): int
                                    public getPublicId(): string
                                    public getSystemId(): string
                                    public static class: java.lang.Class<any>
                                }
                                class TemplatesHandlerImpl implements org.xml.sax.ContentHandler , javax.xml.transform.sax.TemplatesHandler , com.sun.org.apache.xalan.internal.xsltc.compiler.SourceLoader {
                                    protected constructor(arg0: int, arg1: com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl)
                                    public getSystemId(): string
                                    public setSystemId(arg0: java.lang.String | string): void
                                    public setURIResolver(arg0: javax.xml.transform.URIResolver | javax.xml.transform.URIResolver$$Lambda): void
                                    public getTemplates(): javax.xml.transform.Templates
                                    public loadSource(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC): org.xml.sax.InputSource
                                    public startDocument(): void
                                    public endDocument(): void
                                    public startPrefixMapping(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                    public endPrefixMapping(arg0: java.lang.String | string): void
                                    public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: org.xml.sax.Attributes): void
                                    public endElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                    public characters(arg0: char[], arg1: int, arg2: int): void
                                    public processingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                    public ignorableWhitespace(arg0: char[], arg1: int, arg2: int): void
                                    public skippedEntity(arg0: java.lang.String | string): void
                                    public setDocumentLocator(arg0: org.xml.sax.Locator): void
                                    public static class: java.lang.Class<any>
                                }
                                class TemplatesHandlerImpl$$Lambda implements org.xml.sax.ContentHandler , javax.xml.transform.sax.TemplatesHandler , com.sun.org.apache.xalan.internal.xsltc.compiler.SourceLoader {
                                    protected constructor(arg0: int, arg1: com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl)
                                }
                                class TemplatesImpl implements javax.xml.transform.Templates , java.io.Serializable {
                                    public static DESERIALIZE_TRANSLET: string
                                    protected constructor(arg0: byte[][], arg1: java.lang.String | string, arg2: java.util.Properties, arg3: int, arg4: com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl)
                                    protected constructor(arg0: java.lang.Class[], arg1: java.lang.String | string, arg2: java.util.Properties, arg3: int, arg4: com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl)
                                    public constructor()
                                    public overrideDefaultParser(): boolean
                                    public setURIResolver(arg0: javax.xml.transform.URIResolver | javax.xml.transform.URIResolver$$Lambda): void
                                    public getTransletIndex(): int
                                    protected setTransletName(arg0: java.lang.String | string): void
                                    protected getTransletName(): string
                                    public newTransformer(): javax.xml.transform.Transformer
                                    public getOutputProperties(): java.util.Properties
                                    public getStylesheetDOM(): com.sun.org.apache.xalan.internal.xsltc.DOM
                                    public setStylesheetDOM(arg0: com.sun.org.apache.xalan.internal.xsltc.DOM): void
                                    public static class: java.lang.Class<any>
                                }
                                class TrAXFilter extends org.xml.sax.helpers.XMLFilterImpl {
                                    public constructor(arg0: javax.xml.transform.Templates)
                                    public getTransformer(): javax.xml.transform.Transformer
                                    public parse(arg0: org.xml.sax.InputSource): void
                                    public parse(arg0: java.lang.String | string): void
                                    public setContentHandler(arg0: org.xml.sax.ContentHandler): void
                                    public setErrorListener(arg0: javax.xml.transform.ErrorListener): void
                                    public static class: java.lang.Class<any>
                                }
                                class TransformerFactoryImpl extends javax.xml.transform.sax.SAXTransformerFactory implements com.sun.org.apache.xalan.internal.xsltc.compiler.SourceLoader , javax.xml.transform.ErrorListener {
                                    public static TRANSLET_NAME: string
                                    public static DESTINATION_DIRECTORY: string
                                    public static PACKAGE_NAME: string
                                    public static JAR_NAME: string
                                    public static GENERATE_TRANSLET: string
                                    public static AUTO_TRANSLET: string
                                    public static USE_CLASSPATH: string
                                    public static DEBUG: string
                                    public static ENABLE_INLINING: string
                                    public static INDENT_NUMBER: string
                                    protected static DEFAULT_TRANSLET_NAME: string
                                    public constructor()
                                    public getExternalExtensionsMap(): java.util.Map<java.lang.String, java.lang.Class>
                                    public setErrorListener(arg0: javax.xml.transform.ErrorListener): void
                                    public getErrorListener(): javax.xml.transform.ErrorListener
                                    public getAttribute(arg0: java.lang.String | string): java.lang.Object
                                    public setAttribute(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                    public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                    public getFeature(arg0: java.lang.String | string): boolean
                                    public overrideDefaultParser(): boolean
                                    public getJdkXmlFeatures(): jdk.xml.internal.JdkXmlFeatures
                                    public getURIResolver(): javax.xml.transform.URIResolver
                                    public setURIResolver(arg0: javax.xml.transform.URIResolver | javax.xml.transform.URIResolver$$Lambda): void
                                    public getAssociatedStylesheet(arg0: javax.xml.transform.Source, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string): javax.xml.transform.Source
                                    public newTransformer(): javax.xml.transform.Transformer
                                    public newTransformer(arg0: javax.xml.transform.Source): javax.xml.transform.Transformer
                                    public newTemplates(arg0: javax.xml.transform.Source): javax.xml.transform.Templates
                                    public newTemplatesHandler(): javax.xml.transform.sax.TemplatesHandler
                                    public newTransformerHandler(): javax.xml.transform.sax.TransformerHandler
                                    public newTransformerHandler(arg0: javax.xml.transform.Source): javax.xml.transform.sax.TransformerHandler
                                    public newTransformerHandler(arg0: javax.xml.transform.Templates): javax.xml.transform.sax.TransformerHandler
                                    public newXMLFilter(arg0: javax.xml.transform.Source): org.xml.sax.XMLFilter
                                    public newXMLFilter(arg0: javax.xml.transform.Templates): org.xml.sax.XMLFilter
                                    public error(arg0: javax.xml.transform.TransformerException): void
                                    public fatalError(arg0: javax.xml.transform.TransformerException): void
                                    public warning(arg0: javax.xml.transform.TransformerException): void
                                    public loadSource(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC): org.xml.sax.InputSource
                                    protected createNewDTMManagerInstance(): com.sun.org.apache.xalan.internal.xsltc.dom.XSLTCDTMManager
                                    public static class: java.lang.Class<any>
                                }
                                class TransformerHandlerImpl implements javax.xml.transform.sax.TransformerHandler , org.xml.sax.ext.DeclHandler {
                                    public constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl)
                                    public getSystemId(): string
                                    public setSystemId(arg0: java.lang.String | string): void
                                    public getTransformer(): javax.xml.transform.Transformer
                                    public setResult(arg0: javax.xml.transform.Result): void
                                    public characters(arg0: char[], arg1: int, arg2: int): void
                                    public startDocument(): void
                                    public endDocument(): void
                                    public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: org.xml.sax.Attributes): void
                                    public endElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                    public processingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                    public startCDATA(): void
                                    public endCDATA(): void
                                    public comment(arg0: char[], arg1: int, arg2: int): void
                                    public ignorableWhitespace(arg0: char[], arg1: int, arg2: int): void
                                    public setDocumentLocator(arg0: org.xml.sax.Locator): void
                                    public skippedEntity(arg0: java.lang.String | string): void
                                    public startPrefixMapping(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                    public endPrefixMapping(arg0: java.lang.String | string): void
                                    public startDTD(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                    public endDTD(): void
                                    public startEntity(arg0: java.lang.String | string): void
                                    public endEntity(arg0: java.lang.String | string): void
                                    public unparsedEntityDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string): void
                                    public notationDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                    public attributeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string): void
                                    public elementDecl(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                    public externalEntityDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                    public internalEntityDecl(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                    public reset(): void
                                    public static class: java.lang.Class<any>
                                }
                                class TransformerImpl extends javax.xml.transform.Transformer implements com.sun.org.apache.xalan.internal.xsltc.DOMCache , javax.xml.transform.ErrorListener {
                                    protected constructor(arg0: java.util.Properties, arg1: int, arg2: com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl)
                                    protected constructor(arg0: com.sun.org.apache.xalan.internal.xsltc.Translet, arg1: java.util.Properties, arg2: int, arg3: com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl)
                                    public isSecureProcessing(): boolean
                                    public setSecureProcessing(arg0: boolean): void
                                    public overrideDefaultParser(): boolean
                                    public setOverrideDefaultParser(arg0: boolean): void
                                    protected getTranslet(): com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet
                                    public isIdentity(): boolean
                                    public transform(arg0: javax.xml.transform.Source, arg1: javax.xml.transform.Result): void
                                    public getOutputHandler(arg0: javax.xml.transform.Result): com.sun.org.apache.xml.internal.serializer.SerializationHandler
                                    protected setDOM(arg0: com.sun.org.apache.xalan.internal.xsltc.DOM): void
                                    protected getTransformerFactory(): com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl
                                    protected getTransletOutputHandlerFactory(): com.sun.org.apache.xalan.internal.xsltc.runtime.output.TransletOutputHandlerFactory
                                    public getErrorListener(): javax.xml.transform.ErrorListener
                                    public setErrorListener(arg0: javax.xml.transform.ErrorListener): void
                                    public getOutputProperties(): java.util.Properties
                                    public getOutputProperty(arg0: java.lang.String | string): string
                                    public setOutputProperties(arg0: java.util.Properties): void
                                    public setOutputProperty(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                    public transferOutputProperties(arg0: com.sun.org.apache.xml.internal.serializer.SerializationHandler): void
                                    public setParameter(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                    public clearParameters(): void
                                    public getParameter(arg0: java.lang.String | string): java.lang.Object
                                    public getURIResolver(): javax.xml.transform.URIResolver
                                    public setURIResolver(arg0: javax.xml.transform.URIResolver | javax.xml.transform.URIResolver$$Lambda): void
                                    public retrieveDocument(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xalan.internal.xsltc.Translet): com.sun.org.apache.xalan.internal.xsltc.DOM
                                    public error(arg0: javax.xml.transform.TransformerException): void
                                    public fatalError(arg0: javax.xml.transform.TransformerException): void
                                    public warning(arg0: javax.xml.transform.TransformerException): void
                                    public reset(): void
                                    public static class: java.lang.Class<any>
                                }
                                class Util {
                                    public constructor()
                                    public static baseName(arg0: java.lang.String | string): string
                                    public static noExtName(arg0: java.lang.String | string): string
                                    public static toJavaName(arg0: java.lang.String | string): string
                                    public static getInputSource(arg0: com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC, arg1: javax.xml.transform.Source): org.xml.sax.InputSource
                                    public static class: java.lang.Class<any>
                                }
                                class XSLTCSource implements javax.xml.transform.Source {
                                    public constructor(arg0: java.lang.String | string)
                                    public constructor(arg0: javax.xml.transform.Source)
                                    public setSystemId(arg0: java.lang.String | string): void
                                    public getSystemId(): string
                                    protected getDOM(arg0: com.sun.org.apache.xalan.internal.xsltc.dom.XSLTCDTMManager, arg1: com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet): com.sun.org.apache.xalan.internal.xsltc.DOM
                                    public static class: java.lang.Class<any>
                                }
                            }
                            namespace util {
                                class IntegerArray {
                                    public constructor()
                                    public constructor(arg0: int)
                                    public constructor(arg0: int[])
                                    public clear(): void
                                    public clone(): java.lang.Object
                                    public toIntArray(): int[]
                                    public at(arg0: int): int
                                    public set(arg0: int, arg1: int): void
                                    public indexOf(arg0: int): int
                                    public add(arg0: int): void
                                    public addNew(arg0: int): void
                                    public reverse(): void
                                    public merge(arg0: com.sun.org.apache.xalan.internal.xsltc.util.IntegerArray): void
                                    public sort(): void
                                    public popLast(): int
                                    public last(): int
                                    public setLast(arg0: int): void
                                    public pop(): void
                                    public pop(arg0: int): void
                                    public cardinality(): int
                                    public print(arg0: java.io.PrintStream): void
                                    public static class: java.lang.Class<any>
                                }
                            }
                            interface CollatorFactory {
                                getCollator(arg0: java.lang.String | string, arg1: java.lang.String | string): java.text.Collator
                                getCollator(arg0: java.util.Locale): java.text.Collator
                            }
                            interface DOM {
                                FIRST_TYPE: int
                                NO_TYPE: int
                                NULL: int
                                RETURN_CURRENT: int
                                RETURN_PARENT: int
                                SIMPLE_RTF: int
                                ADAPTIVE_RTF: int
                                TREE_RTF: int
                                getIterator(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                getStringValue(): string
                                getChildren(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                getTypedChildren(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                getAxisIterator(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                getTypedAxisIterator(arg0: int, arg1: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                getNthDescendant(arg0: int, arg1: int, arg2: boolean): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                getNamespaceAxisIterator(arg0: int, arg1: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                getNodeValueIterator(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg1: int, arg2: java.lang.String | string, arg3: boolean): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                orderNodes(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg1: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                getNodeName(arg0: int): string
                                getNodeNameX(arg0: int): string
                                getNamespaceName(arg0: int): string
                                getExpandedTypeID(arg0: int): int
                                getNamespaceType(arg0: int): int
                                getParent(arg0: int): int
                                getAttributeNode(arg0: int, arg1: int): int
                                getStringValueX(arg0: int): string
                                copy(arg0: int, arg1: com.sun.org.apache.xml.internal.serializer.SerializationHandler): void
                                copy(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg1: com.sun.org.apache.xml.internal.serializer.SerializationHandler): void
                                shallowCopy(arg0: int, arg1: com.sun.org.apache.xml.internal.serializer.SerializationHandler): string
                                lessThan(arg0: int, arg1: int): boolean
                                characters(arg0: int, arg1: com.sun.org.apache.xml.internal.serializer.SerializationHandler): void
                                makeNode(arg0: int): org.w3c.dom.Node
                                makeNode(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator): org.w3c.dom.Node
                                makeNodeList(arg0: int): org.w3c.dom.NodeList
                                makeNodeList(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator): org.w3c.dom.NodeList
                                getLanguage(arg0: int): string
                                getSize(): int
                                getDocumentURI(arg0: int): string
                                setFilter(arg0: com.sun.org.apache.xalan.internal.xsltc.StripFilter | com.sun.org.apache.xalan.internal.xsltc.StripFilter$$Lambda): void
                                setupMapping(arg0: java.lang.String[], arg1: java.lang.String[], arg2: int[], arg3: java.lang.String[]): void
                                isElement(arg0: int): boolean
                                isAttribute(arg0: int): boolean
                                lookupNamespace(arg0: int, arg1: java.lang.String | string): string
                                getNodeIdent(arg0: int): int
                                getNodeHandle(arg0: int): int
                                getResultTreeFrag(arg0: int, arg1: int): com.sun.org.apache.xalan.internal.xsltc.DOM
                                getResultTreeFrag(arg0: int, arg1: int, arg2: boolean): com.sun.org.apache.xalan.internal.xsltc.DOM
                                getOutputDomBuilder(): com.sun.org.apache.xml.internal.serializer.SerializationHandler
                                getNSType(arg0: int): int
                                getDocument(): int
                                getUnparsedEntityURI(arg0: java.lang.String | string): string
                                getElementsWithIDs(): java.util.Map<java.lang.String, java.lang.Integer>
                                release(): void
                            }
                            interface DOMCache {
                                retrieveDocument(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xalan.internal.xsltc.Translet): com.sun.org.apache.xalan.internal.xsltc.DOM
                            }
                            interface DOMCache$$Lambda {
                                (arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xalan.internal.xsltc.Translet): com.sun.org.apache.xalan.internal.xsltc.DOM
                            }
                            interface DOMEnhancedForDTM extends com.sun.org.apache.xalan.internal.xsltc.DOM {
                                getMapping(arg0: java.lang.String[], arg1: java.lang.String[], arg2: int[]): short[]
                                getReverseMapping(arg0: java.lang.String[], arg1: java.lang.String[], arg2: int[]): int[]
                                getNamespaceMapping(arg0: java.lang.String[]): short[]
                                getReverseNamespaceMapping(arg0: java.lang.String[]): short[]
                                getDocumentURI(): string
                                setDocumentURI(arg0: java.lang.String | string): void
                                getExpandedTypeID2(arg0: int): int
                                hasDOMSource(): boolean
                                getElementById(arg0: java.lang.String | string): int
                            }
                            interface NodeIterator extends java.lang.Cloneable {
                                END: int
                                next(): int
                                reset(): com.sun.org.apache.xalan.internal.xsltc.NodeIterator
                                getLast(): int
                                getPosition(): int
                                setMark(): void
                                gotoMark(): void
                                setStartNode(arg0: int): com.sun.org.apache.xalan.internal.xsltc.NodeIterator
                                isReverse(): boolean
                                cloneIterator(): com.sun.org.apache.xalan.internal.xsltc.NodeIterator
                                setRestartable(arg0: boolean): void
                            }
                            class ProcessorVersion {
                                public constructor()
                                public static main(arg0: java.lang.String[]): void
                                public static class: java.lang.Class<any>
                            }
                            interface StripFilter {
                                stripSpace(arg0: com.sun.org.apache.xalan.internal.xsltc.DOM, arg1: int, arg2: int): boolean
                            }
                            interface StripFilter$$Lambda {
                                (arg0: com.sun.org.apache.xalan.internal.xsltc.DOM, arg1: int, arg2: int): boolean
                            }
                            interface Translet {
                                transform(arg0: com.sun.org.apache.xalan.internal.xsltc.DOM, arg1: com.sun.org.apache.xml.internal.serializer.SerializationHandler): void
                                transform(arg0: com.sun.org.apache.xalan.internal.xsltc.DOM, arg1: com.sun.org.apache.xml.internal.serializer.SerializationHandler[]): void
                                transform(arg0: com.sun.org.apache.xalan.internal.xsltc.DOM, arg1: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg2: com.sun.org.apache.xml.internal.serializer.SerializationHandler): void
                                addParameter(arg0: java.lang.String | string, arg1: java.lang.Object): java.lang.Object
                                buildKeys(arg0: com.sun.org.apache.xalan.internal.xsltc.DOM, arg1: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg2: com.sun.org.apache.xml.internal.serializer.SerializationHandler, arg3: int): void
                                addAuxiliaryClass(arg0: java.lang.Class): void
                                getAuxiliaryClass(arg0: java.lang.String | string): java.lang.Class
                                getNamesArray(): java.lang.String[]
                                getUrisArray(): java.lang.String[]
                                getTypesArray(): int[]
                                getNamespaceArray(): java.lang.String[]
                                overrideDefaultParser(): boolean
                                setOverrideDefaultParser(arg0: boolean): void
                            }
                            class TransletException extends org.xml.sax.SAXException {
                                public constructor()
                                public constructor(arg0: java.lang.Exception)
                                public constructor(arg0: java.lang.String | string)
                                public static class: java.lang.Class<any>
                            }
                        }
                        class XalanConstants {
                            public static SECURITY_MANAGER: string
                            public static ORACLE_JAXP_PROPERTY_PREFIX: string
                            public static JDK_ENTITY_EXPANSION_LIMIT: string
                            public static JDK_ELEMENT_ATTRIBUTE_LIMIT: string
                            public static JDK_MAX_OCCUR_LIMIT: string
                            public static JDK_TOTAL_ENTITY_SIZE_LIMIT: string
                            public static JDK_GENERAL_ENTITY_SIZE_LIMIT: string
                            public static JDK_ENTITY_REPLACEMENT_LIMIT: string
                            public static JDK_PARAMETER_ENTITY_SIZE_LIMIT: string
                            public static JDK_XML_NAME_LIMIT: string
                            public static JDK_MAX_ELEMENT_DEPTH: string
                            public static JDK_ENTITY_COUNT_INFO: string
                            public static SP_ENTITY_EXPANSION_LIMIT: string
                            public static SP_ELEMENT_ATTRIBUTE_LIMIT: string
                            public static SP_MAX_OCCUR_LIMIT: string
                            public static SP_TOTAL_ENTITY_SIZE_LIMIT: string
                            public static SP_GENERAL_ENTITY_SIZE_LIMIT: string
                            public static SP_ENTITY_REPLACEMENT_LIMIT: string
                            public static SP_PARAMETER_ENTITY_SIZE_LIMIT: string
                            public static SP_XML_NAME_LIMIT: string
                            public static SP_MAX_ELEMENT_DEPTH: string
                            public static JDK_EXTENSION_CLASSLOADER: string
                            public static ENTITY_EXPANSION_LIMIT: string
                            public static ELEMENT_ATTRIBUTE_LIMIT: string
                            public static MAX_OCCUR_LIMIT: string
                            public static JDK_YES: string
                            public static ORACLE_FEATURE_SERVICE_MECHANISM: string
                            public static SP_ACCESS_EXTERNAL_STYLESHEET: string
                            public static SP_ACCESS_EXTERNAL_DTD: string
                            public static ACCESS_EXTERNAL_ALL: string
                            public static EXTERNAL_ACCESS_DEFAULT_FSP: string
                            public static EXTERNAL_ACCESS_DEFAULT: string
                            public static XML_SECURITY_PROPERTY_MANAGER: string
                            public static ORACLE_ENABLE_EXTENSION_FUNCTION: string
                            public static SP_ORACLE_ENABLE_EXTENSION_FUNCTION: string
                            public static FEATURE_TRUE: string
                            public static FEATURE_FALSE: string
                            public static IS_JDK8_OR_ABOVE: boolean
                            public constructor()
                            public static isJavaVersionAtLeast(arg0: int): boolean
                            public static class: java.lang.Class<any>
                        }
                    }
                }
                namespace xerces {
                    namespace internal {
                        namespace dom {
                            namespace events {
                                class EventImpl implements org.w3c.dom.events.Event {
                                    public type: string
                                    public target: org.w3c.dom.events.EventTarget
                                    public currentTarget: org.w3c.dom.events.EventTarget
                                    public eventPhase: short
                                    public initialized: boolean
                                    public bubbles: boolean
                                    public cancelable: boolean
                                    public stopPropagation: boolean
                                    public preventDefault: boolean
                                    protected timeStamp: long
                                    public constructor()
                                    public initEvent(arg0: java.lang.String | string, arg1: boolean, arg2: boolean): void
                                    public getBubbles(): boolean
                                    public getCancelable(): boolean
                                    public getCurrentTarget(): org.w3c.dom.events.EventTarget
                                    public getEventPhase(): short
                                    public getTarget(): org.w3c.dom.events.EventTarget
                                    public getType(): string
                                    public getTimeStamp(): long
                                    public stopPropagation(): void
                                    public preventDefault(): void
                                    public static class: java.lang.Class<any>
                                }
                                class MutationEventImpl extends com.sun.org.apache.xerces.internal.dom.events.EventImpl implements org.w3c.dom.events.MutationEvent {
                                    public attrChange: short
                                    public static DOM_SUBTREE_MODIFIED: string
                                    public static DOM_NODE_INSERTED: string
                                    public static DOM_NODE_REMOVED: string
                                    public static DOM_NODE_REMOVED_FROM_DOCUMENT: string
                                    public static DOM_NODE_INSERTED_INTO_DOCUMENT: string
                                    public static DOM_ATTR_MODIFIED: string
                                    public static DOM_CHARACTER_DATA_MODIFIED: string
                                    public constructor()
                                    public getAttrName(): string
                                    public getAttrChange(): short
                                    public getNewValue(): string
                                    public getPrevValue(): string
                                    public getRelatedNode(): org.w3c.dom.Node
                                    public initMutationEvent(arg0: java.lang.String | string, arg1: boolean, arg2: boolean, arg3: org.w3c.dom.Node, arg4: java.lang.String | string, arg5: java.lang.String | string, arg6: java.lang.String | string, arg7: short): void
                                    public static class: java.lang.Class<any>
                                }
                            }
                            class AbortException extends java.lang.RuntimeException {
                                public constructor()
                                public static class: java.lang.Class<any>
                            }
                            class AttrImpl extends com.sun.org.apache.xerces.internal.dom.NodeImpl implements org.w3c.dom.Attr , org.w3c.dom.TypeInfo {
                                protected value: java.lang.Object
                                protected name: string
                                protected textNode: com.sun.org.apache.xerces.internal.dom.TextImpl
                                protected constructor(arg0: com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl, arg1: java.lang.String | string)
                                protected constructor()
                                protected makeChildNode(): void
                                public setIdAttribute(arg0: boolean): void
                                public isId(): boolean
                                public cloneNode(arg0: boolean): org.w3c.dom.Node
                                public getNodeType(): short
                                public getNodeName(): string
                                public setNodeValue(arg0: java.lang.String | string): void
                                public getTypeName(): string
                                public getTypeNamespace(): string
                                public getSchemaTypeInfo(): org.w3c.dom.TypeInfo
                                public getNodeValue(): string
                                public getName(): string
                                public setValue(arg0: java.lang.String | string): void
                                public getValue(): string
                                public getSpecified(): boolean
                                public getElement(): org.w3c.dom.Element
                                public getOwnerElement(): org.w3c.dom.Element
                                public normalize(): void
                                public setSpecified(arg0: boolean): void
                                public setType(arg0: java.lang.Object): void
                                public toString(): string
                                public hasChildNodes(): boolean
                                public getChildNodes(): org.w3c.dom.NodeList
                                public getFirstChild(): org.w3c.dom.Node
                                public getLastChild(): org.w3c.dom.Node
                                public insertBefore(arg0: org.w3c.dom.Node, arg1: org.w3c.dom.Node): org.w3c.dom.Node
                                public removeChild(arg0: org.w3c.dom.Node): org.w3c.dom.Node
                                public replaceChild(arg0: org.w3c.dom.Node, arg1: org.w3c.dom.Node): org.w3c.dom.Node
                                public getLength(): int
                                public item(arg0: int): org.w3c.dom.Node
                                public isEqualNode(arg0: org.w3c.dom.Node): boolean
                                public isDerivedFrom(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: int): boolean
                                public setReadOnly(arg0: boolean, arg1: boolean): void
                                protected synchronizeChildren(): void
                                public static class: java.lang.Class<any>
                            }
                            class AttrNSImpl extends com.sun.org.apache.xerces.internal.dom.AttrImpl {
                                protected namespaceURI: string
                                protected localName: string
                                public constructor()
                                protected constructor(arg0: com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl, arg1: java.lang.String | string, arg2: java.lang.String | string)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string)
                                protected constructor(arg0: com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl, arg1: java.lang.String | string)
                                public setValues(arg0: com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string): void
                                public getNamespaceURI(): string
                                public getPrefix(): string
                                public setPrefix(arg0: java.lang.String | string): void
                                public getLocalName(): string
                                public getTypeName(): string
                                public isDerivedFrom(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: int): boolean
                                public getTypeNamespace(): string
                                public static class: java.lang.Class<any>
                            }
                            class AttributeMap extends com.sun.org.apache.xerces.internal.dom.NamedNodeMapImpl {
                                protected constructor(arg0: com.sun.org.apache.xerces.internal.dom.ElementImpl, arg1: com.sun.org.apache.xerces.internal.dom.NamedNodeMapImpl)
                                public setNamedItem(arg0: org.w3c.dom.Node): org.w3c.dom.Node
                                public setNamedItemNS(arg0: org.w3c.dom.Node): org.w3c.dom.Node
                                public removeNamedItem(arg0: java.lang.String | string): org.w3c.dom.Node
                                protected removeItem(arg0: org.w3c.dom.Node, arg1: boolean): org.w3c.dom.Node
                                protected internalRemoveNamedItem(arg0: java.lang.String | string, arg1: boolean): org.w3c.dom.Node
                                public removeNamedItemNS(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.Node
                                protected internalRemoveNamedItemNS(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: boolean): org.w3c.dom.Node
                                public cloneMap(arg0: com.sun.org.apache.xerces.internal.dom.NodeImpl): com.sun.org.apache.xerces.internal.dom.NamedNodeMapImpl
                                protected cloneContent(arg0: com.sun.org.apache.xerces.internal.dom.NamedNodeMapImpl): void
                                protected reconcileDefaults(arg0: com.sun.org.apache.xerces.internal.dom.NamedNodeMapImpl): void
                                protected addItem(arg0: org.w3c.dom.Node): int
                                public static class: java.lang.Class<any>
                            }
                            class CDATASectionImpl extends com.sun.org.apache.xerces.internal.dom.TextImpl implements org.w3c.dom.CDATASection {
                                public constructor(arg0: com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl, arg1: java.lang.String | string)
                                public getNodeType(): short
                                public getNodeName(): string
                                public static class: java.lang.Class<any>
                            }
                            abstract class CharacterDataImpl extends com.sun.org.apache.xerces.internal.dom.ChildNode {
                                protected data: string
                                public constructor()
                                protected constructor(arg0: com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl, arg1: java.lang.String | string)
                                public getChildNodes(): org.w3c.dom.NodeList
                                public getNodeValue(): string
                                protected setNodeValueInternal(arg0: java.lang.String | string): void
                                protected setNodeValueInternal(arg0: java.lang.String | string, arg1: boolean): void
                                public setNodeValue(arg0: java.lang.String | string): void
                                public getData(): string
                                public getLength(): int
                                public appendData(arg0: java.lang.String | string): void
                                public deleteData(arg0: int, arg1: int): void
                                public insertData(arg0: int, arg1: java.lang.String | string): void
                                public replaceData(arg0: int, arg1: int, arg2: java.lang.String | string): void
                                public setData(arg0: java.lang.String | string): void
                                public substringData(arg0: int, arg1: int): string
                                public static class: java.lang.Class<any>
                            }
                            abstract class ChildNode extends com.sun.org.apache.xerces.internal.dom.NodeImpl {
                                protected previousSibling: com.sun.org.apache.xerces.internal.dom.ChildNode
                                protected nextSibling: com.sun.org.apache.xerces.internal.dom.ChildNode
                                protected constructor(arg0: com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl)
                                public constructor()
                                public cloneNode(arg0: boolean): org.w3c.dom.Node
                                public getParentNode(): org.w3c.dom.Node
                                public getNextSibling(): org.w3c.dom.Node
                                public getPreviousSibling(): org.w3c.dom.Node
                                public static class: java.lang.Class<any>
                            }
                            class CommentImpl extends com.sun.org.apache.xerces.internal.dom.CharacterDataImpl implements org.w3c.dom.CharacterData , org.w3c.dom.Comment {
                                public constructor(arg0: com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl, arg1: java.lang.String | string)
                                public getNodeType(): short
                                public getNodeName(): string
                                public static class: java.lang.Class<any>
                            }
                            class CoreDOMImplementationImpl implements org.w3c.dom.DOMImplementation , org.w3c.dom.ls.DOMImplementationLS {
                                public constructor()
                                public static getDOMImplementation(): org.w3c.dom.DOMImplementation
                                public hasFeature(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                                public createDocumentType(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): org.w3c.dom.DocumentType
                                public createDocument(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: org.w3c.dom.DocumentType): org.w3c.dom.Document
                                public getFeature(arg0: java.lang.String | string, arg1: java.lang.String | string): java.lang.Object
                                public createLSParser(arg0: short, arg1: java.lang.String | string): org.w3c.dom.ls.LSParser
                                public createLSSerializer(): org.w3c.dom.ls.LSSerializer
                                public createLSInput(): org.w3c.dom.ls.LSInput
                                protected assignDocumentNumber(): int
                                protected assignDocTypeNumber(): int
                                public createLSOutput(): org.w3c.dom.ls.LSOutput
                                public static class: java.lang.Class<any>
                            }
                            class CoreDocumentImpl extends com.sun.org.apache.xerces.internal.dom.ParentNode implements org.w3c.dom.Document {
                                protected docType: com.sun.org.apache.xerces.internal.dom.DocumentTypeImpl
                                protected docElement: com.sun.org.apache.xerces.internal.dom.ElementImpl
                                protected encoding: string
                                protected actualEncoding: string
                                protected version: string
                                protected standalone: boolean
                                protected fDocumentURI: string
                                protected identifiers: java.util.Map<java.lang.String, org.w3c.dom.Node>
                                protected changes: int
                                protected allowGrammarAccess: boolean
                                protected errorChecking: boolean
                                protected ancestorChecking: boolean
                                protected xmlVersionChanged: boolean
                                public constructor()
                                public constructor(arg0: boolean)
                                public constructor(arg0: org.w3c.dom.DocumentType)
                                public constructor(arg0: org.w3c.dom.DocumentType, arg1: boolean)
                                public getOwnerDocument(): org.w3c.dom.Document
                                public getNodeType(): short
                                public getNodeName(): string
                                public cloneNode(arg0: boolean): org.w3c.dom.Node
                                protected cloneNode(arg0: com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl, arg1: boolean): void
                                public insertBefore(arg0: org.w3c.dom.Node, arg1: org.w3c.dom.Node): org.w3c.dom.Node
                                public removeChild(arg0: org.w3c.dom.Node): org.w3c.dom.Node
                                public replaceChild(arg0: org.w3c.dom.Node, arg1: org.w3c.dom.Node): org.w3c.dom.Node
                                public getTextContent(): string
                                public setTextContent(arg0: java.lang.String | string): void
                                public getFeature(arg0: java.lang.String | string, arg1: java.lang.String | string): java.lang.Object
                                public createAttribute(arg0: java.lang.String | string): org.w3c.dom.Attr
                                public createCDATASection(arg0: java.lang.String | string): org.w3c.dom.CDATASection
                                public createComment(arg0: java.lang.String | string): org.w3c.dom.Comment
                                public createDocumentFragment(): org.w3c.dom.DocumentFragment
                                public createElement(arg0: java.lang.String | string): org.w3c.dom.Element
                                public createEntityReference(arg0: java.lang.String | string): org.w3c.dom.EntityReference
                                public createProcessingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.ProcessingInstruction
                                public createTextNode(arg0: java.lang.String | string): org.w3c.dom.Text
                                public getDoctype(): org.w3c.dom.DocumentType
                                public getDocumentElement(): org.w3c.dom.Element
                                public getElementsByTagName(arg0: java.lang.String | string): org.w3c.dom.NodeList
                                public getImplementation(): org.w3c.dom.DOMImplementation
                                public setErrorChecking(arg0: boolean): void
                                public setStrictErrorChecking(arg0: boolean): void
                                public getErrorChecking(): boolean
                                public getStrictErrorChecking(): boolean
                                public getInputEncoding(): string
                                public setInputEncoding(arg0: java.lang.String | string): void
                                public setXmlEncoding(arg0: java.lang.String | string): void
                                public setEncoding(arg0: java.lang.String | string): void
                                public getXmlEncoding(): string
                                public getEncoding(): string
                                public setXmlVersion(arg0: java.lang.String | string): void
                                public setVersion(arg0: java.lang.String | string): void
                                public getXmlVersion(): string
                                public getVersion(): string
                                public setXmlStandalone(arg0: boolean): void
                                public setStandalone(arg0: boolean): void
                                public getXmlStandalone(): boolean
                                public getStandalone(): boolean
                                public getDocumentURI(): string
                                public renameNode(arg0: org.w3c.dom.Node, arg1: java.lang.String | string, arg2: java.lang.String | string): org.w3c.dom.Node
                                public normalizeDocument(): void
                                public getDomConfig(): org.w3c.dom.DOMConfiguration
                                public getBaseURI(): string
                                public setDocumentURI(arg0: java.lang.String | string): void
                                public getAsync(): boolean
                                public setAsync(arg0: boolean): void
                                public abort(): void
                                public load(arg0: java.lang.String | string): boolean
                                public loadXML(arg0: java.lang.String | string): boolean
                                public saveXML(arg0: org.w3c.dom.Node): string
                                public createDocumentType(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): org.w3c.dom.DocumentType
                                public createEntity(arg0: java.lang.String | string): org.w3c.dom.Entity
                                public createNotation(arg0: java.lang.String | string): org.w3c.dom.Notation
                                public createElementDefinition(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.dom.ElementDefinitionImpl
                                protected getNodeNumber(): int
                                protected getNodeNumber(arg0: org.w3c.dom.Node): int
                                public importNode(arg0: org.w3c.dom.Node, arg1: boolean): org.w3c.dom.Node
                                public adoptNode(arg0: org.w3c.dom.Node): org.w3c.dom.Node
                                protected undeferChildren(arg0: org.w3c.dom.Node): void
                                public getElementById(arg0: java.lang.String | string): org.w3c.dom.Element
                                protected clearIdentifiers(): void
                                public putIdentifier(arg0: java.lang.String | string, arg1: org.w3c.dom.Element): void
                                public getIdentifier(arg0: java.lang.String | string): org.w3c.dom.Element
                                public removeIdentifier(arg0: java.lang.String | string): void
                                public createElementNS(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.Element
                                public createElementNS(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): org.w3c.dom.Element
                                public createAttributeNS(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.Attr
                                public createAttributeNS(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): org.w3c.dom.Attr
                                public getElementsByTagNameNS(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.NodeList
                                public clone(): java.lang.Object
                                public static isXMLName(arg0: java.lang.String | string, arg1: boolean): boolean
                                public static isValidQName(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: boolean): boolean
                                protected isKidOK(arg0: org.w3c.dom.Node, arg1: org.w3c.dom.Node): boolean
                                protected changed(): void
                                protected changes(): int
                                public setUserData(arg0: org.w3c.dom.Node, arg1: java.lang.String | string, arg2: java.lang.Object, arg3: org.w3c.dom.UserDataHandler): java.lang.Object
                                public getUserData(arg0: org.w3c.dom.Node, arg1: java.lang.String | string): java.lang.Object
                                protected getUserDataRecord(arg0: org.w3c.dom.Node): java.util.Map<java.lang.String, com.sun.org.apache.xerces.internal.dom.ParentNode$UserDataRecord>
                                protected checkNamespaceWF(arg0: java.lang.String | string, arg1: int, arg2: int): void
                                protected checkDOMNSErr(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                protected checkQName(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                protected setUserData(arg0: com.sun.org.apache.xerces.internal.dom.NodeImpl, arg1: java.lang.Object): void
                                protected getUserData(arg0: com.sun.org.apache.xerces.internal.dom.NodeImpl): java.lang.Object
                                protected addEventListener(arg0: com.sun.org.apache.xerces.internal.dom.NodeImpl, arg1: java.lang.String | string, arg2: org.w3c.dom.events.EventListener | org.w3c.dom.events.EventListener$$Lambda, arg3: boolean): void
                                protected removeEventListener(arg0: com.sun.org.apache.xerces.internal.dom.NodeImpl, arg1: java.lang.String | string, arg2: org.w3c.dom.events.EventListener | org.w3c.dom.events.EventListener$$Lambda, arg3: boolean): void
                                protected copyEventListeners(arg0: com.sun.org.apache.xerces.internal.dom.NodeImpl, arg1: com.sun.org.apache.xerces.internal.dom.NodeImpl): void
                                protected dispatchEvent(arg0: com.sun.org.apache.xerces.internal.dom.NodeImpl, arg1: org.w3c.dom.events.Event): boolean
                                public static class: java.lang.Class<any>
                            }
                            class DOMConfigurationImpl extends com.sun.org.apache.xerces.internal.util.ParserConfigurationSettings implements com.sun.org.apache.xerces.internal.xni.parser.XMLParserConfiguration , org.w3c.dom.DOMConfiguration {
                                protected static XERCES_VALIDATION: string
                                protected static XERCES_NAMESPACES: string
                                protected static SCHEMA: string
                                protected static SCHEMA_FULL_CHECKING: string
                                protected static DYNAMIC_VALIDATION: string
                                protected static NORMALIZE_DATA: string
                                protected static SEND_PSVI: string
                                protected static DTD_VALIDATOR_FACTORY_PROPERTY: string
                                protected static NAMESPACE_GROWTH: string
                                protected static TOLERATE_DUPLICATES: string
                                protected static ENTITY_MANAGER: string
                                protected static ERROR_REPORTER: string
                                protected static XML_STRING: string
                                protected static SYMBOL_TABLE: string
                                protected static GRAMMAR_POOL: string
                                protected static ERROR_HANDLER: string
                                protected static ENTITY_RESOLVER: string
                                protected static JAXP_SCHEMA_LANGUAGE: string
                                protected static JAXP_SCHEMA_SOURCE: string
                                protected static VALIDATION_MANAGER: string
                                protected static SCHEMA_DV_FACTORY: string
                                protected features: short
                                protected static NAMESPACES: short
                                protected static DTNORMALIZATION: short
                                protected static ENTITIES: short
                                protected static CDATA: short
                                protected static SPLITCDATA: short
                                protected static COMMENTS: short
                                protected static VALIDATE: short
                                protected static PSVI: short
                                protected static WELLFORMED: short
                                protected static NSDECL: short
                                protected static INFOSET_TRUE_PARAMS: short
                                protected static INFOSET_FALSE_PARAMS: short
                                protected static INFOSET_MASK: short
                                protected fSymbolTable: com.sun.org.apache.xerces.internal.util.SymbolTable
                                protected fComponents: java.util.ArrayList
                                protected fValidationManager: com.sun.org.apache.xerces.internal.impl.validation.ValidationManager
                                protected fLocale: java.util.Locale
                                protected fErrorReporter: com.sun.org.apache.xerces.internal.impl.XMLErrorReporter
                                protected fErrorHandlerWrapper: com.sun.org.apache.xerces.internal.util.DOMErrorHandlerWrapper
                                protected constructor()
                                protected constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable)
                                protected constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager)
                                public parse(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource): void
                                public setDocumentHandler(arg0: com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler): void
                                public getDocumentHandler(): com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler
                                public setDTDHandler(arg0: com.sun.org.apache.xerces.internal.xni.XMLDTDHandler): void
                                public getDTDHandler(): com.sun.org.apache.xerces.internal.xni.XMLDTDHandler
                                public setDTDContentModelHandler(arg0: com.sun.org.apache.xerces.internal.xni.XMLDTDContentModelHandler): void
                                public getDTDContentModelHandler(): com.sun.org.apache.xerces.internal.xni.XMLDTDContentModelHandler
                                public setEntityResolver(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver | com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver$$Lambda): void
                                public getEntityResolver(): com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver
                                public setErrorHandler(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler): void
                                public getErrorHandler(): com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler
                                public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                public setLocale(arg0: java.util.Locale): void
                                public getLocale(): java.util.Locale
                                public setParameter(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                public getParameter(arg0: java.lang.String | string): java.lang.Object
                                public canSetParameter(arg0: java.lang.String | string, arg1: java.lang.Object): boolean
                                public getParameterNames(): org.w3c.dom.DOMStringList
                                protected reset(): void
                                protected checkProperty(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.PropertyState
                                protected addComponent(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponent): void
                                protected createValidationManager(): com.sun.org.apache.xerces.internal.impl.validation.ValidationManager
                                public static class: java.lang.Class<any>
                            }
                            class DOMErrorImpl implements org.w3c.dom.DOMError {
                                public fSeverity: short
                                public fMessage: string
                                public fLocator: com.sun.org.apache.xerces.internal.dom.DOMLocatorImpl
                                public fException: java.lang.Exception
                                public fType: string
                                public fRelatedData: java.lang.Object
                                public constructor()
                                public constructor(arg0: short, arg1: com.sun.org.apache.xerces.internal.xni.parser.XMLParseException)
                                public getSeverity(): short
                                public getMessage(): string
                                public getLocation(): org.w3c.dom.DOMLocator
                                public getRelatedException(): java.lang.Object
                                public reset(): void
                                public getType(): string
                                public getRelatedData(): java.lang.Object
                                public static class: java.lang.Class<any>
                            }
                            class DOMImplementationImpl extends com.sun.org.apache.xerces.internal.dom.CoreDOMImplementationImpl implements org.w3c.dom.DOMImplementation {
                                public constructor()
                                public static getDOMImplementation(): org.w3c.dom.DOMImplementation
                                public hasFeature(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                                public createDocument(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: org.w3c.dom.DocumentType): org.w3c.dom.Document
                                public static class: java.lang.Class<any>
                            }
                            class DOMImplementationListImpl implements org.w3c.dom.DOMImplementationList {
                                public constructor()
                                public constructor(arg0: java.util.Vector)
                                public item(arg0: int): org.w3c.dom.DOMImplementation
                                public getLength(): int
                                public static class: java.lang.Class<any>
                            }
                            class DOMImplementationSourceImpl implements org.w3c.dom.DOMImplementationSource {
                                public constructor()
                                public getDOMImplementation(arg0: java.lang.String | string): org.w3c.dom.DOMImplementation
                                public getDOMImplementationList(arg0: java.lang.String | string): org.w3c.dom.DOMImplementationList
                                public static class: java.lang.Class<any>
                            }
                            class DOMInputImpl implements org.w3c.dom.ls.LSInput {
                                protected fPublicId: string
                                protected fSystemId: string
                                protected fBaseSystemId: string
                                protected fByteStream: java.io.InputStream
                                protected fCharStream: java.io.Reader
                                protected fData: string
                                protected fEncoding: string
                                protected fCertifiedText: boolean
                                public constructor()
                                public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string)
                                public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.io.InputStream, arg4: java.lang.String | string)
                                public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.io.Reader, arg4: java.lang.String | string)
                                public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string)
                                public getByteStream(): java.io.InputStream
                                public setByteStream(arg0: java.io.InputStream): void
                                public getCharacterStream(): java.io.Reader
                                public setCharacterStream(arg0: java.io.Reader): void
                                public getStringData(): string
                                public setStringData(arg0: java.lang.String | string): void
                                public getEncoding(): string
                                public setEncoding(arg0: java.lang.String | string): void
                                public getPublicId(): string
                                public setPublicId(arg0: java.lang.String | string): void
                                public getSystemId(): string
                                public setSystemId(arg0: java.lang.String | string): void
                                public getBaseURI(): string
                                public setBaseURI(arg0: java.lang.String | string): void
                                public getCertifiedText(): boolean
                                public setCertifiedText(arg0: boolean): void
                                public static class: java.lang.Class<any>
                            }
                            class DOMLocatorImpl implements org.w3c.dom.DOMLocator {
                                public fColumnNumber: int
                                public fLineNumber: int
                                public fRelatedNode: org.w3c.dom.Node
                                public fUri: string
                                public fByteOffset: int
                                public fUtf16Offset: int
                                public constructor()
                                public constructor(arg0: int, arg1: int, arg2: java.lang.String | string)
                                public constructor(arg0: int, arg1: int, arg2: int, arg3: java.lang.String | string)
                                public constructor(arg0: int, arg1: int, arg2: int, arg3: org.w3c.dom.Node, arg4: java.lang.String | string)
                                public constructor(arg0: int, arg1: int, arg2: int, arg3: org.w3c.dom.Node, arg4: java.lang.String | string, arg5: int)
                                public getLineNumber(): int
                                public getColumnNumber(): int
                                public getUri(): string
                                public getRelatedNode(): org.w3c.dom.Node
                                public getByteOffset(): int
                                public getUtf16Offset(): int
                                public static class: java.lang.Class<any>
                            }
                            class DOMMessageFormatter {
                                public static DOM_DOMAIN: string
                                public static XML_DOMAIN: string
                                public static SERIALIZER_DOMAIN: string
                                public static formatMessage(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.Object[]): string
                                public static init(): void
                                public static setLocale(arg0: java.util.Locale): void
                                public static class: java.lang.Class<any>
                            }
                            class DOMNormalizer implements com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler {
                                protected static DEBUG_ND: boolean
                                protected static DEBUG: boolean
                                protected static DEBUG_EVENTS: boolean
                                protected static PREFIX: string
                                protected fConfiguration: com.sun.org.apache.xerces.internal.dom.DOMConfigurationImpl
                                protected fDocument: com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl
                                protected fAttrProxy: com.sun.org.apache.xerces.internal.dom.DOMNormalizer$XMLAttributesProxy
                                protected fQName: com.sun.org.apache.xerces.internal.xni.QName
                                protected fValidationHandler: com.sun.org.apache.xerces.internal.impl.RevalidationHandler
                                protected fSymbolTable: com.sun.org.apache.xerces.internal.util.SymbolTable
                                protected fErrorHandler: org.w3c.dom.DOMErrorHandler
                                protected fNamespaceValidation: boolean
                                protected fPSVI: boolean
                                protected fNamespaceContext: com.sun.org.apache.xerces.internal.xni.NamespaceContext
                                protected fLocalNSBinder: com.sun.org.apache.xerces.internal.xni.NamespaceContext
                                protected fAttributeList: java.util.ArrayList
                                protected fLocator: com.sun.org.apache.xerces.internal.dom.DOMLocatorImpl
                                protected fCurrentNode: org.w3c.dom.Node
                                public constructor()
                                protected normalizeDocument(arg0: com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl, arg1: com.sun.org.apache.xerces.internal.dom.DOMConfigurationImpl): void
                                protected normalizeNode(arg0: org.w3c.dom.Node): org.w3c.dom.Node
                                protected expandEntityRef(arg0: org.w3c.dom.Node, arg1: org.w3c.dom.Node): void
                                protected namespaceFixUp(arg0: com.sun.org.apache.xerces.internal.dom.ElementImpl, arg1: com.sun.org.apache.xerces.internal.dom.AttributeMap): void
                                protected addNamespaceDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.dom.ElementImpl): void
                                public static isCDataWF(arg0: org.w3c.dom.DOMErrorHandler | org.w3c.dom.DOMErrorHandler$$Lambda, arg1: com.sun.org.apache.xerces.internal.dom.DOMErrorImpl, arg2: com.sun.org.apache.xerces.internal.dom.DOMLocatorImpl, arg3: java.lang.String | string, arg4: boolean): void
                                public static isXMLCharWF(arg0: org.w3c.dom.DOMErrorHandler | org.w3c.dom.DOMErrorHandler$$Lambda, arg1: com.sun.org.apache.xerces.internal.dom.DOMErrorImpl, arg2: com.sun.org.apache.xerces.internal.dom.DOMLocatorImpl, arg3: java.lang.String | string, arg4: boolean): void
                                public static isCommentWF(arg0: org.w3c.dom.DOMErrorHandler | org.w3c.dom.DOMErrorHandler$$Lambda, arg1: com.sun.org.apache.xerces.internal.dom.DOMErrorImpl, arg2: com.sun.org.apache.xerces.internal.dom.DOMLocatorImpl, arg3: java.lang.String | string, arg4: boolean): void
                                public static isAttrValueWF(arg0: org.w3c.dom.DOMErrorHandler | org.w3c.dom.DOMErrorHandler$$Lambda, arg1: com.sun.org.apache.xerces.internal.dom.DOMErrorImpl, arg2: com.sun.org.apache.xerces.internal.dom.DOMLocatorImpl, arg3: org.w3c.dom.NamedNodeMap, arg4: org.w3c.dom.Attr, arg5: java.lang.String | string, arg6: boolean): void
                                public static reportDOMError(arg0: org.w3c.dom.DOMErrorHandler | org.w3c.dom.DOMErrorHandler$$Lambda, arg1: com.sun.org.apache.xerces.internal.dom.DOMErrorImpl, arg2: com.sun.org.apache.xerces.internal.dom.DOMLocatorImpl, arg3: java.lang.String | string, arg4: short, arg5: java.lang.String | string): void
                                protected updateQName(arg0: org.w3c.dom.Node, arg1: com.sun.org.apache.xerces.internal.xni.QName): void
                                public startDocument(arg0: com.sun.org.apache.xerces.internal.xni.XMLLocator, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.NamespaceContext, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public xmlDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public doctypeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public comment(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public processingInstruction(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLString, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public emptyElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startGeneralEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public textDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endGeneralEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public characters(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public ignorableWhitespace(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endDocument(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public setDocumentSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource): void
                                public getDocumentSource(): com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource
                                public static class: java.lang.Class<any>
                            }
                            class DOMOutputImpl implements org.w3c.dom.ls.LSOutput {
                                protected fCharStream: java.io.Writer
                                protected fByteStream: java.io.OutputStream
                                protected fSystemId: string
                                protected fEncoding: string
                                public constructor()
                                public getCharacterStream(): java.io.Writer
                                public setCharacterStream(arg0: java.io.Writer | java.io.Writer$$Lambda): void
                                public getByteStream(): java.io.OutputStream
                                public setByteStream(arg0: java.io.OutputStream | java.io.OutputStream$$Lambda): void
                                public getSystemId(): string
                                public setSystemId(arg0: java.lang.String | string): void
                                public getEncoding(): string
                                public setEncoding(arg0: java.lang.String | string): void
                                public static class: java.lang.Class<any>
                            }
                            class DOMStringListImpl implements org.w3c.dom.DOMStringList {
                                public constructor()
                                public constructor(arg0: java.util.Vector)
                                public item(arg0: int): string
                                public getLength(): int
                                public contains(arg0: java.lang.String | string): boolean
                                public add(arg0: java.lang.String | string): void
                                public static class: java.lang.Class<any>
                            }
                            class DOMXSImplementationSourceImpl extends com.sun.org.apache.xerces.internal.dom.DOMImplementationSourceImpl {
                                public constructor()
                                public getDOMImplementation(arg0: java.lang.String | string): org.w3c.dom.DOMImplementation
                                public getDOMImplementationList(arg0: java.lang.String | string): org.w3c.dom.DOMImplementationList
                                public static class: java.lang.Class<any>
                            }
                            class DeepNodeListImpl implements org.w3c.dom.NodeList {
                                protected rootNode: com.sun.org.apache.xerces.internal.dom.NodeImpl
                                protected tagName: string
                                protected changes: int
                                protected nodes: java.util.Vector
                                protected nsName: string
                                protected enableNS: boolean
                                public constructor(arg0: com.sun.org.apache.xerces.internal.dom.NodeImpl, arg1: java.lang.String | string)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.dom.NodeImpl, arg1: java.lang.String | string, arg2: java.lang.String | string)
                                public getLength(): int
                                public item(arg0: int): org.w3c.dom.Node
                                protected nextMatchingElementAfter(arg0: org.w3c.dom.Node): org.w3c.dom.Node
                                public static class: java.lang.Class<any>
                            }
                            class DeferredAttrImpl extends com.sun.org.apache.xerces.internal.dom.AttrImpl implements com.sun.org.apache.xerces.internal.dom.DeferredNode {
                                protected fNodeIndex: int
                                public getNodeIndex(): int
                                protected synchronizeData(): void
                                protected synchronizeChildren(): void
                                public static class: java.lang.Class<any>
                            }
                            class DeferredAttrNSImpl extends com.sun.org.apache.xerces.internal.dom.AttrNSImpl implements com.sun.org.apache.xerces.internal.dom.DeferredNode {
                                protected fNodeIndex: int
                                public getNodeIndex(): int
                                protected synchronizeData(): void
                                protected synchronizeChildren(): void
                                public static class: java.lang.Class<any>
                            }
                            class DeferredCDATASectionImpl extends com.sun.org.apache.xerces.internal.dom.CDATASectionImpl implements com.sun.org.apache.xerces.internal.dom.DeferredNode {
                                protected fNodeIndex: int
                                public getNodeIndex(): int
                                protected synchronizeData(): void
                                public static class: java.lang.Class<any>
                            }
                            class DeferredCommentImpl extends com.sun.org.apache.xerces.internal.dom.CommentImpl implements com.sun.org.apache.xerces.internal.dom.DeferredNode {
                                protected fNodeIndex: int
                                public getNodeIndex(): int
                                protected synchronizeData(): void
                                public static class: java.lang.Class<any>
                            }
                            class DeferredDOMImplementationImpl extends com.sun.org.apache.xerces.internal.dom.DOMImplementationImpl {
                                public constructor()
                                public static getDOMImplementation(): org.w3c.dom.DOMImplementation
                                public static class: java.lang.Class<any>
                            }
                            class DeferredDocumentImpl extends com.sun.org.apache.xerces.internal.dom.DocumentImpl implements com.sun.org.apache.xerces.internal.dom.DeferredNode {
                                protected static CHUNK_SHIFT: int
                                protected static CHUNK_SIZE: int
                                protected static CHUNK_MASK: int
                                protected static INITIAL_CHUNK_COUNT: int
                                protected fNodeCount: int
                                protected fNodeType: int[][]
                                protected fNodeName: java.lang.Object[][]
                                protected fNodeValue: java.lang.Object[][]
                                protected fNodeParent: int[][]
                                protected fNodeLastChild: int[][]
                                protected fNodePrevSib: int[][]
                                protected fNodeURI: java.lang.Object[][]
                                protected fNodeExtra: int[][]
                                protected fIdCount: int
                                protected fIdName: java.lang.String[]
                                protected fIdElement: int[]
                                protected fNamespacesEnabled: boolean
                                public constructor()
                                public constructor(arg0: boolean)
                                public constructor(arg0: boolean, arg1: boolean)
                                public getImplementation(): org.w3c.dom.DOMImplementation
                                public createDeferredDocument(): int
                                public createDeferredDocumentType(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): int
                                public setInternalSubset(arg0: int, arg1: java.lang.String | string): void
                                public createDeferredNotation(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string): int
                                public createDeferredEntity(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string): int
                                public getDeferredEntityBaseURI(arg0: int): string
                                public setEntityInfo(arg0: int, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public setTypeInfo(arg0: int, arg1: java.lang.Object): void
                                public setInputEncoding(arg0: int, arg1: java.lang.String | string): void
                                public createDeferredEntityReference(arg0: java.lang.String | string, arg1: java.lang.String | string): int
                                public createDeferredElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.Object): int
                                public createDeferredElement(arg0: java.lang.String | string): int
                                public createDeferredElement(arg0: java.lang.String | string, arg1: java.lang.String | string): int
                                public setDeferredAttribute(arg0: int, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: boolean, arg5: boolean, arg6: java.lang.Object): int
                                public setDeferredAttribute(arg0: int, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: boolean): int
                                public createDeferredAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: boolean): int
                                public createDeferredAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: boolean): int
                                public createDeferredElementDefinition(arg0: java.lang.String | string): int
                                public createDeferredTextNode(arg0: java.lang.String | string, arg1: boolean): int
                                public createDeferredCDATASection(arg0: java.lang.String | string): int
                                public createDeferredProcessingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): int
                                public createDeferredComment(arg0: java.lang.String | string): int
                                public cloneNode(arg0: int, arg1: boolean): int
                                public appendChild(arg0: int, arg1: int): void
                                public setAttributeNode(arg0: int, arg1: int): int
                                public setIdAttributeNode(arg0: int, arg1: int): void
                                public setIdAttribute(arg0: int): void
                                public insertBefore(arg0: int, arg1: int, arg2: int): int
                                public setAsLastChild(arg0: int, arg1: int): void
                                public getParentNode(arg0: int): int
                                public getParentNode(arg0: int, arg1: boolean): int
                                public getLastChild(arg0: int): int
                                public getLastChild(arg0: int, arg1: boolean): int
                                public getPrevSibling(arg0: int): int
                                public getPrevSibling(arg0: int, arg1: boolean): int
                                public getRealPrevSibling(arg0: int): int
                                public getRealPrevSibling(arg0: int, arg1: boolean): int
                                public lookupElementDefinition(arg0: java.lang.String | string): int
                                public getNodeObject(arg0: int): com.sun.org.apache.xerces.internal.dom.DeferredNode
                                public getNodeName(arg0: int): string
                                public getNodeName(arg0: int, arg1: boolean): string
                                public getNodeValueString(arg0: int): string
                                public getNodeValueString(arg0: int, arg1: boolean): string
                                public getNodeValue(arg0: int): string
                                public getTypeInfo(arg0: int): java.lang.Object
                                public getNodeValue(arg0: int, arg1: boolean): string
                                public getNodeExtra(arg0: int): int
                                public getNodeExtra(arg0: int, arg1: boolean): int
                                public getNodeType(arg0: int): short
                                public getNodeType(arg0: int, arg1: boolean): short
                                public getAttribute(arg0: int, arg1: java.lang.String | string): string
                                public getNodeURI(arg0: int): string
                                public getNodeURI(arg0: int, arg1: boolean): string
                                public putIdentifier(arg0: java.lang.String | string, arg1: int): void
                                public print(): void
                                public getNodeIndex(): int
                                protected synchronizeData(): void
                                protected synchronizeChildren(): void
                                protected synchronizeChildren(arg0: com.sun.org.apache.xerces.internal.dom.AttrImpl, arg1: int): void
                                protected synchronizeChildren(arg0: com.sun.org.apache.xerces.internal.dom.ParentNode, arg1: int): void
                                protected ensureCapacity(arg0: int): void
                                protected createNode(arg0: short): int
                                protected static binarySearch(arg0: int[], arg1: int, arg2: int, arg3: int): int
                                public static class: java.lang.Class<any>
                            }
                            class DeferredDocumentTypeImpl extends com.sun.org.apache.xerces.internal.dom.DocumentTypeImpl implements com.sun.org.apache.xerces.internal.dom.DeferredNode {
                                protected fNodeIndex: int
                                public getNodeIndex(): int
                                protected synchronizeData(): void
                                protected synchronizeChildren(): void
                                public static class: java.lang.Class<any>
                            }
                            class DeferredElementDefinitionImpl extends com.sun.org.apache.xerces.internal.dom.ElementDefinitionImpl implements com.sun.org.apache.xerces.internal.dom.DeferredNode {
                                protected fNodeIndex: int
                                public getNodeIndex(): int
                                protected synchronizeData(): void
                                protected synchronizeChildren(): void
                                public static class: java.lang.Class<any>
                            }
                            class DeferredElementImpl extends com.sun.org.apache.xerces.internal.dom.ElementImpl implements com.sun.org.apache.xerces.internal.dom.DeferredNode {
                                protected fNodeIndex: int
                                public getNodeIndex(): int
                                protected synchronizeData(): void
                                protected synchronizeChildren(): void
                                public static class: java.lang.Class<any>
                            }
                            class DeferredElementNSImpl extends com.sun.org.apache.xerces.internal.dom.ElementNSImpl implements com.sun.org.apache.xerces.internal.dom.DeferredNode {
                                protected fNodeIndex: int
                                public getNodeIndex(): int
                                protected synchronizeData(): void
                                protected synchronizeChildren(): void
                                public static class: java.lang.Class<any>
                            }
                            class DeferredEntityImpl extends com.sun.org.apache.xerces.internal.dom.EntityImpl implements com.sun.org.apache.xerces.internal.dom.DeferredNode {
                                protected fNodeIndex: int
                                public getNodeIndex(): int
                                protected synchronizeData(): void
                                protected synchronizeChildren(): void
                                public static class: java.lang.Class<any>
                            }
                            class DeferredEntityReferenceImpl extends com.sun.org.apache.xerces.internal.dom.EntityReferenceImpl implements com.sun.org.apache.xerces.internal.dom.DeferredNode {
                                protected fNodeIndex: int
                                public getNodeIndex(): int
                                protected synchronizeData(): void
                                protected synchronizeChildren(): void
                                public static class: java.lang.Class<any>
                            }
                            interface DeferredNode extends org.w3c.dom.Node {
                                TYPE_NODE: short
                                getNodeIndex(): int
                            }
                            class DeferredNotationImpl extends com.sun.org.apache.xerces.internal.dom.NotationImpl implements com.sun.org.apache.xerces.internal.dom.DeferredNode {
                                protected fNodeIndex: int
                                public getNodeIndex(): int
                                protected synchronizeData(): void
                                public static class: java.lang.Class<any>
                            }
                            class DeferredProcessingInstructionImpl extends com.sun.org.apache.xerces.internal.dom.ProcessingInstructionImpl implements com.sun.org.apache.xerces.internal.dom.DeferredNode {
                                protected fNodeIndex: int
                                public getNodeIndex(): int
                                protected synchronizeData(): void
                                public static class: java.lang.Class<any>
                            }
                            class DeferredTextImpl extends com.sun.org.apache.xerces.internal.dom.TextImpl implements com.sun.org.apache.xerces.internal.dom.DeferredNode {
                                protected fNodeIndex: int
                                public getNodeIndex(): int
                                protected synchronizeData(): void
                                public static class: java.lang.Class<any>
                            }
                            class DocumentFragmentImpl extends com.sun.org.apache.xerces.internal.dom.ParentNode implements org.w3c.dom.DocumentFragment {
                                public constructor(arg0: com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl)
                                public constructor()
                                public getNodeType(): short
                                public getNodeName(): string
                                public normalize(): void
                                public static class: java.lang.Class<any>
                            }
                            class DocumentImpl extends com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl implements org.w3c.dom.traversal.DocumentTraversal , org.w3c.dom.events.DocumentEvent , org.w3c.dom.ranges.DocumentRange {
                                protected iterators: java.util.List<org.w3c.dom.traversal.NodeIterator>
                                protected ranges: java.util.List<org.w3c.dom.ranges.Range>
                                protected eventListeners: java.util.Map<com.sun.org.apache.xerces.internal.dom.NodeImpl, java.util.List<com.sun.org.apache.xerces.internal.dom.DocumentImpl$LEntry>>
                                protected mutationEvents: boolean
                                public constructor()
                                public constructor(arg0: boolean)
                                public constructor(arg0: org.w3c.dom.DocumentType)
                                public constructor(arg0: org.w3c.dom.DocumentType, arg1: boolean)
                                public cloneNode(arg0: boolean): org.w3c.dom.Node
                                public getImplementation(): org.w3c.dom.DOMImplementation
                                public createNodeIterator(arg0: org.w3c.dom.Node, arg1: short, arg2: org.w3c.dom.traversal.NodeFilter): org.w3c.dom.traversal.NodeIterator
                                public createNodeIterator(arg0: org.w3c.dom.Node, arg1: int, arg2: org.w3c.dom.traversal.NodeFilter, arg3: boolean): org.w3c.dom.traversal.NodeIterator
                                public createTreeWalker(arg0: org.w3c.dom.Node, arg1: short, arg2: org.w3c.dom.traversal.NodeFilter): org.w3c.dom.traversal.TreeWalker
                                public createTreeWalker(arg0: org.w3c.dom.Node, arg1: int, arg2: org.w3c.dom.traversal.NodeFilter, arg3: boolean): org.w3c.dom.traversal.TreeWalker
                                public createRange(): org.w3c.dom.ranges.Range
                                public createEvent(arg0: java.lang.String | string): org.w3c.dom.events.Event
                                protected addEventListener(arg0: com.sun.org.apache.xerces.internal.dom.NodeImpl, arg1: java.lang.String | string, arg2: org.w3c.dom.events.EventListener | org.w3c.dom.events.EventListener$$Lambda, arg3: boolean): void
                                protected removeEventListener(arg0: com.sun.org.apache.xerces.internal.dom.NodeImpl, arg1: java.lang.String | string, arg2: org.w3c.dom.events.EventListener | org.w3c.dom.events.EventListener$$Lambda, arg3: boolean): void
                                protected copyEventListeners(arg0: com.sun.org.apache.xerces.internal.dom.NodeImpl, arg1: com.sun.org.apache.xerces.internal.dom.NodeImpl): void
                                protected dispatchEvent(arg0: com.sun.org.apache.xerces.internal.dom.NodeImpl, arg1: org.w3c.dom.events.Event): boolean
                                protected dispatchEventToSubtree(arg0: org.w3c.dom.Node, arg1: org.w3c.dom.events.Event): void
                                protected dispatchingEventToSubtree(arg0: org.w3c.dom.Node, arg1: org.w3c.dom.events.Event): void
                                protected dispatchAggregateEvents(arg0: com.sun.org.apache.xerces.internal.dom.NodeImpl, arg1: com.sun.org.apache.xerces.internal.dom.DocumentImpl$EnclosingAttr): void
                                protected dispatchAggregateEvents(arg0: com.sun.org.apache.xerces.internal.dom.NodeImpl, arg1: com.sun.org.apache.xerces.internal.dom.AttrImpl, arg2: java.lang.String | string, arg3: short): void
                                protected saveEnclosingAttr(arg0: com.sun.org.apache.xerces.internal.dom.NodeImpl): void
                                public static class: java.lang.Class<any>
                            }
                            class DocumentImpl$$Lambda extends com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl implements org.w3c.dom.traversal.DocumentTraversal , org.w3c.dom.events.DocumentEvent , org.w3c.dom.ranges.DocumentRange {
                                protected iterators: java.util.List<org.w3c.dom.traversal.NodeIterator>
                            }
                            class DocumentTypeImpl extends com.sun.org.apache.xerces.internal.dom.ParentNode implements org.w3c.dom.DocumentType {
                                protected name: string
                                protected entities: com.sun.org.apache.xerces.internal.dom.NamedNodeMapImpl
                                protected notations: com.sun.org.apache.xerces.internal.dom.NamedNodeMapImpl
                                protected elements: com.sun.org.apache.xerces.internal.dom.NamedNodeMapImpl
                                protected publicID: string
                                protected systemID: string
                                protected internalSubset: string
                                public constructor(arg0: com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl, arg1: java.lang.String | string)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string)
                                public getPublicId(): string
                                public getSystemId(): string
                                public setInternalSubset(arg0: java.lang.String | string): void
                                public getInternalSubset(): string
                                public getNodeType(): short
                                public getNodeName(): string
                                public cloneNode(arg0: boolean): org.w3c.dom.Node
                                public getTextContent(): string
                                public setTextContent(arg0: java.lang.String | string): void
                                public isEqualNode(arg0: org.w3c.dom.Node): boolean
                                protected getNodeNumber(): int
                                public getName(): string
                                public getEntities(): org.w3c.dom.NamedNodeMap
                                public getNotations(): org.w3c.dom.NamedNodeMap
                                public setReadOnly(arg0: boolean, arg1: boolean): void
                                public getElements(): org.w3c.dom.NamedNodeMap
                                public setUserData(arg0: java.lang.String | string, arg1: java.lang.Object, arg2: org.w3c.dom.UserDataHandler): java.lang.Object
                                public getUserData(arg0: java.lang.String | string): java.lang.Object
                                protected getUserDataRecord(): java.util.Map<java.lang.String, com.sun.org.apache.xerces.internal.dom.ParentNode$UserDataRecord>
                                public static class: java.lang.Class<any>
                            }
                            class ElementDefinitionImpl extends com.sun.org.apache.xerces.internal.dom.ParentNode {
                                protected name: string
                                protected attributes: com.sun.org.apache.xerces.internal.dom.NamedNodeMapImpl
                                public constructor(arg0: com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl, arg1: java.lang.String | string)
                                public getNodeType(): short
                                public getNodeName(): string
                                public cloneNode(arg0: boolean): org.w3c.dom.Node
                                public getAttributes(): org.w3c.dom.NamedNodeMap
                                public static class: java.lang.Class<any>
                            }
                            class ElementImpl extends com.sun.org.apache.xerces.internal.dom.ParentNode implements org.w3c.dom.Element , org.w3c.dom.TypeInfo {
                                protected name: string
                                protected attributes: com.sun.org.apache.xerces.internal.dom.AttributeMap
                                public constructor(arg0: com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl, arg1: java.lang.String | string)
                                protected constructor()
                                public getNodeType(): short
                                public getNodeName(): string
                                public getAttributes(): org.w3c.dom.NamedNodeMap
                                public cloneNode(arg0: boolean): org.w3c.dom.Node
                                public getBaseURI(): string
                                public getAttribute(arg0: java.lang.String | string): string
                                public getAttributeNode(arg0: java.lang.String | string): org.w3c.dom.Attr
                                public getElementsByTagName(arg0: java.lang.String | string): org.w3c.dom.NodeList
                                public getTagName(): string
                                public normalize(): void
                                public removeAttribute(arg0: java.lang.String | string): void
                                public removeAttributeNode(arg0: org.w3c.dom.Attr): org.w3c.dom.Attr
                                public setAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public setAttributeNode(arg0: org.w3c.dom.Attr): org.w3c.dom.Attr
                                public getAttributeNS(arg0: java.lang.String | string, arg1: java.lang.String | string): string
                                public setAttributeNS(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public removeAttributeNS(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public getAttributeNodeNS(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.Attr
                                public setAttributeNodeNS(arg0: org.w3c.dom.Attr): org.w3c.dom.Attr
                                protected setXercesAttributeNode(arg0: org.w3c.dom.Attr): int
                                protected getXercesAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string): int
                                public hasAttributes(): boolean
                                public hasAttribute(arg0: java.lang.String | string): boolean
                                public hasAttributeNS(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                                public getElementsByTagNameNS(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.NodeList
                                public isEqualNode(arg0: org.w3c.dom.Node): boolean
                                public setIdAttributeNode(arg0: org.w3c.dom.Attr, arg1: boolean): void
                                public setIdAttribute(arg0: java.lang.String | string, arg1: boolean): void
                                public setIdAttributeNS(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: boolean): void
                                public getTypeName(): string
                                public getTypeNamespace(): string
                                public isDerivedFrom(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: int): boolean
                                public getSchemaTypeInfo(): org.w3c.dom.TypeInfo
                                public setReadOnly(arg0: boolean, arg1: boolean): void
                                protected synchronizeData(): void
                                protected setupDefaultAttributes(): void
                                protected reconcileDefaultAttributes(): void
                                protected getDefaultAttributes(): com.sun.org.apache.xerces.internal.dom.NamedNodeMapImpl
                                public static class: java.lang.Class<any>
                            }
                            class ElementNSImpl extends com.sun.org.apache.xerces.internal.dom.ElementImpl {
                                protected namespaceURI: string
                                protected localName: string
                                protected constructor()
                                protected constructor(arg0: com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl, arg1: java.lang.String | string, arg2: java.lang.String | string)
                                protected constructor(arg0: com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string)
                                protected constructor(arg0: com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl, arg1: java.lang.String | string)
                                protected setValues(arg0: com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string): void
                                public getNamespaceURI(): string
                                public getPrefix(): string
                                public setPrefix(arg0: java.lang.String | string): void
                                public getLocalName(): string
                                public getBaseURI(): string
                                public getTypeName(): string
                                public getTypeNamespace(): string
                                public isDerivedFrom(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: int): boolean
                                public setType(arg0: com.sun.org.apache.xerces.internal.xs.XSTypeDefinition): void
                                public static class: java.lang.Class<any>
                            }
                            class EntityImpl extends com.sun.org.apache.xerces.internal.dom.ParentNode implements org.w3c.dom.Entity {
                                protected name: string
                                protected publicId: string
                                protected systemId: string
                                protected encoding: string
                                protected inputEncoding: string
                                protected version: string
                                protected notationName: string
                                protected baseURI: string
                                public constructor(arg0: com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl, arg1: java.lang.String | string)
                                public getNodeType(): short
                                public getNodeName(): string
                                public setNodeValue(arg0: java.lang.String | string): void
                                public setPrefix(arg0: java.lang.String | string): void
                                public cloneNode(arg0: boolean): org.w3c.dom.Node
                                public getPublicId(): string
                                public getSystemId(): string
                                public getXmlVersion(): string
                                public getXmlEncoding(): string
                                public getNotationName(): string
                                public setPublicId(arg0: java.lang.String | string): void
                                public setXmlEncoding(arg0: java.lang.String | string): void
                                public getInputEncoding(): string
                                public setInputEncoding(arg0: java.lang.String | string): void
                                public setXmlVersion(arg0: java.lang.String | string): void
                                public setSystemId(arg0: java.lang.String | string): void
                                public setNotationName(arg0: java.lang.String | string): void
                                public getBaseURI(): string
                                public setBaseURI(arg0: java.lang.String | string): void
                                public static class: java.lang.Class<any>
                            }
                            class EntityReferenceImpl extends com.sun.org.apache.xerces.internal.dom.ParentNode implements org.w3c.dom.EntityReference {
                                protected name: string
                                protected baseURI: string
                                public constructor(arg0: com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl, arg1: java.lang.String | string)
                                public getNodeType(): short
                                public getNodeName(): string
                                public cloneNode(arg0: boolean): org.w3c.dom.Node
                                public getBaseURI(): string
                                public setBaseURI(arg0: java.lang.String | string): void
                                protected getEntityRefValue(): string
                                protected synchronizeChildren(): void
                                public setReadOnly(arg0: boolean, arg1: boolean): void
                                public static class: java.lang.Class<any>
                            }
                            class LCount {
                                public captures: int
                                public bubbles: int
                                public defaults: int
                                public total: int
                                public static class: java.lang.Class<any>
                            }
                            class NamedNodeMapImpl implements org.w3c.dom.NamedNodeMap , java.io.Serializable {
                                protected flags: short
                                protected static READONLY: short
                                protected static CHANGED: short
                                protected static HASDEFAULTS: short
                                protected nodes: java.util.List
                                protected ownerNode: com.sun.org.apache.xerces.internal.dom.NodeImpl
                                protected constructor(arg0: com.sun.org.apache.xerces.internal.dom.NodeImpl)
                                public getLength(): int
                                public item(arg0: int): org.w3c.dom.Node
                                public getNamedItem(arg0: java.lang.String | string): org.w3c.dom.Node
                                public getNamedItemNS(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.Node
                                public setNamedItem(arg0: org.w3c.dom.Node): org.w3c.dom.Node
                                public setNamedItemNS(arg0: org.w3c.dom.Node): org.w3c.dom.Node
                                public removeNamedItem(arg0: java.lang.String | string): org.w3c.dom.Node
                                public removeNamedItemNS(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.Node
                                public cloneMap(arg0: com.sun.org.apache.xerces.internal.dom.NodeImpl): com.sun.org.apache.xerces.internal.dom.NamedNodeMapImpl
                                protected cloneContent(arg0: com.sun.org.apache.xerces.internal.dom.NamedNodeMapImpl): void
                                protected setOwnerDocument(arg0: com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl): void
                                protected findNamePoint(arg0: java.lang.String | string, arg1: int): int
                                protected findNamePoint(arg0: java.lang.String | string, arg1: java.lang.String | string): int
                                protected precedes(arg0: org.w3c.dom.Node, arg1: org.w3c.dom.Node): boolean
                                protected removeItem(arg0: int): void
                                protected getItem(arg0: int): java.lang.Object
                                protected addItem(arg0: org.w3c.dom.Node): int
                                protected cloneMap(arg0: java.util.ArrayList): java.util.ArrayList
                                protected getNamedItemIndex(arg0: java.lang.String | string, arg1: java.lang.String | string): int
                                public removeAll(): void
                                public static class: java.lang.Class<any>
                            }
                            abstract class NodeImpl implements org.w3c.dom.Node , org.w3c.dom.NodeList , org.w3c.dom.events.EventTarget , java.lang.Cloneable , java.io.Serializable {
                                public static TREE_POSITION_PRECEDING: short
                                public static TREE_POSITION_FOLLOWING: short
                                public static TREE_POSITION_ANCESTOR: short
                                public static TREE_POSITION_DESCENDANT: short
                                public static TREE_POSITION_EQUIVALENT: short
                                public static TREE_POSITION_SAME_NODE: short
                                public static TREE_POSITION_DISCONNECTED: short
                                public static DOCUMENT_POSITION_DISCONNECTED: short
                                public static DOCUMENT_POSITION_PRECEDING: short
                                public static DOCUMENT_POSITION_FOLLOWING: short
                                public static DOCUMENT_POSITION_CONTAINS: short
                                public static DOCUMENT_POSITION_IS_CONTAINED: short
                                public static DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: short
                                public static ELEMENT_DEFINITION_NODE: short
                                protected ownerNode: com.sun.org.apache.xerces.internal.dom.NodeImpl
                                protected flags: short
                                protected static READONLY: short
                                protected static SYNCDATA: short
                                protected static SYNCCHILDREN: short
                                protected static OWNED: short
                                protected static FIRSTCHILD: short
                                protected static SPECIFIED: short
                                protected static IGNORABLEWS: short
                                protected static HASSTRING: short
                                protected static NORMALIZED: short
                                protected static ID: short
                                protected constructor(arg0: com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl)
                                public constructor()
                                public getNodeType(): short
                                public getNodeName(): string
                                public getNodeValue(): string
                                public setNodeValue(arg0: java.lang.String | string): void
                                public appendChild(arg0: org.w3c.dom.Node): org.w3c.dom.Node
                                public cloneNode(arg0: boolean): org.w3c.dom.Node
                                public getOwnerDocument(): org.w3c.dom.Document
                                protected getNodeNumber(): int
                                public getParentNode(): org.w3c.dom.Node
                                public getNextSibling(): org.w3c.dom.Node
                                public getPreviousSibling(): org.w3c.dom.Node
                                public getAttributes(): org.w3c.dom.NamedNodeMap
                                public hasAttributes(): boolean
                                public hasChildNodes(): boolean
                                public getChildNodes(): org.w3c.dom.NodeList
                                public getFirstChild(): org.w3c.dom.Node
                                public getLastChild(): org.w3c.dom.Node
                                public insertBefore(arg0: org.w3c.dom.Node, arg1: org.w3c.dom.Node): org.w3c.dom.Node
                                public removeChild(arg0: org.w3c.dom.Node): org.w3c.dom.Node
                                public replaceChild(arg0: org.w3c.dom.Node, arg1: org.w3c.dom.Node): org.w3c.dom.Node
                                public getLength(): int
                                public item(arg0: int): org.w3c.dom.Node
                                public normalize(): void
                                public isSupported(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                                public getNamespaceURI(): string
                                public getPrefix(): string
                                public setPrefix(arg0: java.lang.String | string): void
                                public getLocalName(): string
                                public addEventListener(arg0: java.lang.String | string, arg1: org.w3c.dom.events.EventListener | org.w3c.dom.events.EventListener$$Lambda, arg2: boolean): void
                                public removeEventListener(arg0: java.lang.String | string, arg1: org.w3c.dom.events.EventListener | org.w3c.dom.events.EventListener$$Lambda, arg2: boolean): void
                                public dispatchEvent(arg0: org.w3c.dom.events.Event): boolean
                                public getBaseURI(): string
                                public compareTreePosition(arg0: org.w3c.dom.Node): short
                                public compareDocumentPosition(arg0: org.w3c.dom.Node): short
                                public getTextContent(): string
                                public setTextContent(arg0: java.lang.String | string): void
                                public isSameNode(arg0: org.w3c.dom.Node): boolean
                                public isDefaultNamespace(arg0: java.lang.String | string): boolean
                                public lookupPrefix(arg0: java.lang.String | string): string
                                public lookupNamespaceURI(arg0: java.lang.String | string): string
                                public isEqualNode(arg0: org.w3c.dom.Node): boolean
                                public getFeature(arg0: java.lang.String | string, arg1: java.lang.String | string): java.lang.Object
                                public setUserData(arg0: java.lang.String | string, arg1: java.lang.Object, arg2: org.w3c.dom.UserDataHandler): java.lang.Object
                                public getUserData(arg0: java.lang.String | string): java.lang.Object
                                protected getUserDataRecord(): java.util.Map<java.lang.String, com.sun.org.apache.xerces.internal.dom.ParentNode$UserDataRecord>
                                public setReadOnly(arg0: boolean, arg1: boolean): void
                                public getReadOnly(): boolean
                                public setUserData(arg0: java.lang.Object): void
                                public getUserData(): java.lang.Object
                                protected changed(): void
                                protected changes(): int
                                protected synchronizeData(): void
                                protected getContainer(): org.w3c.dom.Node
                                public needsSyncChildren(arg0: boolean): void
                                public toString(): string
                                public static class: java.lang.Class<any>
                            }
                            class NodeIteratorImpl implements org.w3c.dom.traversal.NodeIterator {
                                public constructor(arg0: com.sun.org.apache.xerces.internal.dom.DocumentImpl | com.sun.org.apache.xerces.internal.dom.DocumentImpl$$Lambda, arg1: org.w3c.dom.Node, arg2: int, arg3: org.w3c.dom.traversal.NodeFilter, arg4: boolean)
                                public getRoot(): org.w3c.dom.Node
                                public getWhatToShow(): int
                                public getFilter(): org.w3c.dom.traversal.NodeFilter
                                public getExpandEntityReferences(): boolean
                                public nextNode(): org.w3c.dom.Node
                                public previousNode(): org.w3c.dom.Node
                                public removeNode(arg0: org.w3c.dom.Node): void
                                public detach(): void
                                public static class: java.lang.Class<any>
                            }
                            class NodeListCache implements java.io.Serializable {
                                public static class: java.lang.Class<any>
                            }
                            class NotationImpl extends com.sun.org.apache.xerces.internal.dom.NodeImpl implements org.w3c.dom.Notation {
                                protected name: string
                                protected publicId: string
                                protected systemId: string
                                protected baseURI: string
                                public constructor(arg0: com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl, arg1: java.lang.String | string)
                                public getNodeType(): short
                                public getNodeName(): string
                                public getPublicId(): string
                                public getSystemId(): string
                                public setPublicId(arg0: java.lang.String | string): void
                                public setSystemId(arg0: java.lang.String | string): void
                                public getBaseURI(): string
                                public setBaseURI(arg0: java.lang.String | string): void
                                public static class: java.lang.Class<any>
                            }
                            class PSVIAttrNSImpl extends com.sun.org.apache.xerces.internal.dom.AttrNSImpl implements com.sun.org.apache.xerces.internal.xs.AttributePSVI {
                                protected fDeclaration: com.sun.org.apache.xerces.internal.xs.XSAttributeDeclaration
                                protected fTypeDecl: com.sun.org.apache.xerces.internal.xs.XSTypeDefinition
                                protected fSpecified: boolean
                                protected fNormalizedValue: string
                                protected fActualValue: java.lang.Object
                                protected fActualValueType: short
                                protected fItemValueTypes: com.sun.org.apache.xerces.internal.xs.ShortList
                                protected fMemberType: com.sun.org.apache.xerces.internal.xs.XSSimpleTypeDefinition
                                protected fValidationAttempted: short
                                protected fValidity: short
                                protected fErrorCodes: com.sun.org.apache.xerces.internal.xs.StringList
                                protected fValidationContext: string
                                public constructor(arg0: com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl, arg1: java.lang.String | string, arg2: java.lang.String | string)
                                public getSchemaDefault(): string
                                public getSchemaNormalizedValue(): string
                                public getIsSchemaSpecified(): boolean
                                public getValidationAttempted(): short
                                public getValidity(): short
                                public getErrorCodes(): com.sun.org.apache.xerces.internal.xs.StringList
                                public getValidationContext(): string
                                public getTypeDefinition(): com.sun.org.apache.xerces.internal.xs.XSTypeDefinition
                                public getMemberTypeDefinition(): com.sun.org.apache.xerces.internal.xs.XSSimpleTypeDefinition
                                public getAttributeDeclaration(): com.sun.org.apache.xerces.internal.xs.XSAttributeDeclaration
                                public setPSVI(arg0: com.sun.org.apache.xerces.internal.xs.AttributePSVI): void
                                public getActualNormalizedValue(): java.lang.Object
                                public getActualNormalizedValueType(): short
                                public getItemValueTypes(): com.sun.org.apache.xerces.internal.xs.ShortList
                                public static class: java.lang.Class<any>
                            }
                            class PSVIDOMImplementationImpl extends com.sun.org.apache.xerces.internal.dom.CoreDOMImplementationImpl {
                                public constructor()
                                public static getDOMImplementation(): org.w3c.dom.DOMImplementation
                                public hasFeature(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                                public createDocument(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: org.w3c.dom.DocumentType): org.w3c.dom.Document
                                public static class: java.lang.Class<any>
                            }
                            class PSVIDocumentImpl extends com.sun.org.apache.xerces.internal.dom.DocumentImpl {
                                public constructor()
                                public constructor(arg0: org.w3c.dom.DocumentType)
                                public cloneNode(arg0: boolean): org.w3c.dom.Node
                                public getImplementation(): org.w3c.dom.DOMImplementation
                                public createElementNS(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.Element
                                public createElementNS(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): org.w3c.dom.Element
                                public createAttributeNS(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.Attr
                                public createAttributeNS(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): org.w3c.dom.Attr
                                public getDomConfig(): org.w3c.dom.DOMConfiguration
                                public static class: java.lang.Class<any>
                            }
                            class PSVIElementNSImpl extends com.sun.org.apache.xerces.internal.dom.ElementNSImpl implements com.sun.org.apache.xerces.internal.xs.ElementPSVI {
                                protected fDeclaration: com.sun.org.apache.xerces.internal.xs.XSElementDeclaration
                                protected fTypeDecl: com.sun.org.apache.xerces.internal.xs.XSTypeDefinition
                                protected fNil: boolean
                                protected fSpecified: boolean
                                protected fNormalizedValue: string
                                protected fActualValue: java.lang.Object
                                protected fActualValueType: short
                                protected fItemValueTypes: com.sun.org.apache.xerces.internal.xs.ShortList
                                protected fNotation: com.sun.org.apache.xerces.internal.xs.XSNotationDeclaration
                                protected fMemberType: com.sun.org.apache.xerces.internal.xs.XSSimpleTypeDefinition
                                protected fValidationAttempted: short
                                protected fValidity: short
                                protected fErrorCodes: com.sun.org.apache.xerces.internal.xs.StringList
                                protected fValidationContext: string
                                protected fSchemaInformation: com.sun.org.apache.xerces.internal.xs.XSModel
                                public constructor(arg0: com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl, arg1: java.lang.String | string, arg2: java.lang.String | string)
                                public getSchemaDefault(): string
                                public getSchemaNormalizedValue(): string
                                public getIsSchemaSpecified(): boolean
                                public getValidationAttempted(): short
                                public getValidity(): short
                                public getErrorCodes(): com.sun.org.apache.xerces.internal.xs.StringList
                                public getValidationContext(): string
                                public getNil(): boolean
                                public getNotation(): com.sun.org.apache.xerces.internal.xs.XSNotationDeclaration
                                public getTypeDefinition(): com.sun.org.apache.xerces.internal.xs.XSTypeDefinition
                                public getMemberTypeDefinition(): com.sun.org.apache.xerces.internal.xs.XSSimpleTypeDefinition
                                public getElementDeclaration(): com.sun.org.apache.xerces.internal.xs.XSElementDeclaration
                                public getSchemaInformation(): com.sun.org.apache.xerces.internal.xs.XSModel
                                public setPSVI(arg0: com.sun.org.apache.xerces.internal.xs.ElementPSVI): void
                                public getActualNormalizedValue(): java.lang.Object
                                public getActualNormalizedValueType(): short
                                public getItemValueTypes(): com.sun.org.apache.xerces.internal.xs.ShortList
                                public static class: java.lang.Class<any>
                            }
                            abstract class ParentNode extends com.sun.org.apache.xerces.internal.dom.ChildNode {
                                protected ownerDocument: com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl
                                protected firstChild: com.sun.org.apache.xerces.internal.dom.ChildNode
                                protected fNodeListCache: com.sun.org.apache.xerces.internal.dom.NodeListCache
                                protected constructor(arg0: com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl)
                                public constructor()
                                public cloneNode(arg0: boolean): org.w3c.dom.Node
                                public getOwnerDocument(): org.w3c.dom.Document
                                public hasChildNodes(): boolean
                                public getChildNodes(): org.w3c.dom.NodeList
                                public getFirstChild(): org.w3c.dom.Node
                                public getLastChild(): org.w3c.dom.Node
                                public insertBefore(arg0: org.w3c.dom.Node, arg1: org.w3c.dom.Node): org.w3c.dom.Node
                                public removeChild(arg0: org.w3c.dom.Node): org.w3c.dom.Node
                                public replaceChild(arg0: org.w3c.dom.Node, arg1: org.w3c.dom.Node): org.w3c.dom.Node
                                public getTextContent(): string
                                public setTextContent(arg0: java.lang.String | string): void
                                public getLength(): int
                                public item(arg0: int): org.w3c.dom.Node
                                protected getChildNodesUnoptimized(): org.w3c.dom.NodeList
                                public normalize(): void
                                public isEqualNode(arg0: org.w3c.dom.Node): boolean
                                public setReadOnly(arg0: boolean, arg1: boolean): void
                                protected synchronizeChildren(): void
                                public static class: java.lang.Class<any>
                            }
                            class ProcessingInstructionImpl extends com.sun.org.apache.xerces.internal.dom.CharacterDataImpl implements org.w3c.dom.ProcessingInstruction {
                                protected target: string
                                public constructor(arg0: com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl, arg1: java.lang.String | string, arg2: java.lang.String | string)
                                public getNodeType(): short
                                public getNodeName(): string
                                public getTarget(): string
                                public getData(): string
                                public setData(arg0: java.lang.String | string): void
                                public getBaseURI(): string
                                public static class: java.lang.Class<any>
                            }
                            class RangeExceptionImpl extends org.w3c.dom.ranges.RangeException {
                                public constructor(arg0: short, arg1: java.lang.String | string)
                                public static class: java.lang.Class<any>
                            }
                            class RangeImpl implements org.w3c.dom.ranges.Range {
                                public constructor(arg0: com.sun.org.apache.xerces.internal.dom.DocumentImpl | com.sun.org.apache.xerces.internal.dom.DocumentImpl$$Lambda)
                                public getStartContainer(): org.w3c.dom.Node
                                public getStartOffset(): int
                                public getEndContainer(): org.w3c.dom.Node
                                public getEndOffset(): int
                                public getCollapsed(): boolean
                                public getCommonAncestorContainer(): org.w3c.dom.Node
                                public setStart(arg0: org.w3c.dom.Node, arg1: int): void
                                public setEnd(arg0: org.w3c.dom.Node, arg1: int): void
                                public setStartBefore(arg0: org.w3c.dom.Node): void
                                public setStartAfter(arg0: org.w3c.dom.Node): void
                                public setEndBefore(arg0: org.w3c.dom.Node): void
                                public setEndAfter(arg0: org.w3c.dom.Node): void
                                public collapse(arg0: boolean): void
                                public selectNode(arg0: org.w3c.dom.Node): void
                                public selectNodeContents(arg0: org.w3c.dom.Node): void
                                public compareBoundaryPoints(arg0: short, arg1: org.w3c.dom.ranges.Range): short
                                public deleteContents(): void
                                public extractContents(): org.w3c.dom.DocumentFragment
                                public cloneContents(): org.w3c.dom.DocumentFragment
                                public insertNode(arg0: org.w3c.dom.Node): void
                                public surroundContents(arg0: org.w3c.dom.Node): void
                                public cloneRange(): org.w3c.dom.ranges.Range
                                public toString(): string
                                public detach(): void
                                public insertedNodeFromDOM(arg0: org.w3c.dom.Node): void
                                public static class: java.lang.Class<any>
                            }
                            class TextImpl extends com.sun.org.apache.xerces.internal.dom.CharacterDataImpl implements org.w3c.dom.CharacterData , org.w3c.dom.Text {
                                public constructor()
                                public constructor(arg0: com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl, arg1: java.lang.String | string)
                                public setValues(arg0: com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl, arg1: java.lang.String | string): void
                                public getNodeType(): short
                                public getNodeName(): string
                                public setIgnorableWhitespace(arg0: boolean): void
                                public isElementContentWhitespace(): boolean
                                public getWholeText(): string
                                protected insertTextContent(arg0: java.lang.StringBuffer): void
                                public replaceWholeText(arg0: java.lang.String | string): org.w3c.dom.Text
                                public isIgnorableWhitespace(): boolean
                                public splitText(arg0: int): org.w3c.dom.Text
                                public replaceData(arg0: java.lang.String | string): void
                                public removeData(): string
                                public static class: java.lang.Class<any>
                            }
                            class TreeWalkerImpl implements org.w3c.dom.traversal.TreeWalker {
                                public constructor(arg0: org.w3c.dom.Node, arg1: int, arg2: org.w3c.dom.traversal.NodeFilter, arg3: boolean)
                                public getRoot(): org.w3c.dom.Node
                                public getWhatToShow(): int
                                public setWhatShow(arg0: int): void
                                public getFilter(): org.w3c.dom.traversal.NodeFilter
                                public getExpandEntityReferences(): boolean
                                public getCurrentNode(): org.w3c.dom.Node
                                public setCurrentNode(arg0: org.w3c.dom.Node): void
                                public parentNode(): org.w3c.dom.Node
                                public firstChild(): org.w3c.dom.Node
                                public lastChild(): org.w3c.dom.Node
                                public previousSibling(): org.w3c.dom.Node
                                public nextSibling(): org.w3c.dom.Node
                                public previousNode(): org.w3c.dom.Node
                                public nextNode(): org.w3c.dom.Node
                                public static class: java.lang.Class<any>
                            }
                        }
                        namespace impl {
                            namespace dtd {
                                namespace models {
                                    class CMAny extends com.sun.org.apache.xerces.internal.impl.dtd.models.CMNode {
                                        public constructor(arg0: int, arg1: java.lang.String | string, arg2: int)
                                        public isNullable(): boolean
                                        public toString(): string
                                        protected calcFirstPos(arg0: com.sun.org.apache.xerces.internal.impl.dtd.models.CMStateSet): void
                                        protected calcLastPos(arg0: com.sun.org.apache.xerces.internal.impl.dtd.models.CMStateSet): void
                                        public static class: java.lang.Class<any>
                                    }
                                    class CMBinOp extends com.sun.org.apache.xerces.internal.impl.dtd.models.CMNode {
                                        public constructor(arg0: int, arg1: com.sun.org.apache.xerces.internal.impl.dtd.models.CMNode, arg2: com.sun.org.apache.xerces.internal.impl.dtd.models.CMNode)
                                        public isNullable(): boolean
                                        protected calcFirstPos(arg0: com.sun.org.apache.xerces.internal.impl.dtd.models.CMStateSet): void
                                        protected calcLastPos(arg0: com.sun.org.apache.xerces.internal.impl.dtd.models.CMStateSet): void
                                        public static class: java.lang.Class<any>
                                    }
                                    class CMLeaf extends com.sun.org.apache.xerces.internal.impl.dtd.models.CMNode {
                                        public constructor(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: int)
                                        public constructor(arg0: com.sun.org.apache.xerces.internal.xni.QName)
                                        public isNullable(): boolean
                                        public toString(): string
                                        protected calcFirstPos(arg0: com.sun.org.apache.xerces.internal.impl.dtd.models.CMStateSet): void
                                        protected calcLastPos(arg0: com.sun.org.apache.xerces.internal.impl.dtd.models.CMStateSet): void
                                        public static class: java.lang.Class<any>
                                    }
                                    abstract class CMNode {
                                        public constructor(arg0: int)
                                        public isNullable(): boolean
                                        public type(): int
                                        public firstPos(): com.sun.org.apache.xerces.internal.impl.dtd.models.CMStateSet
                                        public lastPos(): com.sun.org.apache.xerces.internal.impl.dtd.models.CMStateSet
                                        public setMaxStates(arg0: int): void
                                        public setUserData(arg0: java.lang.Object): void
                                        public getUserData(): java.lang.Object
                                        protected calcFirstPos(arg0: com.sun.org.apache.xerces.internal.impl.dtd.models.CMStateSet): void
                                        protected calcLastPos(arg0: com.sun.org.apache.xerces.internal.impl.dtd.models.CMStateSet): void
                                        public static class: java.lang.Class<any>
                                    }
                                    class CMStateSet {
                                        public constructor(arg0: int)
                                        public toString(): string
                                        public intersection(arg0: com.sun.org.apache.xerces.internal.impl.dtd.models.CMStateSet): void
                                        public getBit(arg0: int): boolean
                                        public isEmpty(): boolean
                                        public union(arg0: com.sun.org.apache.xerces.internal.impl.dtd.models.CMStateSet): void
                                        public setBit(arg0: int): void
                                        public setTo(arg0: com.sun.org.apache.xerces.internal.impl.dtd.models.CMStateSet): void
                                        public zeroBits(): void
                                        public equals(arg0: java.lang.Object): boolean
                                        public hashCode(): int
                                        public static class: java.lang.Class<any>
                                    }
                                    class CMUniOp extends com.sun.org.apache.xerces.internal.impl.dtd.models.CMNode {
                                        public constructor(arg0: int, arg1: com.sun.org.apache.xerces.internal.impl.dtd.models.CMNode)
                                        public isNullable(): boolean
                                        protected calcFirstPos(arg0: com.sun.org.apache.xerces.internal.impl.dtd.models.CMStateSet): void
                                        protected calcLastPos(arg0: com.sun.org.apache.xerces.internal.impl.dtd.models.CMStateSet): void
                                        public static class: java.lang.Class<any>
                                    }
                                    interface ContentModelValidator {
                                        validate(arg0: com.sun.org.apache.xerces.internal.xni.QName[], arg1: int, arg2: int): int
                                    }
                                    interface ContentModelValidator$$Lambda {
                                        (arg0: com.sun.org.apache.xerces.internal.xni.QName[], arg1: int, arg2: int): int
                                    }
                                    class DFAContentModel implements com.sun.org.apache.xerces.internal.impl.dtd.models.ContentModelValidator {
                                        public constructor(arg0: com.sun.org.apache.xerces.internal.impl.dtd.models.CMNode, arg1: int, arg2: boolean)
                                        public validate(arg0: com.sun.org.apache.xerces.internal.xni.QName[], arg1: int, arg2: int): int
                                        public static class: java.lang.Class<any>
                                    }
                                    class DFAContentModel$$Lambda implements com.sun.org.apache.xerces.internal.impl.dtd.models.ContentModelValidator {
                                        public constructor(arg0: com.sun.org.apache.xerces.internal.impl.dtd.models.CMNode, arg1: int, arg2: boolean)
                                    }
                                    class MixedContentModel implements com.sun.org.apache.xerces.internal.impl.dtd.models.ContentModelValidator {
                                        public constructor(arg0: com.sun.org.apache.xerces.internal.xni.QName[], arg1: int[], arg2: int, arg3: int, arg4: boolean)
                                        public validate(arg0: com.sun.org.apache.xerces.internal.xni.QName[], arg1: int, arg2: int): int
                                        public static class: java.lang.Class<any>
                                    }
                                    class MixedContentModel$$Lambda implements com.sun.org.apache.xerces.internal.impl.dtd.models.ContentModelValidator {
                                        public constructor(arg0: com.sun.org.apache.xerces.internal.xni.QName[], arg1: int[], arg2: int, arg3: int, arg4: boolean)
                                    }
                                    class SimpleContentModel implements com.sun.org.apache.xerces.internal.impl.dtd.models.ContentModelValidator {
                                        public static CHOICE: short
                                        public static SEQUENCE: short
                                        public constructor(arg0: short, arg1: com.sun.org.apache.xerces.internal.xni.QName, arg2: com.sun.org.apache.xerces.internal.xni.QName)
                                        public validate(arg0: com.sun.org.apache.xerces.internal.xni.QName[], arg1: int, arg2: int): int
                                        public static class: java.lang.Class<any>
                                    }
                                    class SimpleContentModel$$Lambda implements com.sun.org.apache.xerces.internal.impl.dtd.models.ContentModelValidator {
                                        public static CHOICE: short
                                    }
                                }
                                class BalancedDTDGrammar extends com.sun.org.apache.xerces.internal.impl.dtd.DTDGrammar {
                                    public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDDescription)
                                    public startContentModel(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public startGroup(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public pcdata(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public element(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public separator(arg0: short, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public occurrence(arg0: short, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public endGroup(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public endDTD(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    protected addContentSpecToElement(arg0: com.sun.org.apache.xerces.internal.impl.dtd.XMLElementDecl): void
                                    public static class: java.lang.Class<any>
                                }
                                class DTDGrammar implements com.sun.org.apache.xerces.internal.xni.XMLDTDHandler , com.sun.org.apache.xerces.internal.xni.XMLDTDContentModelHandler , com.sun.org.apache.xerces.internal.impl.validation.EntityState , com.sun.org.apache.xerces.internal.xni.grammars.Grammar {
                                    public static TOP_LEVEL_SCOPE: int
                                    protected fDTDSource: com.sun.org.apache.xerces.internal.xni.parser.XMLDTDSource
                                    protected fDTDContentModelSource: com.sun.org.apache.xerces.internal.xni.parser.XMLDTDContentModelSource
                                    protected fCurrentElementIndex: int
                                    protected fCurrentAttributeIndex: int
                                    protected fReadingExternalDTD: boolean
                                    protected fGrammarDescription: com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDDescription
                                    protected fAttributeDecl: com.sun.org.apache.xerces.internal.impl.dtd.XMLAttributeDecl
                                    public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDDescription)
                                    public getGrammarDescription(): com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarDescription
                                    public getElementDeclIsExternal(arg0: int): boolean
                                    public getAttributeDeclIsExternal(arg0: int): boolean
                                    public getAttributeDeclIndex(arg0: int, arg1: java.lang.String | string): int
                                    public startDTD(arg0: com.sun.org.apache.xerces.internal.xni.XMLLocator, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public startParameterEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public startExternalSubset(arg0: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public endParameterEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public endExternalSubset(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public elementDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public attributeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String[], arg4: java.lang.String | string, arg5: com.sun.org.apache.xerces.internal.xni.XMLString, arg6: com.sun.org.apache.xerces.internal.xni.XMLString, arg7: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public internalEntityDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLString, arg2: com.sun.org.apache.xerces.internal.xni.XMLString, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public externalEntityDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public unparsedEntityDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public notationDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public endDTD(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public setDTDSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLDTDSource): void
                                    public getDTDSource(): com.sun.org.apache.xerces.internal.xni.parser.XMLDTDSource
                                    public textDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public comment(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public processingInstruction(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLString, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public startAttlist(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public endAttlist(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public startConditional(arg0: short, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public ignoredCharacters(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public endConditional(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public setDTDContentModelSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLDTDContentModelSource): void
                                    public getDTDContentModelSource(): com.sun.org.apache.xerces.internal.xni.parser.XMLDTDContentModelSource
                                    public startContentModel(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public startGroup(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public pcdata(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public element(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public separator(arg0: short, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public occurrence(arg0: short, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public endGroup(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public any(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public empty(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public endContentModel(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public isNamespaceAware(): boolean
                                    public getSymbolTable(): com.sun.org.apache.xerces.internal.util.SymbolTable
                                    public getFirstElementDeclIndex(): int
                                    public getNextElementDeclIndex(arg0: int): int
                                    public getElementDeclIndex(arg0: java.lang.String | string): int
                                    public getElementDeclIndex(arg0: com.sun.org.apache.xerces.internal.xni.QName): int
                                    public getContentSpecType(arg0: int): short
                                    public getElementDecl(arg0: int, arg1: com.sun.org.apache.xerces.internal.impl.dtd.XMLElementDecl): boolean
                                    public getFirstAttributeDeclIndex(arg0: int): int
                                    public getNextAttributeDeclIndex(arg0: int): int
                                    public getAttributeDecl(arg0: int, arg1: com.sun.org.apache.xerces.internal.impl.dtd.XMLAttributeDecl): boolean
                                    public isCDATAAttribute(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.QName): boolean
                                    public getEntityDeclIndex(arg0: java.lang.String | string): int
                                    public getEntityDecl(arg0: int, arg1: com.sun.org.apache.xerces.internal.impl.dtd.XMLEntityDecl): boolean
                                    public getNotationDeclIndex(arg0: java.lang.String | string): int
                                    public getNotationDecl(arg0: int, arg1: com.sun.org.apache.xerces.internal.impl.dtd.XMLNotationDecl): boolean
                                    public getContentSpec(arg0: int, arg1: com.sun.org.apache.xerces.internal.impl.dtd.XMLContentSpec): boolean
                                    public getContentSpecIndex(arg0: int): int
                                    public getContentSpecAsString(arg0: int): string
                                    public printElements(): void
                                    public printAttributes(arg0: int): void
                                    protected addContentSpecToElement(arg0: com.sun.org.apache.xerces.internal.impl.dtd.XMLElementDecl): void
                                    protected getElementContentModelValidator(arg0: int): com.sun.org.apache.xerces.internal.impl.dtd.models.ContentModelValidator
                                    protected createElementDecl(): int
                                    protected setElementDecl(arg0: int, arg1: com.sun.org.apache.xerces.internal.impl.dtd.XMLElementDecl): void
                                    protected putElementNameMapping(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: int, arg2: int): void
                                    protected setFirstAttributeDeclIndex(arg0: int, arg1: int): void
                                    protected setContentSpecIndex(arg0: int, arg1: int): void
                                    protected createAttributeDecl(): int
                                    protected setAttributeDecl(arg0: int, arg1: int, arg2: com.sun.org.apache.xerces.internal.impl.dtd.XMLAttributeDecl): void
                                    protected createContentSpec(): int
                                    protected setContentSpec(arg0: int, arg1: com.sun.org.apache.xerces.internal.impl.dtd.XMLContentSpec): void
                                    protected createEntityDecl(): int
                                    protected setEntityDecl(arg0: int, arg1: com.sun.org.apache.xerces.internal.impl.dtd.XMLEntityDecl): void
                                    protected createNotationDecl(): int
                                    protected setNotationDecl(arg0: int, arg1: com.sun.org.apache.xerces.internal.impl.dtd.XMLNotationDecl): void
                                    protected addContentSpecNode(arg0: short, arg1: java.lang.String | string): int
                                    protected addUniqueLeafNode(arg0: java.lang.String | string): int
                                    protected addContentSpecNode(arg0: short, arg1: int, arg2: int): int
                                    protected initializeContentModelStack(): void
                                    public isEntityDeclared(arg0: java.lang.String | string): boolean
                                    public isEntityUnparsed(arg0: java.lang.String | string): boolean
                                    public static class: java.lang.Class<any>
                                }
                                class DTDGrammar$$Lambda implements com.sun.org.apache.xerces.internal.xni.XMLDTDHandler , com.sun.org.apache.xerces.internal.xni.XMLDTDContentModelHandler , com.sun.org.apache.xerces.internal.impl.validation.EntityState , com.sun.org.apache.xerces.internal.xni.grammars.Grammar {
                                    public static TOP_LEVEL_SCOPE: int
                                }
                                class DTDGrammarBucket {
                                    protected fGrammars: java.util.Map<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDDescription, com.sun.org.apache.xerces.internal.impl.dtd.DTDGrammar>
                                    protected fActiveGrammar: com.sun.org.apache.xerces.internal.impl.dtd.DTDGrammar
                                    protected fIsStandalone: boolean
                                    public constructor()
                                    public putGrammar(arg0: com.sun.org.apache.xerces.internal.impl.dtd.DTDGrammar | com.sun.org.apache.xerces.internal.impl.dtd.DTDGrammar$$Lambda): void
                                    public getGrammar(arg0: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarDescription): com.sun.org.apache.xerces.internal.impl.dtd.DTDGrammar
                                    public clear(): void
                                    public static class: java.lang.Class<any>
                                }
                                class XML11DTDProcessor extends com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDLoader {
                                    public constructor()
                                    public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable)
                                    public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool)
                                    protected isValidNmtoken(arg0: java.lang.String | string): boolean
                                    protected isValidName(arg0: java.lang.String | string): boolean
                                    protected createDTDScanner(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.impl.XMLErrorReporter, arg2: com.sun.org.apache.xerces.internal.impl.XMLEntityManager | com.sun.org.apache.xerces.internal.impl.XMLEntityManager$$Lambda): com.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl
                                    protected getScannerVersion(): short
                                    public static class: java.lang.Class<any>
                                }
                                class XML11DTDValidator extends com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator {
                                    protected static DTD_VALIDATOR_PROPERTY: string
                                    public constructor()
                                    public reset(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager): void
                                    protected init(): void
                                    public static class: java.lang.Class<any>
                                }
                                class XML11NSDTDValidator extends com.sun.org.apache.xerces.internal.impl.dtd.XML11DTDValidator {
                                    public constructor()
                                    protected startNamespaceScope(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    protected endNamespaceScope(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations, arg2: boolean): void
                                    public static class: java.lang.Class<any>
                                }
                                class XMLAttributeDecl {
                                    public name: com.sun.org.apache.xerces.internal.xni.QName
                                    public simpleType: com.sun.org.apache.xerces.internal.impl.dtd.XMLSimpleType
                                    public optional: boolean
                                    public constructor()
                                    public setValues(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.impl.dtd.XMLSimpleType, arg2: boolean): void
                                    public clear(): void
                                    public static class: java.lang.Class<any>
                                }
                                class XMLContentSpec {
                                    public static CONTENTSPECNODE_LEAF: short
                                    public static CONTENTSPECNODE_ZERO_OR_ONE: short
                                    public static CONTENTSPECNODE_ZERO_OR_MORE: short
                                    public static CONTENTSPECNODE_ONE_OR_MORE: short
                                    public static CONTENTSPECNODE_CHOICE: short
                                    public static CONTENTSPECNODE_SEQ: short
                                    public static CONTENTSPECNODE_ANY: short
                                    public static CONTENTSPECNODE_ANY_OTHER: short
                                    public static CONTENTSPECNODE_ANY_LOCAL: short
                                    public static CONTENTSPECNODE_ANY_LAX: short
                                    public static CONTENTSPECNODE_ANY_OTHER_LAX: short
                                    public static CONTENTSPECNODE_ANY_LOCAL_LAX: short
                                    public static CONTENTSPECNODE_ANY_SKIP: short
                                    public static CONTENTSPECNODE_ANY_OTHER_SKIP: short
                                    public static CONTENTSPECNODE_ANY_LOCAL_SKIP: short
                                    public type: short
                                    public value: java.lang.Object
                                    public otherValue: java.lang.Object
                                    public constructor()
                                    public constructor(arg0: short, arg1: java.lang.Object, arg2: java.lang.Object)
                                    public constructor(arg0: com.sun.org.apache.xerces.internal.impl.dtd.XMLContentSpec)
                                    public constructor(arg0: com.sun.org.apache.xerces.internal.impl.dtd.XMLContentSpec$Provider, arg1: int)
                                    public clear(): void
                                    public setValues(arg0: short, arg1: java.lang.Object, arg2: java.lang.Object): void
                                    public setValues(arg0: com.sun.org.apache.xerces.internal.impl.dtd.XMLContentSpec): void
                                    public setValues(arg0: com.sun.org.apache.xerces.internal.impl.dtd.XMLContentSpec$Provider, arg1: int): void
                                    public hashCode(): int
                                    public equals(arg0: java.lang.Object): boolean
                                    public static class: java.lang.Class<any>
                                }
                                class XMLDTDDescription extends com.sun.org.apache.xerces.internal.util.XMLResourceIdentifierImpl implements com.sun.org.apache.xerces.internal.xni.grammars.XMLDTDDescription {
                                    protected fRootName: string
                                    protected fPossibleRoots: java.util.ArrayList
                                    public constructor(arg0: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg1: java.lang.String | string)
                                    public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string)
                                    public constructor(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource)
                                    public getGrammarType(): string
                                    public getRootName(): string
                                    public setRootName(arg0: java.lang.String | string): void
                                    public setPossibleRoots(arg0: java.util.ArrayList): void
                                    public setPossibleRoots(arg0: java.util.Vector): void
                                    public equals(arg0: java.lang.Object): boolean
                                    public hashCode(): int
                                    public static class: java.lang.Class<any>
                                }
                                class XMLDTDLoader extends com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDProcessor implements com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarLoader {
                                    protected static STANDARD_URI_CONFORMANT_FEATURE: string
                                    protected static BALANCE_SYNTAX_TREES: string
                                    protected static ERROR_HANDLER: string
                                    public static ENTITY_RESOLVER: string
                                    public static LOCALE: string
                                    protected fEntityResolver: com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver
                                    protected fDTDScanner: com.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl
                                    protected fEntityManager: com.sun.org.apache.xerces.internal.impl.XMLEntityManager
                                    protected fLocale: java.util.Locale
                                    public constructor()
                                    public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable)
                                    public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool)
                                    public getRecognizedFeatures(): java.lang.String[]
                                    public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                    public getRecognizedProperties(): java.lang.String[]
                                    public getProperty(arg0: java.lang.String | string): java.lang.Object
                                    public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                    public getFeature(arg0: java.lang.String | string): boolean
                                    public setLocale(arg0: java.util.Locale): void
                                    public getLocale(): java.util.Locale
                                    public setErrorHandler(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler): void
                                    public getErrorHandler(): com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler
                                    public setEntityResolver(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver | com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver$$Lambda): void
                                    public getEntityResolver(): com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver
                                    public loadGrammar(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource): com.sun.org.apache.xerces.internal.xni.grammars.Grammar
                                    public loadGrammarWithContext(arg0: com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string, arg5: java.lang.String | string): void
                                    protected reset(): void
                                    protected createDTDScanner(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.impl.XMLErrorReporter, arg2: com.sun.org.apache.xerces.internal.impl.XMLEntityManager | com.sun.org.apache.xerces.internal.impl.XMLEntityManager$$Lambda): com.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl
                                    protected getScannerVersion(): short
                                    public static class: java.lang.Class<any>
                                }
                                class XMLDTDProcessor implements com.sun.org.apache.xerces.internal.xni.parser.XMLComponent , com.sun.org.apache.xerces.internal.xni.parser.XMLDTDFilter , com.sun.org.apache.xerces.internal.xni.parser.XMLDTDContentModelFilter {
                                    protected static VALIDATION: string
                                    protected static NOTIFY_CHAR_REFS: string
                                    protected static WARN_ON_DUPLICATE_ATTDEF: string
                                    protected static WARN_ON_UNDECLARED_ELEMDEF: string
                                    protected static PARSER_SETTINGS: string
                                    protected static SYMBOL_TABLE: string
                                    protected static ERROR_REPORTER: string
                                    protected static GRAMMAR_POOL: string
                                    protected static DTD_VALIDATOR: string
                                    protected fValidation: boolean
                                    protected fDTDValidation: boolean
                                    protected fWarnDuplicateAttdef: boolean
                                    protected fWarnOnUndeclaredElemdef: boolean
                                    protected fSymbolTable: com.sun.org.apache.xerces.internal.util.SymbolTable
                                    protected fErrorReporter: com.sun.org.apache.xerces.internal.impl.XMLErrorReporter
                                    protected fGrammarBucket: com.sun.org.apache.xerces.internal.impl.dtd.DTDGrammarBucket
                                    protected fValidator: com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator
                                    protected fGrammarPool: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool
                                    protected fLocale: java.util.Locale
                                    protected fDTDHandler: com.sun.org.apache.xerces.internal.xni.XMLDTDHandler
                                    protected fDTDSource: com.sun.org.apache.xerces.internal.xni.parser.XMLDTDSource
                                    protected fDTDContentModelHandler: com.sun.org.apache.xerces.internal.xni.XMLDTDContentModelHandler
                                    protected fDTDContentModelSource: com.sun.org.apache.xerces.internal.xni.parser.XMLDTDContentModelSource
                                    protected fDTDGrammar: com.sun.org.apache.xerces.internal.impl.dtd.DTDGrammar
                                    protected fInDTDIgnore: boolean
                                    public constructor()
                                    public reset(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager): void
                                    protected reset(): void
                                    public getRecognizedFeatures(): java.lang.String[]
                                    public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                    public getRecognizedProperties(): java.lang.String[]
                                    public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                    public getFeatureDefault(arg0: java.lang.String | string): boolean
                                    public getPropertyDefault(arg0: java.lang.String | string): java.lang.Object
                                    public setDTDHandler(arg0: com.sun.org.apache.xerces.internal.xni.XMLDTDHandler): void
                                    public getDTDHandler(): com.sun.org.apache.xerces.internal.xni.XMLDTDHandler
                                    public setDTDContentModelHandler(arg0: com.sun.org.apache.xerces.internal.xni.XMLDTDContentModelHandler): void
                                    public getDTDContentModelHandler(): com.sun.org.apache.xerces.internal.xni.XMLDTDContentModelHandler
                                    public startExternalSubset(arg0: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public endExternalSubset(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    protected static checkStandaloneEntityRef(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dtd.DTDGrammar | com.sun.org.apache.xerces.internal.impl.dtd.DTDGrammar$$Lambda, arg2: com.sun.org.apache.xerces.internal.impl.dtd.XMLEntityDecl, arg3: com.sun.org.apache.xerces.internal.impl.XMLErrorReporter): void
                                    public comment(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public processingInstruction(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLString, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public startDTD(arg0: com.sun.org.apache.xerces.internal.xni.XMLLocator, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public ignoredCharacters(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public textDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public startParameterEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public endParameterEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public elementDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public startAttlist(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public attributeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String[], arg4: java.lang.String | string, arg5: com.sun.org.apache.xerces.internal.xni.XMLString, arg6: com.sun.org.apache.xerces.internal.xni.XMLString, arg7: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public endAttlist(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public internalEntityDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLString, arg2: com.sun.org.apache.xerces.internal.xni.XMLString, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public externalEntityDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public unparsedEntityDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public notationDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public startConditional(arg0: short, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public endConditional(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public endDTD(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public setDTDSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLDTDSource): void
                                    public getDTDSource(): com.sun.org.apache.xerces.internal.xni.parser.XMLDTDSource
                                    public setDTDContentModelSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLDTDContentModelSource): void
                                    public getDTDContentModelSource(): com.sun.org.apache.xerces.internal.xni.parser.XMLDTDContentModelSource
                                    public startContentModel(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public any(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public empty(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public startGroup(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public pcdata(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public element(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public separator(arg0: short, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public occurrence(arg0: short, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public endGroup(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public endContentModel(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    protected isValidNmtoken(arg0: java.lang.String | string): boolean
                                    protected isValidName(arg0: java.lang.String | string): boolean
                                    public static class: java.lang.Class<any>
                                }
                                class XMLDTDValidator implements com.sun.org.apache.xerces.internal.xni.parser.XMLComponent , com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentFilter , com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidatorFilter , com.sun.org.apache.xerces.internal.impl.RevalidationHandler {
                                    protected static NAMESPACES: string
                                    protected static VALIDATION: string
                                    protected static DYNAMIC_VALIDATION: string
                                    protected static BALANCE_SYNTAX_TREES: string
                                    protected static WARN_ON_DUPLICATE_ATTDEF: string
                                    protected static PARSER_SETTINGS: string
                                    protected static SYMBOL_TABLE: string
                                    protected static ERROR_REPORTER: string
                                    protected static GRAMMAR_POOL: string
                                    protected static DATATYPE_VALIDATOR_FACTORY: string
                                    protected static VALIDATION_MANAGER: string
                                    protected fValidationManager: com.sun.org.apache.xerces.internal.impl.validation.ValidationManager
                                    protected fValidationState: com.sun.org.apache.xerces.internal.impl.validation.ValidationState
                                    protected fNamespaces: boolean
                                    protected fValidation: boolean
                                    protected fDTDValidation: boolean
                                    protected fDynamicValidation: boolean
                                    protected fBalanceSyntaxTrees: boolean
                                    protected fWarnDuplicateAttdef: boolean
                                    protected fSymbolTable: com.sun.org.apache.xerces.internal.util.SymbolTable
                                    protected fErrorReporter: com.sun.org.apache.xerces.internal.impl.XMLErrorReporter
                                    protected fGrammarPool: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool
                                    protected fGrammarBucket: com.sun.org.apache.xerces.internal.impl.dtd.DTDGrammarBucket
                                    protected fDocLocation: com.sun.org.apache.xerces.internal.xni.XMLLocator
                                    protected fNamespaceContext: com.sun.org.apache.xerces.internal.xni.NamespaceContext
                                    protected fDatatypeValidatorFactory: com.sun.org.apache.xerces.internal.impl.dv.DTDDVFactory
                                    protected fDocumentHandler: com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler
                                    protected fDocumentSource: com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource
                                    protected fDTDGrammar: com.sun.org.apache.xerces.internal.impl.dtd.DTDGrammar
                                    protected fSeenDoctypeDecl: boolean
                                    protected fValID: com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator
                                    protected fValIDRef: com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator
                                    protected fValIDRefs: com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator
                                    protected fValENTITY: com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator
                                    protected fValENTITIES: com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator
                                    protected fValNMTOKEN: com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator
                                    protected fValNMTOKENS: com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator
                                    protected fValNOTATION: com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator
                                    public constructor()
                                    public reset(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager): void
                                    public getRecognizedFeatures(): java.lang.String[]
                                    public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                    public getRecognizedProperties(): java.lang.String[]
                                    public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                    public getFeatureDefault(arg0: java.lang.String | string): boolean
                                    public getPropertyDefault(arg0: java.lang.String | string): java.lang.Object
                                    public setDocumentHandler(arg0: com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler): void
                                    public getDocumentHandler(): com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler
                                    public setDocumentSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource): void
                                    public getDocumentSource(): com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource
                                    public startDocument(arg0: com.sun.org.apache.xerces.internal.xni.XMLLocator, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.NamespaceContext, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public xmlDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public doctypeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public startElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public emptyElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public characters(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public ignorableWhitespace(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public endElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public startCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public endCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public endDocument(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public comment(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public processingInstruction(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLString, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public startGeneralEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public endGeneralEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public textDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public hasGrammar(): boolean
                                    public validate(): boolean
                                    protected addDTDDefaultAttrsAndValidate(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: int, arg2: com.sun.org.apache.xerces.internal.xni.XMLAttributes): void
                                    protected getExternalEntityRefInAttrValue(arg0: java.lang.String | string): string
                                    protected validateDTDattribute(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.impl.dtd.XMLAttributeDecl): void
                                    protected invalidStandaloneAttDef(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.QName): boolean
                                    protected init(): void
                                    protected handleStartElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): boolean
                                    protected startNamespaceScope(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    protected handleEndElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations, arg2: boolean): void
                                    protected endNamespaceScope(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations, arg2: boolean): void
                                    protected isSpace(arg0: int): boolean
                                    public characterData(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): boolean
                                    public static class: java.lang.Class<any>
                                }
                                interface XMLDTDValidatorFilter extends com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentFilter {
                                    hasGrammar(): boolean
                                    validate(): boolean
                                }
                                class XMLElementDecl {
                                    public static TYPE_ANY: short
                                    public static TYPE_EMPTY: short
                                    public static TYPE_MIXED: short
                                    public static TYPE_CHILDREN: short
                                    public static TYPE_SIMPLE: short
                                    public name: com.sun.org.apache.xerces.internal.xni.QName
                                    public scope: int
                                    public type: short
                                    public contentModelValidator: com.sun.org.apache.xerces.internal.impl.dtd.models.ContentModelValidator
                                    public simpleType: com.sun.org.apache.xerces.internal.impl.dtd.XMLSimpleType
                                    public constructor()
                                    public setValues(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: int, arg2: short, arg3: com.sun.org.apache.xerces.internal.impl.dtd.models.ContentModelValidator | com.sun.org.apache.xerces.internal.impl.dtd.models.ContentModelValidator$$Lambda, arg4: com.sun.org.apache.xerces.internal.impl.dtd.XMLSimpleType): void
                                    public clear(): void
                                    public static class: java.lang.Class<any>
                                }
                                class XMLEntityDecl {
                                    public name: string
                                    public publicId: string
                                    public systemId: string
                                    public baseSystemId: string
                                    public notation: string
                                    public isPE: boolean
                                    public inExternal: boolean
                                    public value: string
                                    public constructor()
                                    public setValues(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string, arg5: boolean, arg6: boolean): void
                                    public setValues(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string, arg5: java.lang.String | string, arg6: boolean, arg7: boolean): void
                                    public clear(): void
                                    public static class: java.lang.Class<any>
                                }
                                class XMLNSDTDValidator extends com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator {
                                    public constructor()
                                    protected startNamespaceScope(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    protected endNamespaceScope(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations, arg2: boolean): void
                                    public static class: java.lang.Class<any>
                                }
                                class XMLNotationDecl {
                                    public name: string
                                    public publicId: string
                                    public systemId: string
                                    public baseSystemId: string
                                    public constructor()
                                    public setValues(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string): void
                                    public clear(): void
                                    public static class: java.lang.Class<any>
                                }
                                class XMLSimpleType {
                                    public static TYPE_CDATA: short
                                    public static TYPE_ENTITY: short
                                    public static TYPE_ENUMERATION: short
                                    public static TYPE_ID: short
                                    public static TYPE_IDREF: short
                                    public static TYPE_NMTOKEN: short
                                    public static TYPE_NOTATION: short
                                    public static TYPE_NAMED: short
                                    public static DEFAULT_TYPE_DEFAULT: short
                                    public static DEFAULT_TYPE_FIXED: short
                                    public static DEFAULT_TYPE_IMPLIED: short
                                    public static DEFAULT_TYPE_REQUIRED: short
                                    public type: short
                                    public name: string
                                    public enumeration: java.lang.String[]
                                    public list: boolean
                                    public defaultType: short
                                    public defaultValue: string
                                    public nonNormalizedDefaultValue: string
                                    public datatypeValidator: com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator
                                    public constructor()
                                    public setValues(arg0: short, arg1: java.lang.String | string, arg2: java.lang.String[], arg3: boolean, arg4: short, arg5: java.lang.String | string, arg6: java.lang.String | string, arg7: com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator | com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator$$Lambda): void
                                    public setValues(arg0: com.sun.org.apache.xerces.internal.impl.dtd.XMLSimpleType): void
                                    public clear(): void
                                    public static class: java.lang.Class<any>
                                }
                            }
                            namespace dv {
                                namespace dtd {
                                    class DTDDVFactoryImpl extends com.sun.org.apache.xerces.internal.impl.dv.DTDDVFactory {
                                        public constructor()
                                        public getBuiltInDV(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator
                                        public getBuiltInTypes(): java.util.Map<java.lang.String, com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator>
                                        public static class: java.lang.Class<any>
                                    }
                                    class ENTITYDatatypeValidator implements com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator {
                                        public constructor()
                                        public validate(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): void
                                        public static class: java.lang.Class<any>
                                    }
                                    class ENTITYDatatypeValidator$$Lambda implements com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator {
                                        public constructor()
                                    }
                                    class IDDatatypeValidator implements com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator {
                                        public constructor()
                                        public validate(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): void
                                        public static class: java.lang.Class<any>
                                    }
                                    class IDDatatypeValidator$$Lambda implements com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator {
                                        public constructor()
                                    }
                                    class IDREFDatatypeValidator implements com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator {
                                        public constructor()
                                        public validate(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): void
                                        public static class: java.lang.Class<any>
                                    }
                                    class IDREFDatatypeValidator$$Lambda implements com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator {
                                        public constructor()
                                    }
                                    class ListDatatypeValidator implements com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator {
                                        public constructor(arg0: com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator | com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator$$Lambda)
                                        public validate(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): void
                                        public static class: java.lang.Class<any>
                                    }
                                    class ListDatatypeValidator$$Lambda implements com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator {
                                        public constructor(arg0: com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator | com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator$$Lambda)
                                    }
                                    class NMTOKENDatatypeValidator implements com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator {
                                        public constructor()
                                        public validate(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): void
                                        public static class: java.lang.Class<any>
                                    }
                                    class NMTOKENDatatypeValidator$$Lambda implements com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator {
                                        public constructor()
                                    }
                                    class NOTATIONDatatypeValidator implements com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator {
                                        public constructor()
                                        public validate(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): void
                                        public static class: java.lang.Class<any>
                                    }
                                    class NOTATIONDatatypeValidator$$Lambda implements com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator {
                                        public constructor()
                                    }
                                    class StringDatatypeValidator implements com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator {
                                        public constructor()
                                        public validate(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): void
                                        public static class: java.lang.Class<any>
                                    }
                                    class StringDatatypeValidator$$Lambda implements com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator {
                                        public constructor()
                                    }
                                    class XML11DTDDVFactoryImpl extends com.sun.org.apache.xerces.internal.impl.dv.dtd.DTDDVFactoryImpl {
                                        public constructor()
                                        public getBuiltInDV(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator
                                        public getBuiltInTypes(): java.util.Map<java.lang.String, com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator>
                                        public static class: java.lang.Class<any>
                                    }
                                    class XML11IDDatatypeValidator extends com.sun.org.apache.xerces.internal.impl.dv.dtd.IDDatatypeValidator {
                                        public constructor()
                                        public validate(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): void
                                        public static class: java.lang.Class<any>
                                    }
                                    class XML11IDREFDatatypeValidator extends com.sun.org.apache.xerces.internal.impl.dv.dtd.IDREFDatatypeValidator {
                                        public constructor()
                                        public validate(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): void
                                        public static class: java.lang.Class<any>
                                    }
                                    class XML11NMTOKENDatatypeValidator extends com.sun.org.apache.xerces.internal.impl.dv.dtd.NMTOKENDatatypeValidator {
                                        public constructor()
                                        public validate(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): void
                                        public static class: java.lang.Class<any>
                                    }
                                }
                                namespace util {
                                    class Base64 {
                                        public constructor()
                                        protected static isWhiteSpace(arg0: char): boolean
                                        protected static isPad(arg0: char): boolean
                                        protected static isData(arg0: char): boolean
                                        protected static isBase64(arg0: char): boolean
                                        public static encode(arg0: byte[]): string
                                        public static decode(arg0: java.lang.String | string): byte[]
                                        protected static removeWhiteSpace(arg0: char[]): int
                                        public static class: java.lang.Class<any>
                                    }
                                    class ByteListImpl extends java.util.AbstractList implements com.sun.org.apache.xerces.internal.xs.datatypes.ByteList {
                                        protected data: byte[]
                                        protected canonical: string
                                        public constructor(arg0: byte[])
                                        public getLength(): int
                                        public contains(arg0: byte): boolean
                                        public item(arg0: int): byte
                                        public get(arg0: int): java.lang.Object
                                        public size(): int
                                        public static class: java.lang.Class<any>
                                    }
                                    class HexBin {
                                        public constructor()
                                        public static encode(arg0: byte[]): string
                                        public static decode(arg0: java.lang.String | string): byte[]
                                        public static class: java.lang.Class<any>
                                    }
                                }
                                namespace xs {
                                    abstract class AbstractDateTimeDV extends com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator {
                                        protected static YEAR: int
                                        protected static MONTH: int
                                        protected static DAY: int
                                        protected static datatypeFactory: javax.xml.datatype.DatatypeFactory
                                        public constructor()
                                        public getAllowedFacets(): short
                                        public isIdentical(arg0: java.lang.Object, arg1: java.lang.Object): boolean
                                        public compare(arg0: java.lang.Object, arg1: java.lang.Object): int
                                        protected compareDates(arg0: com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData, arg1: com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData, arg2: boolean): short
                                        protected compareOrder(arg0: com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData, arg1: com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData): short
                                        protected getTime(arg0: java.lang.String | string, arg1: int, arg2: int, arg3: com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData): void
                                        protected getDate(arg0: java.lang.String | string, arg1: int, arg2: int, arg3: com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData): int
                                        protected getYearMonth(arg0: java.lang.String | string, arg1: int, arg2: int, arg3: com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData): int
                                        protected parseTimeZone(arg0: java.lang.String | string, arg1: int, arg2: int, arg3: com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData): void
                                        protected getTimeZone(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData, arg2: int, arg3: int): void
                                        protected indexOf(arg0: java.lang.String | string, arg1: int, arg2: int, arg3: char): int
                                        protected validateDateTime(arg0: com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData): void
                                        protected findUTCSign(arg0: java.lang.String | string, arg1: int, arg2: int): int
                                        protected isNextCharUTCSign(arg0: java.lang.String | string, arg1: int, arg2: int): boolean
                                        protected parseInt(arg0: java.lang.String | string, arg1: int, arg2: int): int
                                        protected parseIntYear(arg0: java.lang.String | string, arg1: int): int
                                        protected normalize(arg0: com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData): void
                                        protected saveUnnormalized(arg0: com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData): void
                                        protected resetDateObj(arg0: com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData): void
                                        protected maxDayInMonthFor(arg0: int, arg1: int): int
                                        protected mod(arg0: int, arg1: int, arg2: int): int
                                        protected fQuotient(arg0: int, arg1: int): int
                                        protected modulo(arg0: int, arg1: int, arg2: int): int
                                        protected fQuotient(arg0: int, arg1: int, arg2: int): int
                                        protected dateToString(arg0: com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData): string
                                        protected append(arg0: java.lang.StringBuffer, arg1: int, arg2: int): void
                                        protected append(arg0: java.lang.StringBuffer, arg1: double): void
                                        protected append2(arg0: java.lang.StringBuffer, arg1: double): void
                                        protected parseSecond(arg0: java.lang.String | string, arg1: int, arg2: int): double
                                        protected getXMLGregorianCalendar(arg0: com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData): javax.xml.datatype.XMLGregorianCalendar
                                        protected getDuration(arg0: com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData): javax.xml.datatype.Duration
                                        protected getFractionalSecondsAsBigDecimal(arg0: com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData): java.math.BigDecimal
                                        public static class: java.lang.Class<any>
                                    }
                                    class AnyAtomicDV extends com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator {
                                        public getAllowedFacets(): short
                                        public getActualValue(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): java.lang.Object
                                        public static class: java.lang.Class<any>
                                    }
                                    class AnySimpleDV extends com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator {
                                        public constructor()
                                        public getAllowedFacets(): short
                                        public getActualValue(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): java.lang.Object
                                        public static class: java.lang.Class<any>
                                    }
                                    class AnyURIDV extends com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator {
                                        public constructor()
                                        public getAllowedFacets(): short
                                        public getActualValue(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): java.lang.Object
                                        public static class: java.lang.Class<any>
                                    }
                                    class Base64BinaryDV extends com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator {
                                        public constructor()
                                        public getAllowedFacets(): short
                                        public getActualValue(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): java.lang.Object
                                        public getDataLength(arg0: java.lang.Object): int
                                        public static class: java.lang.Class<any>
                                    }
                                    class BaseDVFactory extends com.sun.org.apache.xerces.internal.impl.dv.SchemaDVFactory {
                                        public constructor()
                                        public getBuiltInType(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType
                                        public getBuiltInTypes(): com.sun.org.apache.xerces.internal.util.SymbolHash
                                        public createTypeRestriction(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: short, arg3: com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType, arg4: com.sun.org.apache.xerces.internal.xs.XSObjectList): com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType
                                        public createTypeList(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: short, arg3: com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType, arg4: com.sun.org.apache.xerces.internal.xs.XSObjectList): com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType
                                        public createTypeUnion(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: short, arg3: com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType[], arg4: com.sun.org.apache.xerces.internal.xs.XSObjectList): com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType
                                        public static class: java.lang.Class<any>
                                    }
                                    abstract class BaseSchemaDVFactory extends com.sun.org.apache.xerces.internal.impl.dv.SchemaDVFactory {
                                        protected fDeclPool: com.sun.org.apache.xerces.internal.impl.xs.XSDeclarationPool
                                        public constructor()
                                        protected static createBuiltInTypes(arg0: com.sun.org.apache.xerces.internal.util.SymbolHash, arg1: com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl): void
                                        public createTypeRestriction(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: short, arg3: com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType, arg4: com.sun.org.apache.xerces.internal.xs.XSObjectList): com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType
                                        public createTypeList(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: short, arg3: com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType, arg4: com.sun.org.apache.xerces.internal.xs.XSObjectList): com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType
                                        public createTypeUnion(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: short, arg3: com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType[], arg4: com.sun.org.apache.xerces.internal.xs.XSObjectList): com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType
                                        public setDeclPool(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSDeclarationPool): void
                                        public newXSSimpleTypeDecl(): com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl
                                        public static class: java.lang.Class<any>
                                    }
                                    class BooleanDV extends com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator {
                                        public constructor()
                                        public getAllowedFacets(): short
                                        public getActualValue(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): java.lang.Object
                                        public static class: java.lang.Class<any>
                                    }
                                    class DateDV extends com.sun.org.apache.xerces.internal.impl.dv.xs.DateTimeDV {
                                        public constructor()
                                        public getActualValue(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): java.lang.Object
                                        protected parse(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData
                                        protected dateToString(arg0: com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData): string
                                        protected getXMLGregorianCalendar(arg0: com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData): javax.xml.datatype.XMLGregorianCalendar
                                        public static class: java.lang.Class<any>
                                    }
                                    class DateTimeDV extends com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV {
                                        public constructor()
                                        public getActualValue(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): java.lang.Object
                                        protected parse(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData
                                        protected getXMLGregorianCalendar(arg0: com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData): javax.xml.datatype.XMLGregorianCalendar
                                        public static class: java.lang.Class<any>
                                    }
                                    class DayDV extends com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV {
                                        public constructor()
                                        public getActualValue(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): java.lang.Object
                                        protected parse(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData
                                        protected dateToString(arg0: com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData): string
                                        protected getXMLGregorianCalendar(arg0: com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData): javax.xml.datatype.XMLGregorianCalendar
                                        public static class: java.lang.Class<any>
                                    }
                                    class DayTimeDurationDV extends com.sun.org.apache.xerces.internal.impl.dv.xs.DurationDV {
                                        public getActualValue(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): java.lang.Object
                                        protected getDuration(arg0: com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData): javax.xml.datatype.Duration
                                        public static class: java.lang.Class<any>
                                    }
                                    class DecimalDV extends com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator {
                                        public constructor()
                                        public getAllowedFacets(): short
                                        public getActualValue(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): java.lang.Object
                                        public compare(arg0: java.lang.Object, arg1: java.lang.Object): int
                                        public getTotalDigits(arg0: java.lang.Object): int
                                        public getFractionDigits(arg0: java.lang.Object): int
                                        public static class: java.lang.Class<any>
                                    }
                                    class DoubleDV extends com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator {
                                        public constructor()
                                        public getAllowedFacets(): short
                                        public getActualValue(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): java.lang.Object
                                        public compare(arg0: java.lang.Object, arg1: java.lang.Object): int
                                        public isIdentical(arg0: java.lang.Object, arg1: java.lang.Object): boolean
                                        public static class: java.lang.Class<any>
                                    }
                                    class DurationDV extends com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV {
                                        public static DURATION_TYPE: int
                                        public static YEARMONTHDURATION_TYPE: int
                                        public static DAYTIMEDURATION_TYPE: int
                                        public constructor()
                                        public getActualValue(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): java.lang.Object
                                        protected parse(arg0: java.lang.String | string, arg1: int): com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData
                                        protected compareDates(arg0: com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData, arg1: com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData, arg2: boolean): short
                                        protected parseSecond(arg0: java.lang.String | string, arg1: int, arg2: int): double
                                        protected dateToString(arg0: com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData): string
                                        protected getDuration(arg0: com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData): javax.xml.datatype.Duration
                                        public static class: java.lang.Class<any>
                                    }
                                    class EntityDV extends com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator {
                                        public constructor()
                                        public getAllowedFacets(): short
                                        public getActualValue(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): java.lang.Object
                                        public checkExtraRules(arg0: java.lang.Object, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): void
                                        public static class: java.lang.Class<any>
                                    }
                                    class ExtendedSchemaDVFactoryImpl extends com.sun.org.apache.xerces.internal.impl.dv.xs.BaseSchemaDVFactory {
                                        public constructor()
                                        public getBuiltInType(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType
                                        public getBuiltInTypes(): com.sun.org.apache.xerces.internal.util.SymbolHash
                                        public static class: java.lang.Class<any>
                                    }
                                    class FloatDV extends com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator {
                                        public constructor()
                                        public getAllowedFacets(): short
                                        public getActualValue(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): java.lang.Object
                                        public compare(arg0: java.lang.Object, arg1: java.lang.Object): int
                                        public isIdentical(arg0: java.lang.Object, arg1: java.lang.Object): boolean
                                        public static class: java.lang.Class<any>
                                    }
                                    class FullDVFactory extends com.sun.org.apache.xerces.internal.impl.dv.xs.BaseDVFactory {
                                        public constructor()
                                        public getBuiltInType(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType
                                        public getBuiltInTypes(): com.sun.org.apache.xerces.internal.util.SymbolHash
                                        public static class: java.lang.Class<any>
                                    }
                                    class HexBinaryDV extends com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator {
                                        public constructor()
                                        public getAllowedFacets(): short
                                        public getActualValue(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): java.lang.Object
                                        public getDataLength(arg0: java.lang.Object): int
                                        public static class: java.lang.Class<any>
                                    }
                                    class IDDV extends com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator {
                                        public constructor()
                                        public getAllowedFacets(): short
                                        public getActualValue(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): java.lang.Object
                                        public checkExtraRules(arg0: java.lang.Object, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): void
                                        public static class: java.lang.Class<any>
                                    }
                                    class IDREFDV extends com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator {
                                        public constructor()
                                        public getAllowedFacets(): short
                                        public getActualValue(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): java.lang.Object
                                        public checkExtraRules(arg0: java.lang.Object, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): void
                                        public static class: java.lang.Class<any>
                                    }
                                    class IntegerDV extends com.sun.org.apache.xerces.internal.impl.dv.xs.DecimalDV {
                                        public constructor()
                                        public getActualValue(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): java.lang.Object
                                        public static class: java.lang.Class<any>
                                    }
                                    class ListDV extends com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator {
                                        public constructor()
                                        public getAllowedFacets(): short
                                        public getActualValue(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): java.lang.Object
                                        public getDataLength(arg0: java.lang.Object): int
                                        public static class: java.lang.Class<any>
                                    }
                                    class MonthDV extends com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV {
                                        public constructor()
                                        public getActualValue(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): java.lang.Object
                                        protected parse(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData
                                        protected dateToString(arg0: com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData): string
                                        protected getXMLGregorianCalendar(arg0: com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData): javax.xml.datatype.XMLGregorianCalendar
                                        public static class: java.lang.Class<any>
                                    }
                                    class MonthDayDV extends com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV {
                                        public constructor()
                                        public getActualValue(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): java.lang.Object
                                        protected parse(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData
                                        protected dateToString(arg0: com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData): string
                                        protected getXMLGregorianCalendar(arg0: com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData): javax.xml.datatype.XMLGregorianCalendar
                                        public static class: java.lang.Class<any>
                                    }
                                    class PrecisionDecimalDV extends com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator {
                                        public getAllowedFacets(): short
                                        public getActualValue(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): java.lang.Object
                                        public compare(arg0: java.lang.Object, arg1: java.lang.Object): int
                                        public getFractionDigits(arg0: java.lang.Object): int
                                        public getTotalDigits(arg0: java.lang.Object): int
                                        public isIdentical(arg0: java.lang.Object, arg1: java.lang.Object): boolean
                                        public static class: java.lang.Class<any>
                                    }
                                    class QNameDV extends com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator {
                                        public constructor()
                                        public getAllowedFacets(): short
                                        public getActualValue(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): java.lang.Object
                                        public getDataLength(arg0: java.lang.Object): int
                                        public static class: java.lang.Class<any>
                                    }
                                    class SchemaDVFactoryImpl extends com.sun.org.apache.xerces.internal.impl.dv.xs.BaseSchemaDVFactory {
                                        public constructor()
                                        public getBuiltInType(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType
                                        public getBuiltInTypes(): com.sun.org.apache.xerces.internal.util.SymbolHash
                                        public static class: java.lang.Class<any>
                                    }
                                    class SchemaDateTimeException extends java.lang.RuntimeException {
                                        public constructor()
                                        public constructor(arg0: java.lang.String | string)
                                        public static class: java.lang.Class<any>
                                    }
                                    class StringDV extends com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator {
                                        public constructor()
                                        public getAllowedFacets(): short
                                        public getActualValue(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): java.lang.Object
                                        public static class: java.lang.Class<any>
                                    }
                                    class TimeDV extends com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV {
                                        public constructor()
                                        public getActualValue(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): java.lang.Object
                                        protected parse(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData
                                        protected dateToString(arg0: com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData): string
                                        protected getXMLGregorianCalendar(arg0: com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData): javax.xml.datatype.XMLGregorianCalendar
                                        public static class: java.lang.Class<any>
                                    }
                                    abstract class TypeValidator {
                                        public static LESS_THAN: short
                                        public static EQUAL: short
                                        public static GREATER_THAN: short
                                        public static INDETERMINATE: short
                                        public constructor()
                                        public getAllowedFacets(): short
                                        public getActualValue(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): java.lang.Object
                                        public checkExtraRules(arg0: java.lang.Object, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): void
                                        public isIdentical(arg0: java.lang.Object, arg1: java.lang.Object): boolean
                                        public compare(arg0: java.lang.Object, arg1: java.lang.Object): int
                                        public getDataLength(arg0: java.lang.Object): int
                                        public getTotalDigits(arg0: java.lang.Object): int
                                        public getFractionDigits(arg0: java.lang.Object): int
                                        public static isDigit(arg0: char): boolean
                                        public static getDigit(arg0: char): int
                                        public static class: java.lang.Class<any>
                                    }
                                    class UnionDV extends com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator {
                                        public constructor()
                                        public getAllowedFacets(): short
                                        public getActualValue(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): java.lang.Object
                                        public static class: java.lang.Class<any>
                                    }
                                    class XSSimpleTypeDecl implements com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType , org.w3c.dom.TypeInfo {
                                        protected static DV_STRING: short
                                        protected static DV_BOOLEAN: short
                                        protected static DV_DECIMAL: short
                                        protected static DV_FLOAT: short
                                        protected static DV_DOUBLE: short
                                        protected static DV_DURATION: short
                                        protected static DV_DATETIME: short
                                        protected static DV_TIME: short
                                        protected static DV_DATE: short
                                        protected static DV_GYEARMONTH: short
                                        protected static DV_GYEAR: short
                                        protected static DV_GMONTHDAY: short
                                        protected static DV_GDAY: short
                                        protected static DV_GMONTH: short
                                        protected static DV_HEXBINARY: short
                                        protected static DV_BASE64BINARY: short
                                        protected static DV_ANYURI: short
                                        protected static DV_QNAME: short
                                        protected static DV_PRECISIONDECIMAL: short
                                        protected static DV_NOTATION: short
                                        protected static DV_ANYSIMPLETYPE: short
                                        protected static DV_ID: short
                                        protected static DV_IDREF: short
                                        protected static DV_ENTITY: short
                                        protected static DV_INTEGER: short
                                        protected static DV_LIST: short
                                        protected static DV_UNION: short
                                        protected static DV_YEARMONTHDURATION: short
                                        protected static DV_DAYTIMEDURATION: short
                                        protected static DV_ANYATOMICTYPE: short
                                        public static YEARMONTHDURATION_DT: short
                                        public static DAYTIMEDURATION_DT: short
                                        public static PRECISIONDECIMAL_DT: short
                                        public static ANYATOMICTYPE_DT: short
                                        public lengthAnnotation: com.sun.org.apache.xerces.internal.xs.XSAnnotation
                                        public minLengthAnnotation: com.sun.org.apache.xerces.internal.xs.XSAnnotation
                                        public maxLengthAnnotation: com.sun.org.apache.xerces.internal.xs.XSAnnotation
                                        public whiteSpaceAnnotation: com.sun.org.apache.xerces.internal.xs.XSAnnotation
                                        public totalDigitsAnnotation: com.sun.org.apache.xerces.internal.xs.XSAnnotation
                                        public fractionDigitsAnnotation: com.sun.org.apache.xerces.internal.xs.XSAnnotation
                                        public patternAnnotations: com.sun.org.apache.xerces.internal.impl.xs.util.XSObjectListImpl
                                        public enumerationAnnotations: com.sun.org.apache.xerces.internal.xs.XSObjectList
                                        public maxInclusiveAnnotation: com.sun.org.apache.xerces.internal.xs.XSAnnotation
                                        public maxExclusiveAnnotation: com.sun.org.apache.xerces.internal.xs.XSAnnotation
                                        public minInclusiveAnnotation: com.sun.org.apache.xerces.internal.xs.XSAnnotation
                                        public minExclusiveAnnotation: com.sun.org.apache.xerces.internal.xs.XSAnnotation
                                        protected static getGDVs(): com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator[]
                                        protected setDVs(arg0: com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator[]): void
                                        public constructor()
                                        protected constructor(arg0: com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl, arg1: java.lang.String | string, arg2: short, arg3: short, arg4: boolean, arg5: boolean, arg6: boolean, arg7: boolean, arg8: short)
                                        protected constructor(arg0: com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: short, arg4: boolean, arg5: com.sun.org.apache.xerces.internal.xs.XSObjectList, arg6: short)
                                        protected constructor(arg0: com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: short, arg4: boolean, arg5: com.sun.org.apache.xerces.internal.xs.XSObjectList)
                                        protected constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: short, arg3: com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl, arg4: boolean, arg5: com.sun.org.apache.xerces.internal.xs.XSObjectList)
                                        protected constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: short, arg3: com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl[], arg4: com.sun.org.apache.xerces.internal.xs.XSObjectList)
                                        protected setRestrictionValues(arg0: com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: short, arg4: com.sun.org.apache.xerces.internal.xs.XSObjectList): com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl
                                        protected setListValues(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: short, arg3: com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl, arg4: com.sun.org.apache.xerces.internal.xs.XSObjectList): com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl
                                        protected setUnionValues(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: short, arg3: com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl[], arg4: com.sun.org.apache.xerces.internal.xs.XSObjectList): com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl
                                        public getType(): short
                                        public getTypeCategory(): short
                                        public getName(): string
                                        public getTypeName(): string
                                        public getNamespace(): string
                                        public getFinal(): short
                                        public isFinal(arg0: short): boolean
                                        public getBaseType(): com.sun.org.apache.xerces.internal.xs.XSTypeDefinition
                                        public getAnonymous(): boolean
                                        public getVariety(): short
                                        public isIDType(): boolean
                                        public getWhitespace(): short
                                        public getPrimitiveKind(): short
                                        public getBuiltInKind(): short
                                        public getPrimitiveType(): com.sun.org.apache.xerces.internal.xs.XSSimpleTypeDefinition
                                        public getItemType(): com.sun.org.apache.xerces.internal.xs.XSSimpleTypeDefinition
                                        public getMemberTypes(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                                        public applyFacets(arg0: com.sun.org.apache.xerces.internal.impl.dv.XSFacets, arg1: short, arg2: short, arg3: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): void
                                        public validate(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext, arg2: com.sun.org.apache.xerces.internal.impl.dv.ValidatedInfo): java.lang.Object
                                        protected getActualEnumValue(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext, arg2: com.sun.org.apache.xerces.internal.impl.dv.ValidatedInfo): com.sun.org.apache.xerces.internal.impl.dv.ValidatedInfo
                                        public validateWithInfo(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext, arg2: com.sun.org.apache.xerces.internal.impl.dv.ValidatedInfo): com.sun.org.apache.xerces.internal.impl.dv.ValidatedInfo
                                        public validate(arg0: java.lang.Object, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext, arg2: com.sun.org.apache.xerces.internal.impl.dv.ValidatedInfo): java.lang.Object
                                        public validate(arg0: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidatedInfo): void
                                        public isEqual(arg0: java.lang.Object, arg1: java.lang.Object): boolean
                                        public isIdentical(arg0: java.lang.Object, arg1: java.lang.Object): boolean
                                        public static normalize(arg0: java.lang.String | string, arg1: short): string
                                        protected normalize(arg0: java.lang.Object, arg1: short): string
                                        public getOrdered(): short
                                        public getBounded(): boolean
                                        public getFinite(): boolean
                                        public getNumeric(): boolean
                                        public isDefinedFacet(arg0: short): boolean
                                        public getDefinedFacets(): short
                                        public isFixedFacet(arg0: short): boolean
                                        public getFixedFacets(): short
                                        public getLexicalFacetValue(arg0: short): string
                                        public getLexicalEnumeration(): com.sun.org.apache.xerces.internal.xs.StringList
                                        public getActualEnumeration(): com.sun.org.apache.xerces.internal.xs.datatypes.ObjectList
                                        public getEnumerationItemTypeList(): com.sun.org.apache.xerces.internal.xs.datatypes.ObjectList
                                        public getEnumerationTypeList(): com.sun.org.apache.xerces.internal.xs.ShortList
                                        public getLexicalPattern(): com.sun.org.apache.xerces.internal.xs.StringList
                                        public getAnnotations(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                                        public derivedFromType(arg0: com.sun.org.apache.xerces.internal.xs.XSTypeDefinition, arg1: short): boolean
                                        public derivedFrom(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: short): boolean
                                        public isDOMDerivedFrom(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: int): boolean
                                        public reset(): void
                                        public getNamespaceItem(): com.sun.org.apache.xerces.internal.xs.XSNamespaceItem
                                        public setNamespaceItem(arg0: com.sun.org.apache.xerces.internal.xs.XSNamespaceItem): void
                                        public toString(): string
                                        public getFacets(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                                        public getMultiValueFacets(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                                        public getMinInclusiveValue(): java.lang.Object
                                        public getMinExclusiveValue(): java.lang.Object
                                        public getMaxInclusiveValue(): java.lang.Object
                                        public getMaxExclusiveValue(): java.lang.Object
                                        public setAnonymous(arg0: boolean): void
                                        public getTypeNamespace(): string
                                        public isDerivedFrom(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: int): boolean
                                        public static class: java.lang.Class<any>
                                    }
                                    class XSSimpleTypeDelegate implements com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType {
                                        protected type: com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType
                                        public constructor(arg0: com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType)
                                        public getWrappedXSSimpleType(): com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType
                                        public getAnnotations(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                                        public getBounded(): boolean
                                        public getBuiltInKind(): short
                                        public getDefinedFacets(): short
                                        public getFacets(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                                        public getFinite(): boolean
                                        public getFixedFacets(): short
                                        public getItemType(): com.sun.org.apache.xerces.internal.xs.XSSimpleTypeDefinition
                                        public getLexicalEnumeration(): com.sun.org.apache.xerces.internal.xs.StringList
                                        public getLexicalFacetValue(arg0: short): string
                                        public getLexicalPattern(): com.sun.org.apache.xerces.internal.xs.StringList
                                        public getMemberTypes(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                                        public getMultiValueFacets(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                                        public getNumeric(): boolean
                                        public getOrdered(): short
                                        public getPrimitiveType(): com.sun.org.apache.xerces.internal.xs.XSSimpleTypeDefinition
                                        public getVariety(): short
                                        public isDefinedFacet(arg0: short): boolean
                                        public isFixedFacet(arg0: short): boolean
                                        public derivedFrom(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: short): boolean
                                        public derivedFromType(arg0: com.sun.org.apache.xerces.internal.xs.XSTypeDefinition, arg1: short): boolean
                                        public getAnonymous(): boolean
                                        public getBaseType(): com.sun.org.apache.xerces.internal.xs.XSTypeDefinition
                                        public getFinal(): short
                                        public getTypeCategory(): short
                                        public isFinal(arg0: short): boolean
                                        public getName(): string
                                        public getNamespace(): string
                                        public getNamespaceItem(): com.sun.org.apache.xerces.internal.xs.XSNamespaceItem
                                        public getType(): short
                                        public applyFacets(arg0: com.sun.org.apache.xerces.internal.impl.dv.XSFacets, arg1: short, arg2: short, arg3: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): void
                                        public getPrimitiveKind(): short
                                        public getWhitespace(): short
                                        public isEqual(arg0: java.lang.Object, arg1: java.lang.Object): boolean
                                        public isIDType(): boolean
                                        public validate(arg0: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidatedInfo): void
                                        public validate(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext, arg2: com.sun.org.apache.xerces.internal.impl.dv.ValidatedInfo): java.lang.Object
                                        public validate(arg0: java.lang.Object, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext, arg2: com.sun.org.apache.xerces.internal.impl.dv.ValidatedInfo): java.lang.Object
                                        public toString(): string
                                        public static class: java.lang.Class<any>
                                    }
                                    class YearDV extends com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV {
                                        public constructor()
                                        public getActualValue(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): java.lang.Object
                                        protected parse(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData
                                        protected dateToString(arg0: com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData): string
                                        protected getXMLGregorianCalendar(arg0: com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData): javax.xml.datatype.XMLGregorianCalendar
                                        public static class: java.lang.Class<any>
                                    }
                                    class YearMonthDV extends com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV {
                                        public constructor()
                                        public getActualValue(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): java.lang.Object
                                        protected parse(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData
                                        protected dateToString(arg0: com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData): string
                                        protected getXMLGregorianCalendar(arg0: com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData): javax.xml.datatype.XMLGregorianCalendar
                                        public static class: java.lang.Class<any>
                                    }
                                    class YearMonthDurationDV extends com.sun.org.apache.xerces.internal.impl.dv.xs.DurationDV {
                                        public getActualValue(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): java.lang.Object
                                        protected getDuration(arg0: com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData): javax.xml.datatype.Duration
                                        public static class: java.lang.Class<any>
                                    }
                                }
                                abstract class DTDDVFactory {
                                    public static getInstance(): com.sun.org.apache.xerces.internal.impl.dv.DTDDVFactory
                                    public static getInstance(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.impl.dv.DTDDVFactory
                                    protected constructor()
                                    public getBuiltInDV(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator
                                    public getBuiltInTypes(): java.util.Map<java.lang.String, com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator>
                                    public static class: java.lang.Class<any>
                                }
                                class DVFactoryException extends java.lang.RuntimeException {
                                    public constructor()
                                    public constructor(arg0: java.lang.String | string)
                                    public static class: java.lang.Class<any>
                                }
                                class DatatypeException extends java.lang.Exception {
                                    protected key: string
                                    protected args: java.lang.Object[]
                                    public constructor(arg0: java.lang.String | string, arg1: java.lang.Object[])
                                    public getKey(): string
                                    public getArgs(): java.lang.Object[]
                                    public getMessage(): string
                                    public static class: java.lang.Class<any>
                                }
                                interface DatatypeValidator {
                                    validate(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): void
                                }
                                interface DatatypeValidator$$Lambda {
                                    (arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): void
                                }
                                class InvalidDatatypeFacetException extends com.sun.org.apache.xerces.internal.impl.dv.DatatypeException {
                                    public constructor(arg0: java.lang.String | string, arg1: java.lang.Object[])
                                    public static class: java.lang.Class<any>
                                }
                                class InvalidDatatypeValueException extends com.sun.org.apache.xerces.internal.impl.dv.DatatypeException {
                                    public constructor(arg0: java.lang.String | string, arg1: java.lang.Object[])
                                    public static class: java.lang.Class<any>
                                }
                                abstract class SchemaDVFactory {
                                    public static getInstance(): com.sun.org.apache.xerces.internal.impl.dv.SchemaDVFactory
                                    public static getInstance(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.impl.dv.SchemaDVFactory
                                    protected constructor()
                                    public getBuiltInType(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType
                                    public getBuiltInTypes(): com.sun.org.apache.xerces.internal.util.SymbolHash
                                    public createTypeRestriction(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: short, arg3: com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType, arg4: com.sun.org.apache.xerces.internal.xs.XSObjectList): com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType
                                    public createTypeList(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: short, arg3: com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType, arg4: com.sun.org.apache.xerces.internal.xs.XSObjectList): com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType
                                    public createTypeUnion(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: short, arg3: com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType[], arg4: com.sun.org.apache.xerces.internal.xs.XSObjectList): com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType
                                    public static class: java.lang.Class<any>
                                }
                                class ValidatedInfo {
                                    public normalizedValue: string
                                    public actualValue: java.lang.Object
                                    public actualValueType: short
                                    public memberType: com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType
                                    public memberTypes: com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType[]
                                    public itemValueTypes: com.sun.org.apache.xerces.internal.xs.ShortList
                                    public constructor()
                                    public reset(): void
                                    public stringValue(): string
                                    public static class: java.lang.Class<any>
                                }
                                interface ValidationContext {
                                    needFacetChecking(): boolean
                                    needExtraChecking(): boolean
                                    needToNormalize(): boolean
                                    useNamespaces(): boolean
                                    isEntityDeclared(arg0: java.lang.String | string): boolean
                                    isEntityUnparsed(arg0: java.lang.String | string): boolean
                                    isIdDeclared(arg0: java.lang.String | string): boolean
                                    addId(arg0: java.lang.String | string): void
                                    addIdRef(arg0: java.lang.String | string): void
                                    getSymbol(arg0: java.lang.String | string): string
                                    getURI(arg0: java.lang.String | string): string
                                    getLocale(): java.util.Locale
                                }
                                class XSFacets {
                                    public length: int
                                    public minLength: int
                                    public maxLength: int
                                    public whiteSpace: short
                                    public totalDigits: int
                                    public fractionDigits: int
                                    public pattern: string
                                    public enumeration: java.util.Vector
                                    public enumNSDecls: java.util.Vector
                                    public maxInclusive: string
                                    public maxExclusive: string
                                    public minInclusive: string
                                    public minExclusive: string
                                    public lengthAnnotation: com.sun.org.apache.xerces.internal.xs.XSAnnotation
                                    public minLengthAnnotation: com.sun.org.apache.xerces.internal.xs.XSAnnotation
                                    public maxLengthAnnotation: com.sun.org.apache.xerces.internal.xs.XSAnnotation
                                    public whiteSpaceAnnotation: com.sun.org.apache.xerces.internal.xs.XSAnnotation
                                    public totalDigitsAnnotation: com.sun.org.apache.xerces.internal.xs.XSAnnotation
                                    public fractionDigitsAnnotation: com.sun.org.apache.xerces.internal.xs.XSAnnotation
                                    public patternAnnotations: com.sun.org.apache.xerces.internal.impl.xs.util.XSObjectListImpl
                                    public enumAnnotations: com.sun.org.apache.xerces.internal.xs.XSObjectList
                                    public maxInclusiveAnnotation: com.sun.org.apache.xerces.internal.xs.XSAnnotation
                                    public maxExclusiveAnnotation: com.sun.org.apache.xerces.internal.xs.XSAnnotation
                                    public minInclusiveAnnotation: com.sun.org.apache.xerces.internal.xs.XSAnnotation
                                    public minExclusiveAnnotation: com.sun.org.apache.xerces.internal.xs.XSAnnotation
                                    public constructor()
                                    public reset(): void
                                    public static class: java.lang.Class<any>
                                }
                                interface XSSimpleType extends com.sun.org.apache.xerces.internal.xs.XSSimpleTypeDefinition {
                                    WS_PRESERVE: short
                                    WS_REPLACE: short
                                    WS_COLLAPSE: short
                                    PRIMITIVE_STRING: short
                                    PRIMITIVE_BOOLEAN: short
                                    PRIMITIVE_DECIMAL: short
                                    PRIMITIVE_FLOAT: short
                                    PRIMITIVE_DOUBLE: short
                                    PRIMITIVE_DURATION: short
                                    PRIMITIVE_DATETIME: short
                                    PRIMITIVE_TIME: short
                                    PRIMITIVE_DATE: short
                                    PRIMITIVE_GYEARMONTH: short
                                    PRIMITIVE_GYEAR: short
                                    PRIMITIVE_GMONTHDAY: short
                                    PRIMITIVE_GDAY: short
                                    PRIMITIVE_GMONTH: short
                                    PRIMITIVE_HEXBINARY: short
                                    PRIMITIVE_BASE64BINARY: short
                                    PRIMITIVE_ANYURI: short
                                    PRIMITIVE_QNAME: short
                                    PRIMITIVE_PRECISIONDECIMAL: short
                                    PRIMITIVE_NOTATION: short
                                    getPrimitiveKind(): short
                                    validate(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext, arg2: com.sun.org.apache.xerces.internal.impl.dv.ValidatedInfo): java.lang.Object
                                    validate(arg0: java.lang.Object, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext, arg2: com.sun.org.apache.xerces.internal.impl.dv.ValidatedInfo): java.lang.Object
                                    validate(arg0: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext, arg1: com.sun.org.apache.xerces.internal.impl.dv.ValidatedInfo): void
                                    applyFacets(arg0: com.sun.org.apache.xerces.internal.impl.dv.XSFacets, arg1: short, arg2: short, arg3: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext): void
                                    isEqual(arg0: java.lang.Object, arg1: java.lang.Object): boolean
                                    isIDType(): boolean
                                    getWhitespace(): short
                                }
                            }
                            namespace io {
                                class ASCIIReader extends java.io.Reader {
                                    public static DEFAULT_BUFFER_SIZE: int
                                    protected fInputStream: java.io.InputStream
                                    protected fBuffer: byte[]
                                    public constructor(arg0: java.io.InputStream, arg1: com.sun.org.apache.xerces.internal.util.MessageFormatter | com.sun.org.apache.xerces.internal.util.MessageFormatter$$Lambda, arg2: java.util.Locale)
                                    public constructor(arg0: java.io.InputStream, arg1: int, arg2: com.sun.org.apache.xerces.internal.util.MessageFormatter | com.sun.org.apache.xerces.internal.util.MessageFormatter$$Lambda, arg3: java.util.Locale)
                                    public read(): int
                                    public read(arg0: char[], arg1: int, arg2: int): int
                                    public skip(arg0: long): long
                                    public ready(): boolean
                                    public markSupported(): boolean
                                    public mark(arg0: int): void
                                    public reset(): void
                                    public close(): void
                                    public static class: java.lang.Class<any>
                                }
                                class MalformedByteSequenceException extends java.io.CharConversionException {
                                    public constructor(arg0: com.sun.org.apache.xerces.internal.util.MessageFormatter | com.sun.org.apache.xerces.internal.util.MessageFormatter$$Lambda, arg1: java.util.Locale, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.Object[])
                                    public getDomain(): string
                                    public getKey(): string
                                    public getArguments(): java.lang.Object[]
                                    public getMessage(): string
                                    public static class: java.lang.Class<any>
                                }
                                class UCSReader extends java.io.Reader {
                                    public static DEFAULT_BUFFER_SIZE: int
                                    public static UCS2LE: short
                                    public static UCS2BE: short
                                    public static UCS4LE: short
                                    public static UCS4BE: short
                                    protected fInputStream: java.io.InputStream
                                    protected fBuffer: byte[]
                                    protected fEncoding: short
                                    public constructor(arg0: java.io.InputStream, arg1: short)
                                    public constructor(arg0: java.io.InputStream, arg1: int, arg2: short)
                                    public read(): int
                                    public read(arg0: char[], arg1: int, arg2: int): int
                                    public skip(arg0: long): long
                                    public ready(): boolean
                                    public markSupported(): boolean
                                    public mark(arg0: int): void
                                    public reset(): void
                                    public close(): void
                                    public static class: java.lang.Class<any>
                                }
                                class UTF8Reader extends java.io.Reader {
                                    public static DEFAULT_BUFFER_SIZE: int
                                    protected fInputStream: java.io.InputStream
                                    protected fBuffer: byte[]
                                    protected fOffset: int
                                    public constructor(arg0: java.io.InputStream)
                                    public constructor(arg0: java.io.InputStream, arg1: com.sun.org.apache.xerces.internal.util.MessageFormatter | com.sun.org.apache.xerces.internal.util.MessageFormatter$$Lambda, arg2: java.util.Locale)
                                    public constructor(arg0: java.io.InputStream, arg1: int, arg2: com.sun.org.apache.xerces.internal.util.MessageFormatter | com.sun.org.apache.xerces.internal.util.MessageFormatter$$Lambda, arg3: java.util.Locale)
                                    public read(): int
                                    public read(arg0: char[], arg1: int, arg2: int): int
                                    public skip(arg0: long): long
                                    public ready(): boolean
                                    public markSupported(): boolean
                                    public mark(arg0: int): void
                                    public reset(): void
                                    public close(): void
                                    public static class: java.lang.Class<any>
                                }
                            }
                            namespace msg {
                                class XMLMessageFormatter implements com.sun.org.apache.xerces.internal.util.MessageFormatter {
                                    public static XML_DOMAIN: string
                                    public static XMLNS_DOMAIN: string
                                    public constructor()
                                    public formatMessage(arg0: java.util.Locale, arg1: java.lang.String | string, arg2: java.lang.Object[]): string
                                    public static class: java.lang.Class<any>
                                }
                                class XMLMessageFormatter$$Lambda implements com.sun.org.apache.xerces.internal.util.MessageFormatter {
                                    public static XML_DOMAIN: string
                                }
                                class XMLMessageFormatter_de implements com.sun.org.apache.xerces.internal.util.MessageFormatter {
                                    public static XML_DOMAIN: string
                                    public static XMLNS_DOMAIN: string
                                    public constructor()
                                    public formatMessage(arg0: java.util.Locale, arg1: java.lang.String | string, arg2: java.lang.Object[]): string
                                    public static class: java.lang.Class<any>
                                }
                                class XMLMessageFormatter_de$$Lambda implements com.sun.org.apache.xerces.internal.util.MessageFormatter {
                                    public static XML_DOMAIN: string
                                }
                                class XMLMessageFormatter_es implements com.sun.org.apache.xerces.internal.util.MessageFormatter {
                                    public static XML_DOMAIN: string
                                    public static XMLNS_DOMAIN: string
                                    public constructor()
                                    public formatMessage(arg0: java.util.Locale, arg1: java.lang.String | string, arg2: java.lang.Object[]): string
                                    public static class: java.lang.Class<any>
                                }
                                class XMLMessageFormatter_es$$Lambda implements com.sun.org.apache.xerces.internal.util.MessageFormatter {
                                    public static XML_DOMAIN: string
                                }
                                class XMLMessageFormatter_fr implements com.sun.org.apache.xerces.internal.util.MessageFormatter {
                                    public static XML_DOMAIN: string
                                    public static XMLNS_DOMAIN: string
                                    public constructor()
                                    public formatMessage(arg0: java.util.Locale, arg1: java.lang.String | string, arg2: java.lang.Object[]): string
                                    public static class: java.lang.Class<any>
                                }
                                class XMLMessageFormatter_fr$$Lambda implements com.sun.org.apache.xerces.internal.util.MessageFormatter {
                                    public static XML_DOMAIN: string
                                }
                                class XMLMessageFormatter_it implements com.sun.org.apache.xerces.internal.util.MessageFormatter {
                                    public static XML_DOMAIN: string
                                    public static XMLNS_DOMAIN: string
                                    public constructor()
                                    public formatMessage(arg0: java.util.Locale, arg1: java.lang.String | string, arg2: java.lang.Object[]): string
                                    public static class: java.lang.Class<any>
                                }
                                class XMLMessageFormatter_it$$Lambda implements com.sun.org.apache.xerces.internal.util.MessageFormatter {
                                    public static XML_DOMAIN: string
                                }
                                class XMLMessageFormatter_ja implements com.sun.org.apache.xerces.internal.util.MessageFormatter {
                                    public static XML_DOMAIN: string
                                    public static XMLNS_DOMAIN: string
                                    public constructor()
                                    public formatMessage(arg0: java.util.Locale, arg1: java.lang.String | string, arg2: java.lang.Object[]): string
                                    public static class: java.lang.Class<any>
                                }
                                class XMLMessageFormatter_ja$$Lambda implements com.sun.org.apache.xerces.internal.util.MessageFormatter {
                                    public static XML_DOMAIN: string
                                }
                                class XMLMessageFormatter_ko implements com.sun.org.apache.xerces.internal.util.MessageFormatter {
                                    public static XML_DOMAIN: string
                                    public static XMLNS_DOMAIN: string
                                    public constructor()
                                    public formatMessage(arg0: java.util.Locale, arg1: java.lang.String | string, arg2: java.lang.Object[]): string
                                    public static class: java.lang.Class<any>
                                }
                                class XMLMessageFormatter_ko$$Lambda implements com.sun.org.apache.xerces.internal.util.MessageFormatter {
                                    public static XML_DOMAIN: string
                                }
                                class XMLMessageFormatter_pt_BR implements com.sun.org.apache.xerces.internal.util.MessageFormatter {
                                    public static XML_DOMAIN: string
                                    public static XMLNS_DOMAIN: string
                                    public constructor()
                                    public formatMessage(arg0: java.util.Locale, arg1: java.lang.String | string, arg2: java.lang.Object[]): string
                                    public static class: java.lang.Class<any>
                                }
                                class XMLMessageFormatter_pt_BR$$Lambda implements com.sun.org.apache.xerces.internal.util.MessageFormatter {
                                    public static XML_DOMAIN: string
                                }
                                class XMLMessageFormatter_sv implements com.sun.org.apache.xerces.internal.util.MessageFormatter {
                                    public static XML_DOMAIN: string
                                    public static XMLNS_DOMAIN: string
                                    public constructor()
                                    public formatMessage(arg0: java.util.Locale, arg1: java.lang.String | string, arg2: java.lang.Object[]): string
                                    public static class: java.lang.Class<any>
                                }
                                class XMLMessageFormatter_sv$$Lambda implements com.sun.org.apache.xerces.internal.util.MessageFormatter {
                                    public static XML_DOMAIN: string
                                }
                                class XMLMessageFormatter_zh_CN implements com.sun.org.apache.xerces.internal.util.MessageFormatter {
                                    public static XML_DOMAIN: string
                                    public static XMLNS_DOMAIN: string
                                    public constructor()
                                    public formatMessage(arg0: java.util.Locale, arg1: java.lang.String | string, arg2: java.lang.Object[]): string
                                    public static class: java.lang.Class<any>
                                }
                                class XMLMessageFormatter_zh_CN$$Lambda implements com.sun.org.apache.xerces.internal.util.MessageFormatter {
                                    public static XML_DOMAIN: string
                                }
                                class XMLMessageFormatter_zh_TW implements com.sun.org.apache.xerces.internal.util.MessageFormatter {
                                    public static XML_DOMAIN: string
                                    public static XMLNS_DOMAIN: string
                                    public constructor()
                                    public formatMessage(arg0: java.util.Locale, arg1: java.lang.String | string, arg2: java.lang.Object[]): string
                                    public static class: java.lang.Class<any>
                                }
                                class XMLMessageFormatter_zh_TW$$Lambda implements com.sun.org.apache.xerces.internal.util.MessageFormatter {
                                    public static XML_DOMAIN: string
                                }
                            }
                            namespace validation {
                                interface EntityState {
                                    isEntityDeclared(arg0: java.lang.String | string): boolean
                                    isEntityUnparsed(arg0: java.lang.String | string): boolean
                                }
                                class ValidationManager {
                                    protected fVSs: java.util.Vector
                                    protected fGrammarFound: boolean
                                    protected fCachedDTD: boolean
                                    public constructor()
                                    public addValidationState(arg0: com.sun.org.apache.xerces.internal.impl.validation.ValidationState): void
                                    public setEntityState(arg0: com.sun.org.apache.xerces.internal.impl.validation.EntityState): void
                                    public setGrammarFound(arg0: boolean): void
                                    public isGrammarFound(): boolean
                                    public setCachedDTD(arg0: boolean): void
                                    public isCachedDTD(): boolean
                                    public reset(): void
                                    public static class: java.lang.Class<any>
                                }
                                class ValidationState implements com.sun.org.apache.xerces.internal.impl.dv.ValidationContext {
                                    public constructor()
                                    public setExtraChecking(arg0: boolean): void
                                    public setFacetChecking(arg0: boolean): void
                                    public setNormalizationRequired(arg0: boolean): void
                                    public setUsingNamespaces(arg0: boolean): void
                                    public setEntityState(arg0: com.sun.org.apache.xerces.internal.impl.validation.EntityState): void
                                    public setNamespaceSupport(arg0: com.sun.org.apache.xerces.internal.xni.NamespaceContext): void
                                    public setSymbolTable(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable): void
                                    public checkIDRefID(): string
                                    public reset(): void
                                    public resetIDTables(): void
                                    public needExtraChecking(): boolean
                                    public needFacetChecking(): boolean
                                    public needToNormalize(): boolean
                                    public useNamespaces(): boolean
                                    public isEntityDeclared(arg0: java.lang.String | string): boolean
                                    public isEntityUnparsed(arg0: java.lang.String | string): boolean
                                    public isIdDeclared(arg0: java.lang.String | string): boolean
                                    public addId(arg0: java.lang.String | string): void
                                    public addIdRef(arg0: java.lang.String | string): void
                                    public getSymbol(arg0: java.lang.String | string): string
                                    public getURI(arg0: java.lang.String | string): string
                                    public setLocale(arg0: java.util.Locale): void
                                    public getLocale(): java.util.Locale
                                    public static class: java.lang.Class<any>
                                }
                            }
                            namespace xpath {
                                namespace regex {
                                    class BMPattern {
                                        public constructor(arg0: java.lang.String | string, arg1: boolean)
                                        public constructor(arg0: java.lang.String | string, arg1: int, arg2: boolean)
                                        public matches(arg0: java.text.CharacterIterator, arg1: int, arg2: int): int
                                        public matches(arg0: java.lang.String | string, arg1: int, arg2: int): int
                                        public matches(arg0: char[], arg1: int, arg2: int): int
                                        public static class: java.lang.Class<any>
                                    }
                                    class CaseInsensitiveMap {
                                        public constructor()
                                        public static get(arg0: int): int[]
                                        public static class: java.lang.Class<any>
                                    }
                                    class Match implements java.lang.Cloneable {
                                        public constructor()
                                        public clone(): java.lang.Object
                                        protected setNumberOfGroups(arg0: int): void
                                        protected setSource(arg0: java.text.CharacterIterator): void
                                        protected setSource(arg0: java.lang.String | string): void
                                        protected setSource(arg0: char[]): void
                                        protected setBeginning(arg0: int, arg1: int): void
                                        protected setEnd(arg0: int, arg1: int): void
                                        public getNumberOfGroups(): int
                                        public getBeginning(arg0: int): int
                                        public getEnd(arg0: int): int
                                        public getCapturedText(arg0: int): string
                                        public static class: java.lang.Class<any>
                                    }
                                    class Op {
                                        protected constructor(arg0: int)
                                        public static class: java.lang.Class<any>
                                    }
                                    class ParseException extends java.lang.RuntimeException {
                                        public constructor(arg0: java.lang.String | string, arg1: int)
                                        public getLocation(): int
                                        public static class: java.lang.Class<any>
                                    }
                                    class ParserForXMLSchema extends com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser {
                                        public constructor()
                                        public constructor(arg0: java.util.Locale)
                                        protected parseCharacterClass(arg0: boolean): com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken
                                        protected parseSetOperations(): com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken
                                        protected static getRange(arg0: java.lang.String | string, arg1: boolean): com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken
                                        public static class: java.lang.Class<any>
                                    }
                                    class REUtil {
                                        public static main(arg0: java.lang.String[]): void
                                        public static createRegex(arg0: java.lang.String | string, arg1: java.lang.String | string): com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression
                                        public static matches(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                                        public static matches(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): boolean
                                        public static quoteMeta(arg0: java.lang.String | string): string
                                        public static class: java.lang.Class<any>
                                    }
                                    class RangeToken extends com.sun.org.apache.xerces.internal.impl.xpath.regex.Token implements java.io.Serializable {
                                        protected addRange(arg0: int, arg1: int): void
                                        protected sortRanges(): void
                                        protected compactRanges(): void
                                        protected mergeRanges(arg0: com.sun.org.apache.xerces.internal.impl.xpath.regex.Token): void
                                        protected subtractRanges(arg0: com.sun.org.apache.xerces.internal.impl.xpath.regex.Token): void
                                        protected intersectRanges(arg0: com.sun.org.apache.xerces.internal.impl.xpath.regex.Token): void
                                        public toString(arg0: int): string
                                        public static class: java.lang.Class<any>
                                    }
                                    class RegexParser {
                                        protected static S_NORMAL: int
                                        protected static S_INBRACKETS: int
                                        protected static S_INXBRACKETS: int
                                        public constructor()
                                        public constructor(arg0: java.util.Locale)
                                        public setLocale(arg0: java.util.Locale): void
                                        protected isSet(arg0: int): boolean
                                        protected setContext(arg0: int): void
                                        protected processBacksolidus_pP(arg0: int): com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken
                                        protected parseCharacterClass(arg0: boolean): com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken
                                        protected parseSetOperations(): com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken
                                        protected static addCaseInsensitiveChar(arg0: com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken, arg1: int): void
                                        protected static addCaseInsensitiveCharRange(arg0: com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken, arg1: int, arg2: int): void
                                        public static class: java.lang.Class<any>
                                    }
                                    class RegularExpression implements java.io.Serializable {
                                        public matches(arg0: char[]): boolean
                                        public matches(arg0: char[], arg1: int, arg2: int): boolean
                                        public matches(arg0: char[], arg1: com.sun.org.apache.xerces.internal.impl.xpath.regex.Match): boolean
                                        public matches(arg0: char[], arg1: int, arg2: int, arg3: com.sun.org.apache.xerces.internal.impl.xpath.regex.Match): boolean
                                        public matches(arg0: java.lang.String | string): boolean
                                        public matches(arg0: java.lang.String | string, arg1: int, arg2: int): boolean
                                        public matches(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.xpath.regex.Match): boolean
                                        public matches(arg0: java.lang.String | string, arg1: int, arg2: int, arg3: com.sun.org.apache.xerces.internal.impl.xpath.regex.Match): boolean
                                        public matches(arg0: java.text.CharacterIterator): boolean
                                        public matches(arg0: java.text.CharacterIterator, arg1: com.sun.org.apache.xerces.internal.impl.xpath.regex.Match): boolean
                                        public constructor(arg0: java.lang.String | string)
                                        public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string)
                                        public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.util.Locale)
                                        public setPattern(arg0: java.lang.String | string): void
                                        public setPattern(arg0: java.lang.String | string, arg1: java.util.Locale): void
                                        public setPattern(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                        public setPattern(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.util.Locale): void
                                        public getPattern(): string
                                        public toString(): string
                                        public getOptions(): string
                                        public equals(arg0: java.lang.Object): boolean
                                        public hashCode(): int
                                        public getNumberOfGroups(): int
                                        public static class: java.lang.Class<any>
                                    }
                                    class Token implements java.io.Serializable {
                                        protected constructor(arg0: int)
                                        protected addRange(arg0: int, arg1: int): void
                                        protected sortRanges(): void
                                        protected compactRanges(): void
                                        protected mergeRanges(arg0: com.sun.org.apache.xerces.internal.impl.xpath.regex.Token): void
                                        protected subtractRanges(arg0: com.sun.org.apache.xerces.internal.impl.xpath.regex.Token): void
                                        protected intersectRanges(arg0: com.sun.org.apache.xerces.internal.impl.xpath.regex.Token): void
                                        public toString(): string
                                        public toString(arg0: int): string
                                        protected static getRange(arg0: java.lang.String | string, arg1: boolean): com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken
                                        protected static getRange(arg0: java.lang.String | string, arg1: boolean, arg2: boolean): com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken
                                        protected static registerNonXS(arg0: java.lang.String | string): void
                                        protected static isRegisterNonXS(arg0: java.lang.String | string): boolean
                                        public static class: java.lang.Class<any>
                                    }
                                }
                                class XPath {
                                    protected fExpression: string
                                    protected fSymbolTable: com.sun.org.apache.xerces.internal.util.SymbolTable
                                    protected fLocationPaths: com.sun.org.apache.xerces.internal.impl.xpath.XPath$LocationPath[]
                                    public constructor(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.util.SymbolTable, arg2: com.sun.org.apache.xerces.internal.xni.NamespaceContext)
                                    public getLocationPaths(): com.sun.org.apache.xerces.internal.impl.xpath.XPath$LocationPath[]
                                    public getLocationPath(): com.sun.org.apache.xerces.internal.impl.xpath.XPath$LocationPath
                                    public toString(): string
                                    public static main(arg0: java.lang.String[]): void
                                    public static class: java.lang.Class<any>
                                }
                                class XPathException extends java.lang.Exception {
                                    public constructor()
                                    public constructor(arg0: java.lang.String | string)
                                    public getKey(): string
                                    public static class: java.lang.Class<any>
                                }
                            }
                            namespace xs {
                                namespace identity {
                                    class Field {
                                        protected fXPath: com.sun.org.apache.xerces.internal.impl.xs.identity.Field$XPath
                                        protected fIdentityConstraint: com.sun.org.apache.xerces.internal.impl.xs.identity.IdentityConstraint
                                        public constructor(arg0: com.sun.org.apache.xerces.internal.impl.xs.identity.Field$XPath, arg1: com.sun.org.apache.xerces.internal.impl.xs.identity.IdentityConstraint)
                                        public getXPath(): com.sun.org.apache.xerces.internal.impl.xpath.XPath
                                        public getIdentityConstraint(): com.sun.org.apache.xerces.internal.impl.xs.identity.IdentityConstraint
                                        public createMatcher(arg0: com.sun.org.apache.xerces.internal.impl.xs.identity.FieldActivator, arg1: com.sun.org.apache.xerces.internal.impl.xs.identity.ValueStore): com.sun.org.apache.xerces.internal.impl.xs.identity.XPathMatcher
                                        public toString(): string
                                        public static class: java.lang.Class<any>
                                    }
                                    interface FieldActivator {
                                        startValueScopeFor(arg0: com.sun.org.apache.xerces.internal.impl.xs.identity.IdentityConstraint, arg1: int): void
                                        activateField(arg0: com.sun.org.apache.xerces.internal.impl.xs.identity.Field, arg1: int): com.sun.org.apache.xerces.internal.impl.xs.identity.XPathMatcher
                                        setMayMatch(arg0: com.sun.org.apache.xerces.internal.impl.xs.identity.Field, arg1: java.lang.Boolean | boolean): void
                                        mayMatch(arg0: com.sun.org.apache.xerces.internal.impl.xs.identity.Field): boolean
                                        endValueScopeFor(arg0: com.sun.org.apache.xerces.internal.impl.xs.identity.IdentityConstraint, arg1: int): void
                                    }
                                    abstract class IdentityConstraint implements com.sun.org.apache.xerces.internal.xs.XSIDCDefinition {
                                        protected type: short
                                        protected fNamespace: string
                                        protected fIdentityConstraintName: string
                                        protected fElementName: string
                                        protected fSelector: com.sun.org.apache.xerces.internal.impl.xs.identity.Selector
                                        protected fFieldCount: int
                                        protected fFields: com.sun.org.apache.xerces.internal.impl.xs.identity.Field[]
                                        protected fAnnotations: com.sun.org.apache.xerces.internal.impl.xs.XSAnnotationImpl[]
                                        protected fNumAnnotations: int
                                        protected constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string)
                                        public getIdentityConstraintName(): string
                                        public setSelector(arg0: com.sun.org.apache.xerces.internal.impl.xs.identity.Selector): void
                                        public getSelector(): com.sun.org.apache.xerces.internal.impl.xs.identity.Selector
                                        public addField(arg0: com.sun.org.apache.xerces.internal.impl.xs.identity.Field): void
                                        public getFieldCount(): int
                                        public getFieldAt(arg0: int): com.sun.org.apache.xerces.internal.impl.xs.identity.Field
                                        public getElementName(): string
                                        public toString(): string
                                        public equals(arg0: com.sun.org.apache.xerces.internal.impl.xs.identity.IdentityConstraint): boolean
                                        public getType(): short
                                        public getName(): string
                                        public getNamespace(): string
                                        public getCategory(): short
                                        public getSelectorStr(): string
                                        public getFieldStrs(): com.sun.org.apache.xerces.internal.xs.StringList
                                        public getRefKey(): com.sun.org.apache.xerces.internal.xs.XSIDCDefinition
                                        public getAnnotations(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                                        public getNamespaceItem(): com.sun.org.apache.xerces.internal.xs.XSNamespaceItem
                                        public addAnnotation(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSAnnotationImpl): void
                                        public static class: java.lang.Class<any>
                                    }
                                    class KeyRef extends com.sun.org.apache.xerces.internal.impl.xs.identity.IdentityConstraint {
                                        protected fKey: com.sun.org.apache.xerces.internal.impl.xs.identity.UniqueOrKey
                                        public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.impl.xs.identity.UniqueOrKey)
                                        public getKey(): com.sun.org.apache.xerces.internal.impl.xs.identity.UniqueOrKey
                                        public getRefKey(): com.sun.org.apache.xerces.internal.xs.XSIDCDefinition
                                        public static class: java.lang.Class<any>
                                    }
                                    class Selector {
                                        protected fXPath: com.sun.org.apache.xerces.internal.impl.xs.identity.Selector$XPath
                                        protected fIdentityConstraint: com.sun.org.apache.xerces.internal.impl.xs.identity.IdentityConstraint
                                        protected fIDConstraint: com.sun.org.apache.xerces.internal.impl.xs.identity.IdentityConstraint
                                        public constructor(arg0: com.sun.org.apache.xerces.internal.impl.xs.identity.Selector$XPath, arg1: com.sun.org.apache.xerces.internal.impl.xs.identity.IdentityConstraint)
                                        public getXPath(): com.sun.org.apache.xerces.internal.impl.xpath.XPath
                                        public getIDConstraint(): com.sun.org.apache.xerces.internal.impl.xs.identity.IdentityConstraint
                                        public createMatcher(arg0: com.sun.org.apache.xerces.internal.impl.xs.identity.FieldActivator, arg1: int): com.sun.org.apache.xerces.internal.impl.xs.identity.XPathMatcher
                                        public toString(): string
                                        public static class: java.lang.Class<any>
                                    }
                                    class UniqueOrKey extends com.sun.org.apache.xerces.internal.impl.xs.identity.IdentityConstraint {
                                        public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: short)
                                        public static class: java.lang.Class<any>
                                    }
                                    interface ValueStore {
                                        addValue(arg0: com.sun.org.apache.xerces.internal.impl.xs.identity.Field, arg1: java.lang.Object, arg2: short, arg3: com.sun.org.apache.xerces.internal.xs.ShortList): void
                                        reportError(arg0: java.lang.String | string, arg1: java.lang.Object[]): void
                                    }
                                    class XPathMatcher {
                                        protected static DEBUG_ALL: boolean
                                        protected static DEBUG_METHODS: boolean
                                        protected static DEBUG_METHODS2: boolean
                                        protected static DEBUG_METHODS3: boolean
                                        protected static DEBUG_MATCH: boolean
                                        protected static DEBUG_STACK: boolean
                                        protected static DEBUG_ANY: boolean
                                        protected static MATCHED: int
                                        protected static MATCHED_ATTRIBUTE: int
                                        protected static MATCHED_DESCENDANT: int
                                        protected static MATCHED_DESCENDANT_PREVIOUS: int
                                        protected fMatchedString: java.lang.Object
                                        public constructor(arg0: com.sun.org.apache.xerces.internal.impl.xpath.XPath)
                                        public isMatched(): boolean
                                        protected handleContent(arg0: com.sun.org.apache.xerces.internal.xs.XSTypeDefinition, arg1: boolean, arg2: java.lang.Object, arg3: short, arg4: com.sun.org.apache.xerces.internal.xs.ShortList): void
                                        protected matched(arg0: java.lang.Object, arg1: short, arg2: com.sun.org.apache.xerces.internal.xs.ShortList, arg3: boolean): void
                                        public startDocumentFragment(): void
                                        public startElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes): void
                                        public endElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xs.XSTypeDefinition, arg2: boolean, arg3: java.lang.Object, arg4: short, arg5: com.sun.org.apache.xerces.internal.xs.ShortList): void
                                        public toString(): string
                                        public static class: java.lang.Class<any>
                                    }
                                }
                                namespace models {
                                    class CMBuilder {
                                        public constructor(arg0: com.sun.org.apache.xerces.internal.impl.xs.models.CMNodeFactory)
                                        public setDeclPool(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSDeclarationPool): void
                                        public getContentModel(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl): com.sun.org.apache.xerces.internal.impl.xs.models.XSCMValidator
                                        public static class: java.lang.Class<any>
                                    }
                                    class CMNodeFactory {
                                        public constructor()
                                        public reset(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager): void
                                        public getCMLeafNode(arg0: int, arg1: java.lang.Object, arg2: int, arg3: int): com.sun.org.apache.xerces.internal.impl.dtd.models.CMNode
                                        public getCMRepeatingLeafNode(arg0: int, arg1: java.lang.Object, arg2: int, arg3: int, arg4: int, arg5: int): com.sun.org.apache.xerces.internal.impl.dtd.models.CMNode
                                        public getCMUniOpNode(arg0: int, arg1: com.sun.org.apache.xerces.internal.impl.dtd.models.CMNode): com.sun.org.apache.xerces.internal.impl.dtd.models.CMNode
                                        public getCMBinOpNode(arg0: int, arg1: com.sun.org.apache.xerces.internal.impl.dtd.models.CMNode, arg2: com.sun.org.apache.xerces.internal.impl.dtd.models.CMNode): com.sun.org.apache.xerces.internal.impl.dtd.models.CMNode
                                        public nodeCountCheck(): void
                                        public resetNodeCount(): void
                                        public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                        public static class: java.lang.Class<any>
                                    }
                                    class XSAllCM implements com.sun.org.apache.xerces.internal.impl.xs.models.XSCMValidator {
                                        public constructor(arg0: boolean, arg1: int)
                                        public addElement(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl, arg1: boolean): void
                                        public startContentModel(): int[]
                                        public oneTransition(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: int[], arg2: com.sun.org.apache.xerces.internal.impl.xs.SubstitutionGroupHandler): java.lang.Object
                                        public endContentModel(arg0: int[]): boolean
                                        public checkUniqueParticleAttribution(arg0: com.sun.org.apache.xerces.internal.impl.xs.SubstitutionGroupHandler): boolean
                                        public whatCanGoHere(arg0: int[]): java.util.Vector
                                        public checkMinMaxBounds(): java.util.ArrayList
                                        public static class: java.lang.Class<any>
                                    }
                                    class XSCMBinOp extends com.sun.org.apache.xerces.internal.impl.dtd.models.CMNode {
                                        public constructor(arg0: int, arg1: com.sun.org.apache.xerces.internal.impl.dtd.models.CMNode, arg2: com.sun.org.apache.xerces.internal.impl.dtd.models.CMNode)
                                        public isNullable(): boolean
                                        protected calcFirstPos(arg0: com.sun.org.apache.xerces.internal.impl.dtd.models.CMStateSet): void
                                        protected calcLastPos(arg0: com.sun.org.apache.xerces.internal.impl.dtd.models.CMStateSet): void
                                        public static class: java.lang.Class<any>
                                    }
                                    class XSCMLeaf extends com.sun.org.apache.xerces.internal.impl.dtd.models.CMNode {
                                        public constructor(arg0: int, arg1: java.lang.Object, arg2: int, arg3: int)
                                        public isNullable(): boolean
                                        public toString(): string
                                        protected calcFirstPos(arg0: com.sun.org.apache.xerces.internal.impl.dtd.models.CMStateSet): void
                                        protected calcLastPos(arg0: com.sun.org.apache.xerces.internal.impl.dtd.models.CMStateSet): void
                                        public static class: java.lang.Class<any>
                                    }
                                    class XSCMRepeatingLeaf extends com.sun.org.apache.xerces.internal.impl.xs.models.XSCMLeaf {
                                        public constructor(arg0: int, arg1: java.lang.Object, arg2: int, arg3: int, arg4: int, arg5: int)
                                        public static class: java.lang.Class<any>
                                    }
                                    class XSCMUniOp extends com.sun.org.apache.xerces.internal.impl.dtd.models.CMNode {
                                        public constructor(arg0: int, arg1: com.sun.org.apache.xerces.internal.impl.dtd.models.CMNode)
                                        public isNullable(): boolean
                                        protected calcFirstPos(arg0: com.sun.org.apache.xerces.internal.impl.dtd.models.CMStateSet): void
                                        protected calcLastPos(arg0: com.sun.org.apache.xerces.internal.impl.dtd.models.CMStateSet): void
                                        public setUserData(arg0: java.lang.Object): void
                                        public static class: java.lang.Class<any>
                                    }
                                    interface XSCMValidator {
                                        FIRST_ERROR: short
                                        SUBSEQUENT_ERROR: short
                                        startContentModel(): int[]
                                        oneTransition(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: int[], arg2: com.sun.org.apache.xerces.internal.impl.xs.SubstitutionGroupHandler): java.lang.Object
                                        endContentModel(arg0: int[]): boolean
                                        checkUniqueParticleAttribution(arg0: com.sun.org.apache.xerces.internal.impl.xs.SubstitutionGroupHandler): boolean
                                        whatCanGoHere(arg0: int[]): java.util.Vector
                                        checkMinMaxBounds(): java.util.ArrayList
                                    }
                                    class XSDFACM implements com.sun.org.apache.xerces.internal.impl.xs.models.XSCMValidator {
                                        public constructor(arg0: com.sun.org.apache.xerces.internal.impl.dtd.models.CMNode, arg1: int)
                                        public isFinalState(arg0: int): boolean
                                        public oneTransition(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: int[], arg2: com.sun.org.apache.xerces.internal.impl.xs.SubstitutionGroupHandler): java.lang.Object
                                        public startContentModel(): int[]
                                        public endContentModel(arg0: int[]): boolean
                                        public checkUniqueParticleAttribution(arg0: com.sun.org.apache.xerces.internal.impl.xs.SubstitutionGroupHandler): boolean
                                        public whatCanGoHere(arg0: int[]): java.util.Vector
                                        public checkMinMaxBounds(): java.util.ArrayList
                                        public static class: java.lang.Class<any>
                                    }
                                    class XSEmptyCM implements com.sun.org.apache.xerces.internal.impl.xs.models.XSCMValidator {
                                        public constructor()
                                        public startContentModel(): int[]
                                        public oneTransition(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: int[], arg2: com.sun.org.apache.xerces.internal.impl.xs.SubstitutionGroupHandler): java.lang.Object
                                        public endContentModel(arg0: int[]): boolean
                                        public checkUniqueParticleAttribution(arg0: com.sun.org.apache.xerces.internal.impl.xs.SubstitutionGroupHandler): boolean
                                        public whatCanGoHere(arg0: int[]): java.util.Vector
                                        public checkMinMaxBounds(): java.util.ArrayList
                                        public static class: java.lang.Class<any>
                                    }
                                }
                                namespace opti {
                                    class AttrImpl extends com.sun.org.apache.xerces.internal.impl.xs.opti.NodeImpl implements org.w3c.dom.Attr {
                                        public constructor()
                                        public constructor(arg0: org.w3c.dom.Element, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string, arg5: java.lang.String | string)
                                        public getName(): string
                                        public getSpecified(): boolean
                                        public getValue(): string
                                        public getNodeValue(): string
                                        public getOwnerElement(): org.w3c.dom.Element
                                        public getOwnerDocument(): org.w3c.dom.Document
                                        public setValue(arg0: java.lang.String | string): void
                                        public isId(): boolean
                                        public getSchemaTypeInfo(): org.w3c.dom.TypeInfo
                                        public toString(): string
                                        public static class: java.lang.Class<any>
                                    }
                                    class DefaultDocument extends com.sun.org.apache.xerces.internal.impl.xs.opti.NodeImpl implements org.w3c.dom.Document {
                                        public constructor()
                                        public getDoctype(): org.w3c.dom.DocumentType
                                        public getImplementation(): org.w3c.dom.DOMImplementation
                                        public getDocumentElement(): org.w3c.dom.Element
                                        public getElementsByTagName(arg0: java.lang.String | string): org.w3c.dom.NodeList
                                        public getElementsByTagNameNS(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.NodeList
                                        public getElementById(arg0: java.lang.String | string): org.w3c.dom.Element
                                        public importNode(arg0: org.w3c.dom.Node, arg1: boolean): org.w3c.dom.Node
                                        public createElement(arg0: java.lang.String | string): org.w3c.dom.Element
                                        public createDocumentFragment(): org.w3c.dom.DocumentFragment
                                        public createTextNode(arg0: java.lang.String | string): org.w3c.dom.Text
                                        public createComment(arg0: java.lang.String | string): org.w3c.dom.Comment
                                        public createCDATASection(arg0: java.lang.String | string): org.w3c.dom.CDATASection
                                        public createProcessingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.ProcessingInstruction
                                        public createAttribute(arg0: java.lang.String | string): org.w3c.dom.Attr
                                        public createEntityReference(arg0: java.lang.String | string): org.w3c.dom.EntityReference
                                        public createElementNS(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.Element
                                        public createAttributeNS(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.Attr
                                        public getInputEncoding(): string
                                        public getXmlEncoding(): string
                                        public getXmlStandalone(): boolean
                                        public setXmlStandalone(arg0: boolean): void
                                        public getXmlVersion(): string
                                        public setXmlVersion(arg0: java.lang.String | string): void
                                        public getStrictErrorChecking(): boolean
                                        public setStrictErrorChecking(arg0: boolean): void
                                        public getDocumentURI(): string
                                        public setDocumentURI(arg0: java.lang.String | string): void
                                        public adoptNode(arg0: org.w3c.dom.Node): org.w3c.dom.Node
                                        public normalizeDocument(): void
                                        public getDomConfig(): org.w3c.dom.DOMConfiguration
                                        public renameNode(arg0: org.w3c.dom.Node, arg1: java.lang.String | string, arg2: java.lang.String | string): org.w3c.dom.Node
                                        public static class: java.lang.Class<any>
                                    }
                                    class DefaultElement extends com.sun.org.apache.xerces.internal.impl.xs.opti.NodeImpl implements org.w3c.dom.Element {
                                        public constructor()
                                        public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: short)
                                        public getTagName(): string
                                        public getAttribute(arg0: java.lang.String | string): string
                                        public getAttributeNode(arg0: java.lang.String | string): org.w3c.dom.Attr
                                        public getElementsByTagName(arg0: java.lang.String | string): org.w3c.dom.NodeList
                                        public getAttributeNS(arg0: java.lang.String | string, arg1: java.lang.String | string): string
                                        public getAttributeNodeNS(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.Attr
                                        public getElementsByTagNameNS(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.NodeList
                                        public hasAttribute(arg0: java.lang.String | string): boolean
                                        public hasAttributeNS(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                                        public getSchemaTypeInfo(): org.w3c.dom.TypeInfo
                                        public setAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                        public removeAttribute(arg0: java.lang.String | string): void
                                        public removeAttributeNode(arg0: org.w3c.dom.Attr): org.w3c.dom.Attr
                                        public setAttributeNode(arg0: org.w3c.dom.Attr): org.w3c.dom.Attr
                                        public setAttributeNS(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                        public removeAttributeNS(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                        public setAttributeNodeNS(arg0: org.w3c.dom.Attr): org.w3c.dom.Attr
                                        public setIdAttributeNode(arg0: org.w3c.dom.Attr, arg1: boolean): void
                                        public setIdAttribute(arg0: java.lang.String | string, arg1: boolean): void
                                        public setIdAttributeNS(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: boolean): void
                                        public static class: java.lang.Class<any>
                                    }
                                    class DefaultNode implements org.w3c.dom.Node {
                                        public constructor()
                                        public getNodeName(): string
                                        public getNodeValue(): string
                                        public getNodeType(): short
                                        public getParentNode(): org.w3c.dom.Node
                                        public getChildNodes(): org.w3c.dom.NodeList
                                        public getFirstChild(): org.w3c.dom.Node
                                        public getLastChild(): org.w3c.dom.Node
                                        public getPreviousSibling(): org.w3c.dom.Node
                                        public getNextSibling(): org.w3c.dom.Node
                                        public getAttributes(): org.w3c.dom.NamedNodeMap
                                        public getOwnerDocument(): org.w3c.dom.Document
                                        public hasChildNodes(): boolean
                                        public cloneNode(arg0: boolean): org.w3c.dom.Node
                                        public normalize(): void
                                        public isSupported(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                                        public getNamespaceURI(): string
                                        public getPrefix(): string
                                        public getLocalName(): string
                                        public getBaseURI(): string
                                        public hasAttributes(): boolean
                                        public setNodeValue(arg0: java.lang.String | string): void
                                        public insertBefore(arg0: org.w3c.dom.Node, arg1: org.w3c.dom.Node): org.w3c.dom.Node
                                        public replaceChild(arg0: org.w3c.dom.Node, arg1: org.w3c.dom.Node): org.w3c.dom.Node
                                        public removeChild(arg0: org.w3c.dom.Node): org.w3c.dom.Node
                                        public appendChild(arg0: org.w3c.dom.Node): org.w3c.dom.Node
                                        public setPrefix(arg0: java.lang.String | string): void
                                        public compareDocumentPosition(arg0: org.w3c.dom.Node): short
                                        public getTextContent(): string
                                        public setTextContent(arg0: java.lang.String | string): void
                                        public isSameNode(arg0: org.w3c.dom.Node): boolean
                                        public lookupPrefix(arg0: java.lang.String | string): string
                                        public isDefaultNamespace(arg0: java.lang.String | string): boolean
                                        public lookupNamespaceURI(arg0: java.lang.String | string): string
                                        public isEqualNode(arg0: org.w3c.dom.Node): boolean
                                        public getFeature(arg0: java.lang.String | string, arg1: java.lang.String | string): java.lang.Object
                                        public setUserData(arg0: java.lang.String | string, arg1: java.lang.Object, arg2: org.w3c.dom.UserDataHandler): java.lang.Object
                                        public getUserData(arg0: java.lang.String | string): java.lang.Object
                                        public static class: java.lang.Class<any>
                                    }
                                    class DefaultText extends com.sun.org.apache.xerces.internal.impl.xs.opti.NodeImpl implements org.w3c.dom.Text {
                                        public constructor()
                                        public getData(): string
                                        public setData(arg0: java.lang.String | string): void
                                        public getLength(): int
                                        public substringData(arg0: int, arg1: int): string
                                        public appendData(arg0: java.lang.String | string): void
                                        public insertData(arg0: int, arg1: java.lang.String | string): void
                                        public deleteData(arg0: int, arg1: int): void
                                        public replaceData(arg0: int, arg1: int, arg2: java.lang.String | string): void
                                        public splitText(arg0: int): org.w3c.dom.Text
                                        public isElementContentWhitespace(): boolean
                                        public getWholeText(): string
                                        public replaceWholeText(arg0: java.lang.String | string): org.w3c.dom.Text
                                        public static class: java.lang.Class<any>
                                    }
                                    class DefaultXMLDocumentHandler implements com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler , com.sun.org.apache.xerces.internal.xni.XMLDTDHandler , com.sun.org.apache.xerces.internal.xni.XMLDTDContentModelHandler {
                                        public constructor()
                                        public startDocument(arg0: com.sun.org.apache.xerces.internal.xni.XMLLocator, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.NamespaceContext, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public xmlDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public doctypeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public comment(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public processingInstruction(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLString, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public startPrefixMapping(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public startElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public emptyElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public startGeneralEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public textDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public endGeneralEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public characters(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public ignorableWhitespace(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public endElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public endPrefixMapping(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public startCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public endCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public endDocument(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public startDTD(arg0: com.sun.org.apache.xerces.internal.xni.XMLLocator, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public startParameterEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public endParameterEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public startExternalSubset(arg0: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public endExternalSubset(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public elementDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public startAttlist(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public attributeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String[], arg4: java.lang.String | string, arg5: com.sun.org.apache.xerces.internal.xni.XMLString, arg6: com.sun.org.apache.xerces.internal.xni.XMLString, arg7: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public endAttlist(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public internalEntityDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLString, arg2: com.sun.org.apache.xerces.internal.xni.XMLString, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public externalEntityDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public unparsedEntityDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public notationDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public startConditional(arg0: short, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public ignoredCharacters(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public endConditional(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public endDTD(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public startContentModel(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public any(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public empty(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public startGroup(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public pcdata(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public element(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public separator(arg0: short, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public occurrence(arg0: short, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public endGroup(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public endContentModel(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public setDocumentSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource): void
                                        public getDocumentSource(): com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource
                                        public setDTDSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLDTDSource): void
                                        public getDTDSource(): com.sun.org.apache.xerces.internal.xni.parser.XMLDTDSource
                                        public setDTDContentModelSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLDTDContentModelSource): void
                                        public getDTDContentModelSource(): com.sun.org.apache.xerces.internal.xni.parser.XMLDTDContentModelSource
                                        public static class: java.lang.Class<any>
                                    }
                                    class ElementImpl extends com.sun.org.apache.xerces.internal.impl.xs.opti.DefaultElement {
                                        public constructor(arg0: int, arg1: int, arg2: int)
                                        public constructor(arg0: int, arg1: int)
                                        public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: int, arg5: int, arg6: int)
                                        public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: int, arg5: int)
                                        public getOwnerDocument(): org.w3c.dom.Document
                                        public getParentNode(): org.w3c.dom.Node
                                        public hasChildNodes(): boolean
                                        public getFirstChild(): org.w3c.dom.Node
                                        public getLastChild(): org.w3c.dom.Node
                                        public getPreviousSibling(): org.w3c.dom.Node
                                        public getNextSibling(): org.w3c.dom.Node
                                        public getAttributes(): org.w3c.dom.NamedNodeMap
                                        public hasAttributes(): boolean
                                        public getTagName(): string
                                        public getAttribute(arg0: java.lang.String | string): string
                                        public getAttributeNode(arg0: java.lang.String | string): org.w3c.dom.Attr
                                        public getAttributeNS(arg0: java.lang.String | string, arg1: java.lang.String | string): string
                                        public getAttributeNodeNS(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.Attr
                                        public hasAttribute(arg0: java.lang.String | string): boolean
                                        public hasAttributeNS(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                                        public setAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                        public getLineNumber(): int
                                        public getColumnNumber(): int
                                        public getCharacterOffset(): int
                                        public getAnnotation(): string
                                        public getSyntheticAnnotation(): string
                                        public static class: java.lang.Class<any>
                                    }
                                    class NamedNodeMapImpl implements org.w3c.dom.NamedNodeMap {
                                        public constructor(arg0: org.w3c.dom.Attr[])
                                        public getNamedItem(arg0: java.lang.String | string): org.w3c.dom.Node
                                        public item(arg0: int): org.w3c.dom.Node
                                        public getLength(): int
                                        public getNamedItemNS(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.Node
                                        public setNamedItemNS(arg0: org.w3c.dom.Node): org.w3c.dom.Node
                                        public setNamedItem(arg0: org.w3c.dom.Node): org.w3c.dom.Node
                                        public removeNamedItem(arg0: java.lang.String | string): org.w3c.dom.Node
                                        public removeNamedItemNS(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.Node
                                        public static class: java.lang.Class<any>
                                    }
                                    class NodeImpl extends com.sun.org.apache.xerces.internal.impl.xs.opti.DefaultNode {
                                        public constructor()
                                        public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: short)
                                        public getNodeName(): string
                                        public getNamespaceURI(): string
                                        public getPrefix(): string
                                        public getLocalName(): string
                                        public getNodeType(): short
                                        public setReadOnly(arg0: boolean, arg1: boolean): void
                                        public getReadOnly(): boolean
                                        public static class: java.lang.Class<any>
                                    }
                                    class SchemaDOM extends com.sun.org.apache.xerces.internal.impl.xs.opti.DefaultDocument {
                                        public constructor()
                                        public startElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: int, arg3: int, arg4: int): com.sun.org.apache.xerces.internal.impl.xs.opti.ElementImpl
                                        public emptyElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: int, arg3: int, arg4: int): com.sun.org.apache.xerces.internal.impl.xs.opti.ElementImpl
                                        public startElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: int, arg3: int): com.sun.org.apache.xerces.internal.impl.xs.opti.ElementImpl
                                        public emptyElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: int, arg3: int): com.sun.org.apache.xerces.internal.impl.xs.opti.ElementImpl
                                        public endElement(): void
                                        public reset(): void
                                        public printDOM(): void
                                        public static traverse(arg0: org.w3c.dom.Node, arg1: int): void
                                        public static indent(arg0: int): void
                                        public getDocumentElement(): org.w3c.dom.Element
                                        public getImplementation(): org.w3c.dom.DOMImplementation
                                        public static class: java.lang.Class<any>
                                    }
                                    class SchemaDOMImplementation implements org.w3c.dom.DOMImplementation {
                                        public static getDOMImplementation(): org.w3c.dom.DOMImplementation
                                        public createDocument(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: org.w3c.dom.DocumentType): org.w3c.dom.Document
                                        public createDocumentType(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): org.w3c.dom.DocumentType
                                        public getFeature(arg0: java.lang.String | string, arg1: java.lang.String | string): java.lang.Object
                                        public hasFeature(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                                        public static class: java.lang.Class<any>
                                    }
                                    class SchemaDOMParser extends com.sun.org.apache.xerces.internal.impl.xs.opti.DefaultXMLDocumentHandler {
                                        public static ERROR_REPORTER: string
                                        public static GENERATE_SYNTHETIC_ANNOTATION: string
                                        protected fLocator: com.sun.org.apache.xerces.internal.xni.XMLLocator
                                        protected fNamespaceContext: com.sun.org.apache.xerces.internal.xni.NamespaceContext
                                        public constructor(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLParserConfiguration)
                                        public startDocument(arg0: com.sun.org.apache.xerces.internal.xni.XMLLocator, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.NamespaceContext, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public endDocument(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public comment(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public processingInstruction(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLString, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public characters(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public startElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public emptyElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public endElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public ignorableWhitespace(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public startCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public endCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                        public getDocument(): org.w3c.dom.Document
                                        public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                        public getFeature(arg0: java.lang.String | string): boolean
                                        public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                        public getProperty(arg0: java.lang.String | string): java.lang.Object
                                        public setEntityResolver(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver | com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver$$Lambda): void
                                        public parse(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource): void
                                        public reset(): void
                                        public resetNodePool(): void
                                        public static class: java.lang.Class<any>
                                    }
                                    class SchemaParsingConfig extends com.sun.org.apache.xerces.internal.parsers.BasicParserConfiguration implements com.sun.org.apache.xerces.internal.xni.parser.XMLPullParserConfiguration {
                                        protected static XML11_DATATYPE_VALIDATOR_FACTORY: string
                                        protected static WARN_ON_DUPLICATE_ATTDEF: string
                                        protected static WARN_ON_UNDECLARED_ELEMDEF: string
                                        protected static ALLOW_JAVA_ENCODINGS: string
                                        protected static CONTINUE_AFTER_FATAL_ERROR: string
                                        protected static LOAD_EXTERNAL_DTD: string
                                        protected static NOTIFY_BUILTIN_REFS: string
                                        protected static NOTIFY_CHAR_REFS: string
                                        protected static NORMALIZE_DATA: string
                                        protected static SCHEMA_ELEMENT_DEFAULT: string
                                        protected static GENERATE_SYNTHETIC_ANNOTATIONS: string
                                        protected static ERROR_REPORTER: string
                                        protected static ENTITY_MANAGER: string
                                        protected static DOCUMENT_SCANNER: string
                                        protected static DTD_SCANNER: string
                                        protected static XMLGRAMMAR_POOL: string
                                        protected static DTD_VALIDATOR: string
                                        protected static NAMESPACE_BINDER: string
                                        protected static DATATYPE_VALIDATOR_FACTORY: string
                                        protected static VALIDATION_MANAGER: string
                                        protected static SCHEMA_VALIDATOR: string
                                        protected static LOCALE: string
                                        protected fDatatypeValidatorFactory: com.sun.org.apache.xerces.internal.impl.dv.DTDDVFactory
                                        protected fNamespaceScanner: com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl
                                        protected fDTDScanner: com.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl
                                        protected fXML11DatatypeFactory: com.sun.org.apache.xerces.internal.impl.dv.DTDDVFactory
                                        protected fXML11NSDocScanner: com.sun.org.apache.xerces.internal.impl.XML11NSDocumentScannerImpl
                                        protected fXML11DTDScanner: com.sun.org.apache.xerces.internal.impl.XML11DTDScannerImpl
                                        protected fCurrentDVFactory: com.sun.org.apache.xerces.internal.impl.dv.DTDDVFactory
                                        protected fCurrentScanner: com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentScanner
                                        protected fCurrentDTDScanner: com.sun.org.apache.xerces.internal.xni.parser.XMLDTDScanner
                                        protected fGrammarPool: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool
                                        protected fVersionDetector: com.sun.org.apache.xerces.internal.impl.XMLVersionDetector
                                        protected fErrorReporter: com.sun.org.apache.xerces.internal.impl.XMLErrorReporter
                                        protected fEntityManager: com.sun.org.apache.xerces.internal.impl.XMLEntityManager
                                        protected fInputSource: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource
                                        protected fValidationManager: com.sun.org.apache.xerces.internal.impl.validation.ValidationManager
                                        protected fLocator: com.sun.org.apache.xerces.internal.xni.XMLLocator
                                        protected fParseInProgress: boolean
                                        protected fConfigUpdated: boolean
                                        public constructor()
                                        public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable)
                                        public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool)
                                        public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool, arg2: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager)
                                        public getFeatureState(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.FeatureState
                                        public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                        public getPropertyState(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.PropertyState
                                        public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                        public setLocale(arg0: java.util.Locale): void
                                        public setInputSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource): void
                                        public parse(arg0: boolean): boolean
                                        public cleanup(): void
                                        public parse(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource): void
                                        public reset(): void
                                        protected configurePipeline(): void
                                        protected configureXML11Pipeline(): void
                                        protected checkFeature(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.FeatureState
                                        protected checkProperty(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.PropertyState
                                        protected resetXML10(): void
                                        protected resetXML11(): void
                                        public resetNodePool(): void
                                        public static class: java.lang.Class<any>
                                    }
                                    class TextImpl extends com.sun.org.apache.xerces.internal.impl.xs.opti.DefaultText {
                                        public constructor(arg0: java.lang.StringBuffer, arg1: com.sun.org.apache.xerces.internal.impl.xs.opti.SchemaDOM, arg2: int, arg3: int)
                                        public getParentNode(): org.w3c.dom.Node
                                        public getPreviousSibling(): org.w3c.dom.Node
                                        public getNextSibling(): org.w3c.dom.Node
                                        public getData(): string
                                        public getLength(): int
                                        public substringData(arg0: int, arg1: int): string
                                        public static class: java.lang.Class<any>
                                    }
                                }
                                namespace traversers {
                                    class SchemaContentHandler implements org.xml.sax.ContentHandler {
                                        public constructor()
                                        public getDocument(): org.w3c.dom.Document
                                        public setDocumentLocator(arg0: org.xml.sax.Locator): void
                                        public startDocument(): void
                                        public endDocument(): void
                                        public startPrefixMapping(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                        public endPrefixMapping(arg0: java.lang.String | string): void
                                        public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: org.xml.sax.Attributes): void
                                        public endElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                        public characters(arg0: char[], arg1: int, arg2: int): void
                                        public ignorableWhitespace(arg0: char[], arg1: int, arg2: int): void
                                        public processingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                        public skippedEntity(arg0: java.lang.String | string): void
                                        public reset(arg0: com.sun.org.apache.xerces.internal.impl.xs.opti.SchemaDOMParser, arg1: com.sun.org.apache.xerces.internal.util.SymbolTable, arg2: boolean, arg3: boolean): void
                                        public static class: java.lang.Class<any>
                                    }
                                    class StAXSchemaParser {
                                        public constructor()
                                        public reset(arg0: com.sun.org.apache.xerces.internal.impl.xs.opti.SchemaDOMParser, arg1: com.sun.org.apache.xerces.internal.util.SymbolTable): void
                                        public getDocument(): org.w3c.dom.Document
                                        public parse(arg0: javax.xml.stream.XMLEventReader): void
                                        public parse(arg0: javax.xml.stream.XMLStreamReader): void
                                        public static class: java.lang.Class<any>
                                    }
                                    class XSAnnotationInfo {
                                        public static class: java.lang.Class<any>
                                    }
                                    class XSAttributeChecker {
                                        public static ATTIDX_ABSTRACT: int
                                        public static ATTIDX_AFORMDEFAULT: int
                                        public static ATTIDX_BASE: int
                                        public static ATTIDX_BLOCK: int
                                        public static ATTIDX_BLOCKDEFAULT: int
                                        public static ATTIDX_DEFAULT: int
                                        public static ATTIDX_EFORMDEFAULT: int
                                        public static ATTIDX_FINAL: int
                                        public static ATTIDX_FINALDEFAULT: int
                                        public static ATTIDX_FIXED: int
                                        public static ATTIDX_FORM: int
                                        public static ATTIDX_ID: int
                                        public static ATTIDX_ITEMTYPE: int
                                        public static ATTIDX_MAXOCCURS: int
                                        public static ATTIDX_MEMBERTYPES: int
                                        public static ATTIDX_MINOCCURS: int
                                        public static ATTIDX_MIXED: int
                                        public static ATTIDX_NAME: int
                                        public static ATTIDX_NAMESPACE: int
                                        public static ATTIDX_NAMESPACE_LIST: int
                                        public static ATTIDX_NILLABLE: int
                                        public static ATTIDX_NONSCHEMA: int
                                        public static ATTIDX_PROCESSCONTENTS: int
                                        public static ATTIDX_PUBLIC: int
                                        public static ATTIDX_REF: int
                                        public static ATTIDX_REFER: int
                                        public static ATTIDX_SCHEMALOCATION: int
                                        public static ATTIDX_SOURCE: int
                                        public static ATTIDX_SUBSGROUP: int
                                        public static ATTIDX_SYSTEM: int
                                        public static ATTIDX_TARGETNAMESPACE: int
                                        public static ATTIDX_TYPE: int
                                        public static ATTIDX_USE: int
                                        public static ATTIDX_VALUE: int
                                        public static ATTIDX_ENUMNSDECLS: int
                                        public static ATTIDX_VERSION: int
                                        public static ATTIDX_XML_LANG: int
                                        public static ATTIDX_XPATH: int
                                        public static ATTIDX_FROMDEFAULT: int
                                        public static ATTIDX_ISRETURNED: int
                                        protected static DT_ANYURI: int
                                        protected static DT_ID: int
                                        protected static DT_QNAME: int
                                        protected static DT_STRING: int
                                        protected static DT_TOKEN: int
                                        protected static DT_NCNAME: int
                                        protected static DT_XPATH: int
                                        protected static DT_XPATH1: int
                                        protected static DT_LANGUAGE: int
                                        protected static DT_COUNT: int
                                        protected static DT_BLOCK: int
                                        protected static DT_BLOCK1: int
                                        protected static DT_FINAL: int
                                        protected static DT_FINAL1: int
                                        protected static DT_FINAL2: int
                                        protected static DT_FORM: int
                                        protected static DT_MAXOCCURS: int
                                        protected static DT_MAXOCCURS1: int
                                        protected static DT_MEMBERTYPES: int
                                        protected static DT_MINOCCURS1: int
                                        protected static DT_NAMESPACE: int
                                        protected static DT_PROCESSCONTENTS: int
                                        protected static DT_USE: int
                                        protected static DT_WHITESPACE: int
                                        protected static DT_BOOLEAN: int
                                        protected static DT_NONNEGINT: int
                                        protected static DT_POSINT: int
                                        protected fSchemaHandler: com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler
                                        protected fSymbolTable: com.sun.org.apache.xerces.internal.util.SymbolTable
                                        protected fNonSchemaAttrs: java.util.Map
                                        protected fNamespaceList: java.util.Vector
                                        protected fSeen: boolean[]
                                        public constructor(arg0: com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler)
                                        public reset(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable): void
                                        public checkAttributes(arg0: org.w3c.dom.Element, arg1: boolean, arg2: com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDocumentInfo): java.lang.Object[]
                                        public checkAttributes(arg0: org.w3c.dom.Element, arg1: boolean, arg2: com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDocumentInfo, arg3: boolean): java.lang.Object[]
                                        public checkNonSchemaAttributes(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSGrammarBucket): void
                                        public static normalize(arg0: java.lang.String | string, arg1: short): string
                                        protected getAvailableArray(): java.lang.Object[]
                                        public returnAttrArray(arg0: java.lang.Object[], arg1: com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDocumentInfo): void
                                        public resolveNamespace(arg0: org.w3c.dom.Element, arg1: org.w3c.dom.Attr[], arg2: com.sun.org.apache.xerces.internal.impl.xs.SchemaNamespaceSupport): void
                                        public static class: java.lang.Class<any>
                                    }
                                    class XSDAbstractIDConstraintTraverser extends com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDAbstractTraverser {
                                        public constructor(arg0: com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler, arg1: com.sun.org.apache.xerces.internal.impl.xs.traversers.XSAttributeChecker)
                                        public static class: java.lang.Class<any>
                                    }
                                    abstract class XSDAbstractParticleTraverser extends com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDAbstractTraverser {
                                        protected hasAllContent(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSParticleDecl): boolean
                                        public static class: java.lang.Class<any>
                                    }
                                    abstract class XSDAbstractTraverser {
                                        protected static NO_NAME: string
                                        protected static NOT_ALL_CONTEXT: int
                                        protected static PROCESSING_ALL_EL: int
                                        protected static GROUP_REF_WITH_ALL: int
                                        protected static CHILD_OF_GROUP: int
                                        protected static PROCESSING_ALL_GP: int
                                        protected fSchemaHandler: com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler
                                        protected fSymbolTable: com.sun.org.apache.xerces.internal.util.SymbolTable
                                        protected fAttrChecker: com.sun.org.apache.xerces.internal.impl.xs.traversers.XSAttributeChecker
                                        protected fValidateAnnotations: boolean
                                        protected checkOccurrences(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSParticleDecl, arg1: java.lang.String | string, arg2: org.w3c.dom.Element, arg3: int, arg4: long): com.sun.org.apache.xerces.internal.impl.xs.XSParticleDecl
                                        public static class: java.lang.Class<any>
                                    }
                                    class XSDAttributeGroupTraverser extends com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDAbstractTraverser {
                                        public static class: java.lang.Class<any>
                                    }
                                    class XSDAttributeTraverser extends com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDAbstractTraverser {
                                        public constructor(arg0: com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler, arg1: com.sun.org.apache.xerces.internal.impl.xs.traversers.XSAttributeChecker)
                                        protected traverseLocal(arg0: org.w3c.dom.Element, arg1: com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDocumentInfo, arg2: com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar, arg3: com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl): com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl
                                        protected traverseGlobal(arg0: org.w3c.dom.Element, arg1: com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDocumentInfo, arg2: com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar): com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl
                                        public static class: java.lang.Class<any>
                                    }
                                    class XSDComplexTypeTraverser extends com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDAbstractParticleTraverser {
                                        public static class: java.lang.Class<any>
                                    }
                                    class XSDElementTraverser extends com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDAbstractTraverser {
                                        protected fTempElementDecl: com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl
                                        protected traverseLocal(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSParticleDecl, arg1: org.w3c.dom.Element, arg2: com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDocumentInfo, arg3: com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar, arg4: int, arg5: com.sun.org.apache.xerces.internal.xs.XSObject, arg6: java.lang.String[]): void
                                        public static class: java.lang.Class<any>
                                    }
                                    class XSDGroupTraverser extends com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDAbstractParticleTraverser {
                                        public static class: java.lang.Class<any>
                                    }
                                    class XSDHandler {
                                        protected static VALIDATION: string
                                        protected static XMLSCHEMA_VALIDATION: string
                                        protected static ALLOW_JAVA_ENCODINGS: string
                                        protected static CONTINUE_AFTER_FATAL_ERROR: string
                                        protected static STANDARD_URI_CONFORMANT_FEATURE: string
                                        protected static DISALLOW_DOCTYPE: string
                                        protected static GENERATE_SYNTHETIC_ANNOTATIONS: string
                                        protected static VALIDATE_ANNOTATIONS: string
                                        protected static HONOUR_ALL_SCHEMALOCATIONS: string
                                        protected static NAMESPACE_GROWTH: string
                                        protected static TOLERATE_DUPLICATES: string
                                        protected static STRING_INTERNING: string
                                        protected static ERROR_HANDLER: string
                                        protected static JAXP_SCHEMA_SOURCE: string
                                        public static ENTITY_RESOLVER: string
                                        protected static ENTITY_MANAGER: string
                                        public static ERROR_REPORTER: string
                                        public static XMLGRAMMAR_POOL: string
                                        public static SYMBOL_TABLE: string
                                        protected static SECURITY_MANAGER: string
                                        protected static LOCALE: string
                                        protected static DEBUG_NODE_POOL: boolean
                                        public static REDEF_IDENTIFIER: string
                                        protected fDeclPool: com.sun.org.apache.xerces.internal.impl.xs.XSDeclarationPool
                                        protected fSecurityManager: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager
                                        public constructor()
                                        public constructor(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSGrammarBucket)
                                        public parseSchema(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource, arg1: com.sun.org.apache.xerces.internal.impl.xs.XSDDescription, arg2: java.util.Map<java.lang.String, com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader$LocationArray>): com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar
                                        protected findGrammar(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSDDescription, arg1: boolean): com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar
                                        protected constructTrees(arg0: org.w3c.dom.Element, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.impl.xs.XSDDescription, arg3: boolean): com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDocumentInfo
                                        protected buildGlobalNameRegistries(): void
                                        protected traverseSchemas(arg0: java.util.ArrayList): void
                                        protected getGlobalDecl(arg0: com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDocumentInfo, arg1: int, arg2: com.sun.org.apache.xerces.internal.xni.QName, arg3: org.w3c.dom.Element): java.lang.Object
                                        protected getGlobalDecl(arg0: java.lang.String | string, arg1: int): java.lang.Object
                                        protected getGlobalDeclFromGrammar(arg0: com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar, arg1: int, arg2: java.lang.String | string): java.lang.Object
                                        protected getGlobalDeclFromGrammar(arg0: com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar, arg1: int, arg2: java.lang.String | string, arg3: java.lang.String | string): java.lang.Object
                                        protected traverseGlobalDecl(arg0: int, arg1: org.w3c.dom.Element, arg2: com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDocumentInfo, arg3: com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar): java.lang.Object
                                        public schemaDocument2SystemId(arg0: com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDocumentInfo): string
                                        protected resolveKeyRefs(): void
                                        protected getIDRegistry(): java.util.Map
                                        protected getIDRegistry_sub(): java.util.Map
                                        protected storeKeyRef(arg0: org.w3c.dom.Element, arg1: com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDocumentInfo, arg2: com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl): void
                                        public setDeclPool(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSDeclarationPool): void
                                        public setDVFactory(arg0: com.sun.org.apache.xerces.internal.impl.dv.SchemaDVFactory): void
                                        public getDVFactory(): com.sun.org.apache.xerces.internal.impl.dv.SchemaDVFactory
                                        public reset(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager): void
                                        public element2Locator(arg0: org.w3c.dom.Element): com.sun.org.apache.xerces.internal.impl.xs.util.SimpleLocator
                                        public element2Locator(arg0: org.w3c.dom.Element, arg1: com.sun.org.apache.xerces.internal.impl.xs.util.SimpleLocator): boolean
                                        public setGenerateSyntheticAnnotations(arg0: boolean): void
                                        public static class: java.lang.Class<any>
                                    }
                                    class XSDKeyrefTraverser extends com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDAbstractIDConstraintTraverser {
                                        public constructor(arg0: com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler, arg1: com.sun.org.apache.xerces.internal.impl.xs.traversers.XSAttributeChecker)
                                        public static class: java.lang.Class<any>
                                    }
                                    class XSDNotationTraverser extends com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDAbstractTraverser {
                                        public static class: java.lang.Class<any>
                                    }
                                    class XSDSimpleTypeTraverser extends com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDAbstractTraverser {
                                        public static class: java.lang.Class<any>
                                    }
                                    class XSDUniqueOrKeyTraverser extends com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDAbstractIDConstraintTraverser {
                                        public constructor(arg0: com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler, arg1: com.sun.org.apache.xerces.internal.impl.xs.traversers.XSAttributeChecker)
                                        public static class: java.lang.Class<any>
                                    }
                                    class XSDWildcardTraverser extends com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDAbstractTraverser {
                                        public static class: java.lang.Class<any>
                                    }
                                    class XSDocumentInfo {
                                        protected fNamespaceSupport: com.sun.org.apache.xerces.internal.impl.xs.SchemaNamespaceSupport
                                        protected fNamespaceSupportRoot: com.sun.org.apache.xerces.internal.impl.xs.SchemaNamespaceSupport
                                        protected SchemaNamespaceSupportStack: java.util.Stack
                                        protected fAreLocalAttributesQualified: boolean
                                        protected fAreLocalElementsQualified: boolean
                                        protected fBlockDefault: short
                                        protected fFinalDefault: short
                                        protected fIsChameleonSchema: boolean
                                        protected fSchemaElement: org.w3c.dom.Element
                                        protected fValidationContext: com.sun.org.apache.xerces.internal.impl.validation.ValidationState
                                        protected fAttrChecker: com.sun.org.apache.xerces.internal.impl.xs.traversers.XSAttributeChecker
                                        protected fSchemaAttrs: java.lang.Object[]
                                        protected fAnnotations: com.sun.org.apache.xerces.internal.impl.xs.traversers.XSAnnotationInfo
                                        public toString(): string
                                        public addAllowedNS(arg0: java.lang.String | string): void
                                        public isAllowedNS(arg0: java.lang.String | string): boolean
                                        public static class: java.lang.Class<any>
                                    }
                                }
                                namespace util {
                                    class LSInputListImpl extends java.util.AbstractList implements com.sun.org.apache.xerces.internal.xs.LSInputList {
                                        public static EMPTY_LIST: com.sun.org.apache.xerces.internal.impl.xs.util.LSInputListImpl
                                        public constructor(arg0: org.w3c.dom.ls.LSInput[], arg1: int)
                                        public getLength(): int
                                        public item(arg0: int): org.w3c.dom.ls.LSInput
                                        public get(arg0: int): java.lang.Object
                                        public size(): int
                                        public toArray(): java.lang.Object[]
                                        public toArray(arg0: java.lang.Object[]): java.lang.Object[]
                                        public static class: java.lang.Class<any>
                                    }
                                    class ObjectListImpl extends java.util.AbstractList implements com.sun.org.apache.xerces.internal.xs.datatypes.ObjectList {
                                        public static EMPTY_LIST: com.sun.org.apache.xerces.internal.impl.xs.util.ObjectListImpl
                                        public constructor(arg0: java.lang.Object[], arg1: int)
                                        public getLength(): int
                                        public contains(arg0: java.lang.Object): boolean
                                        public item(arg0: int): java.lang.Object
                                        public get(arg0: int): java.lang.Object
                                        public size(): int
                                        public toArray(): java.lang.Object[]
                                        public toArray(arg0: java.lang.Object[]): java.lang.Object[]
                                        public static class: java.lang.Class<any>
                                    }
                                    class ShortListImpl extends java.util.AbstractList implements com.sun.org.apache.xerces.internal.xs.ShortList {
                                        public static EMPTY_LIST: com.sun.org.apache.xerces.internal.impl.xs.util.ShortListImpl
                                        public constructor(arg0: short[], arg1: int)
                                        public getLength(): int
                                        public contains(arg0: short): boolean
                                        public item(arg0: int): short
                                        public equals(arg0: java.lang.Object): boolean
                                        public get(arg0: int): java.lang.Object
                                        public size(): int
                                        public static class: java.lang.Class<any>
                                    }
                                    class SimpleLocator implements com.sun.org.apache.xerces.internal.xni.XMLLocator {
                                        public constructor()
                                        public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: int, arg3: int)
                                        public setValues(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: int, arg3: int): void
                                        public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: int, arg3: int, arg4: int)
                                        public setValues(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: int, arg3: int, arg4: int): void
                                        public getLineNumber(): int
                                        public getColumnNumber(): int
                                        public getCharacterOffset(): int
                                        public getPublicId(): string
                                        public getExpandedSystemId(): string
                                        public getLiteralSystemId(): string
                                        public getBaseSystemId(): string
                                        public setColumnNumber(arg0: int): void
                                        public setLineNumber(arg0: int): void
                                        public setCharacterOffset(arg0: int): void
                                        public setBaseSystemId(arg0: java.lang.String | string): void
                                        public setExpandedSystemId(arg0: java.lang.String | string): void
                                        public setLiteralSystemId(arg0: java.lang.String | string): void
                                        public setPublicId(arg0: java.lang.String | string): void
                                        public getEncoding(): string
                                        public getXMLVersion(): string
                                        public static class: java.lang.Class<any>
                                    }
                                    class StringListImpl extends java.util.AbstractList implements com.sun.org.apache.xerces.internal.xs.StringList {
                                        public static EMPTY_LIST: com.sun.org.apache.xerces.internal.impl.xs.util.StringListImpl
                                        public constructor(arg0: java.util.Vector)
                                        public constructor(arg0: java.lang.String[], arg1: int)
                                        public getLength(): int
                                        public contains(arg0: java.lang.String | string): boolean
                                        public item(arg0: int): string
                                        public get(arg0: int): java.lang.Object
                                        public size(): int
                                        public toArray(): java.lang.Object[]
                                        public toArray(arg0: java.lang.Object[]): java.lang.Object[]
                                        public static class: java.lang.Class<any>
                                    }
                                    class XInt {
                                        public intValue(): int
                                        public shortValue(): short
                                        public equals(arg0: com.sun.org.apache.xerces.internal.impl.xs.util.XInt): boolean
                                        public toString(): string
                                        public static class: java.lang.Class<any>
                                    }
                                    class XIntPool {
                                        public constructor()
                                        public getXInt(arg0: int): com.sun.org.apache.xerces.internal.impl.xs.util.XInt
                                        public static class: java.lang.Class<any>
                                    }
                                    class XSGrammarPool extends com.sun.org.apache.xerces.internal.util.XMLGrammarPoolImpl {
                                        public constructor()
                                        public toXSModel(): com.sun.org.apache.xerces.internal.xs.XSModel
                                        public toXSModel(arg0: short): com.sun.org.apache.xerces.internal.xs.XSModel
                                        protected toXSModel(arg0: com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar[], arg1: short): com.sun.org.apache.xerces.internal.xs.XSModel
                                        public static class: java.lang.Class<any>
                                    }
                                    class XSInputSource extends com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource {
                                        public constructor(arg0: com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar[])
                                        public constructor(arg0: com.sun.org.apache.xerces.internal.xs.XSObject[])
                                        public getGrammars(): com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar[]
                                        public setGrammars(arg0: com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar[]): void
                                        public getComponents(): com.sun.org.apache.xerces.internal.xs.XSObject[]
                                        public setComponents(arg0: com.sun.org.apache.xerces.internal.xs.XSObject[]): void
                                        public static class: java.lang.Class<any>
                                    }
                                    class XSNamedMap4Types extends com.sun.org.apache.xerces.internal.impl.xs.util.XSNamedMapImpl {
                                        public constructor(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.util.SymbolHash, arg2: short)
                                        public constructor(arg0: java.lang.String[], arg1: com.sun.org.apache.xerces.internal.util.SymbolHash[], arg2: int, arg3: short)
                                        public getLength(): int
                                        public itemByName(arg0: java.lang.String | string, arg1: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSObject
                                        public item(arg0: int): com.sun.org.apache.xerces.internal.xs.XSObject
                                        public static class: java.lang.Class<any>
                                    }
                                    class XSNamedMapImpl extends java.util.AbstractMap implements com.sun.org.apache.xerces.internal.xs.XSNamedMap {
                                        public static EMPTY_MAP: com.sun.org.apache.xerces.internal.impl.xs.util.XSNamedMapImpl
                                        public constructor(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.util.SymbolHash)
                                        public constructor(arg0: java.lang.String[], arg1: com.sun.org.apache.xerces.internal.util.SymbolHash[], arg2: int)
                                        public constructor(arg0: com.sun.org.apache.xerces.internal.xs.XSObject[], arg1: int)
                                        public getLength(): int
                                        public itemByName(arg0: java.lang.String | string, arg1: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSObject
                                        public item(arg0: int): com.sun.org.apache.xerces.internal.xs.XSObject
                                        public containsKey(arg0: java.lang.Object): boolean
                                        public get(arg0: java.lang.Object): java.lang.Object
                                        public size(): int
                                        public entrySet(): java.util.Set
                                        public static class: java.lang.Class<any>
                                    }
                                    class XSObjectListImpl extends java.util.AbstractList implements com.sun.org.apache.xerces.internal.xs.XSObjectList {
                                        public static EMPTY_LIST: com.sun.org.apache.xerces.internal.impl.xs.util.XSObjectListImpl
                                        public constructor()
                                        public constructor(arg0: com.sun.org.apache.xerces.internal.xs.XSObject[], arg1: int)
                                        public getLength(): int
                                        public item(arg0: int): com.sun.org.apache.xerces.internal.xs.XSObject
                                        public clearXSObjectList(): void
                                        public addXSObject(arg0: com.sun.org.apache.xerces.internal.xs.XSObject): void
                                        public addXSObject(arg0: int, arg1: com.sun.org.apache.xerces.internal.xs.XSObject): void
                                        public contains(arg0: java.lang.Object): boolean
                                        public get(arg0: int): java.lang.Object
                                        public size(): int
                                        public iterator(): java.util.Iterator
                                        public listIterator(): java.util.ListIterator
                                        public listIterator(arg0: int): java.util.ListIterator
                                        public toArray(): java.lang.Object[]
                                        public toArray(arg0: java.lang.Object[]): java.lang.Object[]
                                        public static class: java.lang.Class<any>
                                    }
                                }
                                class AttributePSVImpl implements com.sun.org.apache.xerces.internal.xs.AttributePSVI {
                                    protected fDeclaration: com.sun.org.apache.xerces.internal.xs.XSAttributeDeclaration
                                    protected fTypeDecl: com.sun.org.apache.xerces.internal.xs.XSTypeDefinition
                                    protected fSpecified: boolean
                                    protected fNormalizedValue: string
                                    protected fActualValue: java.lang.Object
                                    protected fActualValueType: short
                                    protected fItemValueTypes: com.sun.org.apache.xerces.internal.xs.ShortList
                                    protected fMemberType: com.sun.org.apache.xerces.internal.xs.XSSimpleTypeDefinition
                                    protected fValidationAttempted: short
                                    protected fValidity: short
                                    protected fErrorCodes: java.lang.String[]
                                    protected fValidationContext: string
                                    public constructor()
                                    public getSchemaDefault(): string
                                    public getSchemaNormalizedValue(): string
                                    public getIsSchemaSpecified(): boolean
                                    public getValidationAttempted(): short
                                    public getValidity(): short
                                    public getErrorCodes(): com.sun.org.apache.xerces.internal.xs.StringList
                                    public getValidationContext(): string
                                    public getTypeDefinition(): com.sun.org.apache.xerces.internal.xs.XSTypeDefinition
                                    public getMemberTypeDefinition(): com.sun.org.apache.xerces.internal.xs.XSSimpleTypeDefinition
                                    public getAttributeDeclaration(): com.sun.org.apache.xerces.internal.xs.XSAttributeDeclaration
                                    public getActualNormalizedValue(): java.lang.Object
                                    public getActualNormalizedValueType(): short
                                    public getItemValueTypes(): com.sun.org.apache.xerces.internal.xs.ShortList
                                    public reset(): void
                                    public static class: java.lang.Class<any>
                                }
                                class ElementPSVImpl implements com.sun.org.apache.xerces.internal.xs.ElementPSVI {
                                    protected fDeclaration: com.sun.org.apache.xerces.internal.xs.XSElementDeclaration
                                    protected fTypeDecl: com.sun.org.apache.xerces.internal.xs.XSTypeDefinition
                                    protected fNil: boolean
                                    protected fSpecified: boolean
                                    protected fNormalizedValue: string
                                    protected fActualValue: java.lang.Object
                                    protected fActualValueType: short
                                    protected fItemValueTypes: com.sun.org.apache.xerces.internal.xs.ShortList
                                    protected fNotation: com.sun.org.apache.xerces.internal.xs.XSNotationDeclaration
                                    protected fMemberType: com.sun.org.apache.xerces.internal.xs.XSSimpleTypeDefinition
                                    protected fValidationAttempted: short
                                    protected fValidity: short
                                    protected fErrorCodes: java.lang.String[]
                                    protected fValidationContext: string
                                    protected fGrammars: com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar[]
                                    protected fSchemaInformation: com.sun.org.apache.xerces.internal.xs.XSModel
                                    public constructor()
                                    public getSchemaDefault(): string
                                    public getSchemaNormalizedValue(): string
                                    public getIsSchemaSpecified(): boolean
                                    public getValidationAttempted(): short
                                    public getValidity(): short
                                    public getErrorCodes(): com.sun.org.apache.xerces.internal.xs.StringList
                                    public getValidationContext(): string
                                    public getNil(): boolean
                                    public getNotation(): com.sun.org.apache.xerces.internal.xs.XSNotationDeclaration
                                    public getTypeDefinition(): com.sun.org.apache.xerces.internal.xs.XSTypeDefinition
                                    public getMemberTypeDefinition(): com.sun.org.apache.xerces.internal.xs.XSSimpleTypeDefinition
                                    public getElementDeclaration(): com.sun.org.apache.xerces.internal.xs.XSElementDeclaration
                                    public getSchemaInformation(): com.sun.org.apache.xerces.internal.xs.XSModel
                                    public getActualNormalizedValue(): java.lang.Object
                                    public getActualNormalizedValueType(): short
                                    public getItemValueTypes(): com.sun.org.apache.xerces.internal.xs.ShortList
                                    public reset(): void
                                    public static class: java.lang.Class<any>
                                }
                                class SchemaGrammar implements com.sun.org.apache.xerces.internal.xni.grammars.XSGrammar , com.sun.org.apache.xerces.internal.xs.XSNamespaceItem {
                                    public static fAnyType: com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl
                                    public static SG_SchemaNS: com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar$BuiltinSchemaGrammar
                                    public static fAnySimpleType: com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType
                                    public static SG_XSI: com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar$BuiltinSchemaGrammar
                                    protected constructor()
                                    public constructor(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.xs.XSDDescription, arg2: com.sun.org.apache.xerces.internal.util.SymbolTable)
                                    public constructor(arg0: com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar)
                                    public getGrammarDescription(): com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarDescription
                                    public isNamespaceAware(): boolean
                                    public setImportedGrammars(arg0: java.util.Vector): void
                                    public getImportedGrammars(): java.util.Vector
                                    public getTargetNamespace(): string
                                    public addGlobalAttributeDecl(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl): void
                                    public addGlobalAttributeDecl(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl, arg1: java.lang.String | string): void
                                    public addGlobalAttributeGroupDecl(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl): void
                                    public addGlobalAttributeGroupDecl(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl, arg1: java.lang.String | string): void
                                    public addGlobalElementDeclAll(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl): void
                                    public addGlobalElementDecl(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl): void
                                    public addGlobalElementDecl(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl, arg1: java.lang.String | string): void
                                    public addGlobalGroupDecl(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSGroupDecl): void
                                    public addGlobalGroupDecl(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSGroupDecl, arg1: java.lang.String | string): void
                                    public addGlobalNotationDecl(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSNotationDecl): void
                                    public addGlobalNotationDecl(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSNotationDecl, arg1: java.lang.String | string): void
                                    public addGlobalTypeDecl(arg0: com.sun.org.apache.xerces.internal.xs.XSTypeDefinition): void
                                    public addGlobalTypeDecl(arg0: com.sun.org.apache.xerces.internal.xs.XSTypeDefinition, arg1: java.lang.String | string): void
                                    public addGlobalComplexTypeDecl(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl): void
                                    public addGlobalComplexTypeDecl(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl, arg1: java.lang.String | string): void
                                    public addGlobalSimpleTypeDecl(arg0: com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType): void
                                    public addGlobalSimpleTypeDecl(arg0: com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType, arg1: java.lang.String | string): void
                                    public addIDConstraintDecl(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl, arg1: com.sun.org.apache.xerces.internal.impl.xs.identity.IdentityConstraint): void
                                    public addIDConstraintDecl(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl, arg1: com.sun.org.apache.xerces.internal.impl.xs.identity.IdentityConstraint, arg2: java.lang.String | string): void
                                    public getGlobalAttributeDecl(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl
                                    public getGlobalAttributeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string): com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl
                                    public getGlobalAttributeGroupDecl(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl
                                    public getGlobalAttributeGroupDecl(arg0: java.lang.String | string, arg1: java.lang.String | string): com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl
                                    public getGlobalElementDecl(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl
                                    public getGlobalElementDecl(arg0: java.lang.String | string, arg1: java.lang.String | string): com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl
                                    public getGlobalGroupDecl(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.impl.xs.XSGroupDecl
                                    public getGlobalGroupDecl(arg0: java.lang.String | string, arg1: java.lang.String | string): com.sun.org.apache.xerces.internal.impl.xs.XSGroupDecl
                                    public getGlobalNotationDecl(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.impl.xs.XSNotationDecl
                                    public getGlobalNotationDecl(arg0: java.lang.String | string, arg1: java.lang.String | string): com.sun.org.apache.xerces.internal.impl.xs.XSNotationDecl
                                    public getGlobalTypeDecl(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSTypeDefinition
                                    public getGlobalTypeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSTypeDefinition
                                    public getIDConstraintDecl(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.impl.xs.identity.IdentityConstraint
                                    public getIDConstraintDecl(arg0: java.lang.String | string, arg1: java.lang.String | string): com.sun.org.apache.xerces.internal.impl.xs.identity.IdentityConstraint
                                    public hasIDConstraints(): boolean
                                    public addComplexTypeDecl(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl, arg1: com.sun.org.apache.xerces.internal.impl.xs.util.SimpleLocator): void
                                    public addRedefinedGroupDecl(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSGroupDecl, arg1: com.sun.org.apache.xerces.internal.impl.xs.XSGroupDecl, arg2: com.sun.org.apache.xerces.internal.impl.xs.util.SimpleLocator): void
                                    public static getS4SGrammar(arg0: short): com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar
                                    public addDocument(arg0: java.lang.Object, arg1: java.lang.String | string): void
                                    public removeDocument(arg0: int): void
                                    public getSchemaNamespace(): string
                                    public getComponents(arg0: short): com.sun.org.apache.xerces.internal.xs.XSNamedMap
                                    public getComponentsExt(arg0: short): com.sun.org.apache.xerces.internal.xs.datatypes.ObjectList
                                    public resetComponents(): void
                                    public getTypeDefinition(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSTypeDefinition
                                    public getAttributeDeclaration(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSAttributeDeclaration
                                    public getElementDeclaration(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSElementDeclaration
                                    public getAttributeGroup(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSAttributeGroupDefinition
                                    public getModelGroupDefinition(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSModelGroupDefinition
                                    public getNotationDeclaration(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSNotationDeclaration
                                    public getDocumentLocations(): com.sun.org.apache.xerces.internal.xs.StringList
                                    public toXSModel(): com.sun.org.apache.xerces.internal.xs.XSModel
                                    public toXSModel(arg0: com.sun.org.apache.xerces.internal.xni.grammars.XSGrammar[]): com.sun.org.apache.xerces.internal.xs.XSModel
                                    public getAnnotations(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                                    public addAnnotation(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSAnnotationImpl): void
                                    public setImmutable(arg0: boolean): void
                                    public isImmutable(): boolean
                                    public static class: java.lang.Class<any>
                                }
                                class SchemaNamespaceSupport extends com.sun.org.apache.xerces.internal.util.NamespaceSupport {
                                    public constructor()
                                    public constructor(arg0: com.sun.org.apache.xerces.internal.impl.xs.SchemaNamespaceSupport)
                                    public setEffectiveContext(arg0: java.lang.String[]): void
                                    public getEffectiveLocalContext(): java.lang.String[]
                                    public makeGlobal(): void
                                    public static class: java.lang.Class<any>
                                }
                                class SchemaSymbols {
                                    public static URI_XSI: string
                                    public static XSI_SCHEMALOCATION: string
                                    public static XSI_NONAMESPACESCHEMALOCATION: string
                                    public static XSI_TYPE: string
                                    public static XSI_NIL: string
                                    public static URI_SCHEMAFORSCHEMA: string
                                    public static ELT_ALL: string
                                    public static ELT_ANNOTATION: string
                                    public static ELT_ANY: string
                                    public static ELT_ANYATTRIBUTE: string
                                    public static ELT_APPINFO: string
                                    public static ELT_ATTRIBUTE: string
                                    public static ELT_ATTRIBUTEGROUP: string
                                    public static ELT_CHOICE: string
                                    public static ELT_COMPLEXCONTENT: string
                                    public static ELT_COMPLEXTYPE: string
                                    public static ELT_DOCUMENTATION: string
                                    public static ELT_ELEMENT: string
                                    public static ELT_ENUMERATION: string
                                    public static ELT_EXTENSION: string
                                    public static ELT_FIELD: string
                                    public static ELT_FRACTIONDIGITS: string
                                    public static ELT_GROUP: string
                                    public static ELT_IMPORT: string
                                    public static ELT_INCLUDE: string
                                    public static ELT_KEY: string
                                    public static ELT_KEYREF: string
                                    public static ELT_LENGTH: string
                                    public static ELT_LIST: string
                                    public static ELT_MAXEXCLUSIVE: string
                                    public static ELT_MAXINCLUSIVE: string
                                    public static ELT_MAXLENGTH: string
                                    public static ELT_MINEXCLUSIVE: string
                                    public static ELT_MININCLUSIVE: string
                                    public static ELT_MINLENGTH: string
                                    public static ELT_NOTATION: string
                                    public static ELT_PATTERN: string
                                    public static ELT_REDEFINE: string
                                    public static ELT_RESTRICTION: string
                                    public static ELT_SCHEMA: string
                                    public static ELT_SELECTOR: string
                                    public static ELT_SEQUENCE: string
                                    public static ELT_SIMPLECONTENT: string
                                    public static ELT_SIMPLETYPE: string
                                    public static ELT_TOTALDIGITS: string
                                    public static ELT_UNION: string
                                    public static ELT_UNIQUE: string
                                    public static ELT_WHITESPACE: string
                                    public static ATT_ABSTRACT: string
                                    public static ATT_ATTRIBUTEFORMDEFAULT: string
                                    public static ATT_BASE: string
                                    public static ATT_BLOCK: string
                                    public static ATT_BLOCKDEFAULT: string
                                    public static ATT_DEFAULT: string
                                    public static ATT_ELEMENTFORMDEFAULT: string
                                    public static ATT_FINAL: string
                                    public static ATT_FINALDEFAULT: string
                                    public static ATT_FIXED: string
                                    public static ATT_FORM: string
                                    public static ATT_ID: string
                                    public static ATT_ITEMTYPE: string
                                    public static ATT_MAXOCCURS: string
                                    public static ATT_MEMBERTYPES: string
                                    public static ATT_MINOCCURS: string
                                    public static ATT_MIXED: string
                                    public static ATT_NAME: string
                                    public static ATT_NAMESPACE: string
                                    public static ATT_NILLABLE: string
                                    public static ATT_PROCESSCONTENTS: string
                                    public static ATT_REF: string
                                    public static ATT_REFER: string
                                    public static ATT_SCHEMALOCATION: string
                                    public static ATT_SOURCE: string
                                    public static ATT_SUBSTITUTIONGROUP: string
                                    public static ATT_SYSTEM: string
                                    public static ATT_PUBLIC: string
                                    public static ATT_TARGETNAMESPACE: string
                                    public static ATT_TYPE: string
                                    public static ATT_USE: string
                                    public static ATT_VALUE: string
                                    public static ATT_VERSION: string
                                    public static ATT_XML_LANG: string
                                    public static ATT_XPATH: string
                                    public static ATTVAL_TWOPOUNDANY: string
                                    public static ATTVAL_TWOPOUNDLOCAL: string
                                    public static ATTVAL_TWOPOUNDOTHER: string
                                    public static ATTVAL_TWOPOUNDTARGETNS: string
                                    public static ATTVAL_POUNDALL: string
                                    public static ATTVAL_FALSE_0: string
                                    public static ATTVAL_TRUE_1: string
                                    public static ATTVAL_ANYSIMPLETYPE: string
                                    public static ATTVAL_ANYTYPE: string
                                    public static ATTVAL_ANYURI: string
                                    public static ATTVAL_BASE64BINARY: string
                                    public static ATTVAL_BOOLEAN: string
                                    public static ATTVAL_BYTE: string
                                    public static ATTVAL_COLLAPSE: string
                                    public static ATTVAL_DATE: string
                                    public static ATTVAL_DATETIME: string
                                    public static ATTVAL_DAY: string
                                    public static ATTVAL_DECIMAL: string
                                    public static ATTVAL_DOUBLE: string
                                    public static ATTVAL_DURATION: string
                                    public static ATTVAL_ENTITY: string
                                    public static ATTVAL_ENTITIES: string
                                    public static ATTVAL_EXTENSION: string
                                    public static ATTVAL_FALSE: string
                                    public static ATTVAL_FLOAT: string
                                    public static ATTVAL_HEXBINARY: string
                                    public static ATTVAL_ID: string
                                    public static ATTVAL_IDREF: string
                                    public static ATTVAL_IDREFS: string
                                    public static ATTVAL_INT: string
                                    public static ATTVAL_INTEGER: string
                                    public static ATTVAL_LANGUAGE: string
                                    public static ATTVAL_LAX: string
                                    public static ATTVAL_LIST: string
                                    public static ATTVAL_LONG: string
                                    public static ATTVAL_NAME: string
                                    public static ATTVAL_NEGATIVEINTEGER: string
                                    public static ATTVAL_MONTH: string
                                    public static ATTVAL_MONTHDAY: string
                                    public static ATTVAL_NCNAME: string
                                    public static ATTVAL_NMTOKEN: string
                                    public static ATTVAL_NMTOKENS: string
                                    public static ATTVAL_NONNEGATIVEINTEGER: string
                                    public static ATTVAL_NONPOSITIVEINTEGER: string
                                    public static ATTVAL_NORMALIZEDSTRING: string
                                    public static ATTVAL_NOTATION: string
                                    public static ATTVAL_OPTIONAL: string
                                    public static ATTVAL_POSITIVEINTEGER: string
                                    public static ATTVAL_PRESERVE: string
                                    public static ATTVAL_PROHIBITED: string
                                    public static ATTVAL_QNAME: string
                                    public static ATTVAL_QUALIFIED: string
                                    public static ATTVAL_REPLACE: string
                                    public static ATTVAL_REQUIRED: string
                                    public static ATTVAL_RESTRICTION: string
                                    public static ATTVAL_SHORT: string
                                    public static ATTVAL_SKIP: string
                                    public static ATTVAL_STRICT: string
                                    public static ATTVAL_STRING: string
                                    public static ATTVAL_SUBSTITUTION: string
                                    public static ATTVAL_TIME: string
                                    public static ATTVAL_TOKEN: string
                                    public static ATTVAL_TRUE: string
                                    public static ATTVAL_UNBOUNDED: string
                                    public static ATTVAL_UNION: string
                                    public static ATTVAL_UNQUALIFIED: string
                                    public static ATTVAL_UNSIGNEDBYTE: string
                                    public static ATTVAL_UNSIGNEDINT: string
                                    public static ATTVAL_UNSIGNEDLONG: string
                                    public static ATTVAL_UNSIGNEDSHORT: string
                                    public static ATTVAL_YEAR: string
                                    public static ATTVAL_YEARMONTH: string
                                    public static FORM_UNQUALIFIED: short
                                    public static FORM_QUALIFIED: short
                                    public static USE_OPTIONAL: short
                                    public static USE_REQUIRED: short
                                    public static USE_PROHIBITED: short
                                    public static OCCURRENCE_UNBOUNDED: int
                                    public constructor()
                                    public static class: java.lang.Class<any>
                                }
                                class SubstitutionGroupHandler {
                                    public constructor(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSGrammarBucket)
                                    public getMatchingElemDecl(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl): com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl
                                    protected substitutionGroupOK(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl, arg1: com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl, arg2: short): boolean
                                    public inSubstitutionGroup(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl, arg1: com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl): boolean
                                    public reset(): void
                                    public addSubstitutionGroup(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl[]): void
                                    public getSubstitutionGroup(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl): com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl[]
                                    public static class: java.lang.Class<any>
                                }
                                class XMLSchemaException extends java.lang.Exception {
                                    public constructor(arg0: java.lang.String | string, arg1: java.lang.Object[])
                                    public getKey(): string
                                    public getArgs(): java.lang.Object[]
                                    public static class: java.lang.Class<any>
                                }
                                class XMLSchemaLoader implements com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarLoader , com.sun.org.apache.xerces.internal.xni.parser.XMLComponent , com.sun.org.apache.xerces.internal.xs.XSLoader , org.w3c.dom.DOMConfiguration {
                                    protected static SCHEMA_FULL_CHECKING: string
                                    protected static CONTINUE_AFTER_FATAL_ERROR: string
                                    protected static ALLOW_JAVA_ENCODINGS: string
                                    protected static STANDARD_URI_CONFORMANT_FEATURE: string
                                    protected static VALIDATE_ANNOTATIONS: string
                                    protected static DISALLOW_DOCTYPE: string
                                    protected static GENERATE_SYNTHETIC_ANNOTATIONS: string
                                    protected static HONOUR_ALL_SCHEMALOCATIONS: string
                                    protected static AUGMENT_PSVI: string
                                    protected static PARSER_SETTINGS: string
                                    protected static NAMESPACE_GROWTH: string
                                    protected static TOLERATE_DUPLICATES: string
                                    protected static SCHEMA_DV_FACTORY: string
                                    protected static OVERRIDE_PARSER: string
                                    public static SYMBOL_TABLE: string
                                    public static ERROR_REPORTER: string
                                    protected static ERROR_HANDLER: string
                                    public static ENTITY_RESOLVER: string
                                    public static XMLGRAMMAR_POOL: string
                                    protected static SCHEMA_LOCATION: string
                                    protected static SCHEMA_NONS_LOCATION: string
                                    protected static JAXP_SCHEMA_SOURCE: string
                                    protected static SECURITY_MANAGER: string
                                    protected static LOCALE: string
                                    protected static ENTITY_MANAGER: string
                                    public static ACCESS_EXTERNAL_DTD: string
                                    public static ACCESS_EXTERNAL_SCHEMA: string
                                    public constructor()
                                    public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable)
                                    public getRecognizedFeatures(): java.lang.String[]
                                    public getFeature(arg0: java.lang.String | string): boolean
                                    public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                    public getRecognizedProperties(): java.lang.String[]
                                    public getProperty(arg0: java.lang.String | string): java.lang.Object
                                    public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                    public setLocale(arg0: java.util.Locale): void
                                    public getLocale(): java.util.Locale
                                    public setErrorHandler(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler): void
                                    public getErrorHandler(): com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler
                                    public setEntityResolver(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver | com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver$$Lambda): void
                                    public getEntityResolver(): com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver
                                    public loadGrammar(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource[]): void
                                    public loadGrammar(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource): com.sun.org.apache.xerces.internal.xni.grammars.Grammar
                                    public static resolveDocument(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSDDescription, arg1: java.util.Map<java.lang.String, com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader$LocationArray>, arg2: com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver | com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver$$Lambda): com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource
                                    public static processExternalHints(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.util.Map<java.lang.String, com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader$LocationArray>, arg3: com.sun.org.apache.xerces.internal.impl.XMLErrorReporter): void
                                    public static tokenizeSchemaLocationStr(arg0: java.lang.String | string, arg1: java.util.Map<java.lang.String, com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader$LocationArray>): boolean
                                    public getFeatureDefault(arg0: java.lang.String | string): boolean
                                    public getPropertyDefault(arg0: java.lang.String | string): java.lang.Object
                                    public reset(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager): void
                                    public getConfig(): org.w3c.dom.DOMConfiguration
                                    public load(arg0: org.w3c.dom.ls.LSInput): com.sun.org.apache.xerces.internal.xs.XSModel
                                    public loadInputList(arg0: com.sun.org.apache.xerces.internal.xs.LSInputList): com.sun.org.apache.xerces.internal.xs.XSModel
                                    public loadURI(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSModel
                                    public loadURIList(arg0: com.sun.org.apache.xerces.internal.xs.StringList): com.sun.org.apache.xerces.internal.xs.XSModel
                                    public canSetParameter(arg0: java.lang.String | string, arg1: java.lang.Object): boolean
                                    public getParameter(arg0: java.lang.String | string): java.lang.Object
                                    public getParameterNames(): org.w3c.dom.DOMStringList
                                    public setParameter(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                    public static class: java.lang.Class<any>
                                }
                                class XMLSchemaValidator implements com.sun.org.apache.xerces.internal.xni.parser.XMLComponent , com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentFilter , com.sun.org.apache.xerces.internal.impl.xs.identity.FieldActivator , com.sun.org.apache.xerces.internal.impl.RevalidationHandler {
                                    protected static VALIDATION: string
                                    protected static SCHEMA_VALIDATION: string
                                    protected static SCHEMA_FULL_CHECKING: string
                                    protected static DYNAMIC_VALIDATION: string
                                    protected static NORMALIZE_DATA: string
                                    protected static SCHEMA_ELEMENT_DEFAULT: string
                                    protected static SCHEMA_AUGMENT_PSVI: string
                                    protected static ALLOW_JAVA_ENCODINGS: string
                                    protected static STANDARD_URI_CONFORMANT_FEATURE: string
                                    protected static GENERATE_SYNTHETIC_ANNOTATIONS: string
                                    protected static VALIDATE_ANNOTATIONS: string
                                    protected static HONOUR_ALL_SCHEMALOCATIONS: string
                                    protected static USE_GRAMMAR_POOL_ONLY: string
                                    protected static CONTINUE_AFTER_FATAL_ERROR: string
                                    protected static PARSER_SETTINGS: string
                                    protected static NAMESPACE_GROWTH: string
                                    protected static TOLERATE_DUPLICATES: string
                                    protected static REPORT_WHITESPACE: string
                                    public static SYMBOL_TABLE: string
                                    public static ERROR_REPORTER: string
                                    public static ENTITY_RESOLVER: string
                                    public static XMLGRAMMAR_POOL: string
                                    protected static VALIDATION_MANAGER: string
                                    protected static ENTITY_MANAGER: string
                                    protected static SCHEMA_LOCATION: string
                                    protected static SCHEMA_NONS_LOCATION: string
                                    protected static JAXP_SCHEMA_SOURCE: string
                                    protected static JAXP_SCHEMA_LANGUAGE: string
                                    protected static SCHEMA_DV_FACTORY: string
                                    protected static OVERRIDE_PARSER: string
                                    protected static ID_CONSTRAINT_NUM: int
                                    protected fCurrentPSVI: com.sun.org.apache.xerces.internal.impl.xs.ElementPSVImpl
                                    protected fAugmentations: com.sun.org.apache.xerces.internal.util.AugmentationsImpl
                                    protected fMayMatchFieldMap: java.util.HashMap
                                    protected fDefaultValue: com.sun.org.apache.xerces.internal.xni.XMLString
                                    protected fDynamicValidation: boolean
                                    protected fSchemaDynamicValidation: boolean
                                    protected fDoValidation: boolean
                                    protected fFullChecking: boolean
                                    protected fNormalizeData: boolean
                                    protected fSchemaElementDefault: boolean
                                    protected fAugPSVI: boolean
                                    protected fIdConstraint: boolean
                                    protected fUseGrammarPoolOnly: boolean
                                    protected fNamespaceGrowth: boolean
                                    protected fEntityRef: boolean
                                    protected fInCDATA: boolean
                                    protected fSawOnlyWhitespaceInElementContent: boolean
                                    protected fSymbolTable: com.sun.org.apache.xerces.internal.util.SymbolTable
                                    protected fXSIErrorReporter: com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$XSIErrorReporter
                                    protected fEntityResolver: com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver
                                    protected fValidationManager: com.sun.org.apache.xerces.internal.impl.validation.ValidationManager
                                    protected fValidationState: com.sun.org.apache.xerces.internal.impl.validation.ValidationState
                                    protected fGrammarPool: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool
                                    protected fExternalSchemas: string
                                    protected fExternalNoNamespaceSchema: string
                                    protected fJaxpSchemaSource: java.lang.Object
                                    protected fXSDDescription: com.sun.org.apache.xerces.internal.impl.xs.XSDDescription
                                    protected fLocationPairs: java.util.Map<java.lang.String, com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader$LocationArray>
                                    protected fDocumentHandler: com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler
                                    protected fDocumentSource: com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource
                                    protected fMatcherStack: com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$XPathMatcherStack
                                    protected fValueStoreCache: com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreCache
                                    public getRecognizedFeatures(): java.lang.String[]
                                    public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                    public getRecognizedProperties(): java.lang.String[]
                                    public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                    public getFeatureDefault(arg0: java.lang.String | string): boolean
                                    public getPropertyDefault(arg0: java.lang.String | string): java.lang.Object
                                    public setDocumentHandler(arg0: com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler): void
                                    public getDocumentHandler(): com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler
                                    public setDocumentSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource): void
                                    public getDocumentSource(): com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource
                                    public startDocument(arg0: com.sun.org.apache.xerces.internal.xni.XMLLocator, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.NamespaceContext, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public xmlDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public doctypeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public startElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public emptyElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public characters(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public ignorableWhitespace(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public endElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public startCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public endCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public endDocument(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public characterData(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): boolean
                                    public elementDefault(arg0: java.lang.String | string): void
                                    public startGeneralEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public textDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public comment(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public processingInstruction(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLString, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public endGeneralEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public constructor()
                                    public reset(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager): void
                                    public startValueScopeFor(arg0: com.sun.org.apache.xerces.internal.impl.xs.identity.IdentityConstraint, arg1: int): void
                                    public activateField(arg0: com.sun.org.apache.xerces.internal.impl.xs.identity.Field, arg1: int): com.sun.org.apache.xerces.internal.impl.xs.identity.XPathMatcher
                                    public endValueScopeFor(arg0: com.sun.org.apache.xerces.internal.impl.xs.identity.IdentityConstraint, arg1: int): void
                                    public setMayMatch(arg0: com.sun.org.apache.xerces.internal.impl.xs.identity.Field, arg1: java.lang.Boolean | boolean): void
                                    public mayMatch(arg0: com.sun.org.apache.xerces.internal.impl.xs.identity.Field): boolean
                                    public static class: java.lang.Class<any>
                                }
                                class XSAnnotationImpl implements com.sun.org.apache.xerces.internal.xs.XSAnnotation {
                                    public constructor(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar)
                                    public writeAnnotation(arg0: java.lang.Object, arg1: short): boolean
                                    public getAnnotationString(): string
                                    public getType(): short
                                    public getName(): string
                                    public getNamespace(): string
                                    public getNamespaceItem(): com.sun.org.apache.xerces.internal.xs.XSNamespaceItem
                                    public static class: java.lang.Class<any>
                                }
                                class XSAttributeDecl implements com.sun.org.apache.xerces.internal.xs.XSAttributeDeclaration {
                                    public static SCOPE_ABSENT: short
                                    public static SCOPE_GLOBAL: short
                                    public static SCOPE_LOCAL: short
                                    public fUnresolvedTypeName: com.sun.org.apache.xerces.internal.xni.QName
                                    public constructor()
                                    public setValues(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType, arg3: short, arg4: short, arg5: com.sun.org.apache.xerces.internal.impl.dv.ValidatedInfo, arg6: com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl, arg7: com.sun.org.apache.xerces.internal.xs.XSObjectList): void
                                    public reset(): void
                                    public getType(): short
                                    public getName(): string
                                    public getNamespace(): string
                                    public getTypeDefinition(): com.sun.org.apache.xerces.internal.xs.XSSimpleTypeDefinition
                                    public getScope(): short
                                    public getEnclosingCTDefinition(): com.sun.org.apache.xerces.internal.xs.XSComplexTypeDefinition
                                    public getConstraintType(): short
                                    public getConstraintValue(): string
                                    public getAnnotation(): com.sun.org.apache.xerces.internal.xs.XSAnnotation
                                    public getAnnotations(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                                    public getValInfo(): com.sun.org.apache.xerces.internal.impl.dv.ValidatedInfo
                                    public getNamespaceItem(): com.sun.org.apache.xerces.internal.xs.XSNamespaceItem
                                    public getActualVC(): java.lang.Object
                                    public getActualVCType(): short
                                    public getItemValueTypes(): com.sun.org.apache.xerces.internal.xs.ShortList
                                    public static class: java.lang.Class<any>
                                }
                                class XSAttributeGroupDecl implements com.sun.org.apache.xerces.internal.xs.XSAttributeGroupDefinition {
                                    public fName: string
                                    public fTargetNamespace: string
                                    public fAttributeWC: com.sun.org.apache.xerces.internal.impl.xs.XSWildcardDecl
                                    public fIDAttrName: string
                                    public fAnnotations: com.sun.org.apache.xerces.internal.xs.XSObjectList
                                    protected fAttrUses: com.sun.org.apache.xerces.internal.impl.xs.util.XSObjectListImpl
                                    public constructor()
                                    public addAttributeUse(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl): string
                                    public replaceAttributeUse(arg0: com.sun.org.apache.xerces.internal.xs.XSAttributeUse, arg1: com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl): void
                                    public getAttributeUse(arg0: java.lang.String | string, arg1: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSAttributeUse
                                    public getAttributeUseNoProhibited(arg0: java.lang.String | string, arg1: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSAttributeUse
                                    public removeProhibitedAttrs(): void
                                    public validRestrictionOf(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl): java.lang.Object[]
                                    public reset(): void
                                    public getType(): short
                                    public getName(): string
                                    public getNamespace(): string
                                    public getAttributeUses(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                                    public getAttributeWildcard(): com.sun.org.apache.xerces.internal.xs.XSWildcard
                                    public getAnnotation(): com.sun.org.apache.xerces.internal.xs.XSAnnotation
                                    public getAnnotations(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                                    public getNamespaceItem(): com.sun.org.apache.xerces.internal.xs.XSNamespaceItem
                                    public static class: java.lang.Class<any>
                                }
                                class XSAttributeUseImpl implements com.sun.org.apache.xerces.internal.xs.XSAttributeUse {
                                    public fAttrDecl: com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl
                                    public fUse: short
                                    public fConstraintType: short
                                    public fDefault: com.sun.org.apache.xerces.internal.impl.dv.ValidatedInfo
                                    public fAnnotations: com.sun.org.apache.xerces.internal.xs.XSObjectList
                                    public constructor()
                                    public reset(): void
                                    public getType(): short
                                    public getName(): string
                                    public getNamespace(): string
                                    public getRequired(): boolean
                                    public getAttrDeclaration(): com.sun.org.apache.xerces.internal.xs.XSAttributeDeclaration
                                    public getConstraintType(): short
                                    public getConstraintValue(): string
                                    public getNamespaceItem(): com.sun.org.apache.xerces.internal.xs.XSNamespaceItem
                                    public getActualVC(): java.lang.Object
                                    public getActualVCType(): short
                                    public getItemValueTypes(): com.sun.org.apache.xerces.internal.xs.ShortList
                                    public getAnnotations(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                                    public static class: java.lang.Class<any>
                                }
                                class XSComplexTypeDecl implements com.sun.org.apache.xerces.internal.xs.XSComplexTypeDefinition , org.w3c.dom.TypeInfo {
                                    public constructor()
                                    public setValues(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xs.XSTypeDefinition, arg3: short, arg4: short, arg5: short, arg6: short, arg7: boolean, arg8: com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl, arg9: com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType, arg10: com.sun.org.apache.xerces.internal.impl.xs.XSParticleDecl, arg11: com.sun.org.apache.xerces.internal.impl.xs.util.XSObjectListImpl): void
                                    public setName(arg0: java.lang.String | string): void
                                    public getTypeCategory(): short
                                    public getTypeName(): string
                                    public getFinalSet(): short
                                    public getTargetNamespace(): string
                                    public containsTypeID(): boolean
                                    public setIsAbstractType(): void
                                    public setContainsTypeID(): void
                                    public setIsAnonymous(): void
                                    public getContentModel(arg0: com.sun.org.apache.xerces.internal.impl.xs.models.CMBuilder): com.sun.org.apache.xerces.internal.impl.xs.models.XSCMValidator
                                    public getAttrGrp(): com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl
                                    public toString(): string
                                    public derivedFromType(arg0: com.sun.org.apache.xerces.internal.xs.XSTypeDefinition, arg1: short): boolean
                                    public derivedFrom(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: short): boolean
                                    public isDOMDerivedFrom(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: int): boolean
                                    public reset(): void
                                    public getType(): short
                                    public getName(): string
                                    public getAnonymous(): boolean
                                    public getNamespace(): string
                                    public getBaseType(): com.sun.org.apache.xerces.internal.xs.XSTypeDefinition
                                    public getDerivationMethod(): short
                                    public isFinal(arg0: short): boolean
                                    public getFinal(): short
                                    public getAbstract(): boolean
                                    public getAttributeUses(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                                    public getAttributeWildcard(): com.sun.org.apache.xerces.internal.xs.XSWildcard
                                    public getContentType(): short
                                    public getSimpleType(): com.sun.org.apache.xerces.internal.xs.XSSimpleTypeDefinition
                                    public getParticle(): com.sun.org.apache.xerces.internal.xs.XSParticle
                                    public isProhibitedSubstitution(arg0: short): boolean
                                    public getProhibitedSubstitutions(): short
                                    public getAnnotations(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                                    public getNamespaceItem(): com.sun.org.apache.xerces.internal.xs.XSNamespaceItem
                                    public getAttributeUse(arg0: java.lang.String | string, arg1: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSAttributeUse
                                    public getTypeNamespace(): string
                                    public isDerivedFrom(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: int): boolean
                                    public static class: java.lang.Class<any>
                                }
                                class XSConstraints {
                                    public constructor()
                                    public static getEmptySequence(): com.sun.org.apache.xerces.internal.impl.xs.XSParticleDecl
                                    public static checkTypeDerivationOk(arg0: com.sun.org.apache.xerces.internal.xs.XSTypeDefinition, arg1: com.sun.org.apache.xerces.internal.xs.XSTypeDefinition, arg2: short): boolean
                                    public static checkSimpleDerivationOk(arg0: com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType, arg1: com.sun.org.apache.xerces.internal.xs.XSTypeDefinition, arg2: short): boolean
                                    public static checkComplexDerivationOk(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl, arg1: com.sun.org.apache.xerces.internal.xs.XSTypeDefinition, arg2: short): boolean
                                    public static ElementDefaultValidImmediate(arg0: com.sun.org.apache.xerces.internal.xs.XSTypeDefinition, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.impl.dv.ValidationContext, arg3: com.sun.org.apache.xerces.internal.impl.dv.ValidatedInfo): java.lang.Object
                                    public static fullSchemaChecking(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSGrammarBucket, arg1: com.sun.org.apache.xerces.internal.impl.xs.SubstitutionGroupHandler, arg2: com.sun.org.apache.xerces.internal.impl.xs.models.CMBuilder, arg3: com.sun.org.apache.xerces.internal.impl.XMLErrorReporter): void
                                    public static checkElementDeclsConsistent(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl, arg1: com.sun.org.apache.xerces.internal.impl.xs.XSParticleDecl, arg2: com.sun.org.apache.xerces.internal.util.SymbolHash, arg3: com.sun.org.apache.xerces.internal.impl.xs.SubstitutionGroupHandler): void
                                    public static findElemInTable(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl, arg1: com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl, arg2: com.sun.org.apache.xerces.internal.util.SymbolHash): void
                                    public static overlapUPA(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl, arg1: com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl, arg2: com.sun.org.apache.xerces.internal.impl.xs.SubstitutionGroupHandler): boolean
                                    public static overlapUPA(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl, arg1: com.sun.org.apache.xerces.internal.impl.xs.XSWildcardDecl, arg2: com.sun.org.apache.xerces.internal.impl.xs.SubstitutionGroupHandler): boolean
                                    public static overlapUPA(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSWildcardDecl, arg1: com.sun.org.apache.xerces.internal.impl.xs.XSWildcardDecl): boolean
                                    public static overlapUPA(arg0: java.lang.Object, arg1: java.lang.Object, arg2: com.sun.org.apache.xerces.internal.impl.xs.SubstitutionGroupHandler): boolean
                                    public static class: java.lang.Class<any>
                                }
                                class XSDDescription extends com.sun.org.apache.xerces.internal.util.XMLResourceIdentifierImpl implements com.sun.org.apache.xerces.internal.xni.grammars.XMLSchemaDescription {
                                    public static CONTEXT_INITIALIZE: short
                                    public static CONTEXT_INCLUDE: short
                                    public static CONTEXT_REDEFINE: short
                                    public static CONTEXT_IMPORT: short
                                    public static CONTEXT_PREPARSE: short
                                    public static CONTEXT_INSTANCE: short
                                    public static CONTEXT_ELEMENT: short
                                    public static CONTEXT_ATTRIBUTE: short
                                    public static CONTEXT_XSITYPE: short
                                    protected fContextType: short
                                    protected fLocationHints: java.lang.String[]
                                    protected fTriggeringComponent: com.sun.org.apache.xerces.internal.xni.QName
                                    protected fEnclosedElementName: com.sun.org.apache.xerces.internal.xni.QName
                                    protected fAttributes: com.sun.org.apache.xerces.internal.xni.XMLAttributes
                                    public constructor()
                                    public getGrammarType(): string
                                    public getContextType(): short
                                    public getTargetNamespace(): string
                                    public getLocationHints(): java.lang.String[]
                                    public getTriggeringComponent(): com.sun.org.apache.xerces.internal.xni.QName
                                    public getEnclosingElementName(): com.sun.org.apache.xerces.internal.xni.QName
                                    public getAttributes(): com.sun.org.apache.xerces.internal.xni.XMLAttributes
                                    public fromInstance(): boolean
                                    public isExternal(): boolean
                                    public equals(arg0: java.lang.Object): boolean
                                    public hashCode(): int
                                    public setContextType(arg0: short): void
                                    public setTargetNamespace(arg0: java.lang.String | string): void
                                    public setLocationHints(arg0: java.lang.String[]): void
                                    public setTriggeringComponent(arg0: com.sun.org.apache.xerces.internal.xni.QName): void
                                    public setEnclosingElementName(arg0: com.sun.org.apache.xerces.internal.xni.QName): void
                                    public setAttributes(arg0: com.sun.org.apache.xerces.internal.xni.XMLAttributes): void
                                    public reset(): void
                                    public makeClone(): com.sun.org.apache.xerces.internal.impl.xs.XSDDescription
                                    public static class: java.lang.Class<any>
                                }
                                class XSDeclarationPool {
                                    public constructor()
                                    public setDVFactory(arg0: com.sun.org.apache.xerces.internal.impl.dv.xs.SchemaDVFactoryImpl): void
                                    public getElementDecl(): com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl
                                    public getAttributeDecl(): com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl
                                    public getAttributeUse(): com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl
                                    public getComplexTypeDecl(): com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl
                                    public getSimpleTypeDecl(): com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl
                                    public getParticleDecl(): com.sun.org.apache.xerces.internal.impl.xs.XSParticleDecl
                                    public getModelGroup(): com.sun.org.apache.xerces.internal.impl.xs.XSModelGroupImpl
                                    public reset(): void
                                    public static class: java.lang.Class<any>
                                }
                                class XSElementDecl implements com.sun.org.apache.xerces.internal.xs.XSElementDeclaration {
                                    public static SCOPE_ABSENT: short
                                    public static SCOPE_GLOBAL: short
                                    public static SCOPE_LOCAL: short
                                    public fName: string
                                    public fTargetNamespace: string
                                    public fType: com.sun.org.apache.xerces.internal.xs.XSTypeDefinition
                                    public fUnresolvedTypeName: com.sun.org.apache.xerces.internal.xni.QName
                                    public fScope: short
                                    public fBlock: short
                                    public fFinal: short
                                    public fAnnotations: com.sun.org.apache.xerces.internal.xs.XSObjectList
                                    public fDefault: com.sun.org.apache.xerces.internal.impl.dv.ValidatedInfo
                                    public fSubGroup: com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl
                                    public constructor()
                                    public setConstraintType(arg0: short): void
                                    public setIsNillable(): void
                                    public setIsAbstract(): void
                                    public setIsGlobal(): void
                                    public setIsLocal(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl): void
                                    public addIDConstraint(arg0: com.sun.org.apache.xerces.internal.impl.xs.identity.IdentityConstraint): void
                                    public getIDConstraints(): com.sun.org.apache.xerces.internal.impl.xs.identity.IdentityConstraint[]
                                    public toString(): string
                                    public hashCode(): int
                                    public equals(arg0: java.lang.Object): boolean
                                    public reset(): void
                                    public getType(): short
                                    public getName(): string
                                    public getNamespace(): string
                                    public getTypeDefinition(): com.sun.org.apache.xerces.internal.xs.XSTypeDefinition
                                    public getScope(): short
                                    public getEnclosingCTDefinition(): com.sun.org.apache.xerces.internal.xs.XSComplexTypeDefinition
                                    public getConstraintType(): short
                                    public getConstraintValue(): string
                                    public getNillable(): boolean
                                    public getIdentityConstraints(): com.sun.org.apache.xerces.internal.xs.XSNamedMap
                                    public getSubstitutionGroupAffiliation(): com.sun.org.apache.xerces.internal.xs.XSElementDeclaration
                                    public isSubstitutionGroupExclusion(arg0: short): boolean
                                    public getSubstitutionGroupExclusions(): short
                                    public isDisallowedSubstitution(arg0: short): boolean
                                    public getDisallowedSubstitutions(): short
                                    public getAbstract(): boolean
                                    public getAnnotation(): com.sun.org.apache.xerces.internal.xs.XSAnnotation
                                    public getAnnotations(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                                    public getNamespaceItem(): com.sun.org.apache.xerces.internal.xs.XSNamespaceItem
                                    public getActualVC(): java.lang.Object
                                    public getActualVCType(): short
                                    public getItemValueTypes(): com.sun.org.apache.xerces.internal.xs.ShortList
                                    public static class: java.lang.Class<any>
                                }
                                class XSGrammarBucket {
                                    public constructor()
                                    public getGrammar(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar
                                    public putGrammar(arg0: com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar): void
                                    public putGrammar(arg0: com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar, arg1: boolean): boolean
                                    public putGrammar(arg0: com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar, arg1: boolean, arg2: boolean): boolean
                                    public getGrammars(): com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar[]
                                    public reset(): void
                                    public static class: java.lang.Class<any>
                                }
                                class XSGroupDecl implements com.sun.org.apache.xerces.internal.xs.XSModelGroupDefinition {
                                    public fName: string
                                    public fTargetNamespace: string
                                    public fModelGroup: com.sun.org.apache.xerces.internal.impl.xs.XSModelGroupImpl
                                    public fAnnotations: com.sun.org.apache.xerces.internal.xs.XSObjectList
                                    public constructor()
                                    public getType(): short
                                    public getName(): string
                                    public getNamespace(): string
                                    public getModelGroup(): com.sun.org.apache.xerces.internal.xs.XSModelGroup
                                    public getAnnotation(): com.sun.org.apache.xerces.internal.xs.XSAnnotation
                                    public getAnnotations(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                                    public getNamespaceItem(): com.sun.org.apache.xerces.internal.xs.XSNamespaceItem
                                    public static class: java.lang.Class<any>
                                }
                                class XSImplementationImpl extends com.sun.org.apache.xerces.internal.dom.CoreDOMImplementationImpl implements com.sun.org.apache.xerces.internal.xs.XSImplementation {
                                    public constructor()
                                    public static getDOMImplementation(): org.w3c.dom.DOMImplementation
                                    public hasFeature(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                                    public createXSLoader(arg0: com.sun.org.apache.xerces.internal.xs.StringList): com.sun.org.apache.xerces.internal.xs.XSLoader
                                    public getRecognizedVersions(): com.sun.org.apache.xerces.internal.xs.StringList
                                    public static class: java.lang.Class<any>
                                }
                                class XSLoaderImpl implements com.sun.org.apache.xerces.internal.xs.XSLoader , org.w3c.dom.DOMConfiguration {
                                    public constructor()
                                    public getConfig(): org.w3c.dom.DOMConfiguration
                                    public loadURIList(arg0: com.sun.org.apache.xerces.internal.xs.StringList): com.sun.org.apache.xerces.internal.xs.XSModel
                                    public loadInputList(arg0: com.sun.org.apache.xerces.internal.xs.LSInputList): com.sun.org.apache.xerces.internal.xs.XSModel
                                    public loadURI(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSModel
                                    public load(arg0: org.w3c.dom.ls.LSInput): com.sun.org.apache.xerces.internal.xs.XSModel
                                    public setParameter(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                    public getParameter(arg0: java.lang.String | string): java.lang.Object
                                    public canSetParameter(arg0: java.lang.String | string, arg1: java.lang.Object): boolean
                                    public getParameterNames(): org.w3c.dom.DOMStringList
                                    public static class: java.lang.Class<any>
                                }
                                class XSMessageFormatter implements com.sun.org.apache.xerces.internal.util.MessageFormatter {
                                    public static SCHEMA_DOMAIN: string
                                    public constructor()
                                    public formatMessage(arg0: java.util.Locale, arg1: java.lang.String | string, arg2: java.lang.Object[]): string
                                    public static class: java.lang.Class<any>
                                }
                                class XSMessageFormatter$$Lambda implements com.sun.org.apache.xerces.internal.util.MessageFormatter {
                                    public static SCHEMA_DOMAIN: string
                                }
                                class XSModelGroupImpl implements com.sun.org.apache.xerces.internal.xs.XSModelGroup {
                                    public static MODELGROUP_CHOICE: short
                                    public static MODELGROUP_SEQUENCE: short
                                    public static MODELGROUP_ALL: short
                                    public fCompositor: short
                                    public fParticles: com.sun.org.apache.xerces.internal.impl.xs.XSParticleDecl[]
                                    public fParticleCount: int
                                    public fAnnotations: com.sun.org.apache.xerces.internal.xs.XSObjectList
                                    public constructor()
                                    public isEmpty(): boolean
                                    public minEffectiveTotalRange(): int
                                    public maxEffectiveTotalRange(): int
                                    public toString(): string
                                    public reset(): void
                                    public getType(): short
                                    public getName(): string
                                    public getNamespace(): string
                                    public getCompositor(): short
                                    public getParticles(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                                    public getAnnotation(): com.sun.org.apache.xerces.internal.xs.XSAnnotation
                                    public getAnnotations(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                                    public getNamespaceItem(): com.sun.org.apache.xerces.internal.xs.XSNamespaceItem
                                    public static class: java.lang.Class<any>
                                }
                                class XSModelImpl extends java.util.AbstractList implements com.sun.org.apache.xerces.internal.xs.XSModel , com.sun.org.apache.xerces.internal.xs.XSNamespaceItemList {
                                    public constructor(arg0: com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar[])
                                    public constructor(arg0: com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar[], arg1: short)
                                    public getNamespaces(): com.sun.org.apache.xerces.internal.xs.StringList
                                    public getNamespaceItems(): com.sun.org.apache.xerces.internal.xs.XSNamespaceItemList
                                    public getComponents(arg0: short): com.sun.org.apache.xerces.internal.xs.XSNamedMap
                                    public getComponentsByNamespace(arg0: short, arg1: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSNamedMap
                                    public getTypeDefinition(arg0: java.lang.String | string, arg1: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSTypeDefinition
                                    public getTypeDefinition(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSTypeDefinition
                                    public getAttributeDeclaration(arg0: java.lang.String | string, arg1: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSAttributeDeclaration
                                    public getAttributeDeclaration(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSAttributeDeclaration
                                    public getElementDeclaration(arg0: java.lang.String | string, arg1: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSElementDeclaration
                                    public getElementDeclaration(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSElementDeclaration
                                    public getAttributeGroup(arg0: java.lang.String | string, arg1: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSAttributeGroupDefinition
                                    public getAttributeGroup(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSAttributeGroupDefinition
                                    public getModelGroupDefinition(arg0: java.lang.String | string, arg1: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSModelGroupDefinition
                                    public getModelGroupDefinition(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSModelGroupDefinition
                                    public getNotationDeclaration(arg0: java.lang.String | string, arg1: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSNotationDeclaration
                                    public getNotationDeclaration(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSNotationDeclaration
                                    public getAnnotations(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                                    public hasIDConstraints(): boolean
                                    public getSubstitutionGroup(arg0: com.sun.org.apache.xerces.internal.xs.XSElementDeclaration): com.sun.org.apache.xerces.internal.xs.XSObjectList
                                    public getLength(): int
                                    public item(arg0: int): com.sun.org.apache.xerces.internal.xs.XSNamespaceItem
                                    public get(arg0: int): java.lang.Object
                                    public size(): int
                                    public iterator(): java.util.Iterator
                                    public listIterator(): java.util.ListIterator
                                    public listIterator(arg0: int): java.util.ListIterator
                                    public toArray(): java.lang.Object[]
                                    public toArray(arg0: java.lang.Object[]): java.lang.Object[]
                                    public static class: java.lang.Class<any>
                                }
                                class XSNotationDecl implements com.sun.org.apache.xerces.internal.xs.XSNotationDeclaration {
                                    public fName: string
                                    public fTargetNamespace: string
                                    public fPublicId: string
                                    public fSystemId: string
                                    public fAnnotations: com.sun.org.apache.xerces.internal.xs.XSObjectList
                                    public constructor()
                                    public getType(): short
                                    public getName(): string
                                    public getNamespace(): string
                                    public getSystemId(): string
                                    public getPublicId(): string
                                    public getAnnotation(): com.sun.org.apache.xerces.internal.xs.XSAnnotation
                                    public getAnnotations(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                                    public getNamespaceItem(): com.sun.org.apache.xerces.internal.xs.XSNamespaceItem
                                    public static class: java.lang.Class<any>
                                }
                                class XSParticleDecl implements com.sun.org.apache.xerces.internal.xs.XSParticle {
                                    public static PARTICLE_EMPTY: short
                                    public static PARTICLE_ELEMENT: short
                                    public static PARTICLE_WILDCARD: short
                                    public static PARTICLE_MODELGROUP: short
                                    public static PARTICLE_ZERO_OR_MORE: short
                                    public static PARTICLE_ZERO_OR_ONE: short
                                    public static PARTICLE_ONE_OR_MORE: short
                                    public fType: short
                                    public fValue: com.sun.org.apache.xerces.internal.xs.XSTerm
                                    public fMinOccurs: int
                                    public fMaxOccurs: int
                                    public fAnnotations: com.sun.org.apache.xerces.internal.xs.XSObjectList
                                    public constructor()
                                    public makeClone(): com.sun.org.apache.xerces.internal.impl.xs.XSParticleDecl
                                    public emptiable(): boolean
                                    public isEmpty(): boolean
                                    public minEffectiveTotalRange(): int
                                    public maxEffectiveTotalRange(): int
                                    public toString(): string
                                    public reset(): void
                                    public getType(): short
                                    public getName(): string
                                    public getNamespace(): string
                                    public getMinOccurs(): int
                                    public getMaxOccursUnbounded(): boolean
                                    public getMaxOccurs(): int
                                    public getTerm(): com.sun.org.apache.xerces.internal.xs.XSTerm
                                    public getNamespaceItem(): com.sun.org.apache.xerces.internal.xs.XSNamespaceItem
                                    public getAnnotations(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                                    public static class: java.lang.Class<any>
                                }
                                class XSWildcardDecl implements com.sun.org.apache.xerces.internal.xs.XSWildcard {
                                    public static ABSENT: string
                                    public fType: short
                                    public fProcessContents: short
                                    public fNamespaceList: java.lang.String[]
                                    public fAnnotations: com.sun.org.apache.xerces.internal.xs.XSObjectList
                                    public constructor()
                                    public allowNamespace(arg0: java.lang.String | string): boolean
                                    public isSubsetOf(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSWildcardDecl): boolean
                                    public weakerProcessContents(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSWildcardDecl): boolean
                                    public performUnionWith(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSWildcardDecl, arg1: short): com.sun.org.apache.xerces.internal.impl.xs.XSWildcardDecl
                                    public performIntersectionWith(arg0: com.sun.org.apache.xerces.internal.impl.xs.XSWildcardDecl, arg1: short): com.sun.org.apache.xerces.internal.impl.xs.XSWildcardDecl
                                    public toString(): string
                                    public getType(): short
                                    public getName(): string
                                    public getNamespace(): string
                                    public getConstraintType(): short
                                    public getNsConstraintList(): com.sun.org.apache.xerces.internal.xs.StringList
                                    public getProcessContents(): short
                                    public getProcessContentsAsString(): string
                                    public getAnnotation(): com.sun.org.apache.xerces.internal.xs.XSAnnotation
                                    public getAnnotations(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                                    public getNamespaceItem(): com.sun.org.apache.xerces.internal.xs.XSNamespaceItem
                                    public static class: java.lang.Class<any>
                                }
                            }
                            class Constants {
                                public static NS_XMLSCHEMA: string
                                public static NS_DTD: string
                                public static SUN_SCHEMA_FEATURE_PREFIX: string
                                public static SUN_REPORT_IGNORED_ELEMENT_CONTENT_WHITESPACE: string
                                public static ZEPHYR_PROPERTY_PREFIX: string
                                public static STAX_PROPERTIES: string
                                public static STAX_ENTITY_RESOLVER_PROPERTY: string
                                public static STAX_REPORT_CDATA_EVENT: string
                                public static READER_IN_DEFINED_STATE: string
                                public static ADD_NAMESPACE_DECL_AS_ATTRIBUTE: string
                                public static ESCAPE_CHARACTERS: string
                                public static REUSE_INSTANCE: string
                                public static SUN_DOM_PROPERTY_PREFIX: string
                                public static SUN_DOM_ANCESTOR_CHECCK: string
                                public static IGNORE_EXTERNAL_DTD: string
                                public static SAX_FEATURE_PREFIX: string
                                public static NAMESPACES_FEATURE: string
                                public static NAMESPACE_PREFIXES_FEATURE: string
                                public static STRING_INTERNING_FEATURE: string
                                public static VALIDATION_FEATURE: string
                                public static EXTERNAL_GENERAL_ENTITIES_FEATURE: string
                                public static EXTERNAL_PARAMETER_ENTITIES_FEATURE: string
                                public static LEXICAL_HANDLER_PARAMETER_ENTITIES_FEATURE: string
                                public static IS_STANDALONE_FEATURE: string
                                public static RESOLVE_DTD_URIS_FEATURE: string
                                public static USE_ATTRIBUTES2_FEATURE: string
                                public static USE_LOCATOR2_FEATURE: string
                                public static USE_ENTITY_RESOLVER2_FEATURE: string
                                public static UNICODE_NORMALIZATION_CHECKING_FEATURE: string
                                public static XMLNS_URIS_FEATURE: string
                                public static XML_11_FEATURE: string
                                public static ALLOW_DTD_EVENTS_AFTER_ENDDTD_FEATURE: string
                                public static SAX_PROPERTY_PREFIX: string
                                public static DECLARATION_HANDLER_PROPERTY: string
                                public static LEXICAL_HANDLER_PROPERTY: string
                                public static DOM_NODE_PROPERTY: string
                                public static XML_STRING_PROPERTY: string
                                public static FEATURE_SECURE_PROCESSING: string
                                public static ORACLE_FEATURE_SERVICE_MECHANISM: string
                                public static DOCUMENT_XML_VERSION_PROPERTY: string
                                public static JAXP_PROPERTY_PREFIX: string
                                public static SCHEMA_SOURCE: string
                                public static SCHEMA_LANGUAGE: string
                                public static JAXPAPI_PROPERTY_PREFIX: string
                                public static ORACLE_JAXP_PROPERTY_PREFIX: string
                                public static XML_SECURITY_PROPERTY_MANAGER: string
                                public static SP_ACCESS_EXTERNAL_DTD: string
                                public static SP_ACCESS_EXTERNAL_SCHEMA: string
                                public static ACCESS_EXTERNAL_ALL: string
                                public static EXTERNAL_ACCESS_DEFAULT_FSP: string
                                public static EXTERNAL_ACCESS_DEFAULT: string
                                public static IS_JDK8_OR_ABOVE: boolean
                                public static JDK_ENTITY_EXPANSION_LIMIT: string
                                public static JDK_ELEMENT_ATTRIBUTE_LIMIT: string
                                public static JDK_MAX_OCCUR_LIMIT: string
                                public static JDK_TOTAL_ENTITY_SIZE_LIMIT: string
                                public static JDK_GENERAL_ENTITY_SIZE_LIMIT: string
                                public static JDK_ENTITY_REPLACEMENT_LIMIT: string
                                public static JDK_PARAMETER_ENTITY_SIZE_LIMIT: string
                                public static JDK_XML_NAME_LIMIT: string
                                public static JDK_MAX_ELEMENT_DEPTH: string
                                public static JDK_ENTITY_COUNT_INFO: string
                                public static SP_ENTITY_EXPANSION_LIMIT: string
                                public static SP_ELEMENT_ATTRIBUTE_LIMIT: string
                                public static SP_MAX_OCCUR_LIMIT: string
                                public static SP_TOTAL_ENTITY_SIZE_LIMIT: string
                                public static SP_GENERAL_ENTITY_SIZE_LIMIT: string
                                public static SP_ENTITY_REPLACEMENT_LIMIT: string
                                public static SP_PARAMETER_ENTITY_SIZE_LIMIT: string
                                public static SP_XML_NAME_LIMIT: string
                                public static SP_MAX_ELEMENT_DEPTH: string
                                public static ENTITY_EXPANSION_LIMIT: string
                                public static ELEMENT_ATTRIBUTE_LIMIT: string
                                public static MAX_OCCUR_LIMIT: string
                                public static JDK_YES: string
                                public static INCLUDE_COMMENTS_FEATURE: string
                                public static CREATE_CDATA_NODES_FEATURE: string
                                public static LOAD_AS_INFOSET: string
                                public static DOM_CANONICAL_FORM: string
                                public static DOM_CDATA_SECTIONS: string
                                public static DOM_COMMENTS: string
                                public static DOM_CHARSET_OVERRIDES_XML_ENCODING: string
                                public static DOM_DATATYPE_NORMALIZATION: string
                                public static DOM_ENTITIES: string
                                public static DOM_INFOSET: string
                                public static DOM_NAMESPACES: string
                                public static DOM_NAMESPACE_DECLARATIONS: string
                                public static DOM_SUPPORTED_MEDIATYPES_ONLY: string
                                public static DOM_VALIDATE_IF_SCHEMA: string
                                public static DOM_VALIDATE: string
                                public static DOM_ELEMENT_CONTENT_WHITESPACE: string
                                public static DOM_DISCARD_DEFAULT_CONTENT: string
                                public static DOM_NORMALIZE_CHARACTERS: string
                                public static DOM_CHECK_CHAR_NORMALIZATION: string
                                public static DOM_WELLFORMED: string
                                public static DOM_SPLIT_CDATA: string
                                public static DOM_FORMAT_PRETTY_PRINT: string
                                public static DOM_XMLDECL: string
                                public static DOM_UNKNOWNCHARS: string
                                public static DOM_CERTIFIED: string
                                public static DOM_DISALLOW_DOCTYPE: string
                                public static DOM_IGNORE_UNKNOWN_CHARACTER_DENORMALIZATIONS: string
                                public static DOM_RESOURCE_RESOLVER: string
                                public static DOM_ERROR_HANDLER: string
                                public static DOM_SCHEMA_TYPE: string
                                public static DOM_SCHEMA_LOCATION: string
                                public static DOM_ANCESTOR_CHECCK: string
                                public static DOM_PSVI: string
                                public static XERCES_FEATURE_PREFIX: string
                                public static SCHEMA_VALIDATION_FEATURE: string
                                public static SCHEMA_NORMALIZED_VALUE: string
                                public static SCHEMA_ELEMENT_DEFAULT: string
                                public static SCHEMA_FULL_CHECKING: string
                                public static SCHEMA_AUGMENT_PSVI: string
                                public static DYNAMIC_VALIDATION_FEATURE: string
                                public static WARN_ON_DUPLICATE_ATTDEF_FEATURE: string
                                public static WARN_ON_UNDECLARED_ELEMDEF_FEATURE: string
                                public static WARN_ON_DUPLICATE_ENTITYDEF_FEATURE: string
                                public static ALLOW_JAVA_ENCODINGS_FEATURE: string
                                public static DISALLOW_DOCTYPE_DECL_FEATURE: string
                                public static CONTINUE_AFTER_FATAL_ERROR_FEATURE: string
                                public static LOAD_DTD_GRAMMAR_FEATURE: string
                                public static LOAD_EXTERNAL_DTD_FEATURE: string
                                public static DEFER_NODE_EXPANSION_FEATURE: string
                                public static CREATE_ENTITY_REF_NODES_FEATURE: string
                                public static INCLUDE_IGNORABLE_WHITESPACE: string
                                public static DEFAULT_ATTRIBUTE_VALUES_FEATURE: string
                                public static VALIDATE_CONTENT_MODELS_FEATURE: string
                                public static VALIDATE_DATATYPES_FEATURE: string
                                public static BALANCE_SYNTAX_TREES: string
                                public static NOTIFY_CHAR_REFS_FEATURE: string
                                public static NOTIFY_BUILTIN_REFS_FEATURE: string
                                public static STANDARD_URI_CONFORMANT_FEATURE: string
                                public static GENERATE_SYNTHETIC_ANNOTATIONS_FEATURE: string
                                public static VALIDATE_ANNOTATIONS_FEATURE: string
                                public static HONOUR_ALL_SCHEMALOCATIONS_FEATURE: string
                                public static NAMESPACE_GROWTH_FEATURE: string
                                public static TOLERATE_DUPLICATES_FEATURE: string
                                public static XINCLUDE_FEATURE: string
                                public static XINCLUDE_FIXUP_BASE_URIS_FEATURE: string
                                public static XINCLUDE_FIXUP_LANGUAGE_FEATURE: string
                                public static USE_GRAMMAR_POOL_ONLY_FEATURE: string
                                public static PARSER_SETTINGS: string
                                public static XINCLUDE_AWARE: string
                                public static IGNORE_SCHEMA_LOCATION_HINTS: string
                                public static CHANGE_IGNORABLE_CHARACTERS_INTO_IGNORABLE_WHITESPACES: string
                                public static XERCES_PROPERTY_PREFIX: string
                                public static CURRENT_ELEMENT_NODE_PROPERTY: string
                                public static DOCUMENT_CLASS_NAME_PROPERTY: string
                                public static SYMBOL_TABLE_PROPERTY: string
                                public static ERROR_REPORTER_PROPERTY: string
                                public static ERROR_HANDLER_PROPERTY: string
                                public static XINCLUDE_HANDLER_PROPERTY: string
                                public static XPOINTER_HANDLER_PROPERTY: string
                                public static ENTITY_MANAGER_PROPERTY: string
                                public static BUFFER_SIZE_PROPERTY: string
                                public static SECURITY_MANAGER_PROPERTY: string
                                public static LOCALE_PROPERTY: string
                                public static SECURITY_MANAGER: string
                                public static ENTITY_RESOLVER_PROPERTY: string
                                public static XMLGRAMMAR_POOL_PROPERTY: string
                                public static DATATYPE_VALIDATOR_FACTORY_PROPERTY: string
                                public static DOCUMENT_SCANNER_PROPERTY: string
                                public static DTD_SCANNER_PROPERTY: string
                                public static DTD_PROCESSOR_PROPERTY: string
                                public static VALIDATOR_PROPERTY: string
                                public static DTD_VALIDATOR_PROPERTY: string
                                public static SCHEMA_VALIDATOR_PROPERTY: string
                                public static SCHEMA_LOCATION: string
                                public static SCHEMA_NONS_LOCATION: string
                                public static NAMESPACE_BINDER_PROPERTY: string
                                public static NAMESPACE_CONTEXT_PROPERTY: string
                                public static VALIDATION_MANAGER_PROPERTY: string
                                public static XPOINTER_SCHEMA_PROPERTY: string
                                public static SCHEMA_DV_FACTORY_PROPERTY: string
                                public static ELEMENT_PSVI: string
                                public static ATTRIBUTE_PSVI: string
                                public static ATTRIBUTE_DECLARED: string
                                public static TYPEINFO: string
                                public static ID_ATTRIBUTE: string
                                public static ENTITY_SKIPPED: string
                                public static CHAR_REF_PROBABLE_WS: string
                                public static LAST_ENTITY: string
                                public static XML_VERSION_ERROR: short
                                public static XML_VERSION_1_0: short
                                public static XML_VERSION_1_1: short
                                public static ANONYMOUS_TYPE_NAMESPACE: string
                                public static SCHEMA_1_1_SUPPORT: boolean
                                public static SCHEMA_VERSION_1_0: short
                                public static SCHEMA_VERSION_1_0_EXTENDED: short
                                public static getSAXFeatures(): java.util.Enumeration
                                public static getSAXProperties(): java.util.Enumeration
                                public static getXercesFeatures(): java.util.Enumeration
                                public static getXercesProperties(): java.util.Enumeration
                                public static isJavaVersionAtLeast(arg0: int): boolean
                                public static main(arg0: java.lang.String[]): void
                                public static class: java.lang.Class<any>
                            }
                            interface ExternalSubsetResolver extends com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver {
                                getExternalSubset(arg0: com.sun.org.apache.xerces.internal.xni.grammars.XMLDTDDescription): com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource
                            }
                            class PropertyManager {
                                public static STAX_NOTATIONS: string
                                public static STAX_ENTITIES: string
                                public static CONTEXT_READER: int
                                public static CONTEXT_WRITER: int
                                public constructor(arg0: int)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.impl.PropertyManager)
                                public containsProperty(arg0: java.lang.String | string): boolean
                                public getProperty(arg0: java.lang.String | string): java.lang.Object
                                public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                public toString(): string
                                public static class: java.lang.Class<any>
                            }
                            interface RevalidationHandler extends com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentFilter {
                                characterData(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): boolean
                            }
                            class XML11DTDScannerImpl extends com.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl {
                                public constructor()
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.impl.XMLErrorReporter, arg2: com.sun.org.apache.xerces.internal.impl.XMLEntityManager | com.sun.org.apache.xerces.internal.impl.XMLEntityManager$$Lambda)
                                protected scanPubidLiteral(arg0: com.sun.org.apache.xerces.internal.xni.XMLString): boolean
                                protected normalizeWhitespace(arg0: com.sun.org.apache.xerces.internal.xni.XMLString): void
                                protected normalizeWhitespace(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: int): void
                                protected isUnchangedByNormalization(arg0: com.sun.org.apache.xerces.internal.xni.XMLString): int
                                protected isInvalid(arg0: int): boolean
                                protected isInvalidLiteral(arg0: int): boolean
                                protected isValidNameChar(arg0: int): boolean
                                protected isValidNameStartChar(arg0: int): boolean
                                protected isValidNCName(arg0: int): boolean
                                protected isValidNameStartHighSurrogate(arg0: int): boolean
                                protected versionSupported(arg0: java.lang.String | string): boolean
                                protected getVersionNotSupportedKey(): string
                                public static class: java.lang.Class<any>
                            }
                            class XML11DocumentScannerImpl extends com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl {
                                public constructor()
                                protected scanContent(arg0: com.sun.org.apache.xerces.internal.util.XMLStringBuffer): int
                                protected scanAttributeValue(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.XMLString, arg2: java.lang.String | string, arg3: boolean, arg4: java.lang.String | string, arg5: boolean): boolean
                                protected scanPubidLiteral(arg0: com.sun.org.apache.xerces.internal.xni.XMLString): boolean
                                protected normalizeWhitespace(arg0: com.sun.org.apache.xerces.internal.xni.XMLString): void
                                protected normalizeWhitespace(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: int): void
                                protected isUnchangedByNormalization(arg0: com.sun.org.apache.xerces.internal.xni.XMLString): int
                                protected isInvalid(arg0: int): boolean
                                protected isInvalidLiteral(arg0: int): boolean
                                protected isValidNameChar(arg0: int): boolean
                                protected isValidNameStartChar(arg0: int): boolean
                                protected isValidNCName(arg0: int): boolean
                                protected isValidNameStartHighSurrogate(arg0: int): boolean
                                protected versionSupported(arg0: java.lang.String | string): boolean
                                protected getVersionNotSupportedKey(): string
                                public static class: java.lang.Class<any>
                            }
                            class XML11EntityScanner extends com.sun.org.apache.xerces.internal.impl.XMLEntityScanner {
                                public constructor()
                                public peekChar(): int
                                protected scanChar(arg0: com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType): int
                                protected scanNmtoken(): string
                                protected scanName(arg0: com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType): string
                                protected scanNCName(): string
                                protected scanQName(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType): boolean
                                protected scanContent(arg0: com.sun.org.apache.xerces.internal.xni.XMLString): int
                                protected scanLiteral(arg0: int, arg1: com.sun.org.apache.xerces.internal.xni.XMLString, arg2: boolean): int
                                protected scanData(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.util.XMLStringBuffer): boolean
                                protected skipChar(arg0: int, arg1: com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType): boolean
                                protected skipSpaces(): boolean
                                protected skipString(arg0: java.lang.String | string): boolean
                                public static class: java.lang.Class<any>
                            }
                            class XML11NSDocumentScannerImpl extends com.sun.org.apache.xerces.internal.impl.XML11DocumentScannerImpl {
                                protected fBindNamespaces: boolean
                                protected fPerformValidation: boolean
                                public constructor()
                                public setDTDValidator(arg0: com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidatorFilter): void
                                protected scanStartElement(): boolean
                                protected scanStartElementName(): void
                                protected scanStartElementAfterName(): boolean
                                protected scanAttribute(arg0: com.sun.org.apache.xerces.internal.util.XMLAttributesImpl): void
                                protected scanEndElement(): int
                                public reset(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager): void
                                protected createContentDriver(): com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$Driver
                                public next(): int
                                public static class: java.lang.Class<any>
                            }
                            class XML11NamespaceBinder extends com.sun.org.apache.xerces.internal.impl.XMLNamespaceBinder {
                                public constructor()
                                protected prefixBoundToNullURI(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                                public static class: java.lang.Class<any>
                            }
                            class XMLDTDScannerImpl extends com.sun.org.apache.xerces.internal.impl.XMLScanner implements com.sun.org.apache.xerces.internal.xni.parser.XMLDTDScanner , com.sun.org.apache.xerces.internal.xni.parser.XMLComponent , com.sun.org.apache.xerces.internal.impl.XMLEntityHandler {
                                protected static SCANNER_STATE_END_OF_INPUT: int
                                protected static SCANNER_STATE_TEXT_DECL: int
                                protected static SCANNER_STATE_MARKUP_DECL: int
                                public fDTDHandler: com.sun.org.apache.xerces.internal.xni.XMLDTDHandler
                                protected fDTDContentModelHandler: com.sun.org.apache.xerces.internal.xni.XMLDTDContentModelHandler
                                protected fScannerState: int
                                protected fStandalone: boolean
                                protected fSeenExternalDTD: boolean
                                protected fSeenExternalPE: boolean
                                public constructor()
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.impl.XMLErrorReporter, arg2: com.sun.org.apache.xerces.internal.impl.XMLEntityManager | com.sun.org.apache.xerces.internal.impl.XMLEntityManager$$Lambda)
                                public setInputSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource): void
                                public setLimitAnalyzer(arg0: com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer): void
                                public scanDTDExternalSubset(arg0: boolean): boolean
                                public scanDTDInternalSubset(arg0: boolean, arg1: boolean, arg2: boolean): boolean
                                public skipDTD(arg0: boolean): boolean
                                public reset(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager): void
                                public reset(): void
                                public reset(arg0: com.sun.org.apache.xerces.internal.impl.PropertyManager): void
                                public getRecognizedFeatures(): java.lang.String[]
                                public getRecognizedProperties(): java.lang.String[]
                                public getFeatureDefault(arg0: java.lang.String | string): boolean
                                public getPropertyDefault(arg0: java.lang.String | string): java.lang.Object
                                public setDTDHandler(arg0: com.sun.org.apache.xerces.internal.xni.XMLDTDHandler): void
                                public getDTDHandler(): com.sun.org.apache.xerces.internal.xni.XMLDTDHandler
                                public setDTDContentModelHandler(arg0: com.sun.org.apache.xerces.internal.xni.XMLDTDContentModelHandler): void
                                public getDTDContentModelHandler(): com.sun.org.apache.xerces.internal.xni.XMLDTDContentModelHandler
                                public startEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                protected setScannerState(arg0: int): void
                                protected scanningInternalSubset(): boolean
                                protected startPE(arg0: java.lang.String | string, arg1: boolean): void
                                protected scanTextDecl(): boolean
                                protected scanPIData(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLString): void
                                protected scanComment(): void
                                protected scanElementDecl(): void
                                protected scanAttlistDecl(): void
                                protected scanAttDefaultDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.XMLString, arg4: com.sun.org.apache.xerces.internal.xni.XMLString): string
                                protected scanEntityValue(arg0: java.lang.String | string, arg1: boolean, arg2: com.sun.org.apache.xerces.internal.xni.XMLString, arg3: com.sun.org.apache.xerces.internal.xni.XMLString): void
                                protected scanDecls(arg0: boolean): boolean
                                public getGrammar(): com.sun.xml.internal.stream.dtd.nonvalidating.DTDGrammar
                                public static class: java.lang.Class<any>
                            }
                            class XMLDocumentFragmentScannerImpl extends com.sun.org.apache.xerces.internal.impl.XMLScanner implements com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentScanner , com.sun.org.apache.xerces.internal.xni.parser.XMLComponent , com.sun.org.apache.xerces.internal.impl.XMLEntityHandler , com.sun.xml.internal.stream.XMLBufferListener {
                                protected fElementAttributeLimit: int
                                protected fXMLNameLimit: int
                                protected fExternalSubsetResolver: com.sun.org.apache.xerces.internal.impl.ExternalSubsetResolver
                                protected static SCANNER_STATE_START_OF_MARKUP: int
                                protected static SCANNER_STATE_CONTENT: int
                                protected static SCANNER_STATE_PI: int
                                protected static SCANNER_STATE_DOCTYPE: int
                                protected static SCANNER_STATE_XML_DECL: int
                                protected static SCANNER_STATE_ROOT_ELEMENT: int
                                protected static SCANNER_STATE_COMMENT: int
                                protected static SCANNER_STATE_REFERENCE: int
                                protected static SCANNER_STATE_ATTRIBUTE: int
                                protected static SCANNER_STATE_ATTRIBUTE_VALUE: int
                                protected static SCANNER_STATE_END_OF_INPUT: int
                                protected static SCANNER_STATE_TERMINATED: int
                                protected static SCANNER_STATE_CDATA: int
                                protected static SCANNER_STATE_TEXT_DECL: int
                                protected static SCANNER_STATE_CHARACTER_DATA: int
                                protected static SCANNER_STATE_START_ELEMENT_TAG: int
                                protected static SCANNER_STATE_END_ELEMENT_TAG: int
                                protected static SCANNER_STATE_CHAR_REFERENCE: int
                                protected static SCANNER_STATE_BUILT_IN_REFS: int
                                protected static NOTIFY_BUILTIN_REFS: string
                                protected static ENTITY_RESOLVER: string
                                protected static STANDARD_URI_CONFORMANT: string
                                protected static DEBUG_START_END_ELEMENT: boolean
                                protected static DEBUG_NEXT: boolean
                                protected static DEBUG: boolean
                                protected static DEBUG_COALESCE: boolean
                                protected fDocumentHandler: com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler
                                protected fScannerLastState: int
                                protected fEntityStore: com.sun.xml.internal.stream.XMLEntityStorage
                                protected fEntityStack: int[]
                                protected fMarkupDepth: int
                                protected fEmptyElement: boolean
                                protected fReadingAttributes: boolean
                                protected fScannerState: int
                                protected fInScanContent: boolean
                                protected fLastSectionWasCData: boolean
                                protected fLastSectionWasEntityReference: boolean
                                protected fLastSectionWasCharacterData: boolean
                                protected fHasExternalDTD: boolean
                                protected fStandaloneSet: boolean
                                protected fStandalone: boolean
                                protected fVersion: string
                                protected fCurrentElement: com.sun.org.apache.xerces.internal.xni.QName
                                protected fElementStack: com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$ElementStack
                                protected fElementStack2: com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$ElementStack2
                                protected fPITarget: string
                                protected fPIData: com.sun.org.apache.xerces.internal.xni.XMLString
                                protected fNotifyBuiltInRefs: boolean
                                protected fSupportDTD: boolean
                                protected fReplaceEntityReferences: boolean
                                protected fSupportExternalEntities: boolean
                                protected fReportCdataEvent: boolean
                                protected fIsCoalesce: boolean
                                protected fDeclaredEncoding: string
                                protected fDisallowDoctype: boolean
                                protected fAccessExternalDTD: string
                                protected fStrictURI: boolean
                                protected fDriver: com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$Driver
                                protected fContentDriver: com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$Driver
                                protected fElementQName: com.sun.org.apache.xerces.internal.xni.QName
                                protected fAttributeQName: com.sun.org.apache.xerces.internal.xni.QName
                                protected fAttributes: com.sun.org.apache.xerces.internal.util.XMLAttributesIteratorImpl
                                protected fTempString: com.sun.org.apache.xerces.internal.xni.XMLString
                                protected fTempString2: com.sun.org.apache.xerces.internal.xni.XMLString
                                protected fStringBuffer: com.sun.org.apache.xerces.internal.util.XMLStringBuffer
                                protected fStringBuffer2: com.sun.org.apache.xerces.internal.util.XMLStringBuffer
                                protected fContentBuffer: com.sun.org.apache.xerces.internal.util.XMLStringBuffer
                                protected fScanToEnd: boolean
                                protected dtdGrammarUtil: com.sun.xml.internal.stream.dtd.DTDGrammarUtil
                                protected fAddDefaultAttr: boolean
                                protected foundBuiltInRefs: boolean
                                protected fElementRawname: string
                                protected fShouldSkip: boolean
                                protected fAdd: boolean
                                protected fSkip: boolean
                                protected fUsebuffer: boolean
                                public constructor()
                                public setInputSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource): void
                                public scanDocument(arg0: boolean): boolean
                                public getElementQName(): com.sun.org.apache.xerces.internal.xni.QName
                                public next(): int
                                public reset(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager): void
                                public reset(arg0: com.sun.org.apache.xerces.internal.impl.PropertyManager): void
                                public getRecognizedFeatures(): java.lang.String[]
                                public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                public getRecognizedProperties(): java.lang.String[]
                                public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                public getFeatureDefault(arg0: java.lang.String | string): boolean
                                public getPropertyDefault(arg0: java.lang.String | string): java.lang.Object
                                public setDocumentHandler(arg0: com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler): void
                                public getDocumentHandler(): com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler
                                public startEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                protected createContentDriver(): com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$Driver
                                protected scanXMLDeclOrTextDecl(arg0: boolean): void
                                public getPITarget(): string
                                public getPIData(): com.sun.org.apache.xerces.internal.util.XMLStringBuffer
                                public getCharacterData(): com.sun.org.apache.xerces.internal.xni.XMLString
                                protected scanPIData(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.util.XMLStringBuffer): void
                                protected scanComment(): void
                                public getComment(): string
                                protected skipElement(): boolean
                                protected scanStartElement(): boolean
                                protected seekCloseOfStartTag(): boolean
                                public hasAttributes(): boolean
                                public getAttributeIterator(): com.sun.org.apache.xerces.internal.util.XMLAttributesIteratorImpl
                                public standaloneSet(): boolean
                                public isStandAlone(): boolean
                                protected scanAttribute(arg0: com.sun.org.apache.xerces.internal.xni.XMLAttributes): void
                                protected scanContent(arg0: com.sun.org.apache.xerces.internal.util.XMLStringBuffer): int
                                protected scanCDATASection(arg0: com.sun.org.apache.xerces.internal.util.XMLStringBuffer, arg1: boolean): boolean
                                protected scanEndElement(): int
                                protected scanCharReference(): void
                                protected scanEntityReference(arg0: com.sun.org.apache.xerces.internal.util.XMLStringBuffer): void
                                protected setScannerState(arg0: int): void
                                protected setDriver(arg0: com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$Driver): void
                                protected getScannerStateName(arg0: int): string
                                public getEntityName(): string
                                public getDriverName(arg0: com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$Driver): string
                                protected getString(): com.sun.org.apache.xerces.internal.xni.XMLString
                                public refresh(): void
                                public refresh(arg0: int): void
                                public static class: java.lang.Class<any>
                            }
                            class XMLDocumentScannerImpl extends com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl {
                                protected static SCANNER_STATE_XML_DECL: int
                                protected static SCANNER_STATE_PROLOG: int
                                protected static SCANNER_STATE_TRAILING_MISC: int
                                protected static SCANNER_STATE_DTD_INTERNAL_DECLS: int
                                protected static SCANNER_STATE_DTD_EXTERNAL: int
                                protected static SCANNER_STATE_DTD_EXTERNAL_DECLS: int
                                protected static SCANNER_STATE_NO_SUCH_ELEMENT_EXCEPTION: int
                                protected static DOCUMENT_SCANNER: string
                                protected static LOAD_EXTERNAL_DTD: string
                                protected static DISALLOW_DOCTYPE_DECL_FEATURE: string
                                protected static DTD_SCANNER: string
                                protected static VALIDATION_MANAGER: string
                                protected static NAMESPACE_CONTEXT: string
                                protected fDTDScanner: com.sun.org.apache.xerces.internal.xni.parser.XMLDTDScanner
                                protected fValidationManager: com.sun.org.apache.xerces.internal.impl.validation.ValidationManager
                                protected fDTDDecl: com.sun.org.apache.xerces.internal.util.XMLStringBuffer
                                protected fReadingDTD: boolean
                                protected fAddedListener: boolean
                                protected fDoctypeName: string
                                protected fDoctypePublicId: string
                                protected fDoctypeSystemId: string
                                protected fNamespaceContext: com.sun.org.apache.xerces.internal.xni.NamespaceContext
                                protected fLoadExternalDTD: boolean
                                protected fSeenDoctypeDecl: boolean
                                protected fScanEndElement: boolean
                                protected fXMLDeclDriver: com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$Driver
                                protected fPrologDriver: com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$Driver
                                protected fDTDDriver: com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$Driver
                                protected fTrailingMiscDriver: com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$Driver
                                protected fStartPos: int
                                protected fEndPos: int
                                protected fSeenInternalSubset: boolean
                                public constructor()
                                public setInputSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource): void
                                public getScannetState(): int
                                public reset(arg0: com.sun.org.apache.xerces.internal.impl.PropertyManager): void
                                public reset(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager): void
                                public getRecognizedFeatures(): java.lang.String[]
                                public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                public getRecognizedProperties(): java.lang.String[]
                                public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                public getFeatureDefault(arg0: java.lang.String | string): boolean
                                public getPropertyDefault(arg0: java.lang.String | string): java.lang.Object
                                public startEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public getDTDDecl(): com.sun.org.apache.xerces.internal.util.XMLStringBuffer
                                public getCharacterEncodingScheme(): string
                                public next(): int
                                public getNamespaceContext(): com.sun.org.apache.xerces.internal.xni.NamespaceContext
                                protected createContentDriver(): com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$Driver
                                protected scanDoctypeDecl(arg0: boolean): boolean
                                protected setEndDTDScanState(): void
                                protected getScannerStateName(arg0: int): string
                                public refresh(arg0: int): void
                                public static class: java.lang.Class<any>
                            }
                            interface XMLEntityDescription extends com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier {
                                setEntityName(arg0: java.lang.String | string): void
                                getEntityName(): string
                            }
                            interface XMLEntityHandler {
                                startEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                endEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                            }
                            class XMLEntityManager implements com.sun.org.apache.xerces.internal.xni.parser.XMLComponent , com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver {
                                public static DEFAULT_BUFFER_SIZE: int
                                public static DEFAULT_XMLDECL_BUFFER_SIZE: int
                                public static DEFAULT_INTERNAL_BUFFER_SIZE: int
                                protected static VALIDATION: string
                                protected fStrictURI: boolean
                                protected static EXTERNAL_GENERAL_ENTITIES: string
                                protected static EXTERNAL_PARAMETER_ENTITIES: string
                                protected static ALLOW_JAVA_ENCODINGS: string
                                protected static WARN_ON_DUPLICATE_ENTITYDEF: string
                                protected static LOAD_EXTERNAL_DTD: string
                                protected static SYMBOL_TABLE: string
                                protected static ERROR_REPORTER: string
                                protected static STANDARD_URI_CONFORMANT: string
                                protected static ENTITY_RESOLVER: string
                                protected static STAX_ENTITY_RESOLVER: string
                                protected static VALIDATION_MANAGER: string
                                protected static BUFFER_SIZE: string
                                protected static SECURITY_MANAGER: string
                                protected static PARSER_SETTINGS: string
                                protected fWarnDuplicateEntityDef: boolean
                                protected fValidation: boolean
                                protected fExternalGeneralEntities: boolean
                                protected fExternalParameterEntities: boolean
                                protected fAllowJavaEncodings: boolean
                                protected fLoadExternalDTD: boolean
                                protected fSymbolTable: com.sun.org.apache.xerces.internal.util.SymbolTable
                                protected fErrorReporter: com.sun.org.apache.xerces.internal.impl.XMLErrorReporter
                                protected fEntityResolver: com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver
                                protected fStaxEntityResolver: com.sun.xml.internal.stream.StaxEntityResolverWrapper
                                protected fPropertyManager: com.sun.org.apache.xerces.internal.impl.PropertyManager
                                protected fAccessExternalDTD: string
                                protected fValidationManager: com.sun.org.apache.xerces.internal.impl.validation.ValidationManager
                                protected fBufferSize: int
                                protected fSecurityManager: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager
                                protected fLimitAnalyzer: com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer
                                protected entityExpansionIndex: int
                                protected fStandalone: boolean
                                protected fInExternalSubset: boolean
                                protected fEntityHandler: com.sun.org.apache.xerces.internal.impl.XMLEntityHandler
                                protected fEntityScanner: com.sun.org.apache.xerces.internal.impl.XMLEntityScanner
                                protected fXML10EntityScanner: com.sun.org.apache.xerces.internal.impl.XMLEntityScanner
                                protected fXML11EntityScanner: com.sun.org.apache.xerces.internal.impl.XMLEntityScanner
                                protected fEntityExpansionCount: int
                                protected fEntities: java.util.Map<java.lang.String, com.sun.xml.internal.stream.Entity>
                                protected fEntityStack: java.util.Stack<com.sun.xml.internal.stream.Entity>
                                protected fCurrentEntity: com.sun.xml.internal.stream.Entity$ScannedEntity
                                protected fEntityStorage: com.sun.xml.internal.stream.XMLEntityStorage
                                protected defaultEncoding: java.lang.Object[]
                                public constructor()
                                public constructor(arg0: com.sun.org.apache.xerces.internal.impl.PropertyManager)
                                public addInternalEntity(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public addExternalEntity(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string): void
                                public addUnparsedEntity(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string): void
                                public getEntityStore(): com.sun.xml.internal.stream.XMLEntityStorage
                                public getEntityScanner(): com.sun.org.apache.xerces.internal.impl.XMLEntityScanner
                                public setScannerVersion(arg0: short): void
                                public setupCurrentEntity(arg0: boolean, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource, arg3: boolean, arg4: boolean): string
                                public isExternalEntity(arg0: java.lang.String | string): boolean
                                public isEntityDeclInExternalSubset(arg0: java.lang.String | string): boolean
                                public setStandalone(arg0: boolean): void
                                public isStandalone(): boolean
                                public isDeclaredEntity(arg0: java.lang.String | string): boolean
                                public isUnparsedEntity(arg0: java.lang.String | string): boolean
                                public getCurrentResourceIdentifier(): com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier
                                public setEntityHandler(arg0: com.sun.org.apache.xerces.internal.impl.XMLEntityHandler): void
                                public resolveEntityAsPerStax(arg0: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier): com.sun.xml.internal.stream.StaxXMLInputSource
                                public resolveEntity(arg0: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier): com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource
                                public startEntity(arg0: boolean, arg1: java.lang.String | string, arg2: boolean): void
                                public startDocumentEntity(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource): void
                                public startDTDEntity(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource): void
                                public startExternalSubset(): void
                                public endExternalSubset(): void
                                public startEntity(arg0: boolean, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource, arg3: boolean, arg4: boolean): void
                                public getCurrentEntity(): com.sun.xml.internal.stream.Entity$ScannedEntity
                                public getTopLevelEntity(): com.sun.xml.internal.stream.Entity$ScannedEntity
                                public closeReaders(): void
                                public endEntity(): void
                                public reset(arg0: com.sun.org.apache.xerces.internal.impl.PropertyManager): void
                                public reset(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager): void
                                public reset(): void
                                public getRecognizedFeatures(): java.lang.String[]
                                public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                public setLimitAnalyzer(arg0: com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer): void
                                public getRecognizedProperties(): java.lang.String[]
                                public getFeatureDefault(arg0: java.lang.String | string): boolean
                                public getPropertyDefault(arg0: java.lang.String | string): java.lang.Object
                                public static expandSystemId(arg0: java.lang.String | string): string
                                public static absolutizeAgainstUserDir(arg0: com.sun.org.apache.xerces.internal.util.URI): void
                                public static expandSystemId(arg0: java.lang.String | string, arg1: java.lang.String | string): string
                                public static expandSystemId(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: boolean): string
                                public static setInstanceFollowRedirects(arg0: java.net.HttpURLConnection, arg1: boolean): void
                                protected getEncodingName(arg0: byte[], arg1: int): java.lang.Object[]
                                protected createReader(arg0: java.io.InputStream, arg1: java.lang.String | string, arg2: java.lang.Boolean | boolean): java.io.Reader
                                public getPublicId(): string
                                public getExpandedSystemId(): string
                                public getLiteralSystemId(): string
                                public getLineNumber(): int
                                public getColumnNumber(): int
                                protected static fixURI(arg0: java.lang.String | string): string
                                public test(): void
                                public static class: java.lang.Class<any>
                            }
                            class XMLEntityManager$$Lambda implements com.sun.org.apache.xerces.internal.xni.parser.XMLComponent , com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver {
                                public static DEFAULT_BUFFER_SIZE: int
                            }
                            class XMLEntityScanner implements com.sun.org.apache.xerces.internal.xni.XMLLocator {
                                protected fCurrentEntity: com.sun.xml.internal.stream.Entity$ScannedEntity
                                protected fBufferSize: int
                                protected fEntityManager: com.sun.org.apache.xerces.internal.impl.XMLEntityManager
                                protected fSecurityManager: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager
                                protected fLimitAnalyzer: com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer
                                protected fSymbolTable: com.sun.org.apache.xerces.internal.util.SymbolTable
                                protected fErrorReporter: com.sun.org.apache.xerces.internal.impl.XMLErrorReporter
                                protected fAllowJavaEncodings: boolean
                                protected static SYMBOL_TABLE: string
                                protected static ERROR_REPORTER: string
                                protected static ALLOW_JAVA_ENCODINGS: string
                                protected fPropertyManager: com.sun.org.apache.xerces.internal.impl.PropertyManager
                                protected xmlVersionSetExplicitly: boolean
                                public constructor()
                                public constructor(arg0: com.sun.org.apache.xerces.internal.impl.PropertyManager, arg1: com.sun.org.apache.xerces.internal.impl.XMLEntityManager | com.sun.org.apache.xerces.internal.impl.XMLEntityManager$$Lambda)
                                public setBufferSize(arg0: int): void
                                public reset(arg0: com.sun.org.apache.xerces.internal.impl.PropertyManager): void
                                public reset(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager): void
                                public reset(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.impl.XMLEntityManager | com.sun.org.apache.xerces.internal.impl.XMLEntityManager$$Lambda, arg2: com.sun.org.apache.xerces.internal.impl.XMLErrorReporter): void
                                public getXMLVersion(): string
                                public setXMLVersion(arg0: java.lang.String | string): void
                                public setCurrentEntity(arg0: com.sun.xml.internal.stream.Entity$ScannedEntity): void
                                public getCurrentEntity(): com.sun.xml.internal.stream.Entity$ScannedEntity
                                public getBaseSystemId(): string
                                public setBaseSystemId(arg0: java.lang.String | string): void
                                public getLineNumber(): int
                                public setLineNumber(arg0: int): void
                                public getColumnNumber(): int
                                public setColumnNumber(arg0: int): void
                                public getCharacterOffset(): int
                                public getExpandedSystemId(): string
                                public setExpandedSystemId(arg0: java.lang.String | string): void
                                public getLiteralSystemId(): string
                                public setLiteralSystemId(arg0: java.lang.String | string): void
                                public getPublicId(): string
                                public setPublicId(arg0: java.lang.String | string): void
                                public setVersion(arg0: java.lang.String | string): void
                                public getVersion(): string
                                public getEncoding(): string
                                public setEncoding(arg0: java.lang.String | string): void
                                public isExternal(): boolean
                                public getChar(arg0: int): int
                                public peekChar(): int
                                protected scanChar(arg0: com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType): int
                                protected scanNmtoken(): string
                                protected scanName(arg0: com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType): string
                                protected scanQName(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType): boolean
                                protected checkBeforeLoad(arg0: com.sun.xml.internal.stream.Entity$ScannedEntity, arg1: int, arg2: int): int
                                protected checkEntityLimit(arg0: com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType, arg1: com.sun.xml.internal.stream.Entity$ScannedEntity, arg2: int, arg3: int): void
                                protected checkNodeCount(arg0: com.sun.xml.internal.stream.Entity$ScannedEntity): void
                                protected checkLimit(arg0: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit, arg1: com.sun.xml.internal.stream.Entity$ScannedEntity, arg2: int, arg3: int): void
                                protected scanContent(arg0: com.sun.org.apache.xerces.internal.xni.XMLString): int
                                protected scanLiteral(arg0: int, arg1: com.sun.org.apache.xerces.internal.xni.XMLString, arg2: boolean): int
                                protected scanData(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.util.XMLStringBuffer): boolean
                                protected skipChar(arg0: int, arg1: com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType): boolean
                                public isSpace(arg0: char): boolean
                                protected skipSpaces(): boolean
                                public arrangeCapacity(arg0: int): boolean
                                public arrangeCapacity(arg0: int, arg1: boolean): boolean
                                protected skipString(arg0: java.lang.String | string): boolean
                                protected skipString(arg0: char[]): boolean
                                protected createReader(arg0: java.io.InputStream, arg1: java.lang.String | string, arg2: java.lang.Boolean | boolean): java.io.Reader
                                protected getEncodingName(arg0: byte[], arg1: int): java.lang.Object[]
                                public registerListener(arg0: com.sun.xml.internal.stream.XMLBufferListener): void
                                public invokeListeners(arg0: int): void
                                protected skipDeclSpaces(): boolean
                                public static class: java.lang.Class<any>
                            }
                            class XMLErrorReporter implements com.sun.org.apache.xerces.internal.xni.parser.XMLComponent {
                                public static SEVERITY_WARNING: short
                                public static SEVERITY_ERROR: short
                                public static SEVERITY_FATAL_ERROR: short
                                protected static CONTINUE_AFTER_FATAL_ERROR: string
                                protected static ERROR_HANDLER: string
                                protected fLocale: java.util.Locale
                                protected fMessageFormatters: java.util.Map<java.lang.String, com.sun.org.apache.xerces.internal.util.MessageFormatter>
                                protected fErrorHandler: com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler
                                protected fLocator: com.sun.org.apache.xerces.internal.xni.XMLLocator
                                protected fContinueAfterFatalError: boolean
                                protected fDefaultErrorHandler: com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler
                                public constructor()
                                public setLocale(arg0: java.util.Locale): void
                                public getLocale(): java.util.Locale
                                public setDocumentLocator(arg0: com.sun.org.apache.xerces.internal.xni.XMLLocator): void
                                public putMessageFormatter(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.util.MessageFormatter | com.sun.org.apache.xerces.internal.util.MessageFormatter$$Lambda): void
                                public getMessageFormatter(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.MessageFormatter
                                public removeMessageFormatter(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.MessageFormatter
                                public reportError(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.Object[], arg3: short): string
                                public reportError(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.Object[], arg3: short, arg4: java.lang.Exception): string
                                public reportError(arg0: com.sun.org.apache.xerces.internal.xni.XMLLocator, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.Object[], arg4: short): string
                                public reportError(arg0: com.sun.org.apache.xerces.internal.xni.XMLLocator, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.Object[], arg4: short, arg5: java.lang.Exception): string
                                public reset(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager): void
                                public getRecognizedFeatures(): java.lang.String[]
                                public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                public getFeature(arg0: java.lang.String | string): boolean
                                public getRecognizedProperties(): java.lang.String[]
                                public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                public getFeatureDefault(arg0: java.lang.String | string): boolean
                                public getPropertyDefault(arg0: java.lang.String | string): java.lang.Object
                                public getErrorHandler(): com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler
                                public getSAXErrorHandler(): org.xml.sax.ErrorHandler
                                public static class: java.lang.Class<any>
                            }
                            class XMLNSDocumentScannerImpl extends com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl {
                                protected fBindNamespaces: boolean
                                protected fPerformValidation: boolean
                                protected fNotAddNSDeclAsAttribute: boolean
                                public constructor()
                                public reset(arg0: com.sun.org.apache.xerces.internal.impl.PropertyManager): void
                                public reset(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager): void
                                public next(): int
                                public setDTDValidator(arg0: com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidatorFilter): void
                                protected scanStartElement(): boolean
                                protected scanAttribute(arg0: com.sun.org.apache.xerces.internal.util.XMLAttributesImpl): void
                                protected createContentDriver(): com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$Driver
                                public static class: java.lang.Class<any>
                            }
                            class XMLNamespaceBinder implements com.sun.org.apache.xerces.internal.xni.parser.XMLComponent , com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentFilter {
                                protected static NAMESPACES: string
                                protected static SYMBOL_TABLE: string
                                protected static ERROR_REPORTER: string
                                protected fNamespaces: boolean
                                protected fSymbolTable: com.sun.org.apache.xerces.internal.util.SymbolTable
                                protected fErrorReporter: com.sun.org.apache.xerces.internal.impl.XMLErrorReporter
                                protected fDocumentHandler: com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler
                                protected fDocumentSource: com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource
                                protected fOnlyPassPrefixMappingEvents: boolean
                                public constructor()
                                public setOnlyPassPrefixMappingEvents(arg0: boolean): void
                                public getOnlyPassPrefixMappingEvents(): boolean
                                public reset(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager): void
                                public getRecognizedFeatures(): java.lang.String[]
                                public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                public getRecognizedProperties(): java.lang.String[]
                                public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                public getFeatureDefault(arg0: java.lang.String | string): boolean
                                public getPropertyDefault(arg0: java.lang.String | string): java.lang.Object
                                public setDocumentHandler(arg0: com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler): void
                                public getDocumentHandler(): com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler
                                public setDocumentSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource): void
                                public getDocumentSource(): com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource
                                public startGeneralEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public textDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startDocument(arg0: com.sun.org.apache.xerces.internal.xni.XMLLocator, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.NamespaceContext, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public xmlDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public doctypeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public comment(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public processingInstruction(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLString, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public emptyElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public characters(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public ignorableWhitespace(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endDocument(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endGeneralEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                protected handleStartElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations, arg3: boolean): void
                                protected handleEndElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations, arg2: boolean): void
                                protected prefixBoundToNullURI(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                                public static class: java.lang.Class<any>
                            }
                            abstract class XMLScanner implements com.sun.org.apache.xerces.internal.xni.parser.XMLComponent {
                                protected static NAMESPACES: string
                                protected static VALIDATION: string
                                protected static NOTIFY_CHAR_REFS: string
                                protected static PARSER_SETTINGS: string
                                protected static SYMBOL_TABLE: string
                                protected static ERROR_REPORTER: string
                                protected static ENTITY_MANAGER: string
                                protected static DEBUG_ATTR_NORMALIZATION: boolean
                                protected attributeValueCache: java.util.ArrayList<com.sun.org.apache.xerces.internal.xni.XMLString>
                                protected stringBufferCache: java.util.ArrayList<com.sun.org.apache.xerces.internal.util.XMLStringBuffer>
                                protected fStringBufferIndex: int
                                protected fAttributeCacheInitDone: boolean
                                protected fAttributeCacheUsedCount: int
                                protected fValidation: boolean
                                protected fNamespaces: boolean
                                protected fNotifyCharRefs: boolean
                                protected fParserSettings: boolean
                                protected fPropertyManager: com.sun.org.apache.xerces.internal.impl.PropertyManager
                                protected fSymbolTable: com.sun.org.apache.xerces.internal.util.SymbolTable
                                protected fErrorReporter: com.sun.org.apache.xerces.internal.impl.XMLErrorReporter
                                protected fEntityManager: com.sun.org.apache.xerces.internal.impl.XMLEntityManager
                                protected fEntityStore: com.sun.xml.internal.stream.XMLEntityStorage
                                protected fSecurityManager: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager
                                protected fLimitAnalyzer: com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer
                                protected fEvent: javax.xml.stream.events.XMLEvent
                                protected fEntityScanner: com.sun.org.apache.xerces.internal.impl.XMLEntityScanner
                                protected fEntityDepth: int
                                protected fCharRefLiteral: string
                                protected fScanningAttribute: boolean
                                protected fReportEntity: boolean
                                protected static fVersionSymbol: string
                                protected static fEncodingSymbol: string
                                protected static fStandaloneSymbol: string
                                protected static fAmpSymbol: string
                                protected static fLtSymbol: string
                                protected static fGtSymbol: string
                                protected static fQuotSymbol: string
                                protected static fAposSymbol: string
                                protected fResourceIdentifier: com.sun.org.apache.xerces.internal.util.XMLResourceIdentifierImpl
                                public constructor()
                                public reset(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager): void
                                protected setPropertyManager(arg0: com.sun.org.apache.xerces.internal.impl.PropertyManager): void
                                public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                public getFeature(arg0: java.lang.String | string): boolean
                                protected reset(): void
                                public reset(arg0: com.sun.org.apache.xerces.internal.impl.PropertyManager): void
                                protected scanXMLDeclOrTextDecl(arg0: boolean, arg1: java.lang.String[]): void
                                protected scanPseudoAttribute(arg0: boolean, arg1: com.sun.org.apache.xerces.internal.xni.XMLString): string
                                protected scanPI(arg0: com.sun.org.apache.xerces.internal.util.XMLStringBuffer): void
                                protected scanPIData(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.util.XMLStringBuffer): void
                                protected scanComment(arg0: com.sun.org.apache.xerces.internal.util.XMLStringBuffer): void
                                protected scanAttributeValue(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.XMLString, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg4: int, arg5: boolean, arg6: java.lang.String | string, arg7: boolean): void
                                protected resolveCharacter(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.util.XMLStringBuffer): boolean
                                protected scanExternalID(arg0: java.lang.String[], arg1: boolean): void
                                protected scanPubidLiteral(arg0: com.sun.org.apache.xerces.internal.xni.XMLString): boolean
                                protected normalizeWhitespace(arg0: com.sun.org.apache.xerces.internal.xni.XMLString): void
                                public startEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                protected scanCharReferenceValue(arg0: com.sun.org.apache.xerces.internal.util.XMLStringBuffer, arg1: com.sun.org.apache.xerces.internal.util.XMLStringBuffer): int
                                protected isInvalid(arg0: int): boolean
                                protected isInvalidLiteral(arg0: int): boolean
                                protected isValidNameChar(arg0: int): boolean
                                protected isValidNCName(arg0: int): boolean
                                protected isValidNameStartChar(arg0: int): boolean
                                protected isValidNameStartHighSurrogate(arg0: int): boolean
                                protected versionSupported(arg0: java.lang.String | string): boolean
                                protected scanSurrogates(arg0: com.sun.org.apache.xerces.internal.util.XMLStringBuffer): boolean
                                protected reportFatalError(arg0: java.lang.String | string, arg1: java.lang.Object[]): void
                                public static class: java.lang.Class<any>
                            }
                            class XMLStreamFilterImpl implements javax.xml.stream.XMLStreamReader {
                                public constructor(arg0: javax.xml.stream.XMLStreamReader, arg1: javax.xml.stream.StreamFilter | javax.xml.stream.StreamFilter$$Lambda)
                                protected setStreamFilter(arg0: javax.xml.stream.StreamFilter | javax.xml.stream.StreamFilter$$Lambda): void
                                public next(): int
                                public nextTag(): int
                                public hasNext(): boolean
                                public close(): void
                                public getAttributeCount(): int
                                public getAttributeName(arg0: int): javax.xml.namespace.QName
                                public getAttributeNamespace(arg0: int): string
                                public getAttributePrefix(arg0: int): string
                                public getAttributeType(arg0: int): string
                                public getAttributeValue(arg0: int): string
                                public getAttributeValue(arg0: java.lang.String | string, arg1: java.lang.String | string): string
                                public getCharacterEncodingScheme(): string
                                public getElementText(): string
                                public getEncoding(): string
                                public getEventType(): int
                                public getLocalName(): string
                                public getLocation(): javax.xml.stream.Location
                                public getName(): javax.xml.namespace.QName
                                public getNamespaceContext(): javax.xml.namespace.NamespaceContext
                                public getNamespaceCount(): int
                                public getNamespacePrefix(arg0: int): string
                                public getNamespaceURI(): string
                                public getNamespaceURI(arg0: int): string
                                public getNamespaceURI(arg0: java.lang.String | string): string
                                public getPIData(): string
                                public getPITarget(): string
                                public getPrefix(): string
                                public getProperty(arg0: java.lang.String | string): java.lang.Object
                                public getText(): string
                                public getTextCharacters(): char[]
                                public getTextCharacters(arg0: int, arg1: char[], arg2: int, arg3: int): int
                                public getTextLength(): int
                                public getTextStart(): int
                                public getVersion(): string
                                public hasName(): boolean
                                public hasText(): boolean
                                public isAttributeSpecified(arg0: int): boolean
                                public isCharacters(): boolean
                                public isEndElement(): boolean
                                public isStandalone(): boolean
                                public isStartElement(): boolean
                                public isWhiteSpace(): boolean
                                public require(arg0: int, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public standaloneSet(): boolean
                                public getAttributeLocalName(arg0: int): string
                                public static class: java.lang.Class<any>
                            }
                            class XMLStreamReaderImpl implements javax.xml.stream.XMLStreamReader {
                                protected static ENTITY_MANAGER: string
                                protected static ERROR_REPORTER: string
                                protected static SYMBOL_TABLE: string
                                protected static READER_IN_DEFINED_STATE: string
                                protected fScanner: com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl
                                protected fNamespaceContextWrapper: com.sun.org.apache.xerces.internal.util.NamespaceContextWrapper
                                protected fEntityManager: com.sun.org.apache.xerces.internal.impl.XMLEntityManager
                                protected fErrorReporter: com.sun.xml.internal.stream.StaxErrorReporter
                                protected fEntityScanner: com.sun.org.apache.xerces.internal.impl.XMLEntityScanner
                                protected fInputSource: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource
                                protected fPropertyManager: com.sun.org.apache.xerces.internal.impl.PropertyManager
                                public constructor(arg0: java.io.InputStream, arg1: com.sun.org.apache.xerces.internal.impl.PropertyManager)
                                public getScanner(): com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl
                                public constructor(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.impl.PropertyManager)
                                public constructor(arg0: java.io.InputStream, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.impl.PropertyManager)
                                public constructor(arg0: java.io.Reader, arg1: com.sun.org.apache.xerces.internal.impl.PropertyManager)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource, arg1: com.sun.org.apache.xerces.internal.impl.PropertyManager)
                                public setInputSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource): void
                                public canReuse(): boolean
                                public reset(): void
                                public close(): void
                                public getCharacterEncodingScheme(): string
                                public getColumnNumber(): int
                                public getEncoding(): string
                                public getEventType(): int
                                public getLineNumber(): int
                                public getLocalName(): string
                                public getNamespaceURI(): string
                                public getPIData(): string
                                public getPITarget(): string
                                public getPrefix(): string
                                public getTextCharacters(): char[]
                                public getTextLength(): int
                                public getTextStart(): int
                                public getValue(): string
                                public getVersion(): string
                                public hasAttributes(): boolean
                                public hasName(): boolean
                                public hasNext(): boolean
                                public hasValue(): boolean
                                public isEndElement(): boolean
                                public isStandalone(): boolean
                                public isStartElement(): boolean
                                public isWhiteSpace(): boolean
                                public next(): int
                                public getAttributeCount(): int
                                public getAttributeName(arg0: int): javax.xml.namespace.QName
                                public getAttributeLocalName(arg0: int): string
                                public getAttributeNamespace(arg0: int): string
                                public getAttributePrefix(arg0: int): string
                                public getAttributeQName(arg0: int): javax.xml.namespace.QName
                                public getAttributeType(arg0: int): string
                                public getAttributeValue(arg0: int): string
                                public getAttributeValue(arg0: java.lang.String | string, arg1: java.lang.String | string): string
                                public getElementText(): string
                                public getLocation(): javax.xml.stream.Location
                                public getName(): javax.xml.namespace.QName
                                public getNamespaceContext(): javax.xml.namespace.NamespaceContext
                                public getNamespaceCount(): int
                                public getNamespacePrefix(arg0: int): string
                                public getNamespaceURI(arg0: int): string
                                public getProperty(arg0: java.lang.String | string): java.lang.Object
                                public getText(): string
                                public require(arg0: int, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public getTextCharacters(arg0: int, arg1: char[], arg2: int, arg3: int): int
                                public hasText(): boolean
                                public isAttributeSpecified(arg0: int): boolean
                                public isCharacters(): boolean
                                public nextTag(): int
                                public standaloneSet(): boolean
                                public convertXNIQNametoJavaxQName(arg0: com.sun.org.apache.xerces.internal.xni.QName): javax.xml.namespace.QName
                                public getNamespaceURI(arg0: java.lang.String | string): string
                                protected setPropertyManager(arg0: com.sun.org.apache.xerces.internal.impl.PropertyManager): void
                                protected getPropertyManager(): com.sun.org.apache.xerces.internal.impl.PropertyManager
                                protected getEntityDecls(): java.util.List
                                protected getNotationDecls(): java.util.List
                                public static class: java.lang.Class<any>
                            }
                            class XMLVersionDetector {
                                protected static SYMBOL_TABLE: string
                                protected static ERROR_REPORTER: string
                                protected static ENTITY_MANAGER: string
                                protected static fVersionSymbol: string
                                protected static fXMLSymbol: string
                                protected fSymbolTable: com.sun.org.apache.xerces.internal.util.SymbolTable
                                protected fErrorReporter: com.sun.org.apache.xerces.internal.impl.XMLErrorReporter
                                protected fEntityManager: com.sun.org.apache.xerces.internal.impl.XMLEntityManager
                                protected fEncoding: string
                                public constructor()
                                public reset(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager): void
                                public startDocumentParsing(arg0: com.sun.org.apache.xerces.internal.impl.XMLEntityHandler, arg1: short): void
                                public determineDocVersion(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource): short
                                public static class: java.lang.Class<any>
                            }
                        }
                        namespace jaxp {
                            namespace datatype {
                                class DatatypeFactoryImpl extends javax.xml.datatype.DatatypeFactory {
                                    public constructor()
                                    public newDuration(arg0: java.lang.String | string): javax.xml.datatype.Duration
                                    public newDuration(arg0: long): javax.xml.datatype.Duration
                                    public newDuration(arg0: boolean, arg1: java.math.BigInteger, arg2: java.math.BigInteger, arg3: java.math.BigInteger, arg4: java.math.BigInteger, arg5: java.math.BigInteger, arg6: java.math.BigDecimal): javax.xml.datatype.Duration
                                    public newDurationYearMonth(arg0: boolean, arg1: java.math.BigInteger, arg2: java.math.BigInteger): javax.xml.datatype.Duration
                                    public newDurationYearMonth(arg0: boolean, arg1: int, arg2: int): javax.xml.datatype.Duration
                                    public newDurationYearMonth(arg0: java.lang.String | string): javax.xml.datatype.Duration
                                    public newDurationYearMonth(arg0: long): javax.xml.datatype.Duration
                                    public newDurationDayTime(arg0: java.lang.String | string): javax.xml.datatype.Duration
                                    public newDurationDayTime(arg0: long): javax.xml.datatype.Duration
                                    public newDurationDayTime(arg0: boolean, arg1: java.math.BigInteger, arg2: java.math.BigInteger, arg3: java.math.BigInteger, arg4: java.math.BigInteger): javax.xml.datatype.Duration
                                    public newDurationDayTime(arg0: boolean, arg1: int, arg2: int, arg3: int, arg4: int): javax.xml.datatype.Duration
                                    public newXMLGregorianCalendar(): javax.xml.datatype.XMLGregorianCalendar
                                    public newXMLGregorianCalendar(arg0: java.lang.String | string): javax.xml.datatype.XMLGregorianCalendar
                                    public newXMLGregorianCalendar(arg0: java.util.GregorianCalendar): javax.xml.datatype.XMLGregorianCalendar
                                    public newXMLGregorianCalendar(arg0: java.math.BigInteger, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: java.math.BigDecimal, arg7: int): javax.xml.datatype.XMLGregorianCalendar
                                    public static class: java.lang.Class<any>
                                }
                                class DurationDayTimeImpl extends com.sun.org.apache.xerces.internal.jaxp.datatype.DurationImpl {
                                    public constructor(arg0: boolean, arg1: java.math.BigInteger, arg2: java.math.BigInteger, arg3: java.math.BigInteger, arg4: java.math.BigDecimal)
                                    public constructor(arg0: boolean, arg1: int, arg2: int, arg3: int, arg4: int)
                                    protected constructor(arg0: java.lang.String | string)
                                    protected constructor(arg0: long)
                                    public getValue(): float
                                    public static class: java.lang.Class<any>
                                }
                                class DurationImpl extends javax.xml.datatype.Duration implements java.io.Serializable {
                                    protected signum: int
                                    protected years: java.math.BigInteger
                                    protected months: java.math.BigInteger
                                    protected days: java.math.BigInteger
                                    protected hours: java.math.BigInteger
                                    protected minutes: java.math.BigInteger
                                    protected seconds: java.math.BigDecimal
                                    public getSign(): int
                                    protected calcSignum(arg0: boolean): int
                                    protected constructor(arg0: boolean, arg1: java.math.BigInteger, arg2: java.math.BigInteger, arg3: java.math.BigInteger, arg4: java.math.BigInteger, arg5: java.math.BigInteger, arg6: java.math.BigDecimal)
                                    protected static testNonNegative(arg0: java.math.BigInteger, arg1: javax.xml.datatype.DatatypeConstants$Field): void
                                    protected static testNonNegative(arg0: java.math.BigDecimal, arg1: javax.xml.datatype.DatatypeConstants$Field): void
                                    protected constructor(arg0: boolean, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int)
                                    protected static wrap(arg0: int): java.math.BigInteger
                                    protected constructor(arg0: long)
                                    protected constructor(arg0: java.lang.String | string)
                                    public compare(arg0: javax.xml.datatype.Duration): int
                                    public hashCode(): int
                                    public toString(): string
                                    public isSet(arg0: javax.xml.datatype.DatatypeConstants$Field): boolean
                                    public getField(arg0: javax.xml.datatype.DatatypeConstants$Field): java.lang.Number
                                    public getYears(): int
                                    public getMonths(): int
                                    public getDays(): int
                                    public getHours(): int
                                    public getMinutes(): int
                                    public getSeconds(): int
                                    public getTimeInMillis(arg0: java.util.Calendar): long
                                    public getTimeInMillis(arg0: java.util.Date): long
                                    public normalizeWith(arg0: java.util.Calendar): javax.xml.datatype.Duration
                                    public multiply(arg0: int): javax.xml.datatype.Duration
                                    public multiply(arg0: java.math.BigDecimal): javax.xml.datatype.Duration
                                    public add(arg0: javax.xml.datatype.Duration): javax.xml.datatype.Duration
                                    public subtract(arg0: javax.xml.datatype.Duration): javax.xml.datatype.Duration
                                    public negate(): javax.xml.datatype.Duration
                                    public signum(): int
                                    public addTo(arg0: java.util.Calendar): void
                                    public addTo(arg0: java.util.Date): void
                                    public static class: java.lang.Class<any>
                                }
                                class DurationYearMonthImpl extends com.sun.org.apache.xerces.internal.jaxp.datatype.DurationImpl {
                                    public constructor(arg0: boolean, arg1: java.math.BigInteger, arg2: java.math.BigInteger)
                                    protected constructor(arg0: boolean, arg1: int, arg2: int)
                                    protected constructor(arg0: long)
                                    protected constructor(arg0: java.lang.String | string)
                                    public getValue(): int
                                    public static class: java.lang.Class<any>
                                }
                                class XMLGregorianCalendarImpl extends javax.xml.datatype.XMLGregorianCalendar implements java.io.Serializable , java.lang.Cloneable {
                                    public static LEAP_YEAR_DEFAULT: javax.xml.datatype.XMLGregorianCalendar
                                    protected constructor(arg0: java.lang.String | string)
                                    public constructor()
                                    protected constructor(arg0: java.math.BigInteger, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: java.math.BigDecimal, arg7: int)
                                    public constructor(arg0: java.util.GregorianCalendar)
                                    public static createDateTime(arg0: java.math.BigInteger, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: java.math.BigDecimal, arg7: int): javax.xml.datatype.XMLGregorianCalendar
                                    public static createDateTime(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int): javax.xml.datatype.XMLGregorianCalendar
                                    public static createDateTime(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int): javax.xml.datatype.XMLGregorianCalendar
                                    public static createDate(arg0: int, arg1: int, arg2: int, arg3: int): javax.xml.datatype.XMLGregorianCalendar
                                    public static createTime(arg0: int, arg1: int, arg2: int, arg3: int): javax.xml.datatype.XMLGregorianCalendar
                                    public static createTime(arg0: int, arg1: int, arg2: int, arg3: java.math.BigDecimal, arg4: int): javax.xml.datatype.XMLGregorianCalendar
                                    public static createTime(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int): javax.xml.datatype.XMLGregorianCalendar
                                    public getEon(): java.math.BigInteger
                                    public getYear(): int
                                    public getEonAndYear(): java.math.BigInteger
                                    public getMonth(): int
                                    public getDay(): int
                                    public getTimezone(): int
                                    public getHour(): int
                                    public getMinute(): int
                                    public getSecond(): int
                                    public getMillisecond(): int
                                    public getFractionalSecond(): java.math.BigDecimal
                                    public setYear(arg0: java.math.BigInteger): void
                                    public setYear(arg0: int): void
                                    public setMonth(arg0: int): void
                                    public setDay(arg0: int): void
                                    public setTimezone(arg0: int): void
                                    public setTime(arg0: int, arg1: int, arg2: int): void
                                    public setHour(arg0: int): void
                                    public setMinute(arg0: int): void
                                    public setSecond(arg0: int): void
                                    public setTime(arg0: int, arg1: int, arg2: int, arg3: java.math.BigDecimal): void
                                    public setTime(arg0: int, arg1: int, arg2: int, arg3: int): void
                                    public compare(arg0: javax.xml.datatype.XMLGregorianCalendar): int
                                    public normalize(): javax.xml.datatype.XMLGregorianCalendar
                                    public equals(arg0: java.lang.Object): boolean
                                    public hashCode(): int
                                    public static parse(arg0: java.lang.String | string): javax.xml.datatype.XMLGregorianCalendar
                                    public toXMLFormat(): string
                                    public getXMLSchemaType(): javax.xml.namespace.QName
                                    public isValid(): boolean
                                    public add(arg0: javax.xml.datatype.Duration): void
                                    public toGregorianCalendar(): java.util.GregorianCalendar
                                    public toGregorianCalendar(arg0: java.util.TimeZone, arg1: java.util.Locale, arg2: javax.xml.datatype.XMLGregorianCalendar): java.util.GregorianCalendar
                                    public getTimeZone(arg0: int): java.util.TimeZone
                                    public clone(): java.lang.Object
                                    public clear(): void
                                    public setMillisecond(arg0: int): void
                                    public setFractionalSecond(arg0: java.math.BigDecimal): void
                                    public reset(): void
                                    public static class: java.lang.Class<any>
                                }
                            }
                            namespace validation {
                                abstract class AbstractXMLSchema extends javax.xml.validation.Schema implements com.sun.org.apache.xerces.internal.jaxp.validation.XSGrammarPoolContainer {
                                    public constructor()
                                    public newValidator(): javax.xml.validation.Validator
                                    public newValidatorHandler(): javax.xml.validation.ValidatorHandler
                                    public getFeature(arg0: java.lang.String | string): boolean
                                    public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                    public getProperty(arg0: java.lang.String | string): java.lang.Object
                                    public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                    public static class: java.lang.Class<any>
                                }
                                interface DOMDocumentHandler extends com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler {
                                    setDOMResult(arg0: javax.xml.transform.dom.DOMResult): void
                                    doctypeDecl(arg0: org.w3c.dom.DocumentType): void
                                    characters(arg0: org.w3c.dom.Text): void
                                    cdata(arg0: org.w3c.dom.CDATASection): void
                                    comment(arg0: org.w3c.dom.Comment): void
                                    processingInstruction(arg0: org.w3c.dom.ProcessingInstruction): void
                                    setIgnoringCharacters(arg0: boolean): void
                                }
                                class DOMResultAugmentor implements com.sun.org.apache.xerces.internal.jaxp.validation.DOMDocumentHandler {
                                    public constructor(arg0: com.sun.org.apache.xerces.internal.jaxp.validation.DOMValidatorHelper)
                                    public setDOMResult(arg0: javax.xml.transform.dom.DOMResult): void
                                    public doctypeDecl(arg0: org.w3c.dom.DocumentType): void
                                    public characters(arg0: org.w3c.dom.Text): void
                                    public cdata(arg0: org.w3c.dom.CDATASection): void
                                    public comment(arg0: org.w3c.dom.Comment): void
                                    public processingInstruction(arg0: org.w3c.dom.ProcessingInstruction): void
                                    public setIgnoringCharacters(arg0: boolean): void
                                    public startDocument(arg0: com.sun.org.apache.xerces.internal.xni.XMLLocator, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.NamespaceContext, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public xmlDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public doctypeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public comment(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public processingInstruction(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLString, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public startElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public emptyElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public startGeneralEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public textDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public endGeneralEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public characters(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public ignorableWhitespace(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public endElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public startCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public endCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public endDocument(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public setDocumentSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource): void
                                    public getDocumentSource(): com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource
                                    public static class: java.lang.Class<any>
                                }
                                class DOMResultBuilder implements com.sun.org.apache.xerces.internal.jaxp.validation.DOMDocumentHandler {
                                    public constructor()
                                    public setDOMResult(arg0: javax.xml.transform.dom.DOMResult): void
                                    public doctypeDecl(arg0: org.w3c.dom.DocumentType): void
                                    public characters(arg0: org.w3c.dom.Text): void
                                    public cdata(arg0: org.w3c.dom.CDATASection): void
                                    public comment(arg0: org.w3c.dom.Comment): void
                                    public processingInstruction(arg0: org.w3c.dom.ProcessingInstruction): void
                                    public setIgnoringCharacters(arg0: boolean): void
                                    public startDocument(arg0: com.sun.org.apache.xerces.internal.xni.XMLLocator, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.NamespaceContext, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public xmlDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public doctypeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public comment(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public processingInstruction(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLString, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public startElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public emptyElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public startGeneralEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public textDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public endGeneralEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public characters(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public ignorableWhitespace(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public endElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public startCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public endCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public endDocument(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public setDocumentSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource): void
                                    public getDocumentSource(): com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource
                                    public static class: java.lang.Class<any>
                                }
                                class DOMValidatorHelper implements com.sun.org.apache.xerces.internal.jaxp.validation.ValidatorHelper , com.sun.org.apache.xerces.internal.impl.validation.EntityState {
                                    public constructor(arg0: com.sun.org.apache.xerces.internal.jaxp.validation.XMLSchemaValidatorComponentManager)
                                    public validate(arg0: javax.xml.transform.Source, arg1: javax.xml.transform.Result): void
                                    public isEntityDeclared(arg0: java.lang.String | string): boolean
                                    public isEntityUnparsed(arg0: java.lang.String | string): boolean
                                    public static class: java.lang.Class<any>
                                }
                                class DraconianErrorHandler implements org.xml.sax.ErrorHandler {
                                    public static getInstance(): com.sun.org.apache.xerces.internal.jaxp.validation.DraconianErrorHandler
                                    public warning(arg0: org.xml.sax.SAXParseException): void
                                    public error(arg0: org.xml.sax.SAXParseException): void
                                    public fatalError(arg0: org.xml.sax.SAXParseException): void
                                    public static class: java.lang.Class<any>
                                }
                                class EmptyXMLSchema extends com.sun.org.apache.xerces.internal.jaxp.validation.AbstractXMLSchema implements com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool {
                                    public constructor()
                                    public retrieveInitialGrammarSet(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.xni.grammars.Grammar[]
                                    public cacheGrammars(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.grammars.Grammar[]): void
                                    public retrieveGrammar(arg0: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarDescription): com.sun.org.apache.xerces.internal.xni.grammars.Grammar
                                    public lockPool(): void
                                    public unlockPool(): void
                                    public clear(): void
                                    public getGrammarPool(): com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool
                                    public isFullyComposed(): boolean
                                    public static class: java.lang.Class<any>
                                }
                                abstract class ErrorHandlerAdaptor implements com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler {
                                    public constructor()
                                    public hadError(): boolean
                                    public reset(): void
                                    protected getErrorHandler(): org.xml.sax.ErrorHandler
                                    public fatalError(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.parser.XMLParseException): void
                                    public error(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.parser.XMLParseException): void
                                    public warning(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.parser.XMLParseException): void
                                    public static class: java.lang.Class<any>
                                }
                                class JAXPValidationMessageFormatter {
                                    public static formatMessage(arg0: java.util.Locale, arg1: java.lang.String | string, arg2: java.lang.Object[]): string
                                    public static class: java.lang.Class<any>
                                }
                                class ReadOnlyGrammarPool implements com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool {
                                    public constructor(arg0: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool)
                                    public cacheGrammars(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.grammars.Grammar[]): void
                                    public clear(): void
                                    public lockPool(): void
                                    public retrieveGrammar(arg0: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarDescription): com.sun.org.apache.xerces.internal.xni.grammars.Grammar
                                    public retrieveInitialGrammarSet(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.xni.grammars.Grammar[]
                                    public unlockPool(): void
                                    public static class: java.lang.Class<any>
                                }
                                class SimpleXMLSchema extends com.sun.org.apache.xerces.internal.jaxp.validation.AbstractXMLSchema implements com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool {
                                    public constructor(arg0: com.sun.org.apache.xerces.internal.xni.grammars.Grammar | com.sun.org.apache.xerces.internal.xni.grammars.Grammar$$Lambda)
                                    public retrieveInitialGrammarSet(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.xni.grammars.Grammar[]
                                    public cacheGrammars(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.grammars.Grammar[]): void
                                    public retrieveGrammar(arg0: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarDescription): com.sun.org.apache.xerces.internal.xni.grammars.Grammar
                                    public lockPool(): void
                                    public unlockPool(): void
                                    public clear(): void
                                    public getGrammarPool(): com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool
                                    public isFullyComposed(): boolean
                                    public static class: java.lang.Class<any>
                                }
                                class SoftReferenceGrammarPool implements com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool {
                                    protected static TABLE_SIZE: int
                                    protected static ZERO_LENGTH_GRAMMAR_ARRAY: com.sun.org.apache.xerces.internal.xni.grammars.Grammar[]
                                    protected fGrammars: com.sun.org.apache.xerces.internal.jaxp.validation.SoftReferenceGrammarPool$Entry[]
                                    protected fPoolIsLocked: boolean
                                    protected fGrammarCount: int
                                    protected fReferenceQueue: java.lang.ref.ReferenceQueue
                                    public constructor()
                                    public constructor(arg0: int)
                                    public retrieveInitialGrammarSet(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.xni.grammars.Grammar[]
                                    public cacheGrammars(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.grammars.Grammar[]): void
                                    public retrieveGrammar(arg0: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarDescription): com.sun.org.apache.xerces.internal.xni.grammars.Grammar
                                    public putGrammar(arg0: com.sun.org.apache.xerces.internal.xni.grammars.Grammar | com.sun.org.apache.xerces.internal.xni.grammars.Grammar$$Lambda): void
                                    public getGrammar(arg0: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarDescription): com.sun.org.apache.xerces.internal.xni.grammars.Grammar
                                    public removeGrammar(arg0: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarDescription): com.sun.org.apache.xerces.internal.xni.grammars.Grammar
                                    public containsGrammar(arg0: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarDescription): boolean
                                    public lockPool(): void
                                    public unlockPool(): void
                                    public clear(): void
                                    public equals(arg0: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarDescription, arg1: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarDescription): boolean
                                    public hashCode(arg0: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarDescription): int
                                    public static class: java.lang.Class<any>
                                }
                                class StAXValidatorHelper implements com.sun.org.apache.xerces.internal.jaxp.validation.ValidatorHelper {
                                    public constructor(arg0: com.sun.org.apache.xerces.internal.jaxp.validation.XMLSchemaValidatorComponentManager)
                                    public validate(arg0: javax.xml.transform.Source, arg1: javax.xml.transform.Result): void
                                    public static class: java.lang.Class<any>
                                }
                                class StAXValidatorHelper$$Lambda implements com.sun.org.apache.xerces.internal.jaxp.validation.ValidatorHelper {
                                    public constructor(arg0: com.sun.org.apache.xerces.internal.jaxp.validation.XMLSchemaValidatorComponentManager)
                                }
                                class StreamValidatorHelper implements com.sun.org.apache.xerces.internal.jaxp.validation.ValidatorHelper {
                                    public constructor(arg0: com.sun.org.apache.xerces.internal.jaxp.validation.XMLSchemaValidatorComponentManager)
                                    public validate(arg0: javax.xml.transform.Source, arg1: javax.xml.transform.Result): void
                                    public static class: java.lang.Class<any>
                                }
                                class StreamValidatorHelper$$Lambda implements com.sun.org.apache.xerces.internal.jaxp.validation.ValidatorHelper {
                                    public constructor(arg0: com.sun.org.apache.xerces.internal.jaxp.validation.XMLSchemaValidatorComponentManager)
                                }
                                class Util {
                                    public static toXMLInputSource(arg0: javax.xml.transform.stream.StreamSource): com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource
                                    public static toSAXException(arg0: com.sun.org.apache.xerces.internal.xni.XNIException): org.xml.sax.SAXException
                                    public static toSAXParseException(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLParseException): org.xml.sax.SAXParseException
                                    public static class: java.lang.Class<any>
                                }
                                class ValidatorHandlerImpl extends javax.xml.validation.ValidatorHandler implements org.xml.sax.DTDHandler , com.sun.org.apache.xerces.internal.impl.validation.EntityState , com.sun.org.apache.xerces.internal.xs.PSVIProvider , com.sun.org.apache.xerces.internal.jaxp.validation.ValidatorHelper , com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler {
                                    protected static STRING_INTERNING: string
                                    public constructor(arg0: com.sun.org.apache.xerces.internal.jaxp.validation.XSGrammarPoolContainer)
                                    public constructor(arg0: com.sun.org.apache.xerces.internal.jaxp.validation.XMLSchemaValidatorComponentManager)
                                    public setContentHandler(arg0: org.xml.sax.ContentHandler): void
                                    public getContentHandler(): org.xml.sax.ContentHandler
                                    public setErrorHandler(arg0: org.xml.sax.ErrorHandler): void
                                    public getErrorHandler(): org.xml.sax.ErrorHandler
                                    public setResourceResolver(arg0: org.w3c.dom.ls.LSResourceResolver | org.w3c.dom.ls.LSResourceResolver$$Lambda): void
                                    public getResourceResolver(): org.w3c.dom.ls.LSResourceResolver
                                    public getTypeInfoProvider(): javax.xml.validation.TypeInfoProvider
                                    public getFeature(arg0: java.lang.String | string): boolean
                                    public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                    public getProperty(arg0: java.lang.String | string): java.lang.Object
                                    public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                    public isEntityDeclared(arg0: java.lang.String | string): boolean
                                    public isEntityUnparsed(arg0: java.lang.String | string): boolean
                                    public startDocument(arg0: com.sun.org.apache.xerces.internal.xni.XMLLocator, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.NamespaceContext, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public xmlDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public doctypeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public comment(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public processingInstruction(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLString, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public startElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public emptyElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public startGeneralEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public textDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public endGeneralEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public characters(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public ignorableWhitespace(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public endElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public startCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public endCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public endDocument(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                    public setDocumentSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource): void
                                    public getDocumentSource(): com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource
                                    public setDocumentLocator(arg0: org.xml.sax.Locator): void
                                    public startDocument(): void
                                    public endDocument(): void
                                    public startPrefixMapping(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                    public endPrefixMapping(arg0: java.lang.String | string): void
                                    public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: org.xml.sax.Attributes): void
                                    public endElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                    public characters(arg0: char[], arg1: int, arg2: int): void
                                    public ignorableWhitespace(arg0: char[], arg1: int, arg2: int): void
                                    public processingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                    public skippedEntity(arg0: java.lang.String | string): void
                                    public notationDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                    public unparsedEntityDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string): void
                                    public validate(arg0: javax.xml.transform.Source, arg1: javax.xml.transform.Result): void
                                    public getElementPSVI(): com.sun.org.apache.xerces.internal.xs.ElementPSVI
                                    public getAttributePSVI(arg0: int): com.sun.org.apache.xerces.internal.xs.AttributePSVI
                                    public getAttributePSVIByName(arg0: java.lang.String | string, arg1: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.AttributePSVI
                                    public static class: java.lang.Class<any>
                                }
                                interface ValidatorHelper {
                                    validate(arg0: javax.xml.transform.Source, arg1: javax.xml.transform.Result): void
                                }
                                interface ValidatorHelper$$Lambda {
                                    (arg0: javax.xml.transform.Source, arg1: javax.xml.transform.Result): void
                                }
                                class ValidatorImpl extends javax.xml.validation.Validator implements com.sun.org.apache.xerces.internal.xs.PSVIProvider {
                                    public constructor(arg0: com.sun.org.apache.xerces.internal.jaxp.validation.XSGrammarPoolContainer)
                                    public validate(arg0: javax.xml.transform.Source, arg1: javax.xml.transform.Result): void
                                    public setErrorHandler(arg0: org.xml.sax.ErrorHandler): void
                                    public getErrorHandler(): org.xml.sax.ErrorHandler
                                    public setResourceResolver(arg0: org.w3c.dom.ls.LSResourceResolver | org.w3c.dom.ls.LSResourceResolver$$Lambda): void
                                    public getResourceResolver(): org.w3c.dom.ls.LSResourceResolver
                                    public getFeature(arg0: java.lang.String | string): boolean
                                    public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                    public getProperty(arg0: java.lang.String | string): java.lang.Object
                                    public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                    public reset(): void
                                    public getElementPSVI(): com.sun.org.apache.xerces.internal.xs.ElementPSVI
                                    public getAttributePSVI(arg0: int): com.sun.org.apache.xerces.internal.xs.AttributePSVI
                                    public getAttributePSVIByName(arg0: java.lang.String | string, arg1: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.AttributePSVI
                                    public static class: java.lang.Class<any>
                                }
                                class WeakReferenceXMLSchema extends com.sun.org.apache.xerces.internal.jaxp.validation.AbstractXMLSchema {
                                    public constructor()
                                    public getGrammarPool(): com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool
                                    public isFullyComposed(): boolean
                                    public static class: java.lang.Class<any>
                                }
                                class WrappedSAXException extends java.lang.RuntimeException {
                                    public exception: org.xml.sax.SAXException
                                    public static class: java.lang.Class<any>
                                }
                                class XMLSchema extends com.sun.org.apache.xerces.internal.jaxp.validation.AbstractXMLSchema {
                                    public constructor(arg0: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool)
                                    public getGrammarPool(): com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool
                                    public isFullyComposed(): boolean
                                    public static class: java.lang.Class<any>
                                }
                                class XMLSchemaFactory extends javax.xml.validation.SchemaFactory {
                                    public constructor()
                                    public isSchemaLanguageSupported(arg0: java.lang.String | string): boolean
                                    public getResourceResolver(): org.w3c.dom.ls.LSResourceResolver
                                    public setResourceResolver(arg0: org.w3c.dom.ls.LSResourceResolver | org.w3c.dom.ls.LSResourceResolver$$Lambda): void
                                    public getErrorHandler(): org.xml.sax.ErrorHandler
                                    public setErrorHandler(arg0: org.xml.sax.ErrorHandler): void
                                    public newSchema(arg0: javax.xml.transform.Source[]): javax.xml.validation.Schema
                                    public newSchema(): javax.xml.validation.Schema
                                    public getFeature(arg0: java.lang.String | string): boolean
                                    public getProperty(arg0: java.lang.String | string): java.lang.Object
                                    public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                    public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                    public static class: java.lang.Class<any>
                                }
                                class XMLSchemaValidatorComponentManager extends com.sun.org.apache.xerces.internal.util.ParserConfigurationSettings implements com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager {
                                    public constructor(arg0: com.sun.org.apache.xerces.internal.jaxp.validation.XSGrammarPoolContainer)
                                    public getFeatureState(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.FeatureState
                                    public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                    public getPropertyState(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.PropertyState
                                    public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                    public addRecognizedParamsAndSetDefaults(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponent, arg1: com.sun.org.apache.xerces.internal.jaxp.validation.XSGrammarPoolContainer): void
                                    public reset(): void
                                    public static class: java.lang.Class<any>
                                }
                                interface XSGrammarPoolContainer {
                                    getGrammarPool(): com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool
                                    isFullyComposed(): boolean
                                    getFeature(arg0: java.lang.String | string): boolean
                                    setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                    getProperty(arg0: java.lang.String | string): java.lang.Object
                                    setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                }
                            }
                            class DefaultValidationErrorHandler extends org.xml.sax.helpers.DefaultHandler {
                                public constructor(arg0: java.util.Locale)
                                public error(arg0: org.xml.sax.SAXParseException): void
                                public static class: java.lang.Class<any>
                            }
                            class DocumentBuilderFactoryImpl extends javax.xml.parsers.DocumentBuilderFactory {
                                public constructor()
                                public newDocumentBuilder(): javax.xml.parsers.DocumentBuilder
                                public setAttribute(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                public getAttribute(arg0: java.lang.String | string): java.lang.Object
                                public getSchema(): javax.xml.validation.Schema
                                public setSchema(arg0: javax.xml.validation.Schema): void
                                public isXIncludeAware(): boolean
                                public setXIncludeAware(arg0: boolean): void
                                public getFeature(arg0: java.lang.String | string): boolean
                                public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                public static class: java.lang.Class<any>
                            }
                            class DocumentBuilderImpl extends javax.xml.parsers.DocumentBuilder implements com.sun.org.apache.xerces.internal.jaxp.JAXPConstants {
                                public static ACCESS_EXTERNAL_DTD: string
                                public static ACCESS_EXTERNAL_SCHEMA: string
                                public newDocument(): org.w3c.dom.Document
                                public getDOMImplementation(): org.w3c.dom.DOMImplementation
                                public parse(arg0: org.xml.sax.InputSource): org.w3c.dom.Document
                                public isNamespaceAware(): boolean
                                public isValidating(): boolean
                                public isXIncludeAware(): boolean
                                public setEntityResolver(arg0: org.xml.sax.EntityResolver | org.xml.sax.EntityResolver$$Lambda): void
                                public setErrorHandler(arg0: org.xml.sax.ErrorHandler): void
                                public getSchema(): javax.xml.validation.Schema
                                public reset(): void
                                public static class: java.lang.Class<any>
                            }
                            interface JAXPConstants {
                                JAXP_SCHEMA_LANGUAGE: string
                                W3C_XML_SCHEMA: string
                                JAXP_SCHEMA_SOURCE: string
                            }
                            class JAXPValidatorComponent extends com.sun.org.apache.xerces.internal.jaxp.TeeXMLDocumentFilterImpl implements com.sun.org.apache.xerces.internal.xni.parser.XMLComponent {
                                public constructor(arg0: javax.xml.validation.ValidatorHandler)
                                public startElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public emptyElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public characters(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public ignorableWhitespace(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public reset(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager): void
                                public getRecognizedFeatures(): java.lang.String[]
                                public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                public getRecognizedProperties(): java.lang.String[]
                                public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                public getFeatureDefault(arg0: java.lang.String | string): boolean
                                public getPropertyDefault(arg0: java.lang.String | string): java.lang.Object
                                public static class: java.lang.Class<any>
                            }
                            class SAXParserFactoryImpl extends javax.xml.parsers.SAXParserFactory {
                                public constructor()
                                public newSAXParser(): javax.xml.parsers.SAXParser
                                public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                public getFeature(arg0: java.lang.String | string): boolean
                                public getSchema(): javax.xml.validation.Schema
                                public setSchema(arg0: javax.xml.validation.Schema): void
                                public isXIncludeAware(): boolean
                                public setXIncludeAware(arg0: boolean): void
                                public setValidating(arg0: boolean): void
                                public isValidating(): boolean
                                public isNamespaceAware(): boolean
                                public setNamespaceAware(arg0: boolean): void
                                public static class: java.lang.Class<any>
                            }
                            class SAXParserImpl extends javax.xml.parsers.SAXParser implements com.sun.org.apache.xerces.internal.jaxp.JAXPConstants , com.sun.org.apache.xerces.internal.xs.PSVIProvider {
                                public getParser(): org.xml.sax.Parser
                                public getXMLReader(): org.xml.sax.XMLReader
                                public isNamespaceAware(): boolean
                                public isValidating(): boolean
                                public isXIncludeAware(): boolean
                                public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                public getProperty(arg0: java.lang.String | string): java.lang.Object
                                public parse(arg0: org.xml.sax.InputSource, arg1: org.xml.sax.helpers.DefaultHandler): void
                                public parse(arg0: org.xml.sax.InputSource, arg1: org.xml.sax.HandlerBase): void
                                public getSchema(): javax.xml.validation.Schema
                                public reset(): void
                                public getElementPSVI(): com.sun.org.apache.xerces.internal.xs.ElementPSVI
                                public getAttributePSVI(arg0: int): com.sun.org.apache.xerces.internal.xs.AttributePSVI
                                public getAttributePSVIByName(arg0: java.lang.String | string, arg1: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.AttributePSVI
                                public static class: java.lang.Class<any>
                            }
                            class SchemaValidatorConfiguration implements com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager {
                                public constructor(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager, arg1: com.sun.org.apache.xerces.internal.jaxp.validation.XSGrammarPoolContainer, arg2: com.sun.org.apache.xerces.internal.impl.validation.ValidationManager)
                                public getFeature(arg0: java.lang.String | string): boolean
                                public getFeatureState(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.FeatureState
                                public getPropertyState(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.PropertyState
                                public getProperty(arg0: java.lang.String | string): java.lang.Object
                                public getFeature(arg0: java.lang.String | string, arg1: boolean): boolean
                                public getProperty(arg0: java.lang.String | string, arg1: java.lang.Object): java.lang.Object
                                public static class: java.lang.Class<any>
                            }
                            class TeeXMLDocumentFilterImpl implements com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentFilter {
                                public getSide(): com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler
                                public setSide(arg0: com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler): void
                                public getDocumentSource(): com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource
                                public setDocumentSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource): void
                                public getDocumentHandler(): com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler
                                public setDocumentHandler(arg0: com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler): void
                                public characters(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public comment(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public doctypeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public emptyElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endDocument(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endGeneralEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public ignorableWhitespace(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public processingInstruction(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLString, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startDocument(arg0: com.sun.org.apache.xerces.internal.xni.XMLLocator, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.NamespaceContext, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startGeneralEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public textDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public xmlDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public static class: java.lang.Class<any>
                            }
                            class UnparsedEntityHandler implements com.sun.org.apache.xerces.internal.xni.parser.XMLDTDFilter , com.sun.org.apache.xerces.internal.impl.validation.EntityState {
                                public startDTD(arg0: com.sun.org.apache.xerces.internal.xni.XMLLocator, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startParameterEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public textDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endParameterEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startExternalSubset(arg0: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endExternalSubset(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public comment(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public processingInstruction(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLString, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public elementDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startAttlist(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public attributeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String[], arg4: java.lang.String | string, arg5: com.sun.org.apache.xerces.internal.xni.XMLString, arg6: com.sun.org.apache.xerces.internal.xni.XMLString, arg7: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endAttlist(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public internalEntityDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLString, arg2: com.sun.org.apache.xerces.internal.xni.XMLString, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public externalEntityDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public unparsedEntityDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public notationDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startConditional(arg0: short, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public ignoredCharacters(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endConditional(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endDTD(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public setDTDSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLDTDSource): void
                                public getDTDSource(): com.sun.org.apache.xerces.internal.xni.parser.XMLDTDSource
                                public setDTDHandler(arg0: com.sun.org.apache.xerces.internal.xni.XMLDTDHandler): void
                                public getDTDHandler(): com.sun.org.apache.xerces.internal.xni.XMLDTDHandler
                                public isEntityDeclared(arg0: java.lang.String | string): boolean
                                public isEntityUnparsed(arg0: java.lang.String | string): boolean
                                public reset(): void
                                public static class: java.lang.Class<any>
                            }
                        }
                        namespace parsers {
                            class AbstractDOMParser extends com.sun.org.apache.xerces.internal.parsers.AbstractXMLDocumentParser {
                                protected static NAMESPACES: string
                                protected static CREATE_ENTITY_REF_NODES: string
                                protected static INCLUDE_COMMENTS_FEATURE: string
                                protected static CREATE_CDATA_NODES_FEATURE: string
                                protected static INCLUDE_IGNORABLE_WHITESPACE: string
                                protected static DEFER_NODE_EXPANSION: string
                                protected static DOCUMENT_CLASS_NAME: string
                                protected static CURRENT_ELEMENT_NODE: string
                                protected static DEFAULT_DOCUMENT_CLASS_NAME: string
                                protected static CORE_DOCUMENT_CLASS_NAME: string
                                protected static PSVI_DOCUMENT_CLASS_NAME: string
                                protected fErrorHandler: com.sun.org.apache.xerces.internal.util.DOMErrorHandlerWrapper
                                protected fInDTD: boolean
                                protected fCreateEntityRefNodes: boolean
                                protected fIncludeIgnorableWhitespace: boolean
                                protected fIncludeComments: boolean
                                protected fCreateCDATANodes: boolean
                                protected fDocument: org.w3c.dom.Document
                                protected fDocumentImpl: com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl
                                protected fStorePSVI: boolean
                                protected fDocumentClassName: string
                                protected fDocumentType: org.w3c.dom.DocumentType
                                protected fCurrentNode: org.w3c.dom.Node
                                protected fCurrentCDATASection: org.w3c.dom.CDATASection
                                protected fCurrentEntityDecl: com.sun.org.apache.xerces.internal.dom.EntityImpl
                                protected fDeferredEntityDecl: int
                                protected fStringBuilder: java.lang.StringBuilder
                                protected fInternalSubset: java.lang.StringBuilder
                                protected fDeferNodeExpansion: boolean
                                protected fNamespaceAware: boolean
                                protected fDeferredDocumentImpl: com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl
                                protected fDocumentIndex: int
                                protected fDocumentTypeIndex: int
                                protected fCurrentNodeIndex: int
                                protected fCurrentCDATASectionIndex: int
                                protected fInDTDExternalSubset: boolean
                                protected fRoot: org.w3c.dom.Node
                                protected fInCDATASection: boolean
                                protected fFirstChunk: boolean
                                protected fFilterReject: boolean
                                protected fBaseURIStack: java.util.Stack
                                protected fRejectedElementDepth: int
                                protected fSkippedElemStack: java.util.Stack
                                protected fInEntityRef: boolean
                                protected fDOMFilter: org.w3c.dom.ls.LSParserFilter
                                protected constructor(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLParserConfiguration)
                                protected getDocumentClassName(): string
                                protected setDocumentClassName(arg0: java.lang.String | string): void
                                public getDocument(): org.w3c.dom.Document
                                public dropDocumentReferences(): void
                                public reset(): void
                                public setLocale(arg0: java.util.Locale): void
                                public startGeneralEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public textDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public comment(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public processingInstruction(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLString, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startDocument(arg0: com.sun.org.apache.xerces.internal.xni.XMLLocator, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.NamespaceContext, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public xmlDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public doctypeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public emptyElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public characters(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public ignorableWhitespace(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endDocument(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endGeneralEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                protected handleBaseURI(arg0: org.w3c.dom.Node): void
                                protected handleBaseURI(arg0: int): void
                                public startDTD(arg0: com.sun.org.apache.xerces.internal.xni.XMLLocator, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endDTD(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startConditional(arg0: short, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endConditional(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startExternalSubset(arg0: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endExternalSubset(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public internalEntityDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLString, arg2: com.sun.org.apache.xerces.internal.xni.XMLString, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public externalEntityDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startParameterEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endParameterEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public unparsedEntityDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public notationDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public ignoredCharacters(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public elementDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public attributeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String[], arg4: java.lang.String | string, arg5: com.sun.org.apache.xerces.internal.xni.XMLString, arg6: com.sun.org.apache.xerces.internal.xni.XMLString, arg7: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startAttlist(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endAttlist(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                protected createElementNode(arg0: com.sun.org.apache.xerces.internal.xni.QName): org.w3c.dom.Element
                                protected createAttrNode(arg0: com.sun.org.apache.xerces.internal.xni.QName): org.w3c.dom.Attr
                                protected setCharacterData(arg0: boolean): void
                                public abort(): void
                                public static class: java.lang.Class<any>
                            }
                            abstract class AbstractSAXParser extends com.sun.org.apache.xerces.internal.parsers.AbstractXMLDocumentParser implements com.sun.org.apache.xerces.internal.xs.PSVIProvider , org.xml.sax.Parser , org.xml.sax.XMLReader {
                                protected static NAMESPACES: string
                                protected static NAMESPACE_PREFIXES: string
                                protected static STRING_INTERNING: string
                                protected static ALLOW_UE_AND_NOTATION_EVENTS: string
                                protected static LEXICAL_HANDLER: string
                                protected static DECLARATION_HANDLER: string
                                protected static DOM_NODE: string
                                protected fNamespaces: boolean
                                protected fNamespacePrefixes: boolean
                                protected fLexicalHandlerParameterEntities: boolean
                                protected fStandalone: boolean
                                protected fResolveDTDURIs: boolean
                                protected fUseEntityResolver2: boolean
                                protected fXMLNSURIs: boolean
                                protected fContentHandler: org.xml.sax.ContentHandler
                                protected fDocumentHandler: org.xml.sax.DocumentHandler
                                protected fNamespaceContext: com.sun.org.apache.xerces.internal.xni.NamespaceContext
                                protected fDTDHandler: org.xml.sax.DTDHandler
                                protected fDeclHandler: org.xml.sax.ext.DeclHandler
                                protected fLexicalHandler: org.xml.sax.ext.LexicalHandler
                                protected fQName: com.sun.org.apache.xerces.internal.xni.QName
                                protected fParseInProgress: boolean
                                protected fVersion: string
                                protected fDeclaredAttrs: com.sun.org.apache.xerces.internal.util.SymbolHash
                                protected constructor(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLParserConfiguration)
                                public startDocument(arg0: com.sun.org.apache.xerces.internal.xni.XMLLocator, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.NamespaceContext, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public xmlDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public doctypeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startGeneralEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endGeneralEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public characters(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public ignorableWhitespace(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public comment(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public processingInstruction(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLString, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endDocument(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startExternalSubset(arg0: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endExternalSubset(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startParameterEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endParameterEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public elementDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public attributeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String[], arg4: java.lang.String | string, arg5: com.sun.org.apache.xerces.internal.xni.XMLString, arg6: com.sun.org.apache.xerces.internal.xni.XMLString, arg7: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public internalEntityDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLString, arg2: com.sun.org.apache.xerces.internal.xni.XMLString, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public externalEntityDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public unparsedEntityDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public notationDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endDTD(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public parse(arg0: java.lang.String | string): void
                                public parse(arg0: org.xml.sax.InputSource): void
                                public setEntityResolver(arg0: org.xml.sax.EntityResolver | org.xml.sax.EntityResolver$$Lambda): void
                                public getEntityResolver(): org.xml.sax.EntityResolver
                                public setErrorHandler(arg0: org.xml.sax.ErrorHandler): void
                                public getErrorHandler(): org.xml.sax.ErrorHandler
                                public setLocale(arg0: java.util.Locale): void
                                public setDTDHandler(arg0: org.xml.sax.DTDHandler): void
                                public setDocumentHandler(arg0: org.xml.sax.DocumentHandler): void
                                public setContentHandler(arg0: org.xml.sax.ContentHandler): void
                                public getContentHandler(): org.xml.sax.ContentHandler
                                public getDTDHandler(): org.xml.sax.DTDHandler
                                public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                public getFeature(arg0: java.lang.String | string): boolean
                                public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                public getProperty(arg0: java.lang.String | string): java.lang.Object
                                protected setDeclHandler(arg0: org.xml.sax.ext.DeclHandler): void
                                protected getDeclHandler(): org.xml.sax.ext.DeclHandler
                                protected setLexicalHandler(arg0: org.xml.sax.ext.LexicalHandler): void
                                protected getLexicalHandler(): org.xml.sax.ext.LexicalHandler
                                protected startNamespaceMapping(): void
                                protected endNamespaceMapping(): void
                                public reset(): void
                                public getElementPSVI(): com.sun.org.apache.xerces.internal.xs.ElementPSVI
                                public getAttributePSVI(arg0: int): com.sun.org.apache.xerces.internal.xs.AttributePSVI
                                public getAttributePSVIByName(arg0: java.lang.String | string, arg1: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.AttributePSVI
                                public static class: java.lang.Class<any>
                            }
                            abstract class AbstractXMLDocumentParser extends com.sun.org.apache.xerces.internal.parsers.XMLParser implements com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler , com.sun.org.apache.xerces.internal.xni.XMLDTDHandler , com.sun.org.apache.xerces.internal.xni.XMLDTDContentModelHandler {
                                protected fInDTD: boolean
                                protected fDocumentSource: com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource
                                protected fDTDSource: com.sun.org.apache.xerces.internal.xni.parser.XMLDTDSource
                                protected fDTDContentModelSource: com.sun.org.apache.xerces.internal.xni.parser.XMLDTDContentModelSource
                                protected constructor(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLParserConfiguration)
                                public startDocument(arg0: com.sun.org.apache.xerces.internal.xni.XMLLocator, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.NamespaceContext, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public xmlDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public doctypeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public emptyElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public characters(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public ignorableWhitespace(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endDocument(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startGeneralEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public textDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endGeneralEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public comment(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public processingInstruction(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLString, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public setDocumentSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource): void
                                public getDocumentSource(): com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource
                                public startDTD(arg0: com.sun.org.apache.xerces.internal.xni.XMLLocator, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startExternalSubset(arg0: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endExternalSubset(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startParameterEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endParameterEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public ignoredCharacters(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public elementDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startAttlist(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public attributeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String[], arg4: java.lang.String | string, arg5: com.sun.org.apache.xerces.internal.xni.XMLString, arg6: com.sun.org.apache.xerces.internal.xni.XMLString, arg7: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endAttlist(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public internalEntityDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLString, arg2: com.sun.org.apache.xerces.internal.xni.XMLString, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public externalEntityDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public unparsedEntityDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public notationDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startConditional(arg0: short, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endConditional(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endDTD(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public setDTDSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLDTDSource): void
                                public getDTDSource(): com.sun.org.apache.xerces.internal.xni.parser.XMLDTDSource
                                public startContentModel(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public any(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public empty(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startGroup(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public pcdata(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public element(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public separator(arg0: short, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public occurrence(arg0: short, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endGroup(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endContentModel(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public setDTDContentModelSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLDTDContentModelSource): void
                                public getDTDContentModelSource(): com.sun.org.apache.xerces.internal.xni.parser.XMLDTDContentModelSource
                                protected reset(): void
                                public static class: java.lang.Class<any>
                            }
                            abstract class BasicParserConfiguration extends com.sun.org.apache.xerces.internal.util.ParserConfigurationSettings implements com.sun.org.apache.xerces.internal.xni.parser.XMLParserConfiguration {
                                protected static VALIDATION: string
                                protected static NAMESPACES: string
                                protected static EXTERNAL_GENERAL_ENTITIES: string
                                protected static EXTERNAL_PARAMETER_ENTITIES: string
                                protected static XML_STRING: string
                                protected static SYMBOL_TABLE: string
                                protected static ERROR_HANDLER: string
                                protected static ENTITY_RESOLVER: string
                                protected fSymbolTable: com.sun.org.apache.xerces.internal.util.SymbolTable
                                protected fLocale: java.util.Locale
                                protected fComponents: java.util.ArrayList
                                protected fDocumentHandler: com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler
                                protected fDTDHandler: com.sun.org.apache.xerces.internal.xni.XMLDTDHandler
                                protected fDTDContentModelHandler: com.sun.org.apache.xerces.internal.xni.XMLDTDContentModelHandler
                                protected fLastComponent: com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource
                                protected constructor()
                                protected constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable)
                                protected constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager)
                                protected addComponent(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponent): void
                                public parse(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource): void
                                public setDocumentHandler(arg0: com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler): void
                                public getDocumentHandler(): com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler
                                public setDTDHandler(arg0: com.sun.org.apache.xerces.internal.xni.XMLDTDHandler): void
                                public getDTDHandler(): com.sun.org.apache.xerces.internal.xni.XMLDTDHandler
                                public setDTDContentModelHandler(arg0: com.sun.org.apache.xerces.internal.xni.XMLDTDContentModelHandler): void
                                public getDTDContentModelHandler(): com.sun.org.apache.xerces.internal.xni.XMLDTDContentModelHandler
                                public setEntityResolver(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver | com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver$$Lambda): void
                                public getEntityResolver(): com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver
                                public setErrorHandler(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler): void
                                public getErrorHandler(): com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler
                                public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                public setLocale(arg0: java.util.Locale): void
                                public getLocale(): java.util.Locale
                                protected reset(): void
                                protected checkProperty(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.PropertyState
                                protected checkFeature(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.FeatureState
                                public static class: java.lang.Class<any>
                            }
                            class CachingParserPool {
                                public static DEFAULT_SHADOW_SYMBOL_TABLE: boolean
                                public static DEFAULT_SHADOW_GRAMMAR_POOL: boolean
                                protected fSynchronizedSymbolTable: com.sun.org.apache.xerces.internal.util.SymbolTable
                                protected fSynchronizedGrammarPool: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool
                                protected fShadowSymbolTable: boolean
                                protected fShadowGrammarPool: boolean
                                public constructor()
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool)
                                public getSymbolTable(): com.sun.org.apache.xerces.internal.util.SymbolTable
                                public getXMLGrammarPool(): com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool
                                public setShadowSymbolTable(arg0: boolean): void
                                public createDOMParser(): com.sun.org.apache.xerces.internal.parsers.DOMParser
                                public createSAXParser(): com.sun.org.apache.xerces.internal.parsers.SAXParser
                                public static class: java.lang.Class<any>
                            }
                            class DOMParser extends com.sun.org.apache.xerces.internal.parsers.AbstractDOMParser {
                                protected static USE_ENTITY_RESOLVER2: string
                                protected static REPORT_WHITESPACE: string
                                protected static SYMBOL_TABLE: string
                                protected static XMLGRAMMAR_POOL: string
                                protected fUseEntityResolver2: boolean
                                public constructor(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLParserConfiguration)
                                public constructor()
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool)
                                public parse(arg0: java.lang.String | string): void
                                public parse(arg0: org.xml.sax.InputSource): void
                                public setEntityResolver(arg0: org.xml.sax.EntityResolver | org.xml.sax.EntityResolver$$Lambda): void
                                public getEntityResolver(): org.xml.sax.EntityResolver
                                public setErrorHandler(arg0: org.xml.sax.ErrorHandler): void
                                public getErrorHandler(): org.xml.sax.ErrorHandler
                                public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                public getFeature(arg0: java.lang.String | string): boolean
                                public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                public setProperty0(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                public getProperty(arg0: java.lang.String | string): java.lang.Object
                                public getXMLParserConfiguration(): com.sun.org.apache.xerces.internal.xni.parser.XMLParserConfiguration
                                public static class: java.lang.Class<any>
                            }
                            class DOMParserImpl extends com.sun.org.apache.xerces.internal.parsers.AbstractDOMParser implements org.w3c.dom.ls.LSParser , org.w3c.dom.DOMConfiguration {
                                protected static NAMESPACES: string
                                protected static VALIDATION_FEATURE: string
                                protected static XMLSCHEMA: string
                                protected static XMLSCHEMA_FULL_CHECKING: string
                                protected static DYNAMIC_VALIDATION: string
                                protected static NORMALIZE_DATA: string
                                protected static DISALLOW_DOCTYPE_DECL_FEATURE: string
                                protected static NAMESPACE_GROWTH: string
                                protected static TOLERATE_DUPLICATES: string
                                protected static SYMBOL_TABLE: string
                                protected static PSVI_AUGMENT: string
                                protected fNamespaceDeclarations: boolean
                                protected fSchemaType: string
                                protected fBusy: boolean
                                protected static DEBUG: boolean
                                public constructor(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLParserConfiguration, arg1: java.lang.String | string)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLParserConfiguration)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool)
                                public reset(): void
                                public getDomConfig(): org.w3c.dom.DOMConfiguration
                                public getFilter(): org.w3c.dom.ls.LSParserFilter
                                public setFilter(arg0: org.w3c.dom.ls.LSParserFilter): void
                                public setParameter(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                public getParameter(arg0: java.lang.String | string): java.lang.Object
                                public canSetParameter(arg0: java.lang.String | string, arg1: java.lang.Object): boolean
                                public getParameterNames(): org.w3c.dom.DOMStringList
                                public parseURI(arg0: java.lang.String | string): org.w3c.dom.Document
                                public parse(arg0: org.w3c.dom.ls.LSInput): org.w3c.dom.Document
                                public parseWithContext(arg0: org.w3c.dom.ls.LSInput, arg1: org.w3c.dom.Node, arg2: short): org.w3c.dom.Node
                                public getAsync(): boolean
                                public getBusy(): boolean
                                public abort(): void
                                public startElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public static class: java.lang.Class<any>
                            }
                            class DTDConfiguration extends com.sun.org.apache.xerces.internal.parsers.BasicParserConfiguration implements com.sun.org.apache.xerces.internal.xni.parser.XMLPullParserConfiguration {
                                protected static WARN_ON_DUPLICATE_ATTDEF: string
                                protected static WARN_ON_DUPLICATE_ENTITYDEF: string
                                protected static WARN_ON_UNDECLARED_ELEMDEF: string
                                protected static ALLOW_JAVA_ENCODINGS: string
                                protected static CONTINUE_AFTER_FATAL_ERROR: string
                                protected static LOAD_EXTERNAL_DTD: string
                                protected static NOTIFY_BUILTIN_REFS: string
                                protected static NOTIFY_CHAR_REFS: string
                                protected static ERROR_REPORTER: string
                                protected static ENTITY_MANAGER: string
                                protected static DOCUMENT_SCANNER: string
                                protected static DTD_SCANNER: string
                                protected static XMLGRAMMAR_POOL: string
                                protected static DTD_PROCESSOR: string
                                protected static DTD_VALIDATOR: string
                                protected static NAMESPACE_BINDER: string
                                protected static DATATYPE_VALIDATOR_FACTORY: string
                                protected static VALIDATION_MANAGER: string
                                protected static JAXP_SCHEMA_LANGUAGE: string
                                protected static JAXP_SCHEMA_SOURCE: string
                                protected static LOCALE: string
                                protected static XML_SECURITY_PROPERTY_MANAGER: string
                                protected static PRINT_EXCEPTION_STACK_TRACE: boolean
                                protected fGrammarPool: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool
                                protected fDatatypeValidatorFactory: com.sun.org.apache.xerces.internal.impl.dv.DTDDVFactory
                                protected fErrorReporter: com.sun.org.apache.xerces.internal.impl.XMLErrorReporter
                                protected fEntityManager: com.sun.org.apache.xerces.internal.impl.XMLEntityManager
                                protected fScanner: com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentScanner
                                protected fInputSource: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource
                                protected fDTDScanner: com.sun.org.apache.xerces.internal.xni.parser.XMLDTDScanner
                                protected fDTDProcessor: com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDProcessor
                                protected fDTDValidator: com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator
                                protected fNamespaceBinder: com.sun.org.apache.xerces.internal.impl.XMLNamespaceBinder
                                protected fValidationManager: com.sun.org.apache.xerces.internal.impl.validation.ValidationManager
                                protected fLocator: com.sun.org.apache.xerces.internal.xni.XMLLocator
                                protected fParseInProgress: boolean
                                public constructor()
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool, arg2: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager)
                                public getPropertyState(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.PropertyState
                                public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                public setLocale(arg0: java.util.Locale): void
                                public setInputSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource): void
                                public parse(arg0: boolean): boolean
                                public cleanup(): void
                                public parse(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource): void
                                protected reset(): void
                                protected configurePipeline(): void
                                protected configureDTDPipeline(): void
                                protected checkFeature(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.FeatureState
                                protected checkProperty(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.PropertyState
                                protected createEntityManager(): com.sun.org.apache.xerces.internal.impl.XMLEntityManager
                                protected createErrorReporter(): com.sun.org.apache.xerces.internal.impl.XMLErrorReporter
                                protected createDocumentScanner(): com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentScanner
                                protected createDTDScanner(): com.sun.org.apache.xerces.internal.xni.parser.XMLDTDScanner
                                protected createDTDProcessor(): com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDProcessor
                                protected createDTDValidator(): com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator
                                protected createNamespaceBinder(): com.sun.org.apache.xerces.internal.impl.XMLNamespaceBinder
                                protected createDatatypeValidatorFactory(): com.sun.org.apache.xerces.internal.impl.dv.DTDDVFactory
                                protected createValidationManager(): com.sun.org.apache.xerces.internal.impl.validation.ValidationManager
                                public static class: java.lang.Class<any>
                            }
                            abstract class DTDParser extends com.sun.org.apache.xerces.internal.parsers.XMLGrammarParser implements com.sun.org.apache.xerces.internal.xni.XMLDTDHandler , com.sun.org.apache.xerces.internal.xni.XMLDTDContentModelHandler {
                                protected fDTDScanner: com.sun.org.apache.xerces.internal.xni.parser.XMLDTDScanner
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable)
                                public getDTDGrammar(): com.sun.org.apache.xerces.internal.impl.dtd.DTDGrammar
                                public startEntity(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string): void
                                public textDecl(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public startDTD(arg0: com.sun.org.apache.xerces.internal.xni.XMLLocator, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public comment(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public processingInstruction(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLString, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startExternalSubset(arg0: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endExternalSubset(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public elementDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startAttlist(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public attributeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String[], arg4: java.lang.String | string, arg5: com.sun.org.apache.xerces.internal.xni.XMLString, arg6: com.sun.org.apache.xerces.internal.xni.XMLString, arg7: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endAttlist(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public internalEntityDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLString, arg2: com.sun.org.apache.xerces.internal.xni.XMLString, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public externalEntityDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public unparsedEntityDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public notationDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startConditional(arg0: short, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endConditional(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endDTD(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startContentModel(arg0: java.lang.String | string, arg1: short): void
                                public mixedElement(arg0: java.lang.String | string): void
                                public childrenStartGroup(): void
                                public childrenElement(arg0: java.lang.String | string): void
                                public childrenSeparator(arg0: short): void
                                public childrenOccurrence(arg0: short): void
                                public childrenEndGroup(): void
                                public endContentModel(): void
                                public static class: java.lang.Class<any>
                            }
                            class IntegratedParserConfiguration extends com.sun.org.apache.xerces.internal.parsers.StandardParserConfiguration {
                                protected fNamespaceScanner: com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl
                                protected fNonNSScanner: com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl
                                protected fNonNSDTDValidator: com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator
                                public constructor()
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool, arg2: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager)
                                protected configurePipeline(): void
                                protected createDocumentScanner(): com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentScanner
                                protected createDTDValidator(): com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator
                                public static class: java.lang.Class<any>
                            }
                            class NonValidatingConfiguration extends com.sun.org.apache.xerces.internal.parsers.BasicParserConfiguration implements com.sun.org.apache.xerces.internal.xni.parser.XMLPullParserConfiguration {
                                protected static WARN_ON_DUPLICATE_ATTDEF: string
                                protected static WARN_ON_DUPLICATE_ENTITYDEF: string
                                protected static WARN_ON_UNDECLARED_ELEMDEF: string
                                protected static ALLOW_JAVA_ENCODINGS: string
                                protected static CONTINUE_AFTER_FATAL_ERROR: string
                                protected static LOAD_EXTERNAL_DTD: string
                                protected static NOTIFY_BUILTIN_REFS: string
                                protected static NOTIFY_CHAR_REFS: string
                                protected static NORMALIZE_DATA: string
                                protected static SCHEMA_ELEMENT_DEFAULT: string
                                protected static ERROR_REPORTER: string
                                protected static ENTITY_MANAGER: string
                                protected static DOCUMENT_SCANNER: string
                                protected static DTD_SCANNER: string
                                protected static XMLGRAMMAR_POOL: string
                                protected static DTD_VALIDATOR: string
                                protected static NAMESPACE_BINDER: string
                                protected static DATATYPE_VALIDATOR_FACTORY: string
                                protected static VALIDATION_MANAGER: string
                                protected static SCHEMA_VALIDATOR: string
                                protected static LOCALE: string
                                protected static XML_SECURITY_PROPERTY_MANAGER: string
                                protected fGrammarPool: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool
                                protected fDatatypeValidatorFactory: com.sun.org.apache.xerces.internal.impl.dv.DTDDVFactory
                                protected fErrorReporter: com.sun.org.apache.xerces.internal.impl.XMLErrorReporter
                                protected fEntityManager: com.sun.org.apache.xerces.internal.impl.XMLEntityManager
                                protected fScanner: com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentScanner
                                protected fInputSource: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource
                                protected fDTDScanner: com.sun.org.apache.xerces.internal.xni.parser.XMLDTDScanner
                                protected fValidationManager: com.sun.org.apache.xerces.internal.impl.validation.ValidationManager
                                protected fConfigUpdated: boolean
                                protected fLocator: com.sun.org.apache.xerces.internal.xni.XMLLocator
                                protected fParseInProgress: boolean
                                public constructor()
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool, arg2: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager)
                                public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                public getPropertyState(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.PropertyState
                                public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                public setLocale(arg0: java.util.Locale): void
                                public getFeatureState(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.FeatureState
                                public setInputSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource): void
                                public parse(arg0: boolean): boolean
                                public cleanup(): void
                                public parse(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource): void
                                protected reset(): void
                                protected configurePipeline(): void
                                protected checkFeature(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.FeatureState
                                protected checkProperty(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.PropertyState
                                protected createEntityManager(): com.sun.org.apache.xerces.internal.impl.XMLEntityManager
                                protected createErrorReporter(): com.sun.org.apache.xerces.internal.impl.XMLErrorReporter
                                protected createDocumentScanner(): com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentScanner
                                protected createDTDScanner(): com.sun.org.apache.xerces.internal.xni.parser.XMLDTDScanner
                                protected createDatatypeValidatorFactory(): com.sun.org.apache.xerces.internal.impl.dv.DTDDVFactory
                                protected createValidationManager(): com.sun.org.apache.xerces.internal.impl.validation.ValidationManager
                                public static class: java.lang.Class<any>
                            }
                            class SAXParser extends com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser {
                                protected static NOTIFY_BUILTIN_REFS: string
                                protected static REPORT_WHITESPACE: string
                                protected static SYMBOL_TABLE: string
                                protected static XMLGRAMMAR_POOL: string
                                public constructor(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLParserConfiguration)
                                public constructor()
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool)
                                public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                public static class: java.lang.Class<any>
                            }
                            class SecurityConfiguration extends com.sun.org.apache.xerces.internal.parsers.XIncludeAwareParserConfiguration {
                                protected static SECURITY_MANAGER_PROPERTY: string
                                public constructor()
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool, arg2: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager)
                                public static class: java.lang.Class<any>
                            }
                            class StandardParserConfiguration extends com.sun.org.apache.xerces.internal.parsers.DTDConfiguration {
                                protected static NORMALIZE_DATA: string
                                protected static SCHEMA_ELEMENT_DEFAULT: string
                                protected static SCHEMA_AUGMENT_PSVI: string
                                protected static XMLSCHEMA_VALIDATION: string
                                protected static XMLSCHEMA_FULL_CHECKING: string
                                protected static GENERATE_SYNTHETIC_ANNOTATIONS: string
                                protected static VALIDATE_ANNOTATIONS: string
                                protected static HONOUR_ALL_SCHEMALOCATIONS: string
                                protected static NAMESPACE_GROWTH: string
                                protected static TOLERATE_DUPLICATES: string
                                protected static SCHEMA_VALIDATOR: string
                                protected static SCHEMA_LOCATION: string
                                protected static SCHEMA_NONS_LOCATION: string
                                protected static SCHEMA_DV_FACTORY: string
                                protected fSchemaValidator: com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator
                                public constructor()
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool, arg2: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager)
                                protected configurePipeline(): void
                                protected checkFeature(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.FeatureState
                                protected checkProperty(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.PropertyState
                                public static class: java.lang.Class<any>
                            }
                            class XIncludeAwareParserConfiguration extends com.sun.org.apache.xerces.internal.parsers.XML11Configuration {
                                protected static ALLOW_UE_AND_NOTATION_EVENTS: string
                                protected static XINCLUDE_FIXUP_BASE_URIS: string
                                protected static XINCLUDE_FIXUP_LANGUAGE: string
                                protected static XINCLUDE_FEATURE: string
                                protected static XINCLUDE_HANDLER: string
                                protected static NAMESPACE_CONTEXT: string
                                protected fXIncludeHandler: com.sun.org.apache.xerces.internal.xinclude.XIncludeHandler
                                protected fNonXIncludeNSContext: com.sun.org.apache.xerces.internal.util.NamespaceSupport
                                protected fXIncludeNSContext: com.sun.org.apache.xerces.internal.xinclude.XIncludeNamespaceSupport
                                protected fCurrentNSContext: com.sun.org.apache.xerces.internal.xni.NamespaceContext
                                protected fXIncludeEnabled: boolean
                                public constructor()
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool, arg2: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager)
                                protected configurePipeline(): void
                                protected configureXML11Pipeline(): void
                                public getFeatureState(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.FeatureState
                                public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                public static class: java.lang.Class<any>
                            }
                            class XIncludeParserConfiguration extends com.sun.org.apache.xerces.internal.parsers.XML11Configuration {
                                protected static ALLOW_UE_AND_NOTATION_EVENTS: string
                                protected static XINCLUDE_FIXUP_BASE_URIS: string
                                protected static XINCLUDE_FIXUP_LANGUAGE: string
                                protected static XINCLUDE_HANDLER: string
                                protected static NAMESPACE_CONTEXT: string
                                public constructor()
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool, arg2: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager)
                                protected configurePipeline(): void
                                protected configureXML11Pipeline(): void
                                public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                public static class: java.lang.Class<any>
                            }
                            interface XML11Configurable {
                            }
                            class XML11Configuration extends com.sun.org.apache.xerces.internal.util.ParserConfigurationSettings implements com.sun.org.apache.xerces.internal.xni.parser.XMLPullParserConfiguration , com.sun.org.apache.xerces.internal.parsers.XML11Configurable {
                                protected static XML11_DATATYPE_VALIDATOR_FACTORY: string
                                protected static WARN_ON_DUPLICATE_ATTDEF: string
                                protected static WARN_ON_DUPLICATE_ENTITYDEF: string
                                protected static WARN_ON_UNDECLARED_ELEMDEF: string
                                protected static ALLOW_JAVA_ENCODINGS: string
                                protected static CONTINUE_AFTER_FATAL_ERROR: string
                                protected static LOAD_EXTERNAL_DTD: string
                                protected static NOTIFY_BUILTIN_REFS: string
                                protected static NOTIFY_CHAR_REFS: string
                                protected static NORMALIZE_DATA: string
                                protected static SCHEMA_ELEMENT_DEFAULT: string
                                protected static SCHEMA_AUGMENT_PSVI: string
                                protected static XMLSCHEMA_VALIDATION: string
                                protected static XMLSCHEMA_FULL_CHECKING: string
                                protected static GENERATE_SYNTHETIC_ANNOTATIONS: string
                                protected static VALIDATE_ANNOTATIONS: string
                                protected static HONOUR_ALL_SCHEMALOCATIONS: string
                                protected static NAMESPACE_GROWTH: string
                                protected static TOLERATE_DUPLICATES: string
                                protected static USE_GRAMMAR_POOL_ONLY: string
                                protected static VALIDATION: string
                                protected static NAMESPACES: string
                                protected static EXTERNAL_GENERAL_ENTITIES: string
                                protected static EXTERNAL_PARAMETER_ENTITIES: string
                                protected static XML_STRING: string
                                protected static SYMBOL_TABLE: string
                                protected static ERROR_HANDLER: string
                                protected static ENTITY_RESOLVER: string
                                protected static SCHEMA_VALIDATOR: string
                                protected static SCHEMA_LOCATION: string
                                protected static SCHEMA_NONS_LOCATION: string
                                protected static ERROR_REPORTER: string
                                protected static ENTITY_MANAGER: string
                                protected static DOCUMENT_SCANNER: string
                                protected static DTD_SCANNER: string
                                protected static XMLGRAMMAR_POOL: string
                                protected static DTD_PROCESSOR: string
                                protected static DTD_VALIDATOR: string
                                protected static NAMESPACE_BINDER: string
                                protected static DATATYPE_VALIDATOR_FACTORY: string
                                protected static VALIDATION_MANAGER: string
                                protected static JAXP_SCHEMA_LANGUAGE: string
                                protected static JAXP_SCHEMA_SOURCE: string
                                protected static LOCALE: string
                                protected static SCHEMA_DV_FACTORY: string
                                protected static PRINT_EXCEPTION_STACK_TRACE: boolean
                                protected fSymbolTable: com.sun.org.apache.xerces.internal.util.SymbolTable
                                protected fInputSource: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource
                                protected fValidationManager: com.sun.org.apache.xerces.internal.impl.validation.ValidationManager
                                protected fVersionDetector: com.sun.org.apache.xerces.internal.impl.XMLVersionDetector
                                protected fLocator: com.sun.org.apache.xerces.internal.xni.XMLLocator
                                protected fLocale: java.util.Locale
                                protected fComponents: java.util.ArrayList<com.sun.org.apache.xerces.internal.xni.parser.XMLComponent>
                                protected fXML11Components: java.util.ArrayList<com.sun.org.apache.xerces.internal.xni.parser.XMLComponent>
                                protected fCommonComponents: java.util.ArrayList<com.sun.org.apache.xerces.internal.xni.parser.XMLComponent>
                                protected fDocumentHandler: com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler
                                protected fDTDHandler: com.sun.org.apache.xerces.internal.xni.XMLDTDHandler
                                protected fDTDContentModelHandler: com.sun.org.apache.xerces.internal.xni.XMLDTDContentModelHandler
                                protected fLastComponent: com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource
                                protected fParseInProgress: boolean
                                protected fConfigUpdated: boolean
                                protected fDatatypeValidatorFactory: com.sun.org.apache.xerces.internal.impl.dv.DTDDVFactory
                                protected fNamespaceScanner: com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl
                                protected fNonNSScanner: com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl
                                protected fDTDValidator: com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator
                                protected fNonNSDTDValidator: com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator
                                protected fDTDScanner: com.sun.org.apache.xerces.internal.xni.parser.XMLDTDScanner
                                protected fDTDProcessor: com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDProcessor
                                protected fXML11DatatypeFactory: com.sun.org.apache.xerces.internal.impl.dv.DTDDVFactory
                                protected fXML11NSDocScanner: com.sun.org.apache.xerces.internal.impl.XML11NSDocumentScannerImpl
                                protected fXML11DocScanner: com.sun.org.apache.xerces.internal.impl.XML11DocumentScannerImpl
                                protected fXML11NSDTDValidator: com.sun.org.apache.xerces.internal.impl.dtd.XML11NSDTDValidator
                                protected fXML11DTDValidator: com.sun.org.apache.xerces.internal.impl.dtd.XML11DTDValidator
                                protected fXML11DTDScanner: com.sun.org.apache.xerces.internal.impl.XML11DTDScannerImpl
                                protected fXML11DTDProcessor: com.sun.org.apache.xerces.internal.impl.dtd.XML11DTDProcessor
                                protected fGrammarPool: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool
                                protected fErrorReporter: com.sun.org.apache.xerces.internal.impl.XMLErrorReporter
                                protected fEntityManager: com.sun.org.apache.xerces.internal.impl.XMLEntityManager
                                protected fSchemaValidator: com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator
                                protected fCurrentScanner: com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentScanner
                                protected fCurrentDVFactory: com.sun.org.apache.xerces.internal.impl.dv.DTDDVFactory
                                protected fCurrentDTDScanner: com.sun.org.apache.xerces.internal.xni.parser.XMLDTDScanner
                                public constructor()
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool, arg2: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager)
                                public setInputSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource): void
                                public setLocale(arg0: java.util.Locale): void
                                public setDocumentHandler(arg0: com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler): void
                                public getDocumentHandler(): com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler
                                public setDTDHandler(arg0: com.sun.org.apache.xerces.internal.xni.XMLDTDHandler): void
                                public getDTDHandler(): com.sun.org.apache.xerces.internal.xni.XMLDTDHandler
                                public setDTDContentModelHandler(arg0: com.sun.org.apache.xerces.internal.xni.XMLDTDContentModelHandler): void
                                public getDTDContentModelHandler(): com.sun.org.apache.xerces.internal.xni.XMLDTDContentModelHandler
                                public setEntityResolver(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver | com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver$$Lambda): void
                                public getEntityResolver(): com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver
                                public setErrorHandler(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler): void
                                public getErrorHandler(): com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler
                                public cleanup(): void
                                public parse(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource): void
                                public parse(arg0: boolean): boolean
                                public getFeatureState(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.FeatureState
                                public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                public getPropertyState(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.PropertyState
                                public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                public getLocale(): java.util.Locale
                                protected reset(): void
                                protected resetCommon(): void
                                protected resetXML11(): void
                                protected configureXML11Pipeline(): void
                                protected configurePipeline(): void
                                protected checkFeature(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.FeatureState
                                protected checkProperty(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.PropertyState
                                protected addComponent(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponent): void
                                protected addCommonComponent(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponent): void
                                protected addXML11Component(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponent): void
                                protected addRecognizedParamsAndSetDefaults(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponent): void
                                public static class: java.lang.Class<any>
                            }
                            class XML11DTDConfiguration extends com.sun.org.apache.xerces.internal.util.ParserConfigurationSettings implements com.sun.org.apache.xerces.internal.xni.parser.XMLPullParserConfiguration , com.sun.org.apache.xerces.internal.parsers.XML11Configurable {
                                protected static XML11_DATATYPE_VALIDATOR_FACTORY: string
                                protected static VALIDATION: string
                                protected static NAMESPACES: string
                                protected static EXTERNAL_GENERAL_ENTITIES: string
                                protected static EXTERNAL_PARAMETER_ENTITIES: string
                                protected static CONTINUE_AFTER_FATAL_ERROR: string
                                protected static LOAD_EXTERNAL_DTD: string
                                protected static XML_STRING: string
                                protected static SYMBOL_TABLE: string
                                protected static ERROR_HANDLER: string
                                protected static ENTITY_RESOLVER: string
                                protected static ERROR_REPORTER: string
                                protected static ENTITY_MANAGER: string
                                protected static DOCUMENT_SCANNER: string
                                protected static DTD_SCANNER: string
                                protected static XMLGRAMMAR_POOL: string
                                protected static DTD_PROCESSOR: string
                                protected static DTD_VALIDATOR: string
                                protected static NAMESPACE_BINDER: string
                                protected static DATATYPE_VALIDATOR_FACTORY: string
                                protected static VALIDATION_MANAGER: string
                                protected static JAXP_SCHEMA_LANGUAGE: string
                                protected static JAXP_SCHEMA_SOURCE: string
                                protected static PRINT_EXCEPTION_STACK_TRACE: boolean
                                protected fSymbolTable: com.sun.org.apache.xerces.internal.util.SymbolTable
                                protected fInputSource: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource
                                protected fValidationManager: com.sun.org.apache.xerces.internal.impl.validation.ValidationManager
                                protected fVersionDetector: com.sun.org.apache.xerces.internal.impl.XMLVersionDetector
                                protected fLocator: com.sun.org.apache.xerces.internal.xni.XMLLocator
                                protected fLocale: java.util.Locale
                                protected fComponents: java.util.ArrayList
                                protected fXML11Components: java.util.ArrayList
                                protected fCommonComponents: java.util.ArrayList
                                protected fDocumentHandler: com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler
                                protected fDTDHandler: com.sun.org.apache.xerces.internal.xni.XMLDTDHandler
                                protected fDTDContentModelHandler: com.sun.org.apache.xerces.internal.xni.XMLDTDContentModelHandler
                                protected fLastComponent: com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource
                                protected fParseInProgress: boolean
                                protected fConfigUpdated: boolean
                                protected fDatatypeValidatorFactory: com.sun.org.apache.xerces.internal.impl.dv.DTDDVFactory
                                protected fNamespaceScanner: com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl
                                protected fNonNSScanner: com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl
                                protected fDTDValidator: com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator
                                protected fNonNSDTDValidator: com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator
                                protected fDTDScanner: com.sun.org.apache.xerces.internal.xni.parser.XMLDTDScanner
                                protected fDTDProcessor: com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDProcessor
                                protected fXML11DatatypeFactory: com.sun.org.apache.xerces.internal.impl.dv.DTDDVFactory
                                protected fXML11NSDocScanner: com.sun.org.apache.xerces.internal.impl.XML11NSDocumentScannerImpl
                                protected fXML11DocScanner: com.sun.org.apache.xerces.internal.impl.XML11DocumentScannerImpl
                                protected fXML11NSDTDValidator: com.sun.org.apache.xerces.internal.impl.dtd.XML11NSDTDValidator
                                protected fXML11DTDValidator: com.sun.org.apache.xerces.internal.impl.dtd.XML11DTDValidator
                                protected fXML11DTDScanner: com.sun.org.apache.xerces.internal.impl.XML11DTDScannerImpl
                                protected fXML11DTDProcessor: com.sun.org.apache.xerces.internal.impl.dtd.XML11DTDProcessor
                                protected fGrammarPool: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool
                                protected fErrorReporter: com.sun.org.apache.xerces.internal.impl.XMLErrorReporter
                                protected fEntityManager: com.sun.org.apache.xerces.internal.impl.XMLEntityManager
                                protected fCurrentScanner: com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentScanner
                                protected fCurrentDVFactory: com.sun.org.apache.xerces.internal.impl.dv.DTDDVFactory
                                protected fCurrentDTDScanner: com.sun.org.apache.xerces.internal.xni.parser.XMLDTDScanner
                                public constructor()
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool, arg2: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager)
                                public setInputSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource): void
                                public setLocale(arg0: java.util.Locale): void
                                public setDocumentHandler(arg0: com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler): void
                                public getDocumentHandler(): com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler
                                public setDTDHandler(arg0: com.sun.org.apache.xerces.internal.xni.XMLDTDHandler): void
                                public getDTDHandler(): com.sun.org.apache.xerces.internal.xni.XMLDTDHandler
                                public setDTDContentModelHandler(arg0: com.sun.org.apache.xerces.internal.xni.XMLDTDContentModelHandler): void
                                public getDTDContentModelHandler(): com.sun.org.apache.xerces.internal.xni.XMLDTDContentModelHandler
                                public setEntityResolver(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver | com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver$$Lambda): void
                                public getEntityResolver(): com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver
                                public setErrorHandler(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler): void
                                public getErrorHandler(): com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler
                                public cleanup(): void
                                public parse(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource): void
                                public parse(arg0: boolean): boolean
                                public getFeatureState(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.FeatureState
                                public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                public getLocale(): java.util.Locale
                                protected reset(): void
                                protected resetCommon(): void
                                protected resetXML11(): void
                                protected configureXML11Pipeline(): void
                                protected configurePipeline(): void
                                protected checkFeature(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.FeatureState
                                protected checkProperty(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.PropertyState
                                protected addComponent(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponent): void
                                protected addCommonComponent(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponent): void
                                protected addXML11Component(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponent): void
                                protected addRecognizedParamsAndSetDefaults(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponent): void
                                public static class: java.lang.Class<any>
                            }
                            class XML11NonValidatingConfiguration extends com.sun.org.apache.xerces.internal.util.ParserConfigurationSettings implements com.sun.org.apache.xerces.internal.xni.parser.XMLPullParserConfiguration , com.sun.org.apache.xerces.internal.parsers.XML11Configurable {
                                protected static XML11_DATATYPE_VALIDATOR_FACTORY: string
                                protected static VALIDATION: string
                                protected static NAMESPACES: string
                                protected static EXTERNAL_GENERAL_ENTITIES: string
                                protected static EXTERNAL_PARAMETER_ENTITIES: string
                                protected static CONTINUE_AFTER_FATAL_ERROR: string
                                protected static XML_STRING: string
                                protected static SYMBOL_TABLE: string
                                protected static ERROR_HANDLER: string
                                protected static ENTITY_RESOLVER: string
                                protected static ERROR_REPORTER: string
                                protected static ENTITY_MANAGER: string
                                protected static DOCUMENT_SCANNER: string
                                protected static DTD_SCANNER: string
                                protected static XMLGRAMMAR_POOL: string
                                protected static DTD_VALIDATOR: string
                                protected static NAMESPACE_BINDER: string
                                protected static DATATYPE_VALIDATOR_FACTORY: string
                                protected static VALIDATION_MANAGER: string
                                protected static PRINT_EXCEPTION_STACK_TRACE: boolean
                                protected fSymbolTable: com.sun.org.apache.xerces.internal.util.SymbolTable
                                protected fInputSource: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource
                                protected fValidationManager: com.sun.org.apache.xerces.internal.impl.validation.ValidationManager
                                protected fVersionDetector: com.sun.org.apache.xerces.internal.impl.XMLVersionDetector
                                protected fLocator: com.sun.org.apache.xerces.internal.xni.XMLLocator
                                protected fLocale: java.util.Locale
                                protected fComponents: java.util.ArrayList
                                protected fXML11Components: java.util.ArrayList
                                protected fCommonComponents: java.util.ArrayList
                                protected fDocumentHandler: com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler
                                protected fDTDHandler: com.sun.org.apache.xerces.internal.xni.XMLDTDHandler
                                protected fDTDContentModelHandler: com.sun.org.apache.xerces.internal.xni.XMLDTDContentModelHandler
                                protected fLastComponent: com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource
                                protected fParseInProgress: boolean
                                protected fConfigUpdated: boolean
                                protected fDatatypeValidatorFactory: com.sun.org.apache.xerces.internal.impl.dv.DTDDVFactory
                                protected fNamespaceScanner: com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl
                                protected fNonNSScanner: com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl
                                protected fDTDScanner: com.sun.org.apache.xerces.internal.xni.parser.XMLDTDScanner
                                protected fXML11DatatypeFactory: com.sun.org.apache.xerces.internal.impl.dv.DTDDVFactory
                                protected fXML11NSDocScanner: com.sun.org.apache.xerces.internal.impl.XML11NSDocumentScannerImpl
                                protected fXML11DocScanner: com.sun.org.apache.xerces.internal.impl.XML11DocumentScannerImpl
                                protected fXML11DTDScanner: com.sun.org.apache.xerces.internal.impl.XML11DTDScannerImpl
                                protected fGrammarPool: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool
                                protected fErrorReporter: com.sun.org.apache.xerces.internal.impl.XMLErrorReporter
                                protected fEntityManager: com.sun.org.apache.xerces.internal.impl.XMLEntityManager
                                protected fCurrentScanner: com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentScanner
                                protected fCurrentDVFactory: com.sun.org.apache.xerces.internal.impl.dv.DTDDVFactory
                                protected fCurrentDTDScanner: com.sun.org.apache.xerces.internal.xni.parser.XMLDTDScanner
                                public constructor()
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool, arg2: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager)
                                public setInputSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource): void
                                public setLocale(arg0: java.util.Locale): void
                                public setDocumentHandler(arg0: com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler): void
                                public getDocumentHandler(): com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler
                                public setDTDHandler(arg0: com.sun.org.apache.xerces.internal.xni.XMLDTDHandler): void
                                public getDTDHandler(): com.sun.org.apache.xerces.internal.xni.XMLDTDHandler
                                public setDTDContentModelHandler(arg0: com.sun.org.apache.xerces.internal.xni.XMLDTDContentModelHandler): void
                                public getDTDContentModelHandler(): com.sun.org.apache.xerces.internal.xni.XMLDTDContentModelHandler
                                public setEntityResolver(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver | com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver$$Lambda): void
                                public getEntityResolver(): com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver
                                public setErrorHandler(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler): void
                                public getErrorHandler(): com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler
                                public cleanup(): void
                                public parse(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource): void
                                public parse(arg0: boolean): boolean
                                public getFeatureState(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.FeatureState
                                public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                public getLocale(): java.util.Locale
                                protected reset(): void
                                protected resetCommon(): void
                                protected resetXML11(): void
                                protected configureXML11Pipeline(): void
                                protected configurePipeline(): void
                                protected checkFeature(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.FeatureState
                                protected checkProperty(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.PropertyState
                                protected addComponent(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponent): void
                                protected addCommonComponent(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponent): void
                                protected addXML11Component(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponent): void
                                protected addRecognizedParamsAndSetDefaults(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponent): void
                                public static class: java.lang.Class<any>
                            }
                            class XMLDocumentParser extends com.sun.org.apache.xerces.internal.parsers.AbstractXMLDocumentParser {
                                public constructor()
                                public constructor(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLParserConfiguration)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool)
                                public static class: java.lang.Class<any>
                            }
                            class XMLGrammarCachingConfiguration extends com.sun.org.apache.xerces.internal.parsers.XIncludeAwareParserConfiguration {
                                public static BIG_PRIME: int
                                protected static fStaticSymbolTable: com.sun.org.apache.xerces.internal.util.SynchronizedSymbolTable
                                protected static fStaticGrammarPool: com.sun.org.apache.xerces.internal.util.XMLGrammarPoolImpl
                                protected static SCHEMA_FULL_CHECKING: string
                                protected fSchemaLoader: com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader
                                protected fDTDLoader: com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDLoader
                                public constructor()
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool, arg2: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager)
                                public lockGrammarPool(): void
                                public clearGrammarPool(): void
                                public unlockGrammarPool(): void
                                public parseGrammar(arg0: java.lang.String | string, arg1: java.lang.String | string): com.sun.org.apache.xerces.internal.xni.grammars.Grammar
                                public parseGrammar(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource): com.sun.org.apache.xerces.internal.xni.grammars.Grammar
                                public static class: java.lang.Class<any>
                            }
                            abstract class XMLGrammarParser extends com.sun.org.apache.xerces.internal.parsers.XMLParser {
                                protected fDatatypeValidatorFactory: com.sun.org.apache.xerces.internal.impl.dv.DTDDVFactory
                                protected constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable)
                                public static class: java.lang.Class<any>
                            }
                            class XMLGrammarPreparser {
                                protected static SYMBOL_TABLE: string
                                protected static ERROR_REPORTER: string
                                protected static ERROR_HANDLER: string
                                protected static ENTITY_RESOLVER: string
                                protected static GRAMMAR_POOL: string
                                protected fSymbolTable: com.sun.org.apache.xerces.internal.util.SymbolTable
                                protected fErrorReporter: com.sun.org.apache.xerces.internal.impl.XMLErrorReporter
                                protected fEntityResolver: com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver
                                protected fGrammarPool: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool
                                protected fLocale: java.util.Locale
                                public constructor()
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable)
                                public registerPreparser(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarLoader): boolean
                                public preparseGrammar(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource): com.sun.org.apache.xerces.internal.xni.grammars.Grammar
                                public setLocale(arg0: java.util.Locale): void
                                public getLocale(): java.util.Locale
                                public setErrorHandler(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler): void
                                public getErrorHandler(): com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler
                                public setEntityResolver(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver | com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver$$Lambda): void
                                public getEntityResolver(): com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver
                                public setGrammarPool(arg0: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool): void
                                public getGrammarPool(): com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool
                                public getLoader(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarLoader
                                public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                public getFeature(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                                public getProperty(arg0: java.lang.String | string, arg1: java.lang.String | string): java.lang.Object
                                public static class: java.lang.Class<any>
                            }
                            abstract class XMLParser {
                                protected static ENTITY_RESOLVER: string
                                protected static ERROR_HANDLER: string
                                protected fConfiguration: com.sun.org.apache.xerces.internal.xni.parser.XMLParserConfiguration
                                public getFeature(arg0: java.lang.String | string): boolean
                                protected constructor(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLParserConfiguration)
                                public parse(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource): void
                                protected reset(): void
                                public static class: java.lang.Class<any>
                            }
                            class XPointerParserConfiguration extends com.sun.org.apache.xerces.internal.parsers.XML11Configuration {
                                protected static ALLOW_UE_AND_NOTATION_EVENTS: string
                                protected static XINCLUDE_FIXUP_BASE_URIS: string
                                protected static XINCLUDE_FIXUP_LANGUAGE: string
                                protected static XPOINTER_HANDLER: string
                                protected static XINCLUDE_HANDLER: string
                                protected static NAMESPACE_CONTEXT: string
                                public constructor()
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool, arg2: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager)
                                protected configurePipeline(): void
                                protected configureXML11Pipeline(): void
                                public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                public static class: java.lang.Class<any>
                            }
                        }
                        namespace util {
                            class AttributesProxy implements org.xml.sax.AttributeList , org.xml.sax.ext.Attributes2 {
                                public constructor(arg0: com.sun.org.apache.xerces.internal.xni.XMLAttributes)
                                public setAttributes(arg0: com.sun.org.apache.xerces.internal.xni.XMLAttributes): void
                                public getAttributes(): com.sun.org.apache.xerces.internal.xni.XMLAttributes
                                public getLength(): int
                                public getQName(arg0: int): string
                                public getURI(arg0: int): string
                                public getLocalName(arg0: int): string
                                public getType(arg0: int): string
                                public getType(arg0: java.lang.String | string): string
                                public getType(arg0: java.lang.String | string, arg1: java.lang.String | string): string
                                public getValue(arg0: int): string
                                public getValue(arg0: java.lang.String | string): string
                                public getValue(arg0: java.lang.String | string, arg1: java.lang.String | string): string
                                public getIndex(arg0: java.lang.String | string): int
                                public getIndex(arg0: java.lang.String | string, arg1: java.lang.String | string): int
                                public isDeclared(arg0: int): boolean
                                public isDeclared(arg0: java.lang.String | string): boolean
                                public isDeclared(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                                public isSpecified(arg0: int): boolean
                                public isSpecified(arg0: java.lang.String | string): boolean
                                public isSpecified(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                                public getName(arg0: int): string
                                public static class: java.lang.Class<any>
                            }
                            class AugmentationsImpl implements com.sun.org.apache.xerces.internal.xni.Augmentations {
                                public constructor()
                                public putItem(arg0: java.lang.String | string, arg1: java.lang.Object): java.lang.Object
                                public getItem(arg0: java.lang.String | string): java.lang.Object
                                public removeItem(arg0: java.lang.String | string): java.lang.Object
                                public keys(): java.util.Enumeration
                                public removeAllItems(): void
                                public toString(): string
                                public static class: java.lang.Class<any>
                            }
                            class DOMEntityResolverWrapper implements com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver {
                                protected fEntityResolver: org.w3c.dom.ls.LSResourceResolver
                                public constructor()
                                public constructor(arg0: org.w3c.dom.ls.LSResourceResolver | org.w3c.dom.ls.LSResourceResolver$$Lambda)
                                public setEntityResolver(arg0: org.w3c.dom.ls.LSResourceResolver | org.w3c.dom.ls.LSResourceResolver$$Lambda): void
                                public getEntityResolver(): org.w3c.dom.ls.LSResourceResolver
                                public resolveEntity(arg0: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier): com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource
                                public static class: java.lang.Class<any>
                            }
                            class DOMEntityResolverWrapper$$Lambda implements com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver {
                                protected fEntityResolver: org.w3c.dom.ls.LSResourceResolver
                            }
                            class DOMErrorHandlerWrapper implements com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler , org.w3c.dom.DOMErrorHandler {
                                protected fDomErrorHandler: org.w3c.dom.DOMErrorHandler
                                protected fOut: java.io.PrintWriter
                                public fCurrentNode: org.w3c.dom.Node
                                protected fErrorCode: com.sun.org.apache.xerces.internal.util.XMLErrorCode
                                protected fDOMError: com.sun.org.apache.xerces.internal.dom.DOMErrorImpl
                                public constructor()
                                public constructor(arg0: org.w3c.dom.DOMErrorHandler | org.w3c.dom.DOMErrorHandler$$Lambda)
                                public setErrorHandler(arg0: org.w3c.dom.DOMErrorHandler | org.w3c.dom.DOMErrorHandler$$Lambda): void
                                public getErrorHandler(): org.w3c.dom.DOMErrorHandler
                                public warning(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.parser.XMLParseException): void
                                public error(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.parser.XMLParseException): void
                                public fatalError(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.parser.XMLParseException): void
                                public handleError(arg0: org.w3c.dom.DOMError): boolean
                                public static class: java.lang.Class<any>
                            }
                            class DOMErrorHandlerWrapper$$Lambda implements com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler , org.w3c.dom.DOMErrorHandler {
                                protected fDomErrorHandler: org.w3c.dom.DOMErrorHandler
                            }
                            class DOMInputSource extends com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource {
                                public constructor()
                                public constructor(arg0: org.w3c.dom.Node)
                                public constructor(arg0: org.w3c.dom.Node, arg1: java.lang.String | string)
                                public getNode(): org.w3c.dom.Node
                                public setNode(arg0: org.w3c.dom.Node): void
                                public static class: java.lang.Class<any>
                            }
                            class DOMUtil {
                                protected constructor()
                                public static copyInto(arg0: org.w3c.dom.Node, arg1: org.w3c.dom.Node): void
                                public static getFirstChildElement(arg0: org.w3c.dom.Node): org.w3c.dom.Element
                                public static getFirstVisibleChildElement(arg0: org.w3c.dom.Node): org.w3c.dom.Element
                                public static getFirstVisibleChildElement(arg0: org.w3c.dom.Node, arg1: java.util.Map<org.w3c.dom.Node, java.lang.String>): org.w3c.dom.Element
                                public static getLastChildElement(arg0: org.w3c.dom.Node): org.w3c.dom.Element
                                public static getLastVisibleChildElement(arg0: org.w3c.dom.Node): org.w3c.dom.Element
                                public static getLastVisibleChildElement(arg0: org.w3c.dom.Node, arg1: java.util.Map<org.w3c.dom.Node, java.lang.String>): org.w3c.dom.Element
                                public static getNextSiblingElement(arg0: org.w3c.dom.Node): org.w3c.dom.Element
                                public static getNextVisibleSiblingElement(arg0: org.w3c.dom.Node): org.w3c.dom.Element
                                public static getNextVisibleSiblingElement(arg0: org.w3c.dom.Node, arg1: java.util.Map<org.w3c.dom.Node, java.lang.String>): org.w3c.dom.Element
                                public static setHidden(arg0: org.w3c.dom.Node): void
                                public static setHidden(arg0: org.w3c.dom.Node, arg1: java.util.Map<org.w3c.dom.Node, java.lang.String>): void
                                public static setVisible(arg0: org.w3c.dom.Node): void
                                public static setVisible(arg0: org.w3c.dom.Node, arg1: java.util.Map<org.w3c.dom.Node, java.lang.String>): void
                                public static isHidden(arg0: org.w3c.dom.Node): boolean
                                public static isHidden(arg0: org.w3c.dom.Node, arg1: java.util.Map<org.w3c.dom.Node, java.lang.String>): boolean
                                public static getFirstChildElement(arg0: org.w3c.dom.Node, arg1: java.lang.String | string): org.w3c.dom.Element
                                public static getLastChildElement(arg0: org.w3c.dom.Node, arg1: java.lang.String | string): org.w3c.dom.Element
                                public static getNextSiblingElement(arg0: org.w3c.dom.Node, arg1: java.lang.String | string): org.w3c.dom.Element
                                public static getFirstChildElementNS(arg0: org.w3c.dom.Node, arg1: java.lang.String | string, arg2: java.lang.String | string): org.w3c.dom.Element
                                public static getLastChildElementNS(arg0: org.w3c.dom.Node, arg1: java.lang.String | string, arg2: java.lang.String | string): org.w3c.dom.Element
                                public static getNextSiblingElementNS(arg0: org.w3c.dom.Node, arg1: java.lang.String | string, arg2: java.lang.String | string): org.w3c.dom.Element
                                public static getFirstChildElement(arg0: org.w3c.dom.Node, arg1: java.lang.String[]): org.w3c.dom.Element
                                public static getLastChildElement(arg0: org.w3c.dom.Node, arg1: java.lang.String[]): org.w3c.dom.Element
                                public static getNextSiblingElement(arg0: org.w3c.dom.Node, arg1: java.lang.String[]): org.w3c.dom.Element
                                public static getFirstChildElementNS(arg0: org.w3c.dom.Node, arg1: java.lang.String[][]): org.w3c.dom.Element
                                public static getLastChildElementNS(arg0: org.w3c.dom.Node, arg1: java.lang.String[][]): org.w3c.dom.Element
                                public static getNextSiblingElementNS(arg0: org.w3c.dom.Node, arg1: java.lang.String[][]): org.w3c.dom.Element
                                public static getFirstChildElement(arg0: org.w3c.dom.Node, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string): org.w3c.dom.Element
                                public static getLastChildElement(arg0: org.w3c.dom.Node, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string): org.w3c.dom.Element
                                public static getNextSiblingElement(arg0: org.w3c.dom.Node, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string): org.w3c.dom.Element
                                public static getChildText(arg0: org.w3c.dom.Node): string
                                public static getName(arg0: org.w3c.dom.Node): string
                                public static getLocalName(arg0: org.w3c.dom.Node): string
                                public static getParent(arg0: org.w3c.dom.Element): org.w3c.dom.Element
                                public static getDocument(arg0: org.w3c.dom.Node): org.w3c.dom.Document
                                public static getRoot(arg0: org.w3c.dom.Document): org.w3c.dom.Element
                                public static getAttr(arg0: org.w3c.dom.Element, arg1: java.lang.String | string): org.w3c.dom.Attr
                                public static getAttrNS(arg0: org.w3c.dom.Element, arg1: java.lang.String | string, arg2: java.lang.String | string): org.w3c.dom.Attr
                                public static getAttrs(arg0: org.w3c.dom.Element): org.w3c.dom.Attr[]
                                public static getValue(arg0: org.w3c.dom.Attr): string
                                public static getAttrValue(arg0: org.w3c.dom.Element, arg1: java.lang.String | string): string
                                public static getAttrValueNS(arg0: org.w3c.dom.Element, arg1: java.lang.String | string, arg2: java.lang.String | string): string
                                public static getPrefix(arg0: org.w3c.dom.Node): string
                                public static getNamespaceURI(arg0: org.w3c.dom.Node): string
                                public static getAnnotation(arg0: org.w3c.dom.Node): string
                                public static getSyntheticAnnotation(arg0: org.w3c.dom.Node): string
                                public static createDOMException(arg0: short, arg1: java.lang.Throwable): org.w3c.dom.DOMException
                                public static createLSException(arg0: short, arg1: java.lang.Throwable): org.w3c.dom.ls.LSException
                                public static class: java.lang.Class<any>
                            }
                            class DatatypeMessageFormatter {
                                public constructor()
                                public static formatMessage(arg0: java.util.Locale, arg1: java.lang.String | string, arg2: java.lang.Object[]): string
                                public static class: java.lang.Class<any>
                            }
                            class DefaultErrorHandler implements com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler {
                                protected fOut: java.io.PrintWriter
                                public constructor()
                                public constructor(arg0: java.io.PrintWriter)
                                public warning(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.parser.XMLParseException): void
                                public error(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.parser.XMLParseException): void
                                public fatalError(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.parser.XMLParseException): void
                                public static class: java.lang.Class<any>
                            }
                            class DraconianErrorHandler implements org.xml.sax.ErrorHandler {
                                public static theInstance: org.xml.sax.ErrorHandler
                                public error(arg0: org.xml.sax.SAXParseException): void
                                public fatalError(arg0: org.xml.sax.SAXParseException): void
                                public warning(arg0: org.xml.sax.SAXParseException): void
                                public static class: java.lang.Class<any>
                            }
                            class EncodingMap {
                                protected static fIANA2JavaMap: java.util.Map<java.lang.String, java.lang.String>
                                protected static fJava2IANAMap: java.util.Map<java.lang.String, java.lang.String>
                                public constructor()
                                public static getIANA2JavaMapping(arg0: java.lang.String | string): string
                                public static getJava2IANAMapping(arg0: java.lang.String | string): string
                                public static class: java.lang.Class<any>
                            }
                            class EntityResolver2Wrapper implements com.sun.org.apache.xerces.internal.impl.ExternalSubsetResolver {
                                protected fEntityResolver: org.xml.sax.ext.EntityResolver2
                                public constructor()
                                public constructor(arg0: org.xml.sax.ext.EntityResolver2)
                                public setEntityResolver(arg0: org.xml.sax.ext.EntityResolver2): void
                                public getEntityResolver(): org.xml.sax.ext.EntityResolver2
                                public getExternalSubset(arg0: com.sun.org.apache.xerces.internal.xni.grammars.XMLDTDDescription): com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource
                                public resolveEntity(arg0: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier): com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource
                                public static class: java.lang.Class<any>
                            }
                            class EntityResolverWrapper implements com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver {
                                protected fEntityResolver: org.xml.sax.EntityResolver
                                public constructor()
                                public constructor(arg0: org.xml.sax.EntityResolver | org.xml.sax.EntityResolver$$Lambda)
                                public setEntityResolver(arg0: org.xml.sax.EntityResolver | org.xml.sax.EntityResolver$$Lambda): void
                                public getEntityResolver(): org.xml.sax.EntityResolver
                                public resolveEntity(arg0: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier): com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource
                                public static class: java.lang.Class<any>
                            }
                            class EntityResolverWrapper$$Lambda implements com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver {
                                protected fEntityResolver: org.xml.sax.EntityResolver
                            }
                            abstract class ErrorHandlerProxy implements org.xml.sax.ErrorHandler {
                                public constructor()
                                public error(arg0: org.xml.sax.SAXParseException): void
                                public fatalError(arg0: org.xml.sax.SAXParseException): void
                                public warning(arg0: org.xml.sax.SAXParseException): void
                                protected getErrorHandler(): com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler
                                public static class: java.lang.Class<any>
                            }
                            class ErrorHandlerWrapper implements com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler {
                                protected fErrorHandler: org.xml.sax.ErrorHandler
                                public constructor()
                                public constructor(arg0: org.xml.sax.ErrorHandler)
                                public setErrorHandler(arg0: org.xml.sax.ErrorHandler): void
                                public getErrorHandler(): org.xml.sax.ErrorHandler
                                public warning(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.parser.XMLParseException): void
                                public error(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.parser.XMLParseException): void
                                public fatalError(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.parser.XMLParseException): void
                                protected static createSAXParseException(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLParseException): org.xml.sax.SAXParseException
                                protected static createXMLParseException(arg0: org.xml.sax.SAXParseException): com.sun.org.apache.xerces.internal.xni.parser.XMLParseException
                                protected static createXNIException(arg0: org.xml.sax.SAXException): com.sun.org.apache.xerces.internal.xni.XNIException
                                public static class: java.lang.Class<any>
                            }
                            class FeatureState {
                                public status: com.sun.org.apache.xerces.internal.util.Status
                                public state: boolean
                                public static SET_ENABLED: com.sun.org.apache.xerces.internal.util.FeatureState
                                public static SET_DISABLED: com.sun.org.apache.xerces.internal.util.FeatureState
                                public static UNKNOWN: com.sun.org.apache.xerces.internal.util.FeatureState
                                public static RECOGNIZED: com.sun.org.apache.xerces.internal.util.FeatureState
                                public static NOT_SUPPORTED: com.sun.org.apache.xerces.internal.util.FeatureState
                                public static NOT_RECOGNIZED: com.sun.org.apache.xerces.internal.util.FeatureState
                                public static NOT_ALLOWED: com.sun.org.apache.xerces.internal.util.FeatureState
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.Status, arg1: boolean)
                                public static of(arg0: com.sun.org.apache.xerces.internal.util.Status): com.sun.org.apache.xerces.internal.util.FeatureState
                                public static is(arg0: boolean): com.sun.org.apache.xerces.internal.util.FeatureState
                                public isExceptional(): boolean
                                public static class: java.lang.Class<any>
                            }
                            class HTTPInputSource extends com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource {
                                protected fFollowRedirects: boolean
                                protected fHTTPRequestProperties: java.util.Map<java.lang.String, java.lang.String>
                                public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier)
                                public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.io.InputStream, arg4: java.lang.String | string)
                                public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.io.Reader, arg4: java.lang.String | string)
                                public getFollowHTTPRedirects(): boolean
                                public setFollowHTTPRedirects(arg0: boolean): void
                                public getHTTPRequestProperty(arg0: java.lang.String | string): string
                                public getHTTPRequestProperties(): java.util.Iterator<java.util.Map$Entry<java.lang.String, java.lang.String>>
                                public setHTTPRequestProperty(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public static class: java.lang.Class<any>
                            }
                            class IntStack {
                                public constructor()
                                public size(): int
                                public push(arg0: int): void
                                public peek(): int
                                public elementAt(arg0: int): int
                                public pop(): int
                                public clear(): void
                                public print(): void
                                public static class: java.lang.Class<any>
                            }
                            class JAXPNamespaceContextWrapper implements com.sun.org.apache.xerces.internal.xni.NamespaceContext {
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable)
                                public setNamespaceContext(arg0: javax.xml.namespace.NamespaceContext): void
                                public getNamespaceContext(): javax.xml.namespace.NamespaceContext
                                public setSymbolTable(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable): void
                                public getSymbolTable(): com.sun.org.apache.xerces.internal.util.SymbolTable
                                public setDeclaredPrefixes(arg0: java.util.List): void
                                public getDeclaredPrefixes(): java.util.List
                                public getURI(arg0: java.lang.String | string): string
                                public getPrefix(arg0: java.lang.String | string): string
                                public getAllPrefixes(): java.util.Enumeration
                                public pushContext(): void
                                public popContext(): void
                                public declarePrefix(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                                public getDeclaredPrefixCount(): int
                                public getDeclaredPrefixAt(arg0: int): string
                                public reset(): void
                                public static class: java.lang.Class<any>
                            }
                            class LocatorProxy implements org.xml.sax.ext.Locator2 {
                                public constructor(arg0: com.sun.org.apache.xerces.internal.xni.XMLLocator)
                                public getPublicId(): string
                                public getSystemId(): string
                                public getLineNumber(): int
                                public getColumnNumber(): int
                                public getXMLVersion(): string
                                public getEncoding(): string
                                public static class: java.lang.Class<any>
                            }
                            class LocatorWrapper implements com.sun.org.apache.xerces.internal.xni.XMLLocator {
                                public constructor(arg0: org.xml.sax.Locator)
                                public getColumnNumber(): int
                                public getLineNumber(): int
                                public getBaseSystemId(): string
                                public getExpandedSystemId(): string
                                public getLiteralSystemId(): string
                                public getPublicId(): string
                                public getEncoding(): string
                                public getCharacterOffset(): int
                                public getXMLVersion(): string
                                public static class: java.lang.Class<any>
                            }
                            interface MessageFormatter {
                                formatMessage(arg0: java.util.Locale, arg1: java.lang.String | string, arg2: java.lang.Object[]): string
                            }
                            interface MessageFormatter$$Lambda {
                                (arg0: java.util.Locale, arg1: java.lang.String | string, arg2: java.lang.Object[]): string
                            }
                            class NamespaceContextWrapper implements javax.xml.namespace.NamespaceContext {
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.NamespaceSupport)
                                public getNamespaceURI(arg0: java.lang.String | string): string
                                public getPrefix(arg0: java.lang.String | string): string
                                public getPrefixes(arg0: java.lang.String | string): java.util.Iterator
                                public getNamespaceContext(): com.sun.org.apache.xerces.internal.xni.NamespaceContext
                                public static class: java.lang.Class<any>
                            }
                            class NamespaceSupport implements com.sun.org.apache.xerces.internal.xni.NamespaceContext {
                                protected fNamespace: java.lang.String[]
                                protected fNamespaceSize: int
                                protected fContext: int[]
                                protected fCurrentContext: int
                                protected fPrefixes: java.lang.String[]
                                public constructor()
                                public constructor(arg0: com.sun.org.apache.xerces.internal.xni.NamespaceContext)
                                public reset(): void
                                public pushContext(): void
                                public popContext(): void
                                public declarePrefix(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                                public getURI(arg0: java.lang.String | string): string
                                public getPrefix(arg0: java.lang.String | string): string
                                public getDeclaredPrefixCount(): int
                                public getDeclaredPrefixAt(arg0: int): string
                                public getPrefixes(): java.util.Iterator
                                public getAllPrefixes(): java.util.Enumeration
                                public getPrefixes(arg0: java.lang.String | string): java.util.Vector
                                public containsPrefix(arg0: java.lang.String | string): boolean
                                public containsPrefixInCurrentContext(arg0: java.lang.String | string): boolean
                                public static class: java.lang.Class<any>
                            }
                            class ParserConfigurationSettings implements com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager {
                                protected static PARSER_SETTINGS: string
                                protected fRecognizedProperties: java.util.Set<java.lang.String>
                                protected fProperties: java.util.Map<java.lang.String, java.lang.Object>
                                protected fRecognizedFeatures: java.util.Set<java.lang.String>
                                protected fFeatures: java.util.Map<java.lang.String, java.lang.Boolean>
                                protected fParentSettings: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager
                                public constructor()
                                public constructor(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager)
                                public addRecognizedFeatures(arg0: java.lang.String[]): void
                                public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                public addRecognizedProperties(arg0: java.lang.String[]): void
                                public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                public getFeature(arg0: java.lang.String | string): boolean
                                public getFeature(arg0: java.lang.String | string, arg1: boolean): boolean
                                public getFeatureState(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.FeatureState
                                public getProperty(arg0: java.lang.String | string): java.lang.Object
                                public getProperty(arg0: java.lang.String | string, arg1: java.lang.Object): java.lang.Object
                                public getPropertyState(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.PropertyState
                                protected checkFeature(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.FeatureState
                                protected checkProperty(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.PropertyState
                                public static class: java.lang.Class<any>
                            }
                            class PrimeNumberSequenceGenerator {
                                public static class: java.lang.Class<any>
                            }
                            class PropertyState {
                                public status: com.sun.org.apache.xerces.internal.util.Status
                                public state: java.lang.Object
                                public static UNKNOWN: com.sun.org.apache.xerces.internal.util.PropertyState
                                public static RECOGNIZED: com.sun.org.apache.xerces.internal.util.PropertyState
                                public static NOT_SUPPORTED: com.sun.org.apache.xerces.internal.util.PropertyState
                                public static NOT_RECOGNIZED: com.sun.org.apache.xerces.internal.util.PropertyState
                                public static NOT_ALLOWED: com.sun.org.apache.xerces.internal.util.PropertyState
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.Status, arg1: java.lang.Object)
                                public static of(arg0: com.sun.org.apache.xerces.internal.util.Status): com.sun.org.apache.xerces.internal.util.PropertyState
                                public static is(arg0: java.lang.Object): com.sun.org.apache.xerces.internal.util.PropertyState
                                public isExceptional(): boolean
                                public static class: java.lang.Class<any>
                            }
                            class SAX2XNI implements org.xml.sax.ContentHandler , com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource {
                                public constructor(arg0: com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler)
                                public setDocumentHandler(arg0: com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler): void
                                public getDocumentHandler(): com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler
                                public startDocument(): void
                                public endDocument(): void
                                public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: org.xml.sax.Attributes): void
                                public endElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public characters(arg0: char[], arg1: int, arg2: int): void
                                public ignorableWhitespace(arg0: char[], arg1: int, arg2: int): void
                                public startPrefixMapping(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public endPrefixMapping(arg0: java.lang.String | string): void
                                public processingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public skippedEntity(arg0: java.lang.String | string): void
                                public setDocumentLocator(arg0: org.xml.sax.Locator): void
                                public static class: java.lang.Class<any>
                            }
                            class SAXInputSource extends com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource {
                                public constructor()
                                public constructor(arg0: org.xml.sax.InputSource)
                                public constructor(arg0: org.xml.sax.XMLReader, arg1: org.xml.sax.InputSource)
                                public setXMLReader(arg0: org.xml.sax.XMLReader): void
                                public getXMLReader(): org.xml.sax.XMLReader
                                public setInputSource(arg0: org.xml.sax.InputSource): void
                                public getInputSource(): org.xml.sax.InputSource
                                public setPublicId(arg0: java.lang.String | string): void
                                public setSystemId(arg0: java.lang.String | string): void
                                public setByteStream(arg0: java.io.InputStream): void
                                public setCharacterStream(arg0: java.io.Reader): void
                                public setEncoding(arg0: java.lang.String | string): void
                                public static class: java.lang.Class<any>
                            }
                            class SAXLocatorWrapper implements com.sun.org.apache.xerces.internal.xni.XMLLocator {
                                public constructor()
                                public setLocator(arg0: org.xml.sax.Locator): void
                                public getLocator(): org.xml.sax.Locator
                                public getPublicId(): string
                                public getLiteralSystemId(): string
                                public getBaseSystemId(): string
                                public getExpandedSystemId(): string
                                public getLineNumber(): int
                                public getColumnNumber(): int
                                public getCharacterOffset(): int
                                public getEncoding(): string
                                public getXMLVersion(): string
                                public static class: java.lang.Class<any>
                            }
                            class SAXMessageFormatter {
                                public constructor()
                                public static formatMessage(arg0: java.util.Locale, arg1: java.lang.String | string, arg2: java.lang.Object[]): string
                                public static class: java.lang.Class<any>
                            }
                            class SecurityManager {
                                public constructor()
                                public setEntityExpansionLimit(arg0: int): void
                                public getEntityExpansionLimit(): int
                                public setMaxOccurNodeLimit(arg0: int): void
                                public getMaxOccurNodeLimit(): int
                                public getElementAttrLimit(): int
                                public setElementAttrLimit(arg0: int): void
                                public static class: java.lang.Class<any>
                            }
                            class ShadowedSymbolTable extends com.sun.org.apache.xerces.internal.util.SymbolTable {
                                protected fSymbolTable: com.sun.org.apache.xerces.internal.util.SymbolTable
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable)
                                public addSymbol(arg0: java.lang.String | string): string
                                public addSymbol(arg0: char[], arg1: int, arg2: int): string
                                public hash(arg0: java.lang.String | string): int
                                public hash(arg0: char[], arg1: int, arg2: int): int
                                public static class: java.lang.Class<any>
                            }
                            class StAXInputSource extends com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource {
                                public constructor(arg0: javax.xml.stream.XMLStreamReader)
                                public constructor(arg0: javax.xml.stream.XMLStreamReader, arg1: boolean)
                                public constructor(arg0: javax.xml.stream.XMLEventReader)
                                public constructor(arg0: javax.xml.stream.XMLEventReader, arg1: boolean)
                                public getXMLStreamReader(): javax.xml.stream.XMLStreamReader
                                public getXMLEventReader(): javax.xml.stream.XMLEventReader
                                public shouldConsumeRemainingContent(): boolean
                                public setSystemId(arg0: java.lang.String | string): void
                                public static class: java.lang.Class<any>
                            }
                            class StAXLocationWrapper implements com.sun.org.apache.xerces.internal.xni.XMLLocator {
                                public constructor()
                                public setLocation(arg0: javax.xml.stream.Location): void
                                public getLocation(): javax.xml.stream.Location
                                public getPublicId(): string
                                public getLiteralSystemId(): string
                                public getBaseSystemId(): string
                                public getExpandedSystemId(): string
                                public getLineNumber(): int
                                public getColumnNumber(): int
                                public getCharacterOffset(): int
                                public getEncoding(): string
                                public getXMLVersion(): string
                                public static class: java.lang.Class<any>
                            }
                            class Status extends java.lang.Enum<com.sun.org.apache.xerces.internal.util.Status> {
                                public static SET: com.sun.org.apache.xerces.internal.util.Status
                                public static UNKNOWN: com.sun.org.apache.xerces.internal.util.Status
                                public static RECOGNIZED: com.sun.org.apache.xerces.internal.util.Status
                                public static NOT_SUPPORTED: com.sun.org.apache.xerces.internal.util.Status
                                public static NOT_RECOGNIZED: com.sun.org.apache.xerces.internal.util.Status
                                public static NOT_ALLOWED: com.sun.org.apache.xerces.internal.util.Status
                                public static values(): com.sun.org.apache.xerces.internal.util.Status[]
                                public static valueOf(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.Status
                                public getType(): short
                                public isExceptional(): boolean
                                public static class: java.lang.Class<any>
                            }
                            class SymbolHash {
                                protected static TABLE_SIZE: int
                                protected static MAX_HASH_COLLISIONS: int
                                protected static MULTIPLIERS_SIZE: int
                                protected static MULTIPLIERS_MASK: int
                                protected fTableSize: int
                                protected fBuckets: com.sun.org.apache.xerces.internal.util.SymbolHash$Entry[]
                                protected fNum: int
                                protected fHashMultipliers: int[]
                                public constructor()
                                public constructor(arg0: int)
                                public put(arg0: java.lang.Object, arg1: java.lang.Object): void
                                public get(arg0: java.lang.Object): java.lang.Object
                                public getLength(): int
                                public getValues(arg0: java.lang.Object[], arg1: int): int
                                public getEntries(): java.lang.Object[]
                                public makeClone(): com.sun.org.apache.xerces.internal.util.SymbolHash
                                public clear(): void
                                protected search(arg0: java.lang.Object, arg1: int): com.sun.org.apache.xerces.internal.util.SymbolHash$Entry
                                protected hash(arg0: java.lang.Object): int
                                protected rehash(): void
                                protected rebalance(): void
                                public static class: java.lang.Class<any>
                            }
                            class SymbolTable {
                                protected static TABLE_SIZE: int
                                protected static MAX_HASH_COLLISIONS: int
                                protected static MULTIPLIERS_SIZE: int
                                protected static MULTIPLIERS_MASK: int
                                protected fBuckets: com.sun.org.apache.xerces.internal.util.SymbolTable$Entry[]
                                protected fTableSize: int
                                protected fCount: int
                                protected fThreshold: int
                                protected fLoadFactor: float
                                protected fCollisionThreshold: int
                                protected fHashMultipliers: int[]
                                public constructor(arg0: int, arg1: float)
                                public constructor(arg0: int)
                                public constructor()
                                public addSymbol(arg0: java.lang.String | string): string
                                public addSymbol(arg0: char[], arg1: int, arg2: int): string
                                public hash(arg0: java.lang.String | string): int
                                public hash(arg0: char[], arg1: int, arg2: int): int
                                protected rehash(): void
                                protected rebalance(): void
                                public containsSymbol(arg0: java.lang.String | string): boolean
                                public containsSymbol(arg0: char[], arg1: int, arg2: int): boolean
                                public static class: java.lang.Class<any>
                            }
                            class SynchronizedSymbolTable extends com.sun.org.apache.xerces.internal.util.SymbolTable {
                                protected fSymbolTable: com.sun.org.apache.xerces.internal.util.SymbolTable
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable)
                                public constructor()
                                public constructor(arg0: int)
                                public addSymbol(arg0: java.lang.String | string): string
                                public addSymbol(arg0: char[], arg1: int, arg2: int): string
                                public containsSymbol(arg0: java.lang.String | string): boolean
                                public containsSymbol(arg0: char[], arg1: int, arg2: int): boolean
                                public static class: java.lang.Class<any>
                            }
                            class TeeXMLDocumentFilterImpl implements com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentFilter {
                                public constructor()
                                public getSide(): com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler
                                public setSide(arg0: com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler): void
                                public getDocumentSource(): com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource
                                public setDocumentSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource): void
                                public getDocumentHandler(): com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler
                                public setDocumentHandler(arg0: com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler): void
                                public characters(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public comment(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public doctypeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public emptyElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endDocument(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endGeneralEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public ignorableWhitespace(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public processingInstruction(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLString, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startDocument(arg0: com.sun.org.apache.xerces.internal.xni.XMLLocator, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.NamespaceContext, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startGeneralEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public textDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public xmlDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public static class: java.lang.Class<any>
                            }
                            class URI implements java.io.Serializable {
                                public constructor()
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.URI)
                                public constructor(arg0: java.lang.String | string)
                                public constructor(arg0: java.lang.String | string, arg1: boolean)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.URI, arg1: java.lang.String | string)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.URI, arg1: java.lang.String | string, arg2: boolean)
                                public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string)
                                public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string)
                                public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: int, arg4: java.lang.String | string, arg5: java.lang.String | string, arg6: java.lang.String | string)
                                public absolutize(arg0: com.sun.org.apache.xerces.internal.util.URI): void
                                public getScheme(): string
                                public getSchemeSpecificPart(): string
                                public getUserinfo(): string
                                public getHost(): string
                                public getPort(): int
                                public getRegBasedAuthority(): string
                                public getAuthority(): string
                                public getPath(arg0: boolean, arg1: boolean): string
                                public getPath(): string
                                public getQueryString(): string
                                public getFragment(): string
                                public setScheme(arg0: java.lang.String | string): void
                                public setUserinfo(arg0: java.lang.String | string): void
                                public setHost(arg0: java.lang.String | string): void
                                public setPort(arg0: int): void
                                public setRegBasedAuthority(arg0: java.lang.String | string): void
                                public setPath(arg0: java.lang.String | string): void
                                public appendPath(arg0: java.lang.String | string): void
                                public setQueryString(arg0: java.lang.String | string): void
                                public setFragment(arg0: java.lang.String | string): void
                                public equals(arg0: java.lang.Object): boolean
                                public hashCode(): int
                                public toString(): string
                                public isGenericURI(): boolean
                                public isAbsoluteURI(): boolean
                                public static isConformantSchemeName(arg0: java.lang.String | string): boolean
                                public static isWellFormedAddress(arg0: java.lang.String | string): boolean
                                public static isWellFormedIPv4Address(arg0: java.lang.String | string): boolean
                                public static isWellFormedIPv6Reference(arg0: java.lang.String | string): boolean
                                public static class: java.lang.Class<any>
                            }
                            class XML11Char {
                                public static MASK_XML11_VALID: int
                                public static MASK_XML11_SPACE: int
                                public static MASK_XML11_NAME_START: int
                                public static MASK_XML11_NAME: int
                                public static MASK_XML11_CONTROL: int
                                public static MASK_XML11_CONTENT: int
                                public static MASK_XML11_NCNAME_START: int
                                public static MASK_XML11_NCNAME: int
                                public static MASK_XML11_CONTENT_INTERNAL: int
                                public constructor()
                                public static isXML11Space(arg0: int): boolean
                                public static isXML11Valid(arg0: int): boolean
                                public static isXML11Invalid(arg0: int): boolean
                                public static isXML11ValidLiteral(arg0: int): boolean
                                public static isXML11Content(arg0: int): boolean
                                public static isXML11InternalEntityContent(arg0: int): boolean
                                public static isXML11NameStart(arg0: int): boolean
                                public static isXML11Name(arg0: int): boolean
                                public static isXML11NCNameStart(arg0: int): boolean
                                public static isXML11NCName(arg0: int): boolean
                                public static isXML11NameHighSurrogate(arg0: int): boolean
                                public static isXML11ValidName(arg0: java.lang.String | string): boolean
                                public static isXML11ValidNCName(arg0: java.lang.String | string): boolean
                                public static isXML11ValidNmtoken(arg0: java.lang.String | string): boolean
                                public static class: java.lang.Class<any>
                            }
                            class XMLAttributesImpl implements com.sun.org.apache.xerces.internal.xni.XMLAttributes , com.sun.xml.internal.stream.XMLBufferListener {
                                protected static TABLE_SIZE: int
                                protected static MAX_HASH_COLLISIONS: int
                                protected static MULTIPLIERS_SIZE: int
                                protected static MULTIPLIERS_MASK: int
                                protected static SIZE_LIMIT: int
                                protected fNamespaces: boolean
                                protected fLargeCount: int
                                protected fLength: int
                                protected fAttributes: com.sun.org.apache.xerces.internal.util.XMLAttributesImpl$Attribute[]
                                protected fAttributeTableView: com.sun.org.apache.xerces.internal.util.XMLAttributesImpl$Attribute[]
                                protected fAttributeTableViewChainState: int[]
                                protected fTableViewBuckets: int
                                protected fIsTableViewConsistent: boolean
                                protected fHashMultipliers: int[]
                                public constructor()
                                public constructor(arg0: int)
                                public setNamespaces(arg0: boolean): void
                                public addAttribute(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: java.lang.String | string, arg2: java.lang.String | string): int
                                public addAttribute(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.XMLString): int
                                public removeAllAttributes(): void
                                public removeAttributeAt(arg0: int): void
                                public setName(arg0: int, arg1: com.sun.org.apache.xerces.internal.xni.QName): void
                                public getName(arg0: int, arg1: com.sun.org.apache.xerces.internal.xni.QName): void
                                public setType(arg0: int, arg1: java.lang.String | string): void
                                public setValue(arg0: int, arg1: java.lang.String | string): void
                                public setValue(arg0: int, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.XMLString): void
                                public setNonNormalizedValue(arg0: int, arg1: java.lang.String | string): void
                                public getNonNormalizedValue(arg0: int): string
                                public setSpecified(arg0: int, arg1: boolean): void
                                public isSpecified(arg0: int): boolean
                                public getLength(): int
                                public getType(arg0: int): string
                                public getType(arg0: java.lang.String | string): string
                                public getValue(arg0: int): string
                                public getValue(arg0: java.lang.String | string): string
                                public getName(arg0: int): string
                                public getIndex(arg0: java.lang.String | string): int
                                public getIndex(arg0: java.lang.String | string, arg1: java.lang.String | string): int
                                public getIndexByLocalName(arg0: java.lang.String | string): int
                                public getLocalName(arg0: int): string
                                public getQName(arg0: int): string
                                public getQualifiedName(arg0: int): com.sun.org.apache.xerces.internal.xni.QName
                                public getType(arg0: java.lang.String | string, arg1: java.lang.String | string): string
                                public getIndexFast(arg0: java.lang.String | string): int
                                public addAttributeNS(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public checkDuplicatesNS(): com.sun.org.apache.xerces.internal.xni.QName
                                public getIndexFast(arg0: java.lang.String | string, arg1: java.lang.String | string): int
                                protected getTableViewBucket(arg0: java.lang.String | string): int
                                protected getTableViewBucket(arg0: java.lang.String | string, arg1: java.lang.String | string): int
                                protected cleanTableView(): void
                                protected prepareTableView(): void
                                protected prepareAndPopulateTableView(): void
                                public getPrefix(arg0: int): string
                                public getURI(arg0: int): string
                                public getValue(arg0: java.lang.String | string, arg1: java.lang.String | string): string
                                public getAugmentations(arg0: java.lang.String | string, arg1: java.lang.String | string): com.sun.org.apache.xerces.internal.xni.Augmentations
                                public getAugmentations(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.xni.Augmentations
                                public getAugmentations(arg0: int): com.sun.org.apache.xerces.internal.xni.Augmentations
                                public setAugmentations(arg0: int, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public setURI(arg0: int, arg1: java.lang.String | string): void
                                public setSchemaId(arg0: int, arg1: boolean): void
                                public getSchemaId(arg0: int): boolean
                                public getSchemaId(arg0: java.lang.String | string): boolean
                                public getSchemaId(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                                public refresh(): void
                                public refresh(arg0: int): void
                                public static class: java.lang.Class<any>
                            }
                            class XMLAttributesIteratorImpl extends com.sun.org.apache.xerces.internal.util.XMLAttributesImpl implements java.util.Iterator {
                                protected fCurrent: int
                                protected fLastReturnedItem: com.sun.org.apache.xerces.internal.util.XMLAttributesImpl$Attribute
                                public constructor()
                                public hasNext(): boolean
                                public next(): java.lang.Object
                                public remove(): void
                                public removeAllAttributes(): void
                                public static class: java.lang.Class<any>
                            }
                            class XMLChar {
                                public static MASK_VALID: int
                                public static MASK_SPACE: int
                                public static MASK_NAME_START: int
                                public static MASK_NAME: int
                                public static MASK_PUBID: int
                                public static MASK_CONTENT: int
                                public static MASK_NCNAME_START: int
                                public static MASK_NCNAME: int
                                public constructor()
                                public static isSupplemental(arg0: int): boolean
                                public static supplemental(arg0: char, arg1: char): int
                                public static highSurrogate(arg0: int): char
                                public static lowSurrogate(arg0: int): char
                                public static isHighSurrogate(arg0: int): boolean
                                public static isLowSurrogate(arg0: int): boolean
                                public static isValid(arg0: int): boolean
                                public static isInvalid(arg0: int): boolean
                                public static isContent(arg0: int): boolean
                                public static isMarkup(arg0: int): boolean
                                public static isSpace(arg0: int): boolean
                                public static isNameStart(arg0: int): boolean
                                public static isName(arg0: int): boolean
                                public static isNCNameStart(arg0: int): boolean
                                public static isNCName(arg0: int): boolean
                                public static isPubid(arg0: int): boolean
                                public static isValidName(arg0: java.lang.String | string): boolean
                                public static isValidNCName(arg0: java.lang.String | string): boolean
                                public static isValidNmtoken(arg0: java.lang.String | string): boolean
                                public static isValidIANAEncoding(arg0: java.lang.String | string): boolean
                                public static isValidJavaEncoding(arg0: java.lang.String | string): boolean
                                public static trim(arg0: java.lang.String | string): string
                                public static class: java.lang.Class<any>
                            }
                            class XMLDocumentFilterImpl implements com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentFilter {
                                public constructor()
                                public setDocumentHandler(arg0: com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler): void
                                public getDocumentHandler(): com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler
                                public setDocumentSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource): void
                                public getDocumentSource(): com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource
                                public characters(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public comment(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public doctypeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public emptyElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endDocument(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endGeneralEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public ignorableWhitespace(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public processingInstruction(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLString, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startDocument(arg0: com.sun.org.apache.xerces.internal.xni.XMLLocator, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.NamespaceContext, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startGeneralEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public textDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public xmlDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public static class: java.lang.Class<any>
                            }
                            class XMLEntityDescriptionImpl extends com.sun.org.apache.xerces.internal.util.XMLResourceIdentifierImpl implements com.sun.org.apache.xerces.internal.impl.XMLEntityDescription {
                                protected fEntityName: string
                                public constructor()
                                public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string)
                                public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string, arg5: java.lang.String | string)
                                public setEntityName(arg0: java.lang.String | string): void
                                public getEntityName(): string
                                public setDescription(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string): void
                                public setDescription(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string, arg5: java.lang.String | string): void
                                public clear(): void
                                public hashCode(): int
                                public toString(): string
                                public static class: java.lang.Class<any>
                            }
                            class XMLErrorCode {
                                public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string)
                                public setValues(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public equals(arg0: java.lang.Object): boolean
                                public hashCode(): int
                                public static class: java.lang.Class<any>
                            }
                            class XMLGrammarPoolImpl implements com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool {
                                protected static TABLE_SIZE: int
                                protected fGrammars: com.sun.org.apache.xerces.internal.util.XMLGrammarPoolImpl$Entry[]
                                protected fPoolIsLocked: boolean
                                protected fGrammarCount: int
                                public constructor()
                                public constructor(arg0: int)
                                public retrieveInitialGrammarSet(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.xni.grammars.Grammar[]
                                public cacheGrammars(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.grammars.Grammar[]): void
                                public retrieveGrammar(arg0: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarDescription): com.sun.org.apache.xerces.internal.xni.grammars.Grammar
                                public putGrammar(arg0: com.sun.org.apache.xerces.internal.xni.grammars.Grammar | com.sun.org.apache.xerces.internal.xni.grammars.Grammar$$Lambda): void
                                public getGrammar(arg0: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarDescription): com.sun.org.apache.xerces.internal.xni.grammars.Grammar
                                public removeGrammar(arg0: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarDescription): com.sun.org.apache.xerces.internal.xni.grammars.Grammar
                                public containsGrammar(arg0: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarDescription): boolean
                                public lockPool(): void
                                public unlockPool(): void
                                public clear(): void
                                public equals(arg0: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarDescription, arg1: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarDescription): boolean
                                public hashCode(arg0: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarDescription): int
                                public static class: java.lang.Class<any>
                            }
                            class XMLInputSourceAdaptor implements javax.xml.transform.Source {
                                public fSource: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource
                                public constructor(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource)
                                public setSystemId(arg0: java.lang.String | string): void
                                public getSystemId(): string
                                public static class: java.lang.Class<any>
                            }
                            class XMLResourceIdentifierImpl implements com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier {
                                protected fPublicId: string
                                protected fLiteralSystemId: string
                                protected fBaseSystemId: string
                                protected fExpandedSystemId: string
                                protected fNamespace: string
                                public constructor()
                                public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string)
                                public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string)
                                public setValues(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string): void
                                public setValues(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string): void
                                public clear(): void
                                public setPublicId(arg0: java.lang.String | string): void
                                public setLiteralSystemId(arg0: java.lang.String | string): void
                                public setBaseSystemId(arg0: java.lang.String | string): void
                                public setExpandedSystemId(arg0: java.lang.String | string): void
                                public setNamespace(arg0: java.lang.String | string): void
                                public getPublicId(): string
                                public getLiteralSystemId(): string
                                public getBaseSystemId(): string
                                public getExpandedSystemId(): string
                                public getNamespace(): string
                                public hashCode(): int
                                public toString(): string
                                public static class: java.lang.Class<any>
                            }
                            class XMLStringBuffer extends com.sun.org.apache.xerces.internal.xni.XMLString {
                                public static DEFAULT_SIZE: int
                                public constructor()
                                public constructor(arg0: int)
                                public constructor(arg0: char)
                                public constructor(arg0: java.lang.String | string)
                                public constructor(arg0: char[], arg1: int, arg2: int)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.xni.XMLString)
                                public clear(): void
                                public append(arg0: char): void
                                public append(arg0: java.lang.String | string): void
                                public append(arg0: char[], arg1: int, arg2: int): void
                                public append(arg0: com.sun.org.apache.xerces.internal.xni.XMLString): void
                                public static class: java.lang.Class<any>
                            }
                            class XMLSymbols {
                                public static EMPTY_STRING: string
                                public static PREFIX_XML: string
                                public static PREFIX_XMLNS: string
                                public static fANYSymbol: string
                                public static fCDATASymbol: string
                                public static fIDSymbol: string
                                public static fIDREFSymbol: string
                                public static fIDREFSSymbol: string
                                public static fENTITYSymbol: string
                                public static fENTITIESSymbol: string
                                public static fNMTOKENSymbol: string
                                public static fNMTOKENSSymbol: string
                                public static fNOTATIONSymbol: string
                                public static fENUMERATIONSymbol: string
                                public static fIMPLIEDSymbol: string
                                public static fREQUIREDSymbol: string
                                public static fFIXEDSymbol: string
                                public constructor()
                                public static class: java.lang.Class<any>
                            }
                        }
                        namespace utils {
                            class ConfigurationError extends java.lang.Error {
                                public getException(): java.lang.Exception
                                public static class: java.lang.Class<any>
                            }
                            class ObjectFactory {
                                public constructor()
                                public static findClassLoader(): java.lang.ClassLoader
                                public static newInstance(arg0: java.lang.String | string, arg1: boolean): java.lang.Object
                                public static newInstance(arg0: java.lang.String | string, arg1: java.lang.ClassLoader, arg2: boolean): java.lang.Object
                                public static findProviderClass(arg0: java.lang.String | string, arg1: boolean): java.lang.Class
                                public static findProviderClass(arg0: java.lang.String | string, arg1: java.lang.ClassLoader, arg2: boolean): java.lang.Class
                                public static class: java.lang.Class<any>
                            }
                            class XMLLimitAnalyzer {
                                public constructor()
                                public addValue(arg0: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit, arg1: java.lang.String | string, arg2: int): void
                                public addValue(arg0: int, arg1: java.lang.String | string, arg2: int): void
                                public getValue(arg0: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit): int
                                public getValue(arg0: int): int
                                public getTotalValue(arg0: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit): int
                                public getTotalValue(arg0: int): int
                                public getValueByIndex(arg0: int): int
                                public startEntity(arg0: java.lang.String | string): void
                                public isTracking(arg0: java.lang.String | string): boolean
                                public endEntity(arg0: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit, arg1: java.lang.String | string): void
                                public reset(arg0: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit): void
                                public debugPrint(arg0: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager): void
                                public static class: java.lang.Class<any>
                            }
                            class XMLSecurityManager {
                                public constructor()
                                public constructor(arg0: boolean)
                                public setSecureProcessing(arg0: boolean): void
                                public isSecureProcessing(): boolean
                                public setLimit(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$State, arg2: java.lang.Object): boolean
                                public setLimit(arg0: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit, arg1: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$State, arg2: int): void
                                public setLimit(arg0: int, arg1: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$State, arg2: java.lang.Object): void
                                public setLimit(arg0: int, arg1: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$State, arg2: int): void
                                public getLimitAsString(arg0: java.lang.String | string): string
                                public getLimit(arg0: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit): int
                                public getLimitValueAsString(arg0: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit): string
                                public getLimitValueByIndex(arg0: int): string
                                public getState(arg0: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit): com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$State
                                public getStateLiteral(arg0: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit): string
                                public getIndex(arg0: java.lang.String | string): int
                                public isNoLimit(arg0: int): boolean
                                public isOverLimit(arg0: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit, arg1: java.lang.String | string, arg2: int, arg3: com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer): boolean
                                public isOverLimit(arg0: int, arg1: java.lang.String | string, arg2: int, arg3: com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer): boolean
                                public isOverLimit(arg0: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit, arg1: com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer): boolean
                                public isOverLimit(arg0: int, arg1: com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer): boolean
                                public debugPrint(arg0: com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer): void
                                public isSet(arg0: int): boolean
                                public printEntityCountInfo(): boolean
                                public static printWarning(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: org.xml.sax.SAXException): void
                                public static convert(arg0: java.lang.Object, arg1: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager): com.sun.org.apache.xerces.internal.utils.XMLSecurityManager
                                public static class: java.lang.Class<any>
                            }
                            class XMLSecurityPropertyManager {
                                public constructor()
                                public setValue(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$State, arg2: java.lang.Object): boolean
                                public setValue(arg0: com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$Property, arg1: com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$State, arg2: java.lang.String | string): void
                                public setValue(arg0: int, arg1: com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$State, arg2: java.lang.String | string): void
                                public getValue(arg0: java.lang.String | string): string
                                public getValue(arg0: com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$Property): string
                                public getValueByIndex(arg0: int): string
                                public getIndex(arg0: java.lang.String | string): int
                                public static class: java.lang.Class<any>
                            }
                        }
                        namespace xinclude {
                            class MultipleScopeNamespaceSupport extends com.sun.org.apache.xerces.internal.util.NamespaceSupport {
                                protected fScope: int[]
                                protected fCurrentScope: int
                                public constructor()
                                public constructor(arg0: com.sun.org.apache.xerces.internal.xni.NamespaceContext)
                                public getAllPrefixes(): java.util.Enumeration
                                public getScopeForContext(arg0: int): int
                                public getPrefix(arg0: java.lang.String | string): string
                                public getURI(arg0: java.lang.String | string): string
                                public getPrefix(arg0: java.lang.String | string, arg1: int): string
                                public getURI(arg0: java.lang.String | string, arg1: int): string
                                public getPrefix(arg0: java.lang.String | string, arg1: int, arg2: int): string
                                public getURI(arg0: java.lang.String | string, arg1: int, arg2: int): string
                                public reset(): void
                                public pushScope(): void
                                public popScope(): void
                                public static class: java.lang.Class<any>
                            }
                            class XInclude11TextReader extends com.sun.org.apache.xerces.internal.xinclude.XIncludeTextReader {
                                public constructor(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource, arg1: com.sun.org.apache.xerces.internal.xinclude.XIncludeHandler, arg2: int)
                                protected isValid(arg0: int): boolean
                                public static class: java.lang.Class<any>
                            }
                            class XIncludeHandler implements com.sun.org.apache.xerces.internal.xni.parser.XMLComponent , com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentFilter , com.sun.org.apache.xerces.internal.xni.parser.XMLDTDFilter {
                                public static XINCLUDE_DEFAULT_CONFIGURATION: string
                                public static HTTP_ACCEPT: string
                                public static HTTP_ACCEPT_LANGUAGE: string
                                public static XPOINTER: string
                                public static XINCLUDE_NS_URI: string
                                public static XINCLUDE_INCLUDE: string
                                public static XINCLUDE_FALLBACK: string
                                public static XINCLUDE_PARSE_XML: string
                                public static XINCLUDE_PARSE_TEXT: string
                                public static XINCLUDE_ATTR_HREF: string
                                public static XINCLUDE_ATTR_PARSE: string
                                public static XINCLUDE_ATTR_ENCODING: string
                                public static XINCLUDE_ATTR_ACCEPT: string
                                public static XINCLUDE_ATTR_ACCEPT_LANGUAGE: string
                                public static XINCLUDE_INCLUDED: string
                                public static CURRENT_BASE_URI: string
                                public static XINCLUDE_BASE: string
                                public static XML_BASE_QNAME: com.sun.org.apache.xerces.internal.xni.QName
                                public static XINCLUDE_LANG: string
                                public static XML_LANG_QNAME: com.sun.org.apache.xerces.internal.xni.QName
                                public static NEW_NS_ATTR_QNAME: com.sun.org.apache.xerces.internal.xni.QName
                                protected static VALIDATION: string
                                protected static SCHEMA_VALIDATION: string
                                protected static DYNAMIC_VALIDATION: string
                                protected static ALLOW_UE_AND_NOTATION_EVENTS: string
                                protected static XINCLUDE_FIXUP_BASE_URIS: string
                                protected static XINCLUDE_FIXUP_LANGUAGE: string
                                protected static SYMBOL_TABLE: string
                                protected static ERROR_REPORTER: string
                                protected static ENTITY_RESOLVER: string
                                protected static SECURITY_MANAGER: string
                                public static BUFFER_SIZE: string
                                protected static PARSER_SETTINGS: string
                                protected static XML_SECURITY_PROPERTY_MANAGER: string
                                protected fDocumentHandler: com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler
                                protected fDocumentSource: com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource
                                protected fDTDHandler: com.sun.org.apache.xerces.internal.xni.XMLDTDHandler
                                protected fDTDSource: com.sun.org.apache.xerces.internal.xni.parser.XMLDTDSource
                                protected fParentXIncludeHandler: com.sun.org.apache.xerces.internal.xinclude.XIncludeHandler
                                protected fBufferSize: int
                                protected fParentRelativeURI: string
                                protected fChildConfig: com.sun.org.apache.xerces.internal.xni.parser.XMLParserConfiguration
                                protected fXIncludeChildConfig: com.sun.org.apache.xerces.internal.xni.parser.XMLParserConfiguration
                                protected fXPointerChildConfig: com.sun.org.apache.xerces.internal.xni.parser.XMLParserConfiguration
                                protected fXPtrProcessor: com.sun.org.apache.xerces.internal.xpointer.XPointerProcessor
                                protected fDocLocation: com.sun.org.apache.xerces.internal.xni.XMLLocator
                                protected fXIncludeMessageFormatter: com.sun.org.apache.xerces.internal.xinclude.XIncludeMessageFormatter
                                protected fNamespaceContext: com.sun.org.apache.xerces.internal.xinclude.XIncludeNamespaceSupport
                                protected fSymbolTable: com.sun.org.apache.xerces.internal.util.SymbolTable
                                protected fErrorReporter: com.sun.org.apache.xerces.internal.impl.XMLErrorReporter
                                protected fEntityResolver: com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver
                                protected fSecurityManager: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager
                                protected fSecurityPropertyMgr: com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager
                                protected fXInclude10TextReader: com.sun.org.apache.xerces.internal.xinclude.XIncludeTextReader
                                protected fXInclude11TextReader: com.sun.org.apache.xerces.internal.xinclude.XIncludeTextReader
                                protected fCurrentBaseURI: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier
                                protected fBaseURIScope: com.sun.org.apache.xerces.internal.util.IntStack
                                protected fBaseURI: java.util.Stack
                                protected fLiteralSystemID: java.util.Stack
                                protected fExpandedSystemID: java.util.Stack
                                protected fLanguageScope: com.sun.org.apache.xerces.internal.util.IntStack
                                protected fLanguageStack: java.util.Stack
                                protected fCurrentLanguage: string
                                protected fSettings: com.sun.org.apache.xerces.internal.util.ParserConfigurationSettings
                                public constructor()
                                public reset(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager): void
                                public getRecognizedFeatures(): java.lang.String[]
                                public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                public getRecognizedProperties(): java.lang.String[]
                                public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                public getFeatureDefault(arg0: java.lang.String | string): boolean
                                public getPropertyDefault(arg0: java.lang.String | string): java.lang.Object
                                public setDocumentHandler(arg0: com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler): void
                                public getDocumentHandler(): com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler
                                public startDocument(arg0: com.sun.org.apache.xerces.internal.xni.XMLLocator, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.NamespaceContext, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public xmlDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public doctypeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public comment(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public processingInstruction(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLString, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public emptyElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startGeneralEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public textDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endGeneralEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public characters(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public ignorableWhitespace(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endDocument(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public setDocumentSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource): void
                                public getDocumentSource(): com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource
                                public attributeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String[], arg4: java.lang.String | string, arg5: com.sun.org.apache.xerces.internal.xni.XMLString, arg6: com.sun.org.apache.xerces.internal.xni.XMLString, arg7: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public elementDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endAttlist(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endConditional(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endDTD(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endExternalSubset(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endParameterEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public externalEntityDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public getDTDSource(): com.sun.org.apache.xerces.internal.xni.parser.XMLDTDSource
                                public ignoredCharacters(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public internalEntityDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLString, arg2: com.sun.org.apache.xerces.internal.xni.XMLString, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public notationDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public setDTDSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLDTDSource): void
                                public startAttlist(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startConditional(arg0: short, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startDTD(arg0: com.sun.org.apache.xerces.internal.xni.XMLLocator, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startExternalSubset(arg0: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startParameterEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public unparsedEntityDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public getDTDHandler(): com.sun.org.apache.xerces.internal.xni.XMLDTDHandler
                                public setDTDHandler(arg0: com.sun.org.apache.xerces.internal.xni.XMLDTDHandler): void
                                protected handleFallbackElement(): void
                                protected handleIncludeElement(arg0: com.sun.org.apache.xerces.internal.xni.XMLAttributes): boolean
                                protected hasXIncludeNamespace(arg0: com.sun.org.apache.xerces.internal.xni.QName): boolean
                                protected isIncludeElement(arg0: com.sun.org.apache.xerces.internal.xni.QName): boolean
                                protected isFallbackElement(arg0: com.sun.org.apache.xerces.internal.xni.QName): boolean
                                protected sameBaseURIAsIncludeParent(): boolean
                                protected sameLanguageAsIncludeParent(): boolean
                                protected searchForRecursiveIncludes(arg0: com.sun.org.apache.xerces.internal.xni.XMLLocator): boolean
                                protected isTopLevelIncludedItem(): boolean
                                protected isTopLevelIncludedItemViaInclude(): boolean
                                protected isTopLevelIncludedItemViaFallback(): boolean
                                protected processAttributes(arg0: com.sun.org.apache.xerces.internal.xni.XMLAttributes): com.sun.org.apache.xerces.internal.xni.XMLAttributes
                                protected getRelativeBaseURI(): string
                                protected modifyAugmentations(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): com.sun.org.apache.xerces.internal.xni.Augmentations
                                protected modifyAugmentations(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations, arg1: boolean): com.sun.org.apache.xerces.internal.xni.Augmentations
                                protected getState(arg0: int): int
                                protected getState(): int
                                protected setState(arg0: int): void
                                protected setSawFallback(arg0: int, arg1: boolean): void
                                protected getSawFallback(arg0: int): boolean
                                protected setSawInclude(arg0: int, arg1: boolean): void
                                protected getSawInclude(arg0: int): boolean
                                protected reportResourceError(arg0: java.lang.String | string): void
                                protected reportResourceError(arg0: java.lang.String | string, arg1: java.lang.Object[]): void
                                protected reportFatalError(arg0: java.lang.String | string): void
                                protected reportFatalError(arg0: java.lang.String | string, arg1: java.lang.Object[]): void
                                protected setParent(arg0: com.sun.org.apache.xerces.internal.xinclude.XIncludeHandler): void
                                protected isRootDocument(): boolean
                                protected addUnparsedEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                protected addNotation(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                protected checkUnparsedEntity(arg0: java.lang.String | string): void
                                protected checkNotation(arg0: java.lang.String | string): void
                                protected checkAndSendUnparsedEntity(arg0: com.sun.org.apache.xerces.internal.xinclude.XIncludeHandler$UnparsedEntity): void
                                protected checkAndSendNotation(arg0: com.sun.org.apache.xerces.internal.xinclude.XIncludeHandler$Notation): void
                                protected copyFeatures(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager, arg1: com.sun.org.apache.xerces.internal.util.ParserConfigurationSettings): void
                                protected copyFeatures(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager, arg1: com.sun.org.apache.xerces.internal.xni.parser.XMLParserConfiguration): void
                                protected saveBaseURI(): void
                                protected restoreBaseURI(): void
                                protected saveLanguage(arg0: java.lang.String | string): void
                                public restoreLanguage(): string
                                public getBaseURI(arg0: int): string
                                public getLanguage(arg0: int): string
                                public getRelativeURI(arg0: int): string
                                protected processXMLBaseAttributes(arg0: com.sun.org.apache.xerces.internal.xni.XMLAttributes): void
                                protected processXMLLangAttributes(arg0: com.sun.org.apache.xerces.internal.xni.XMLAttributes): void
                                public static class: java.lang.Class<any>
                            }
                            class XIncludeMessageFormatter implements com.sun.org.apache.xerces.internal.util.MessageFormatter {
                                public static XINCLUDE_DOMAIN: string
                                public constructor()
                                public formatMessage(arg0: java.util.Locale, arg1: java.lang.String | string, arg2: java.lang.Object[]): string
                                public static class: java.lang.Class<any>
                            }
                            class XIncludeMessageFormatter$$Lambda implements com.sun.org.apache.xerces.internal.util.MessageFormatter {
                                public static XINCLUDE_DOMAIN: string
                            }
                            class XIncludeNamespaceSupport extends com.sun.org.apache.xerces.internal.xinclude.MultipleScopeNamespaceSupport {
                                public constructor()
                                public constructor(arg0: com.sun.org.apache.xerces.internal.xni.NamespaceContext)
                                public pushContext(): void
                                public setContextInvalid(): void
                                public getURIFromIncludeParent(arg0: java.lang.String | string): string
                                public static class: java.lang.Class<any>
                            }
                            class XIncludeTextReader {
                                public constructor(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource, arg1: com.sun.org.apache.xerces.internal.xinclude.XIncludeHandler, arg2: int)
                                public setErrorReporter(arg0: com.sun.org.apache.xerces.internal.impl.XMLErrorReporter): void
                                protected getReader(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource): java.io.Reader
                                protected getEncodingName(arg0: java.io.InputStream): string
                                protected consumeBOM(arg0: java.io.InputStream, arg1: java.lang.String | string): string
                                protected getEncodingName(arg0: byte[]): string
                                public parse(): void
                                public setInputSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource): void
                                public close(): void
                                protected isValid(arg0: int): boolean
                                protected setBufferSize(arg0: int): void
                                public static class: java.lang.Class<any>
                            }
                        }
                        namespace xni {
                            namespace grammars {
                                interface Grammar {
                                    getGrammarDescription(): com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarDescription
                                }
                                interface Grammar$$Lambda {
                                    (): com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarDescription
                                }
                                interface XMLDTDDescription extends com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarDescription {
                                    getRootName(): string
                                }
                                interface XMLGrammarDescription extends com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier {
                                    XML_SCHEMA: string
                                    XML_DTD: string
                                    getGrammarType(): string
                                }
                                interface XMLGrammarLoader {
                                    getRecognizedFeatures(): java.lang.String[]
                                    getFeature(arg0: java.lang.String | string): boolean
                                    setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                    getRecognizedProperties(): java.lang.String[]
                                    getProperty(arg0: java.lang.String | string): java.lang.Object
                                    setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                    setLocale(arg0: java.util.Locale): void
                                    getLocale(): java.util.Locale
                                    setErrorHandler(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler): void
                                    getErrorHandler(): com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler
                                    setEntityResolver(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver | com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver$$Lambda): void
                                    getEntityResolver(): com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver
                                    loadGrammar(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource): com.sun.org.apache.xerces.internal.xni.grammars.Grammar
                                }
                                interface XMLGrammarPool {
                                    retrieveInitialGrammarSet(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.xni.grammars.Grammar[]
                                    cacheGrammars(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.grammars.Grammar[]): void
                                    retrieveGrammar(arg0: com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarDescription): com.sun.org.apache.xerces.internal.xni.grammars.Grammar
                                    lockPool(): void
                                    unlockPool(): void
                                    clear(): void
                                }
                                interface XMLSchemaDescription extends com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarDescription {
                                    CONTEXT_INCLUDE: short
                                    CONTEXT_REDEFINE: short
                                    CONTEXT_IMPORT: short
                                    CONTEXT_PREPARSE: short
                                    CONTEXT_INSTANCE: short
                                    CONTEXT_ELEMENT: short
                                    CONTEXT_ATTRIBUTE: short
                                    CONTEXT_XSITYPE: short
                                    getContextType(): short
                                    getTargetNamespace(): string
                                    getLocationHints(): java.lang.String[]
                                    getTriggeringComponent(): com.sun.org.apache.xerces.internal.xni.QName
                                    getEnclosingElementName(): com.sun.org.apache.xerces.internal.xni.QName
                                    getAttributes(): com.sun.org.apache.xerces.internal.xni.XMLAttributes
                                }
                                interface XSGrammar extends com.sun.org.apache.xerces.internal.xni.grammars.Grammar {
                                    toXSModel(): com.sun.org.apache.xerces.internal.xs.XSModel
                                    toXSModel(arg0: com.sun.org.apache.xerces.internal.xni.grammars.XSGrammar[]): com.sun.org.apache.xerces.internal.xs.XSModel
                                }
                            }
                            namespace parser {
                                interface XMLComponent {
                                    reset(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager): void
                                    getRecognizedFeatures(): java.lang.String[]
                                    setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                    getRecognizedProperties(): java.lang.String[]
                                    setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                    getFeatureDefault(arg0: java.lang.String | string): boolean
                                    getPropertyDefault(arg0: java.lang.String | string): java.lang.Object
                                }
                                interface XMLComponentManager {
                                    getFeature(arg0: java.lang.String | string): boolean
                                    getFeature(arg0: java.lang.String | string, arg1: boolean): boolean
                                    getProperty(arg0: java.lang.String | string): java.lang.Object
                                    getProperty(arg0: java.lang.String | string, arg1: java.lang.Object): java.lang.Object
                                    getFeatureState(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.FeatureState
                                    getPropertyState(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.util.PropertyState
                                }
                                class XMLConfigurationException extends com.sun.org.apache.xerces.internal.xni.XNIException {
                                    protected fType: com.sun.org.apache.xerces.internal.util.Status
                                    protected fIdentifier: string
                                    public constructor(arg0: com.sun.org.apache.xerces.internal.util.Status, arg1: java.lang.String | string)
                                    public constructor(arg0: com.sun.org.apache.xerces.internal.util.Status, arg1: java.lang.String | string, arg2: java.lang.String | string)
                                    public getType(): com.sun.org.apache.xerces.internal.util.Status
                                    public getIdentifier(): string
                                    public static class: java.lang.Class<any>
                                }
                                interface XMLDTDContentModelFilter extends com.sun.org.apache.xerces.internal.xni.XMLDTDContentModelHandler , com.sun.org.apache.xerces.internal.xni.parser.XMLDTDContentModelSource {
                                }
                                interface XMLDTDContentModelSource {
                                    setDTDContentModelHandler(arg0: com.sun.org.apache.xerces.internal.xni.XMLDTDContentModelHandler): void
                                    getDTDContentModelHandler(): com.sun.org.apache.xerces.internal.xni.XMLDTDContentModelHandler
                                }
                                interface XMLDTDFilter extends com.sun.org.apache.xerces.internal.xni.XMLDTDHandler , com.sun.org.apache.xerces.internal.xni.parser.XMLDTDSource {
                                }
                                interface XMLDTDScanner extends com.sun.org.apache.xerces.internal.xni.parser.XMLDTDSource , com.sun.org.apache.xerces.internal.xni.parser.XMLDTDContentModelSource {
                                    setInputSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource): void
                                    scanDTDInternalSubset(arg0: boolean, arg1: boolean, arg2: boolean): boolean
                                    scanDTDExternalSubset(arg0: boolean): boolean
                                    skipDTD(arg0: boolean): boolean
                                    setLimitAnalyzer(arg0: com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer): void
                                }
                                interface XMLDTDSource {
                                    setDTDHandler(arg0: com.sun.org.apache.xerces.internal.xni.XMLDTDHandler): void
                                    getDTDHandler(): com.sun.org.apache.xerces.internal.xni.XMLDTDHandler
                                }
                                interface XMLDocumentFilter extends com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler , com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource {
                                }
                                interface XMLDocumentScanner extends com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource {
                                    setInputSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource): void
                                    scanDocument(arg0: boolean): boolean
                                    next(): int
                                }
                                interface XMLDocumentSource {
                                    setDocumentHandler(arg0: com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler): void
                                    getDocumentHandler(): com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler
                                }
                                interface XMLEntityResolver {
                                    resolveEntity(arg0: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier): com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource
                                }
                                interface XMLEntityResolver$$Lambda {
                                    (arg0: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier): com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource
                                }
                                interface XMLErrorHandler {
                                    warning(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.parser.XMLParseException): void
                                    error(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.parser.XMLParseException): void
                                    fatalError(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.parser.XMLParseException): void
                                }
                                class XMLInputSource {
                                    protected fPublicId: string
                                    protected fSystemId: string
                                    protected fBaseSystemId: string
                                    protected fByteStream: java.io.InputStream
                                    protected fCharStream: java.io.Reader
                                    protected fEncoding: string
                                    public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string)
                                    public constructor(arg0: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier)
                                    public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.io.InputStream, arg4: java.lang.String | string)
                                    public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.io.Reader, arg4: java.lang.String | string)
                                    public setPublicId(arg0: java.lang.String | string): void
                                    public getPublicId(): string
                                    public setSystemId(arg0: java.lang.String | string): void
                                    public getSystemId(): string
                                    public setBaseSystemId(arg0: java.lang.String | string): void
                                    public getBaseSystemId(): string
                                    public setByteStream(arg0: java.io.InputStream): void
                                    public getByteStream(): java.io.InputStream
                                    public setCharacterStream(arg0: java.io.Reader): void
                                    public getCharacterStream(): java.io.Reader
                                    public setEncoding(arg0: java.lang.String | string): void
                                    public getEncoding(): string
                                    public static class: java.lang.Class<any>
                                }
                                class XMLParseException extends com.sun.org.apache.xerces.internal.xni.XNIException {
                                    protected fPublicId: string
                                    protected fLiteralSystemId: string
                                    protected fExpandedSystemId: string
                                    protected fBaseSystemId: string
                                    protected fLineNumber: int
                                    protected fColumnNumber: int
                                    protected fCharacterOffset: int
                                    public constructor(arg0: com.sun.org.apache.xerces.internal.xni.XMLLocator, arg1: java.lang.String | string)
                                    public constructor(arg0: com.sun.org.apache.xerces.internal.xni.XMLLocator, arg1: java.lang.String | string, arg2: java.lang.Exception)
                                    public getPublicId(): string
                                    public getExpandedSystemId(): string
                                    public getLiteralSystemId(): string
                                    public getBaseSystemId(): string
                                    public getLineNumber(): int
                                    public getColumnNumber(): int
                                    public getCharacterOffset(): int
                                    public toString(): string
                                    public static class: java.lang.Class<any>
                                }
                                interface XMLParserConfiguration extends com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager {
                                    parse(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource): void
                                    addRecognizedFeatures(arg0: java.lang.String[]): void
                                    setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                    getFeature(arg0: java.lang.String | string): boolean
                                    addRecognizedProperties(arg0: java.lang.String[]): void
                                    setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                    getProperty(arg0: java.lang.String | string): java.lang.Object
                                    setErrorHandler(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler): void
                                    getErrorHandler(): com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler
                                    setDocumentHandler(arg0: com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler): void
                                    getDocumentHandler(): com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler
                                    setDTDHandler(arg0: com.sun.org.apache.xerces.internal.xni.XMLDTDHandler): void
                                    getDTDHandler(): com.sun.org.apache.xerces.internal.xni.XMLDTDHandler
                                    setDTDContentModelHandler(arg0: com.sun.org.apache.xerces.internal.xni.XMLDTDContentModelHandler): void
                                    getDTDContentModelHandler(): com.sun.org.apache.xerces.internal.xni.XMLDTDContentModelHandler
                                    setEntityResolver(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver | com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver$$Lambda): void
                                    getEntityResolver(): com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver
                                    setLocale(arg0: java.util.Locale): void
                                    getLocale(): java.util.Locale
                                }
                                interface XMLPullParserConfiguration extends com.sun.org.apache.xerces.internal.xni.parser.XMLParserConfiguration {
                                    setInputSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource): void
                                    parse(arg0: boolean): boolean
                                    cleanup(): void
                                }
                            }
                            interface Augmentations {
                                putItem(arg0: java.lang.String | string, arg1: java.lang.Object): java.lang.Object
                                getItem(arg0: java.lang.String | string): java.lang.Object
                                removeItem(arg0: java.lang.String | string): java.lang.Object
                                keys(): java.util.Enumeration
                                removeAllItems(): void
                            }
                            interface NamespaceContext {
                                XML_URI: string
                                XMLNS_URI: string
                                pushContext(): void
                                popContext(): void
                                declarePrefix(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                                getURI(arg0: java.lang.String | string): string
                                getPrefix(arg0: java.lang.String | string): string
                                getDeclaredPrefixCount(): int
                                getDeclaredPrefixAt(arg0: int): string
                                getAllPrefixes(): java.util.Enumeration
                                reset(): void
                            }
                            class QName implements java.lang.Cloneable {
                                public prefix: string
                                public localpart: string
                                public rawname: string
                                public uri: string
                                public constructor()
                                public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.xni.QName)
                                public setValues(arg0: com.sun.org.apache.xerces.internal.xni.QName): void
                                public setValues(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string): void
                                public clear(): void
                                public clone(): java.lang.Object
                                public hashCode(): int
                                public equals(arg0: java.lang.Object): boolean
                                public toString(): string
                                public static class: java.lang.Class<any>
                            }
                            interface XMLAttributes {
                                addAttribute(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: java.lang.String | string, arg2: java.lang.String | string): int
                                removeAllAttributes(): void
                                removeAttributeAt(arg0: int): void
                                getLength(): int
                                getIndex(arg0: java.lang.String | string): int
                                getIndex(arg0: java.lang.String | string, arg1: java.lang.String | string): int
                                setName(arg0: int, arg1: com.sun.org.apache.xerces.internal.xni.QName): void
                                getName(arg0: int, arg1: com.sun.org.apache.xerces.internal.xni.QName): void
                                getPrefix(arg0: int): string
                                getURI(arg0: int): string
                                getLocalName(arg0: int): string
                                getQName(arg0: int): string
                                getQualifiedName(arg0: int): com.sun.org.apache.xerces.internal.xni.QName
                                setType(arg0: int, arg1: java.lang.String | string): void
                                getType(arg0: int): string
                                getType(arg0: java.lang.String | string): string
                                getType(arg0: java.lang.String | string, arg1: java.lang.String | string): string
                                setValue(arg0: int, arg1: java.lang.String | string): void
                                setValue(arg0: int, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.XMLString): void
                                getValue(arg0: int): string
                                getValue(arg0: java.lang.String | string): string
                                getValue(arg0: java.lang.String | string, arg1: java.lang.String | string): string
                                setNonNormalizedValue(arg0: int, arg1: java.lang.String | string): void
                                getNonNormalizedValue(arg0: int): string
                                setSpecified(arg0: int, arg1: boolean): void
                                isSpecified(arg0: int): boolean
                                getAugmentations(arg0: int): com.sun.org.apache.xerces.internal.xni.Augmentations
                                getAugmentations(arg0: java.lang.String | string, arg1: java.lang.String | string): com.sun.org.apache.xerces.internal.xni.Augmentations
                                getAugmentations(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.xni.Augmentations
                                setAugmentations(arg0: int, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                            }
                            interface XMLDTDContentModelHandler {
                                SEPARATOR_CHOICE: short
                                SEPARATOR_SEQUENCE: short
                                OCCURS_ZERO_OR_ONE: short
                                OCCURS_ZERO_OR_MORE: short
                                OCCURS_ONE_OR_MORE: short
                                startContentModel(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                any(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                empty(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                startGroup(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                pcdata(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                element(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                separator(arg0: short, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                occurrence(arg0: short, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                endGroup(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                endContentModel(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                setDTDContentModelSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLDTDContentModelSource): void
                                getDTDContentModelSource(): com.sun.org.apache.xerces.internal.xni.parser.XMLDTDContentModelSource
                            }
                            interface XMLDTDHandler {
                                CONDITIONAL_INCLUDE: short
                                CONDITIONAL_IGNORE: short
                                startDTD(arg0: com.sun.org.apache.xerces.internal.xni.XMLLocator, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                startParameterEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                textDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                endParameterEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                startExternalSubset(arg0: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                endExternalSubset(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                comment(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                processingInstruction(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLString, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                elementDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                startAttlist(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                attributeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String[], arg4: java.lang.String | string, arg5: com.sun.org.apache.xerces.internal.xni.XMLString, arg6: com.sun.org.apache.xerces.internal.xni.XMLString, arg7: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                endAttlist(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                internalEntityDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLString, arg2: com.sun.org.apache.xerces.internal.xni.XMLString, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                externalEntityDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                unparsedEntityDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                notationDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                startConditional(arg0: short, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                ignoredCharacters(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                endConditional(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                endDTD(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                setDTDSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLDTDSource): void
                                getDTDSource(): com.sun.org.apache.xerces.internal.xni.parser.XMLDTDSource
                            }
                            interface XMLDocumentFragmentHandler {
                                startDocumentFragment(arg0: com.sun.org.apache.xerces.internal.xni.XMLLocator, arg1: com.sun.org.apache.xerces.internal.xni.NamespaceContext, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                startGeneralEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                textDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                endGeneralEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                comment(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                processingInstruction(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLString, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                startElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                emptyElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                characters(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                ignorableWhitespace(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                endElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                startCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                endCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                endDocumentFragment(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                            }
                            interface XMLDocumentHandler {
                                startDocument(arg0: com.sun.org.apache.xerces.internal.xni.XMLLocator, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.NamespaceContext, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                xmlDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                doctypeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                comment(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                processingInstruction(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLString, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                startElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                emptyElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                startGeneralEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: java.lang.String | string, arg3: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                textDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                endGeneralEntity(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                characters(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                ignorableWhitespace(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                endElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                startCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                endCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                endDocument(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                setDocumentSource(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource): void
                                getDocumentSource(): com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource
                            }
                            interface XMLLocator {
                                getPublicId(): string
                                getLiteralSystemId(): string
                                getBaseSystemId(): string
                                getExpandedSystemId(): string
                                getLineNumber(): int
                                getColumnNumber(): int
                                getCharacterOffset(): int
                                getEncoding(): string
                                getXMLVersion(): string
                            }
                            interface XMLResourceIdentifier {
                                setPublicId(arg0: java.lang.String | string): void
                                getPublicId(): string
                                setExpandedSystemId(arg0: java.lang.String | string): void
                                getExpandedSystemId(): string
                                setLiteralSystemId(arg0: java.lang.String | string): void
                                getLiteralSystemId(): string
                                setBaseSystemId(arg0: java.lang.String | string): void
                                getBaseSystemId(): string
                                setNamespace(arg0: java.lang.String | string): void
                                getNamespace(): string
                            }
                            class XMLString {
                                public ch: char[]
                                public offset: int
                                public length: int
                                public constructor()
                                public constructor(arg0: char[], arg1: int, arg2: int)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.xni.XMLString)
                                public setValues(arg0: char[], arg1: int, arg2: int): void
                                public setValues(arg0: com.sun.org.apache.xerces.internal.xni.XMLString): void
                                public clear(): void
                                public equals(arg0: char[], arg1: int, arg2: int): boolean
                                public equals(arg0: java.lang.String | string): boolean
                                public toString(): string
                                public static class: java.lang.Class<any>
                            }
                            class XNIException extends java.lang.RuntimeException {
                                public constructor(arg0: java.lang.String | string)
                                public constructor(arg0: java.lang.Exception)
                                public constructor(arg0: java.lang.String | string, arg1: java.lang.Exception)
                                public getException(): java.lang.Exception
                                public getCause(): java.lang.Throwable
                                public static class: java.lang.Class<any>
                            }
                        }
                        namespace xpointer {
                            class ElementSchemePointer implements com.sun.org.apache.xerces.internal.xpointer.XPointerPart {
                                protected fErrorReporter: com.sun.org.apache.xerces.internal.impl.XMLErrorReporter
                                protected fErrorHandler: com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler
                                public constructor()
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable)
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.impl.XMLErrorReporter)
                                public parseXPointer(arg0: java.lang.String | string): void
                                public getSchemeName(): string
                                public getSchemeData(): string
                                public setSchemeName(arg0: java.lang.String | string): void
                                public setSchemeData(arg0: java.lang.String | string): void
                                public resolveXPointer(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations, arg3: int): boolean
                                protected matchChildSequence(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: int): boolean
                                protected checkMatch(): boolean
                                public isFragmentResolved(): boolean
                                public isChildFragmentResolved(): boolean
                                protected reportError(arg0: java.lang.String | string, arg1: java.lang.Object[]): void
                                protected initErrorReporter(): void
                                protected init(): void
                                public static class: java.lang.Class<any>
                            }
                            class ShortHandPointer implements com.sun.org.apache.xerces.internal.xpointer.XPointerPart {
                                public constructor()
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable)
                                public parseXPointer(arg0: java.lang.String | string): void
                                public resolveXPointer(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations, arg3: int): boolean
                                public getDTDDeterminedID(arg0: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg1: int): string
                                public getSchemaDeterminedID(arg0: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg1: int): string
                                public getChildrenSchemaDeterminedID(arg0: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg1: int): string
                                public isFragmentResolved(): boolean
                                public isChildFragmentResolved(): boolean
                                public getSchemeName(): string
                                public getSchemeData(): string
                                public setSchemeName(arg0: java.lang.String | string): void
                                public setSchemeData(arg0: java.lang.String | string): void
                                public static class: java.lang.Class<any>
                            }
                            class XPointerErrorHandler implements com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler {
                                protected fOut: java.io.PrintWriter
                                public constructor()
                                public constructor(arg0: java.io.PrintWriter)
                                public warning(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.parser.XMLParseException): void
                                public error(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.parser.XMLParseException): void
                                public fatalError(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.parser.XMLParseException): void
                                public static class: java.lang.Class<any>
                            }
                            class XPointerHandler extends com.sun.org.apache.xerces.internal.xinclude.XIncludeHandler implements com.sun.org.apache.xerces.internal.xpointer.XPointerProcessor {
                                protected fXPointerParts: java.util.Vector
                                protected fXPointerPart: com.sun.org.apache.xerces.internal.xpointer.XPointerPart
                                protected fFoundMatchingPtrPart: boolean
                                protected fXPointerErrorReporter: com.sun.org.apache.xerces.internal.impl.XMLErrorReporter
                                protected fErrorHandler: com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler
                                protected fSymbolTable: com.sun.org.apache.xerces.internal.util.SymbolTable
                                protected fIsXPointerResolved: boolean
                                protected fFixupBase: boolean
                                protected fFixupLang: boolean
                                public constructor()
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable, arg1: com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler, arg2: com.sun.org.apache.xerces.internal.impl.XMLErrorReporter)
                                public parseXPointer(arg0: java.lang.String | string): void
                                public resolveXPointer(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations, arg3: int): boolean
                                public isFragmentResolved(): boolean
                                public isChildFragmentResolved(): boolean
                                public isXPointerResolved(): boolean
                                public getXPointerPart(): com.sun.org.apache.xerces.internal.xpointer.XPointerPart
                                protected initErrorReporter(): void
                                protected init(): void
                                public getPointerParts(): java.util.Vector
                                public comment(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public processingInstruction(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLString, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public emptyElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public characters(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public ignorableWhitespace(arg0: com.sun.org.apache.xerces.internal.xni.XMLString, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public startCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public endCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                public static class: java.lang.Class<any>
                            }
                            class XPointerMessageFormatter implements com.sun.org.apache.xerces.internal.util.MessageFormatter {
                                public static XPOINTER_DOMAIN: string
                                public formatMessage(arg0: java.util.Locale, arg1: java.lang.String | string, arg2: java.lang.Object[]): string
                                public static class: java.lang.Class<any>
                            }
                            class XPointerMessageFormatter$$Lambda implements com.sun.org.apache.xerces.internal.util.MessageFormatter {
                                public static XPOINTER_DOMAIN: string
                            }
                            interface XPointerPart {
                                EVENT_ELEMENT_START: int
                                EVENT_ELEMENT_END: int
                                EVENT_ELEMENT_EMPTY: int
                                parseXPointer(arg0: java.lang.String | string): void
                                resolveXPointer(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations, arg3: int): boolean
                                isFragmentResolved(): boolean
                                isChildFragmentResolved(): boolean
                                getSchemeName(): string
                                getSchemeData(): string
                                setSchemeName(arg0: java.lang.String | string): void
                                setSchemeData(arg0: java.lang.String | string): void
                            }
                            interface XPointerProcessor {
                                EVENT_ELEMENT_START: int
                                EVENT_ELEMENT_END: int
                                EVENT_ELEMENT_EMPTY: int
                                parseXPointer(arg0: java.lang.String | string): void
                                resolveXPointer(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations, arg3: int): boolean
                                isFragmentResolved(): boolean
                                isXPointerResolved(): boolean
                            }
                        }
                        namespace xs {
                            namespace datatypes {
                                interface ByteList extends java.util.List {
                                    getLength(): int
                                    contains(arg0: byte): boolean
                                    item(arg0: int): byte
                                }
                                interface ObjectList extends java.util.List {
                                    getLength(): int
                                    contains(arg0: java.lang.Object): boolean
                                    item(arg0: int): java.lang.Object
                                }
                                interface XSDateTime {
                                    getYears(): int
                                    getMonths(): int
                                    getDays(): int
                                    getHours(): int
                                    getMinutes(): int
                                    getSeconds(): double
                                    hasTimeZone(): boolean
                                    getTimeZoneHours(): int
                                    getTimeZoneMinutes(): int
                                    getLexicalValue(): string
                                    normalize(): com.sun.org.apache.xerces.internal.xs.datatypes.XSDateTime
                                    isNormalized(): boolean
                                    getXMLGregorianCalendar(): javax.xml.datatype.XMLGregorianCalendar
                                    getDuration(): javax.xml.datatype.Duration
                                }
                                interface XSDecimal {
                                    getBigDecimal(): java.math.BigDecimal
                                    getBigInteger(): java.math.BigInteger
                                    getLong(): long
                                    getInt(): int
                                    getShort(): short
                                    getByte(): byte
                                }
                                interface XSDouble {
                                    getValue(): double
                                }
                                interface XSDouble$$Lambda {
                                    (): double
                                }
                                interface XSFloat {
                                    getValue(): float
                                }
                                interface XSFloat$$Lambda {
                                    (): float
                                }
                                interface XSQName {
                                    getXNIQName(): com.sun.org.apache.xerces.internal.xni.QName
                                    getJAXPQName(): javax.xml.namespace.QName
                                }
                            }
                            interface AttributePSVI extends com.sun.org.apache.xerces.internal.xs.ItemPSVI {
                                getAttributeDeclaration(): com.sun.org.apache.xerces.internal.xs.XSAttributeDeclaration
                            }
                            interface ElementPSVI extends com.sun.org.apache.xerces.internal.xs.ItemPSVI {
                                getElementDeclaration(): com.sun.org.apache.xerces.internal.xs.XSElementDeclaration
                                getNotation(): com.sun.org.apache.xerces.internal.xs.XSNotationDeclaration
                                getNil(): boolean
                                getSchemaInformation(): com.sun.org.apache.xerces.internal.xs.XSModel
                            }
                            interface ItemPSVI {
                                VALIDITY_NOTKNOWN: short
                                VALIDITY_INVALID: short
                                VALIDITY_VALID: short
                                VALIDATION_NONE: short
                                VALIDATION_PARTIAL: short
                                VALIDATION_FULL: short
                                getValidationContext(): string
                                getValidity(): short
                                getValidationAttempted(): short
                                getErrorCodes(): com.sun.org.apache.xerces.internal.xs.StringList
                                getSchemaNormalizedValue(): string
                                getActualNormalizedValue(): java.lang.Object
                                getActualNormalizedValueType(): short
                                getItemValueTypes(): com.sun.org.apache.xerces.internal.xs.ShortList
                                getTypeDefinition(): com.sun.org.apache.xerces.internal.xs.XSTypeDefinition
                                getMemberTypeDefinition(): com.sun.org.apache.xerces.internal.xs.XSSimpleTypeDefinition
                                getSchemaDefault(): string
                                getIsSchemaSpecified(): boolean
                            }
                            interface LSInputList extends java.util.List {
                                getLength(): int
                                item(arg0: int): org.w3c.dom.ls.LSInput
                            }
                            interface PSVIProvider {
                                getElementPSVI(): com.sun.org.apache.xerces.internal.xs.ElementPSVI
                                getAttributePSVI(arg0: int): com.sun.org.apache.xerces.internal.xs.AttributePSVI
                                getAttributePSVIByName(arg0: java.lang.String | string, arg1: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.AttributePSVI
                            }
                            interface ShortList extends java.util.List {
                                getLength(): int
                                contains(arg0: short): boolean
                                item(arg0: int): short
                            }
                            interface StringList extends java.util.List {
                                getLength(): int
                                contains(arg0: java.lang.String | string): boolean
                                item(arg0: int): string
                            }
                            interface XSAnnotation extends com.sun.org.apache.xerces.internal.xs.XSObject {
                                W3C_DOM_ELEMENT: short
                                SAX_CONTENTHANDLER: short
                                W3C_DOM_DOCUMENT: short
                                writeAnnotation(arg0: java.lang.Object, arg1: short): boolean
                                getAnnotationString(): string
                            }
                            interface XSAttributeDeclaration extends com.sun.org.apache.xerces.internal.xs.XSObject {
                                getTypeDefinition(): com.sun.org.apache.xerces.internal.xs.XSSimpleTypeDefinition
                                getScope(): short
                                getEnclosingCTDefinition(): com.sun.org.apache.xerces.internal.xs.XSComplexTypeDefinition
                                getConstraintType(): short
                                getConstraintValue(): string
                                getActualVC(): java.lang.Object
                                getActualVCType(): short
                                getItemValueTypes(): com.sun.org.apache.xerces.internal.xs.ShortList
                                getAnnotation(): com.sun.org.apache.xerces.internal.xs.XSAnnotation
                                getAnnotations(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                            }
                            interface XSAttributeGroupDefinition extends com.sun.org.apache.xerces.internal.xs.XSObject {
                                getAttributeUses(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                                getAttributeWildcard(): com.sun.org.apache.xerces.internal.xs.XSWildcard
                                getAnnotation(): com.sun.org.apache.xerces.internal.xs.XSAnnotation
                                getAnnotations(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                            }
                            interface XSAttributeUse extends com.sun.org.apache.xerces.internal.xs.XSObject {
                                getRequired(): boolean
                                getAttrDeclaration(): com.sun.org.apache.xerces.internal.xs.XSAttributeDeclaration
                                getConstraintType(): short
                                getConstraintValue(): string
                                getActualVC(): java.lang.Object
                                getActualVCType(): short
                                getItemValueTypes(): com.sun.org.apache.xerces.internal.xs.ShortList
                                getAnnotations(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                            }
                            interface XSComplexTypeDefinition extends com.sun.org.apache.xerces.internal.xs.XSTypeDefinition {
                                CONTENTTYPE_EMPTY: short
                                CONTENTTYPE_SIMPLE: short
                                CONTENTTYPE_ELEMENT: short
                                CONTENTTYPE_MIXED: short
                                getDerivationMethod(): short
                                getAbstract(): boolean
                                getAttributeUses(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                                getAttributeWildcard(): com.sun.org.apache.xerces.internal.xs.XSWildcard
                                getContentType(): short
                                getSimpleType(): com.sun.org.apache.xerces.internal.xs.XSSimpleTypeDefinition
                                getParticle(): com.sun.org.apache.xerces.internal.xs.XSParticle
                                isProhibitedSubstitution(arg0: short): boolean
                                getProhibitedSubstitutions(): short
                                getAnnotations(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                            }
                            interface XSConstants {
                                ATTRIBUTE_DECLARATION: short
                                ELEMENT_DECLARATION: short
                                TYPE_DEFINITION: short
                                ATTRIBUTE_USE: short
                                ATTRIBUTE_GROUP: short
                                MODEL_GROUP_DEFINITION: short
                                MODEL_GROUP: short
                                PARTICLE: short
                                WILDCARD: short
                                IDENTITY_CONSTRAINT: short
                                NOTATION_DECLARATION: short
                                ANNOTATION: short
                                FACET: short
                                MULTIVALUE_FACET: short
                                DERIVATION_NONE: short
                                DERIVATION_EXTENSION: short
                                DERIVATION_RESTRICTION: short
                                DERIVATION_SUBSTITUTION: short
                                DERIVATION_UNION: short
                                DERIVATION_LIST: short
                                DERIVATION_EXTENSION_RESTRICTION_SUBSTITION: short
                                DERIVATION_ALL: short
                                SCOPE_ABSENT: short
                                SCOPE_GLOBAL: short
                                SCOPE_LOCAL: short
                                VC_NONE: short
                                VC_DEFAULT: short
                                VC_FIXED: short
                                ANYSIMPLETYPE_DT: short
                                STRING_DT: short
                                BOOLEAN_DT: short
                                DECIMAL_DT: short
                                FLOAT_DT: short
                                DOUBLE_DT: short
                                DURATION_DT: short
                                DATETIME_DT: short
                                TIME_DT: short
                                DATE_DT: short
                                GYEARMONTH_DT: short
                                GYEAR_DT: short
                                GMONTHDAY_DT: short
                                GDAY_DT: short
                                GMONTH_DT: short
                                HEXBINARY_DT: short
                                BASE64BINARY_DT: short
                                ANYURI_DT: short
                                QNAME_DT: short
                                NOTATION_DT: short
                                NORMALIZEDSTRING_DT: short
                                TOKEN_DT: short
                                LANGUAGE_DT: short
                                NMTOKEN_DT: short
                                NAME_DT: short
                                NCNAME_DT: short
                                ID_DT: short
                                IDREF_DT: short
                                ENTITY_DT: short
                                INTEGER_DT: short
                                NONPOSITIVEINTEGER_DT: short
                                NEGATIVEINTEGER_DT: short
                                LONG_DT: short
                                INT_DT: short
                                SHORT_DT: short
                                BYTE_DT: short
                                NONNEGATIVEINTEGER_DT: short
                                UNSIGNEDLONG_DT: short
                                UNSIGNEDINT_DT: short
                                UNSIGNEDSHORT_DT: short
                                UNSIGNEDBYTE_DT: short
                                POSITIVEINTEGER_DT: short
                                LISTOFUNION_DT: short
                                LIST_DT: short
                                UNAVAILABLE_DT: short
                            }
                            interface XSElementDeclaration extends com.sun.org.apache.xerces.internal.xs.XSTerm {
                                getTypeDefinition(): com.sun.org.apache.xerces.internal.xs.XSTypeDefinition
                                getScope(): short
                                getEnclosingCTDefinition(): com.sun.org.apache.xerces.internal.xs.XSComplexTypeDefinition
                                getConstraintType(): short
                                getConstraintValue(): string
                                getActualVC(): java.lang.Object
                                getActualVCType(): short
                                getItemValueTypes(): com.sun.org.apache.xerces.internal.xs.ShortList
                                getNillable(): boolean
                                getIdentityConstraints(): com.sun.org.apache.xerces.internal.xs.XSNamedMap
                                getSubstitutionGroupAffiliation(): com.sun.org.apache.xerces.internal.xs.XSElementDeclaration
                                isSubstitutionGroupExclusion(arg0: short): boolean
                                getSubstitutionGroupExclusions(): short
                                isDisallowedSubstitution(arg0: short): boolean
                                getDisallowedSubstitutions(): short
                                getAbstract(): boolean
                                getAnnotation(): com.sun.org.apache.xerces.internal.xs.XSAnnotation
                                getAnnotations(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                            }
                            class XSException extends java.lang.RuntimeException {
                                public code: short
                                public static NOT_SUPPORTED_ERR: short
                                public static INDEX_SIZE_ERR: short
                                public constructor(arg0: short, arg1: java.lang.String | string)
                                public static class: java.lang.Class<any>
                            }
                            interface XSFacet extends com.sun.org.apache.xerces.internal.xs.XSObject {
                                getFacetKind(): short
                                getLexicalFacetValue(): string
                                getFixed(): boolean
                                getAnnotation(): com.sun.org.apache.xerces.internal.xs.XSAnnotation
                                getAnnotations(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                            }
                            interface XSIDCDefinition extends com.sun.org.apache.xerces.internal.xs.XSObject {
                                IC_KEY: short
                                IC_KEYREF: short
                                IC_UNIQUE: short
                                getCategory(): short
                                getSelectorStr(): string
                                getFieldStrs(): com.sun.org.apache.xerces.internal.xs.StringList
                                getRefKey(): com.sun.org.apache.xerces.internal.xs.XSIDCDefinition
                                getAnnotations(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                            }
                            interface XSImplementation {
                                getRecognizedVersions(): com.sun.org.apache.xerces.internal.xs.StringList
                                createXSLoader(arg0: com.sun.org.apache.xerces.internal.xs.StringList): com.sun.org.apache.xerces.internal.xs.XSLoader
                            }
                            interface XSLoader {
                                getConfig(): org.w3c.dom.DOMConfiguration
                                loadURIList(arg0: com.sun.org.apache.xerces.internal.xs.StringList): com.sun.org.apache.xerces.internal.xs.XSModel
                                loadInputList(arg0: com.sun.org.apache.xerces.internal.xs.LSInputList): com.sun.org.apache.xerces.internal.xs.XSModel
                                loadURI(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSModel
                                load(arg0: org.w3c.dom.ls.LSInput): com.sun.org.apache.xerces.internal.xs.XSModel
                            }
                            interface XSModel {
                                getNamespaces(): com.sun.org.apache.xerces.internal.xs.StringList
                                getNamespaceItems(): com.sun.org.apache.xerces.internal.xs.XSNamespaceItemList
                                getComponents(arg0: short): com.sun.org.apache.xerces.internal.xs.XSNamedMap
                                getComponentsByNamespace(arg0: short, arg1: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSNamedMap
                                getAnnotations(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                                getElementDeclaration(arg0: java.lang.String | string, arg1: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSElementDeclaration
                                getAttributeDeclaration(arg0: java.lang.String | string, arg1: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSAttributeDeclaration
                                getTypeDefinition(arg0: java.lang.String | string, arg1: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSTypeDefinition
                                getAttributeGroup(arg0: java.lang.String | string, arg1: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSAttributeGroupDefinition
                                getModelGroupDefinition(arg0: java.lang.String | string, arg1: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSModelGroupDefinition
                                getNotationDeclaration(arg0: java.lang.String | string, arg1: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSNotationDeclaration
                                getSubstitutionGroup(arg0: com.sun.org.apache.xerces.internal.xs.XSElementDeclaration): com.sun.org.apache.xerces.internal.xs.XSObjectList
                            }
                            interface XSModelGroup extends com.sun.org.apache.xerces.internal.xs.XSTerm {
                                COMPOSITOR_SEQUENCE: short
                                COMPOSITOR_CHOICE: short
                                COMPOSITOR_ALL: short
                                getCompositor(): short
                                getParticles(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                                getAnnotation(): com.sun.org.apache.xerces.internal.xs.XSAnnotation
                                getAnnotations(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                            }
                            interface XSModelGroupDefinition extends com.sun.org.apache.xerces.internal.xs.XSObject {
                                getModelGroup(): com.sun.org.apache.xerces.internal.xs.XSModelGroup
                                getAnnotation(): com.sun.org.apache.xerces.internal.xs.XSAnnotation
                                getAnnotations(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                            }
                            interface XSMultiValueFacet extends com.sun.org.apache.xerces.internal.xs.XSObject {
                                getFacetKind(): short
                                getLexicalFacetValues(): com.sun.org.apache.xerces.internal.xs.StringList
                                getAnnotations(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                            }
                            interface XSNamedMap extends java.util.Map {
                                getLength(): int
                                item(arg0: int): com.sun.org.apache.xerces.internal.xs.XSObject
                                itemByName(arg0: java.lang.String | string, arg1: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSObject
                            }
                            interface XSNamespaceItem {
                                getSchemaNamespace(): string
                                getComponents(arg0: short): com.sun.org.apache.xerces.internal.xs.XSNamedMap
                                getAnnotations(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                                getElementDeclaration(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSElementDeclaration
                                getAttributeDeclaration(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSAttributeDeclaration
                                getTypeDefinition(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSTypeDefinition
                                getAttributeGroup(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSAttributeGroupDefinition
                                getModelGroupDefinition(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSModelGroupDefinition
                                getNotationDeclaration(arg0: java.lang.String | string): com.sun.org.apache.xerces.internal.xs.XSNotationDeclaration
                                getDocumentLocations(): com.sun.org.apache.xerces.internal.xs.StringList
                            }
                            interface XSNamespaceItemList extends java.util.List {
                                getLength(): int
                                item(arg0: int): com.sun.org.apache.xerces.internal.xs.XSNamespaceItem
                            }
                            interface XSNotationDeclaration extends com.sun.org.apache.xerces.internal.xs.XSObject {
                                getSystemId(): string
                                getPublicId(): string
                                getAnnotation(): com.sun.org.apache.xerces.internal.xs.XSAnnotation
                                getAnnotations(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                            }
                            interface XSObject {
                                getType(): short
                                getName(): string
                                getNamespace(): string
                                getNamespaceItem(): com.sun.org.apache.xerces.internal.xs.XSNamespaceItem
                            }
                            interface XSObjectList extends java.util.List {
                                getLength(): int
                                item(arg0: int): com.sun.org.apache.xerces.internal.xs.XSObject
                            }
                            interface XSParticle extends com.sun.org.apache.xerces.internal.xs.XSObject {
                                getMinOccurs(): int
                                getMaxOccurs(): int
                                getMaxOccursUnbounded(): boolean
                                getTerm(): com.sun.org.apache.xerces.internal.xs.XSTerm
                                getAnnotations(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                            }
                            interface XSSimpleTypeDefinition extends com.sun.org.apache.xerces.internal.xs.XSTypeDefinition {
                                VARIETY_ABSENT: short
                                VARIETY_ATOMIC: short
                                VARIETY_LIST: short
                                VARIETY_UNION: short
                                FACET_NONE: short
                                FACET_LENGTH: short
                                FACET_MINLENGTH: short
                                FACET_MAXLENGTH: short
                                FACET_PATTERN: short
                                FACET_WHITESPACE: short
                                FACET_MAXINCLUSIVE: short
                                FACET_MAXEXCLUSIVE: short
                                FACET_MINEXCLUSIVE: short
                                FACET_MININCLUSIVE: short
                                FACET_TOTALDIGITS: short
                                FACET_FRACTIONDIGITS: short
                                FACET_ENUMERATION: short
                                ORDERED_FALSE: short
                                ORDERED_PARTIAL: short
                                ORDERED_TOTAL: short
                                getVariety(): short
                                getPrimitiveType(): com.sun.org.apache.xerces.internal.xs.XSSimpleTypeDefinition
                                getBuiltInKind(): short
                                getItemType(): com.sun.org.apache.xerces.internal.xs.XSSimpleTypeDefinition
                                getMemberTypes(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                                getDefinedFacets(): short
                                isDefinedFacet(arg0: short): boolean
                                getFixedFacets(): short
                                isFixedFacet(arg0: short): boolean
                                getLexicalFacetValue(arg0: short): string
                                getLexicalEnumeration(): com.sun.org.apache.xerces.internal.xs.StringList
                                getLexicalPattern(): com.sun.org.apache.xerces.internal.xs.StringList
                                getOrdered(): short
                                getFinite(): boolean
                                getBounded(): boolean
                                getNumeric(): boolean
                                getFacets(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                                getMultiValueFacets(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                                getAnnotations(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                            }
                            interface XSTerm extends com.sun.org.apache.xerces.internal.xs.XSObject {
                            }
                            interface XSTypeDefinition extends com.sun.org.apache.xerces.internal.xs.XSObject {
                                COMPLEX_TYPE: short
                                SIMPLE_TYPE: short
                                getTypeCategory(): short
                                getBaseType(): com.sun.org.apache.xerces.internal.xs.XSTypeDefinition
                                isFinal(arg0: short): boolean
                                getFinal(): short
                                getAnonymous(): boolean
                                derivedFromType(arg0: com.sun.org.apache.xerces.internal.xs.XSTypeDefinition, arg1: short): boolean
                                derivedFrom(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: short): boolean
                            }
                            interface XSWildcard extends com.sun.org.apache.xerces.internal.xs.XSTerm {
                                NSCONSTRAINT_ANY: short
                                NSCONSTRAINT_NOT: short
                                NSCONSTRAINT_LIST: short
                                PC_STRICT: short
                                PC_SKIP: short
                                PC_LAX: short
                                getConstraintType(): short
                                getNsConstraintList(): com.sun.org.apache.xerces.internal.xs.StringList
                                getProcessContents(): short
                                getAnnotation(): com.sun.org.apache.xerces.internal.xs.XSAnnotation
                                getAnnotations(): com.sun.org.apache.xerces.internal.xs.XSObjectList
                            }
                        }
                    }
                }
                namespace xml {
                    namespace internal {
                        namespace dtm {
                            namespace ref {
                                namespace dom2dtm {
                                    class DOM2DTM extends com.sun.org.apache.xml.internal.dtm.ref.DTMDefaultBaseIterators {
                                        protected m_nodes: java.util.Vector
                                        public constructor(arg0: com.sun.org.apache.xml.internal.dtm.DTMManager, arg1: javax.xml.transform.dom.DOMSource, arg2: int, arg3: com.sun.org.apache.xml.internal.dtm.DTMWSFilter, arg4: com.sun.org.apache.xml.internal.utils.XMLStringFactory, arg5: boolean)
                                        protected addNode(arg0: org.w3c.dom.Node, arg1: int, arg2: int, arg3: int): int
                                        public getNumberOfNodes(): int
                                        protected nextNode(): boolean
                                        public getNode(arg0: int): org.w3c.dom.Node
                                        protected lookupNode(arg0: int): org.w3c.dom.Node
                                        protected getNextNodeIdentity(arg0: int): int
                                        public getHandleOfNode(arg0: org.w3c.dom.Node): int
                                        public getAttributeNode(arg0: int, arg1: java.lang.String | string, arg2: java.lang.String | string): int
                                        public getStringValue(arg0: int): com.sun.org.apache.xml.internal.utils.XMLString
                                        public isWhitespace(arg0: int): boolean
                                        protected static getNodeData(arg0: org.w3c.dom.Node, arg1: com.sun.org.apache.xml.internal.utils.FastStringBuffer): void
                                        public getNodeName(arg0: int): string
                                        public getNodeNameX(arg0: int): string
                                        public getLocalName(arg0: int): string
                                        public getPrefix(arg0: int): string
                                        public getNamespaceURI(arg0: int): string
                                        public getNodeValue(arg0: int): string
                                        public getDocumentTypeDeclarationSystemIdentifier(): string
                                        public getDocumentTypeDeclarationPublicIdentifier(): string
                                        public getElementById(arg0: java.lang.String | string): int
                                        public getUnparsedEntityURI(arg0: java.lang.String | string): string
                                        public isAttributeSpecified(arg0: int): boolean
                                        public setIncrementalSAXSource(arg0: com.sun.org.apache.xml.internal.dtm.ref.IncrementalSAXSource): void
                                        public getContentHandler(): org.xml.sax.ContentHandler
                                        public getLexicalHandler(): org.xml.sax.ext.LexicalHandler
                                        public getEntityResolver(): org.xml.sax.EntityResolver
                                        public getDTDHandler(): org.xml.sax.DTDHandler
                                        public getErrorHandler(): org.xml.sax.ErrorHandler
                                        public getDeclHandler(): org.xml.sax.ext.DeclHandler
                                        public needsTwoThreads(): boolean
                                        public dispatchCharactersEvents(arg0: int, arg1: org.xml.sax.ContentHandler, arg2: boolean): void
                                        protected static dispatchNodeData(arg0: org.w3c.dom.Node, arg1: org.xml.sax.ContentHandler, arg2: int): void
                                        public dispatchToEvents(arg0: int, arg1: org.xml.sax.ContentHandler): void
                                        public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                        public getSourceLocatorFor(arg0: int): javax.xml.transform.SourceLocator
                                        public static class: java.lang.Class<any>
                                    }
                                    class DOM2DTMdefaultNamespaceDeclarationNode implements org.w3c.dom.Attr , org.w3c.dom.TypeInfo {
                                        public getNodeName(): string
                                        public getName(): string
                                        public getNamespaceURI(): string
                                        public getPrefix(): string
                                        public getLocalName(): string
                                        public getNodeValue(): string
                                        public getValue(): string
                                        public getOwnerElement(): org.w3c.dom.Element
                                        public isSupported(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                                        public hasChildNodes(): boolean
                                        public hasAttributes(): boolean
                                        public getParentNode(): org.w3c.dom.Node
                                        public getFirstChild(): org.w3c.dom.Node
                                        public getLastChild(): org.w3c.dom.Node
                                        public getPreviousSibling(): org.w3c.dom.Node
                                        public getNextSibling(): org.w3c.dom.Node
                                        public getSpecified(): boolean
                                        public normalize(): void
                                        public getChildNodes(): org.w3c.dom.NodeList
                                        public getAttributes(): org.w3c.dom.NamedNodeMap
                                        public getNodeType(): short
                                        public setNodeValue(arg0: java.lang.String | string): void
                                        public setValue(arg0: java.lang.String | string): void
                                        public setPrefix(arg0: java.lang.String | string): void
                                        public insertBefore(arg0: org.w3c.dom.Node, arg1: org.w3c.dom.Node): org.w3c.dom.Node
                                        public replaceChild(arg0: org.w3c.dom.Node, arg1: org.w3c.dom.Node): org.w3c.dom.Node
                                        public appendChild(arg0: org.w3c.dom.Node): org.w3c.dom.Node
                                        public removeChild(arg0: org.w3c.dom.Node): org.w3c.dom.Node
                                        public getOwnerDocument(): org.w3c.dom.Document
                                        public cloneNode(arg0: boolean): org.w3c.dom.Node
                                        public getHandleOfNode(): int
                                        public getTypeName(): string
                                        public getTypeNamespace(): string
                                        public isDerivedFrom(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: int): boolean
                                        public getSchemaTypeInfo(): org.w3c.dom.TypeInfo
                                        public isId(): boolean
                                        public setUserData(arg0: java.lang.String | string, arg1: java.lang.Object, arg2: org.w3c.dom.UserDataHandler): java.lang.Object
                                        public getUserData(arg0: java.lang.String | string): java.lang.Object
                                        public getFeature(arg0: java.lang.String | string, arg1: java.lang.String | string): java.lang.Object
                                        public isEqualNode(arg0: org.w3c.dom.Node): boolean
                                        public lookupNamespaceURI(arg0: java.lang.String | string): string
                                        public isDefaultNamespace(arg0: java.lang.String | string): boolean
                                        public lookupPrefix(arg0: java.lang.String | string): string
                                        public isSameNode(arg0: org.w3c.dom.Node): boolean
                                        public setTextContent(arg0: java.lang.String | string): void
                                        public getTextContent(): string
                                        public compareDocumentPosition(arg0: org.w3c.dom.Node): short
                                        public getBaseURI(): string
                                        public static class: java.lang.Class<any>
                                    }
                                }
                                namespace sax2dtm {
                                    class SAX2DTM extends com.sun.org.apache.xml.internal.dtm.ref.DTMDefaultBaseIterators implements org.xml.sax.EntityResolver , org.xml.sax.DTDHandler , org.xml.sax.ContentHandler , org.xml.sax.ErrorHandler , org.xml.sax.ext.DeclHandler , org.xml.sax.ext.LexicalHandler {
                                        protected m_chars: com.sun.org.apache.xml.internal.utils.FastStringBuffer
                                        protected m_data: com.sun.org.apache.xml.internal.utils.SuballocatedIntVector
                                        protected m_parents: com.sun.org.apache.xml.internal.utils.IntStack
                                        protected m_previous: int
                                        protected m_prefixMappings: java.util.Vector
                                        protected m_contextIndexes: com.sun.org.apache.xml.internal.utils.IntStack
                                        protected m_textType: int
                                        protected m_coalescedTextType: int
                                        protected m_locator: org.xml.sax.Locator
                                        protected m_insideDTD: boolean
                                        protected m_walker: com.sun.org.apache.xml.internal.dtm.ref.DTMTreeWalker
                                        protected m_valuesOrPrefixes: com.sun.org.apache.xml.internal.dtm.ref.DTMStringPool
                                        protected m_endDocumentOccured: boolean
                                        protected m_dataOrQName: com.sun.org.apache.xml.internal.utils.SuballocatedIntVector
                                        protected m_idAttributes: java.util.Map<java.lang.String, java.lang.Integer>
                                        protected m_textPendingStart: int
                                        protected m_useSourceLocationProperty: boolean
                                        protected m_sourceSystemId: com.sun.org.apache.xml.internal.utils.StringVector
                                        protected m_sourceLine: com.sun.org.apache.xml.internal.utils.IntVector
                                        protected m_sourceColumn: com.sun.org.apache.xml.internal.utils.IntVector
                                        public constructor(arg0: com.sun.org.apache.xml.internal.dtm.DTMManager, arg1: javax.xml.transform.Source, arg2: int, arg3: com.sun.org.apache.xml.internal.dtm.DTMWSFilter, arg4: com.sun.org.apache.xml.internal.utils.XMLStringFactory, arg5: boolean)
                                        public constructor(arg0: com.sun.org.apache.xml.internal.dtm.DTMManager, arg1: javax.xml.transform.Source, arg2: int, arg3: com.sun.org.apache.xml.internal.dtm.DTMWSFilter, arg4: com.sun.org.apache.xml.internal.utils.XMLStringFactory, arg5: boolean, arg6: int, arg7: boolean, arg8: boolean)
                                        public setUseSourceLocation(arg0: boolean): void
                                        protected _dataOrQName(arg0: int): int
                                        public clearCoRoutine(): void
                                        public clearCoRoutine(arg0: boolean): void
                                        public setIncrementalSAXSource(arg0: com.sun.org.apache.xml.internal.dtm.ref.IncrementalSAXSource): void
                                        public getContentHandler(): org.xml.sax.ContentHandler
                                        public getLexicalHandler(): org.xml.sax.ext.LexicalHandler
                                        public getEntityResolver(): org.xml.sax.EntityResolver
                                        public getDTDHandler(): org.xml.sax.DTDHandler
                                        public getErrorHandler(): org.xml.sax.ErrorHandler
                                        public getDeclHandler(): org.xml.sax.ext.DeclHandler
                                        public needsTwoThreads(): boolean
                                        public dispatchCharactersEvents(arg0: int, arg1: org.xml.sax.ContentHandler, arg2: boolean): void
                                        public getNodeName(arg0: int): string
                                        public getNodeNameX(arg0: int): string
                                        public isAttributeSpecified(arg0: int): boolean
                                        public getDocumentTypeDeclarationSystemIdentifier(): string
                                        protected getNextNodeIdentity(arg0: int): int
                                        public dispatchToEvents(arg0: int, arg1: org.xml.sax.ContentHandler): void
                                        public getNumberOfNodes(): int
                                        protected nextNode(): boolean
                                        protected addNode(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: boolean): int
                                        protected addNewDTMID(arg0: int): void
                                        public migrateTo(arg0: com.sun.org.apache.xml.internal.dtm.DTMManager): void
                                        protected setSourceLocation(): void
                                        public getNodeValue(arg0: int): string
                                        public getLocalName(arg0: int): string
                                        public getUnparsedEntityURI(arg0: java.lang.String | string): string
                                        public getPrefix(arg0: int): string
                                        public getAttributeNode(arg0: int, arg1: java.lang.String | string, arg2: java.lang.String | string): int
                                        public getDocumentTypeDeclarationPublicIdentifier(): string
                                        public getNamespaceURI(arg0: int): string
                                        public getStringValue(arg0: int): com.sun.org.apache.xml.internal.utils.XMLString
                                        public isWhitespace(arg0: int): boolean
                                        public getElementById(arg0: java.lang.String | string): int
                                        public getPrefix(arg0: java.lang.String | string, arg1: java.lang.String | string): string
                                        public getIdForNamespace(arg0: java.lang.String | string): int
                                        public getNamespaceURI(arg0: java.lang.String | string): string
                                        public setIDAttribute(arg0: java.lang.String | string, arg1: int): void
                                        protected charactersFlush(): void
                                        public resolveEntity(arg0: java.lang.String | string, arg1: java.lang.String | string): org.xml.sax.InputSource
                                        public notationDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                        public unparsedEntityDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string): void
                                        public setDocumentLocator(arg0: org.xml.sax.Locator): void
                                        public startDocument(): void
                                        public endDocument(): void
                                        public startPrefixMapping(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                        public endPrefixMapping(arg0: java.lang.String | string): void
                                        protected declAlreadyDeclared(arg0: java.lang.String | string): boolean
                                        public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: org.xml.sax.Attributes): void
                                        public endElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                        public characters(arg0: char[], arg1: int, arg2: int): void
                                        public ignorableWhitespace(arg0: char[], arg1: int, arg2: int): void
                                        public processingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                        public skippedEntity(arg0: java.lang.String | string): void
                                        public warning(arg0: org.xml.sax.SAXParseException): void
                                        public error(arg0: org.xml.sax.SAXParseException): void
                                        public fatalError(arg0: org.xml.sax.SAXParseException): void
                                        public elementDecl(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                        public attributeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string): void
                                        public internalEntityDecl(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                        public externalEntityDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                        public startDTD(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                        public endDTD(): void
                                        public startEntity(arg0: java.lang.String | string): void
                                        public endEntity(arg0: java.lang.String | string): void
                                        public startCDATA(): void
                                        public endCDATA(): void
                                        public comment(arg0: char[], arg1: int, arg2: int): void
                                        public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                        public getSourceLocatorFor(arg0: int): javax.xml.transform.SourceLocator
                                        public getFixedNames(arg0: int): string
                                        public static class: java.lang.Class<any>
                                    }
                                    class SAX2DTM2 extends com.sun.org.apache.xml.internal.dtm.ref.sax2dtm.SAX2DTM {
                                        protected m_extendedTypes: com.sun.org.apache.xml.internal.dtm.ref.ExtendedType[]
                                        protected m_values: java.util.Vector
                                        protected m_SHIFT: int
                                        protected m_MASK: int
                                        protected m_blocksize: int
                                        protected static TEXT_LENGTH_BITS: int
                                        protected static TEXT_OFFSET_BITS: int
                                        protected static TEXT_LENGTH_MAX: int
                                        protected static TEXT_OFFSET_MAX: int
                                        protected m_buildIdIndex: boolean
                                        public constructor(arg0: com.sun.org.apache.xml.internal.dtm.DTMManager, arg1: javax.xml.transform.Source, arg2: int, arg3: com.sun.org.apache.xml.internal.dtm.DTMWSFilter, arg4: com.sun.org.apache.xml.internal.utils.XMLStringFactory, arg5: boolean)
                                        public constructor(arg0: com.sun.org.apache.xml.internal.dtm.DTMManager, arg1: javax.xml.transform.Source, arg2: int, arg3: com.sun.org.apache.xml.internal.dtm.DTMWSFilter, arg4: com.sun.org.apache.xml.internal.utils.XMLStringFactory, arg5: boolean, arg6: int, arg7: boolean, arg8: boolean, arg9: boolean)
                                        public _exptype(arg0: int): int
                                        public _exptype2(arg0: int): int
                                        public _nextsib2(arg0: int): int
                                        public _firstch2(arg0: int): int
                                        public _parent2(arg0: int): int
                                        public _type2(arg0: int): int
                                        public getExpandedTypeID2(arg0: int): int
                                        public _exptype2Type(arg0: int): int
                                        public getIdForNamespace(arg0: java.lang.String | string): int
                                        public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: org.xml.sax.Attributes): void
                                        public endElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                        public comment(arg0: char[], arg1: int, arg2: int): void
                                        public startDocument(): void
                                        public endDocument(): void
                                        protected addNode(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: boolean): int
                                        protected charactersFlush(): void
                                        public processingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                        public getFirstAttribute(arg0: int): int
                                        protected getFirstAttributeIdentity(arg0: int): int
                                        protected getNextAttributeIdentity(arg0: int): int
                                        protected getTypedAttribute(arg0: int, arg1: int): int
                                        public getLocalName(arg0: int): string
                                        public getNodeNameX(arg0: int): string
                                        public getNodeName(arg0: int): string
                                        public getStringValue(arg0: int): com.sun.org.apache.xml.internal.utils.XMLString
                                        public getStringValueX(arg0: int): string
                                        public getStringValue(): string
                                        public dispatchCharactersEvents(arg0: int, arg1: org.xml.sax.ContentHandler, arg2: boolean): void
                                        public getNodeValue(arg0: int): string
                                        protected copyTextNode(arg0: int, arg1: com.sun.org.apache.xml.internal.serializer.SerializationHandler): void
                                        protected copyElement(arg0: int, arg1: int, arg2: com.sun.org.apache.xml.internal.serializer.SerializationHandler): string
                                        protected copyNS(arg0: int, arg1: com.sun.org.apache.xml.internal.serializer.SerializationHandler, arg2: boolean): void
                                        protected getNextNamespaceNode2(arg0: int): int
                                        protected copyAttributes(arg0: int, arg1: com.sun.org.apache.xml.internal.serializer.SerializationHandler): void
                                        protected copyAttribute(arg0: int, arg1: int, arg2: com.sun.org.apache.xml.internal.serializer.SerializationHandler): void
                                        public static class: java.lang.Class<any>
                                    }
                                    class SAX2RTFDTM extends com.sun.org.apache.xml.internal.dtm.ref.sax2dtm.SAX2DTM {
                                        public constructor(arg0: com.sun.org.apache.xml.internal.dtm.DTMManager, arg1: javax.xml.transform.Source, arg2: int, arg3: com.sun.org.apache.xml.internal.dtm.DTMWSFilter, arg4: com.sun.org.apache.xml.internal.utils.XMLStringFactory, arg5: boolean)
                                        public getDocument(): int
                                        public getDocumentRoot(arg0: int): int
                                        protected _documentRoot(arg0: int): int
                                        public startDocument(): void
                                        public endDocument(): void
                                        public pushRewindMark(): void
                                        public popRewindMark(): boolean
                                        public isTreeIncomplete(): boolean
                                        public static class: java.lang.Class<any>
                                    }
                                }
                                class ChunkedIntArray {
                                    public static class: java.lang.Class<any>
                                }
                                class CoroutineManager {
                                    public constructor()
                                    public co_joinCoroutineSet(arg0: int): int
                                    public co_entry_pause(arg0: int): java.lang.Object
                                    public co_resume(arg0: java.lang.Object, arg1: int, arg2: int): java.lang.Object
                                    public co_exit(arg0: int): void
                                    public co_exit_to(arg0: java.lang.Object, arg1: int, arg2: int): void
                                    public static class: java.lang.Class<any>
                                }
                                interface CoroutineParser {
                                    getParserCoroutineID(): int
                                    getCoroutineManager(): com.sun.org.apache.xml.internal.dtm.ref.CoroutineManager
                                    setContentHandler(arg0: org.xml.sax.ContentHandler): void
                                    setLexHandler(arg0: org.xml.sax.ext.LexicalHandler): void
                                    doParse(arg0: org.xml.sax.InputSource, arg1: int): java.lang.Object
                                    doMore(arg0: boolean, arg1: int): java.lang.Object
                                    doTerminate(arg0: int): void
                                    init(arg0: com.sun.org.apache.xml.internal.dtm.ref.CoroutineManager, arg1: int, arg2: org.xml.sax.XMLReader): void
                                }
                                class CustomStringPool extends com.sun.org.apache.xml.internal.dtm.ref.DTMStringPool {
                                    public static NULL: int
                                    public constructor()
                                    public removeAllElements(): void
                                    public indexToString(arg0: int): string
                                    public stringToIndex(arg0: java.lang.String | string): int
                                    public static class: java.lang.Class<any>
                                }
                                class DTMAxisIterNodeList extends com.sun.org.apache.xml.internal.dtm.ref.DTMNodeListBase {
                                    public constructor(arg0: com.sun.org.apache.xml.internal.dtm.DTM, arg1: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator)
                                    public getDTMAxisIterator(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public item(arg0: int): org.w3c.dom.Node
                                    public getLength(): int
                                    public static class: java.lang.Class<any>
                                }
                                abstract class DTMAxisIteratorBase implements com.sun.org.apache.xml.internal.dtm.DTMAxisIterator {
                                    protected _last: int
                                    protected _position: int
                                    protected _markedNode: int
                                    protected _startNode: int
                                    protected _includeSelf: boolean
                                    protected _isRestartable: boolean
                                    public constructor()
                                    public getStartNode(): int
                                    public reset(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public includeSelf(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getLast(): int
                                    public getPosition(): int
                                    public isReverse(): boolean
                                    public cloneIterator(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    protected returnNode(arg0: int): int
                                    protected resetPosition(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public isDocOrdered(): boolean
                                    public getAxis(): int
                                    public setRestartable(arg0: boolean): void
                                    public getNodeByPosition(arg0: int): int
                                    public static class: java.lang.Class<any>
                                }
                                class DTMChildIterNodeList extends com.sun.org.apache.xml.internal.dtm.ref.DTMNodeListBase {
                                    public constructor(arg0: com.sun.org.apache.xml.internal.dtm.DTM, arg1: int)
                                    public item(arg0: int): org.w3c.dom.Node
                                    public getLength(): int
                                    public static class: java.lang.Class<any>
                                }
                                abstract class DTMDefaultBase implements com.sun.org.apache.xml.internal.dtm.DTM {
                                    public static ROOTNODE: int
                                    protected m_size: int
                                    protected m_exptype: com.sun.org.apache.xml.internal.utils.SuballocatedIntVector
                                    protected m_firstch: com.sun.org.apache.xml.internal.utils.SuballocatedIntVector
                                    protected m_nextsib: com.sun.org.apache.xml.internal.utils.SuballocatedIntVector
                                    protected m_prevsib: com.sun.org.apache.xml.internal.utils.SuballocatedIntVector
                                    protected m_parent: com.sun.org.apache.xml.internal.utils.SuballocatedIntVector
                                    protected m_namespaceDeclSets: java.util.Vector
                                    protected m_namespaceDeclSetElements: com.sun.org.apache.xml.internal.utils.SuballocatedIntVector
                                    protected m_elemIndexes: int[][][]
                                    public static DEFAULT_BLOCKSIZE: int
                                    public static DEFAULT_NUMBLOCKS: int
                                    public static DEFAULT_NUMBLOCKS_SMALL: int
                                    protected static NOTPROCESSED: int
                                    public m_mgr: com.sun.org.apache.xml.internal.dtm.DTMManager
                                    protected m_mgrDefault: com.sun.org.apache.xml.internal.dtm.ref.DTMManagerDefault
                                    protected m_dtmIdent: com.sun.org.apache.xml.internal.utils.SuballocatedIntVector
                                    protected m_documentBaseURI: string
                                    protected m_wsfilter: com.sun.org.apache.xml.internal.dtm.DTMWSFilter
                                    protected m_shouldStripWS: boolean
                                    protected m_shouldStripWhitespaceStack: com.sun.org.apache.xml.internal.utils.BoolStack
                                    protected m_xstrf: com.sun.org.apache.xml.internal.utils.XMLStringFactory
                                    protected m_expandedNameTable: com.sun.org.apache.xml.internal.dtm.ref.ExpandedNameTable
                                    protected m_indexing: boolean
                                    protected m_traversers: com.sun.org.apache.xml.internal.dtm.DTMAxisTraverser[]
                                    public constructor(arg0: com.sun.org.apache.xml.internal.dtm.DTMManager, arg1: javax.xml.transform.Source, arg2: int, arg3: com.sun.org.apache.xml.internal.dtm.DTMWSFilter, arg4: com.sun.org.apache.xml.internal.utils.XMLStringFactory, arg5: boolean)
                                    public constructor(arg0: com.sun.org.apache.xml.internal.dtm.DTMManager, arg1: javax.xml.transform.Source, arg2: int, arg3: com.sun.org.apache.xml.internal.dtm.DTMWSFilter, arg4: com.sun.org.apache.xml.internal.utils.XMLStringFactory, arg5: boolean, arg6: int, arg7: boolean, arg8: boolean)
                                    protected ensureSizeOfIndex(arg0: int, arg1: int): void
                                    protected indexNode(arg0: int, arg1: int): void
                                    protected findGTE(arg0: int[], arg1: int, arg2: int, arg3: int): int
                                    protected getNextNodeIdentity(arg0: int): int
                                    protected nextNode(): boolean
                                    protected getNumberOfNodes(): int
                                    protected _type(arg0: int): short
                                    protected _exptype(arg0: int): int
                                    protected _level(arg0: int): int
                                    protected _firstch(arg0: int): int
                                    protected _nextsib(arg0: int): int
                                    protected _prevsib(arg0: int): int
                                    protected _parent(arg0: int): int
                                    public dumpDTM(arg0: java.io.OutputStream | java.io.OutputStream$$Lambda): void
                                    public dumpNode(arg0: int): string
                                    public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                    public hasChildNodes(arg0: int): boolean
                                    public makeNodeHandle(arg0: int): int
                                    public makeNodeIdentity(arg0: int): int
                                    public getFirstChild(arg0: int): int
                                    public getTypedFirstChild(arg0: int, arg1: int): int
                                    public getLastChild(arg0: int): int
                                    public getAttributeNode(arg0: int, arg1: java.lang.String | string, arg2: java.lang.String | string): int
                                    public getFirstAttribute(arg0: int): int
                                    protected getFirstAttributeIdentity(arg0: int): int
                                    protected getTypedAttribute(arg0: int, arg1: int): int
                                    public getNextSibling(arg0: int): int
                                    public getTypedNextSibling(arg0: int, arg1: int): int
                                    public getPreviousSibling(arg0: int): int
                                    public getNextAttribute(arg0: int): int
                                    protected getNextAttributeIdentity(arg0: int): int
                                    protected declareNamespaceInContext(arg0: int, arg1: int): void
                                    protected findNamespaceContext(arg0: int): com.sun.org.apache.xml.internal.utils.SuballocatedIntVector
                                    protected findInSortedSuballocatedIntVector(arg0: com.sun.org.apache.xml.internal.utils.SuballocatedIntVector, arg1: int): int
                                    public getFirstNamespaceNode(arg0: int, arg1: boolean): int
                                    public getNextNamespaceNode(arg0: int, arg1: int, arg2: boolean): int
                                    public getParent(arg0: int): int
                                    public getDocument(): int
                                    public getOwnerDocument(arg0: int): int
                                    public getDocumentRoot(arg0: int): int
                                    public getStringValue(arg0: int): com.sun.org.apache.xml.internal.utils.XMLString
                                    public getStringValueChunkCount(arg0: int): int
                                    public getStringValueChunk(arg0: int, arg1: int, arg2: int[]): char[]
                                    public getExpandedTypeID(arg0: int): int
                                    public getExpandedTypeID(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: int): int
                                    public getLocalNameFromExpandedNameID(arg0: int): string
                                    public getNamespaceFromExpandedNameID(arg0: int): string
                                    public getNamespaceType(arg0: int): int
                                    public getNodeName(arg0: int): string
                                    public getNodeNameX(arg0: int): string
                                    public getLocalName(arg0: int): string
                                    public getPrefix(arg0: int): string
                                    public getNamespaceURI(arg0: int): string
                                    public getNodeValue(arg0: int): string
                                    public getNodeType(arg0: int): short
                                    public getLevel(arg0: int): short
                                    public getNodeIdent(arg0: int): int
                                    public getNodeHandle(arg0: int): int
                                    public isSupported(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                                    public getDocumentBaseURI(): string
                                    public setDocumentBaseURI(arg0: java.lang.String | string): void
                                    public getDocumentSystemIdentifier(arg0: int): string
                                    public getDocumentEncoding(arg0: int): string
                                    public getDocumentStandalone(arg0: int): string
                                    public getDocumentVersion(arg0: int): string
                                    public getDocumentAllDeclarationsProcessed(): boolean
                                    public getDocumentTypeDeclarationSystemIdentifier(): string
                                    public getDocumentTypeDeclarationPublicIdentifier(): string
                                    public getElementById(arg0: java.lang.String | string): int
                                    public getUnparsedEntityURI(arg0: java.lang.String | string): string
                                    public supportsPreStripping(): boolean
                                    public isNodeAfter(arg0: int, arg1: int): boolean
                                    public isCharacterElementContentWhitespace(arg0: int): boolean
                                    public isDocumentAllDeclarationsProcessed(arg0: int): boolean
                                    public isAttributeSpecified(arg0: int): boolean
                                    public dispatchCharactersEvents(arg0: int, arg1: org.xml.sax.ContentHandler, arg2: boolean): void
                                    public dispatchToEvents(arg0: int, arg1: org.xml.sax.ContentHandler): void
                                    public getNode(arg0: int): org.w3c.dom.Node
                                    public appendChild(arg0: int, arg1: boolean, arg2: boolean): void
                                    public appendTextChild(arg0: java.lang.String | string): void
                                    protected error(arg0: java.lang.String | string): void
                                    protected getShouldStripWhitespace(): boolean
                                    protected pushShouldStripWhitespace(arg0: boolean): void
                                    protected popShouldStripWhitespace(): void
                                    protected setShouldStripWhitespace(arg0: boolean): void
                                    public documentRegistration(): void
                                    public documentRelease(): void
                                    public migrateTo(arg0: com.sun.org.apache.xml.internal.dtm.DTMManager): void
                                    public getManager(): com.sun.org.apache.xml.internal.dtm.DTMManager
                                    public getDTMIDs(): com.sun.org.apache.xml.internal.utils.SuballocatedIntVector
                                    public static class: java.lang.Class<any>
                                }
                                abstract class DTMDefaultBaseIterators extends com.sun.org.apache.xml.internal.dtm.ref.DTMDefaultBaseTraversers {
                                    public constructor(arg0: com.sun.org.apache.xml.internal.dtm.DTMManager, arg1: javax.xml.transform.Source, arg2: int, arg3: com.sun.org.apache.xml.internal.dtm.DTMWSFilter, arg4: com.sun.org.apache.xml.internal.utils.XMLStringFactory, arg5: boolean)
                                    public constructor(arg0: com.sun.org.apache.xml.internal.dtm.DTMManager, arg1: javax.xml.transform.Source, arg2: int, arg3: com.sun.org.apache.xml.internal.dtm.DTMWSFilter, arg4: com.sun.org.apache.xml.internal.utils.XMLStringFactory, arg5: boolean, arg6: int, arg7: boolean, arg8: boolean)
                                    public getTypedAxisIterator(arg0: int, arg1: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getAxisIterator(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public static class: java.lang.Class<any>
                                }
                                abstract class DTMDefaultBaseTraversers extends com.sun.org.apache.xml.internal.dtm.ref.DTMDefaultBase {
                                    public constructor(arg0: com.sun.org.apache.xml.internal.dtm.DTMManager, arg1: javax.xml.transform.Source, arg2: int, arg3: com.sun.org.apache.xml.internal.dtm.DTMWSFilter, arg4: com.sun.org.apache.xml.internal.utils.XMLStringFactory, arg5: boolean)
                                    public constructor(arg0: com.sun.org.apache.xml.internal.dtm.DTMManager, arg1: javax.xml.transform.Source, arg2: int, arg3: com.sun.org.apache.xml.internal.dtm.DTMWSFilter, arg4: com.sun.org.apache.xml.internal.utils.XMLStringFactory, arg5: boolean, arg6: int, arg7: boolean, arg8: boolean)
                                    public getAxisTraverser(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisTraverser
                                    public static class: java.lang.Class<any>
                                }
                                class DTMDocumentImpl implements com.sun.org.apache.xml.internal.dtm.DTM , org.xml.sax.ContentHandler , org.xml.sax.ext.LexicalHandler {
                                    protected static DOCHANDLE_SHIFT: byte
                                    protected static NODEHANDLE_MASK: int
                                    protected static DOCHANDLE_MASK: int
                                    protected m_currentNode: int
                                    protected m_documentBaseURI: string
                                    public constructor(arg0: com.sun.org.apache.xml.internal.dtm.DTMManager, arg1: int, arg2: com.sun.org.apache.xml.internal.dtm.DTMWSFilter, arg3: com.sun.org.apache.xml.internal.utils.XMLStringFactory)
                                    public setIncrementalSAXSource(arg0: com.sun.org.apache.xml.internal.dtm.ref.IncrementalSAXSource): void
                                    public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                    public setLocalNameTable(arg0: com.sun.org.apache.xml.internal.dtm.ref.DTMStringPool): void
                                    public getLocalNameTable(): com.sun.org.apache.xml.internal.dtm.ref.DTMStringPool
                                    public setNsNameTable(arg0: com.sun.org.apache.xml.internal.dtm.ref.DTMStringPool): void
                                    public getNsNameTable(): com.sun.org.apache.xml.internal.dtm.ref.DTMStringPool
                                    public setPrefixNameTable(arg0: com.sun.org.apache.xml.internal.dtm.ref.DTMStringPool): void
                                    public getPrefixNameTable(): com.sun.org.apache.xml.internal.dtm.ref.DTMStringPool
                                    public getContentHandler(): org.xml.sax.ContentHandler
                                    public getLexicalHandler(): org.xml.sax.ext.LexicalHandler
                                    public getEntityResolver(): org.xml.sax.EntityResolver
                                    public getDTDHandler(): org.xml.sax.DTDHandler
                                    public getErrorHandler(): org.xml.sax.ErrorHandler
                                    public getDeclHandler(): org.xml.sax.ext.DeclHandler
                                    public needsTwoThreads(): boolean
                                    public characters(arg0: char[], arg1: int, arg2: int): void
                                    public endDocument(): void
                                    public endElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                    public endPrefixMapping(arg0: java.lang.String | string): void
                                    public ignorableWhitespace(arg0: char[], arg1: int, arg2: int): void
                                    public processingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                    public setDocumentLocator(arg0: org.xml.sax.Locator): void
                                    public skippedEntity(arg0: java.lang.String | string): void
                                    public startDocument(): void
                                    public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: org.xml.sax.Attributes): void
                                    public startPrefixMapping(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                    public comment(arg0: char[], arg1: int, arg2: int): void
                                    public endCDATA(): void
                                    public endDTD(): void
                                    public endEntity(arg0: java.lang.String | string): void
                                    public startCDATA(): void
                                    public startDTD(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                    public startEntity(arg0: java.lang.String | string): void
                                    public hasChildNodes(arg0: int): boolean
                                    public getFirstChild(arg0: int): int
                                    public getLastChild(arg0: int): int
                                    public getAttributeNode(arg0: int, arg1: java.lang.String | string, arg2: java.lang.String | string): int
                                    public getFirstAttribute(arg0: int): int
                                    public getFirstNamespaceNode(arg0: int, arg1: boolean): int
                                    public getNextSibling(arg0: int): int
                                    public getPreviousSibling(arg0: int): int
                                    public getNextAttribute(arg0: int): int
                                    public getNextNamespaceNode(arg0: int, arg1: int, arg2: boolean): int
                                    public getNextDescendant(arg0: int, arg1: int): int
                                    public getNextFollowing(arg0: int, arg1: int): int
                                    public getNextPreceding(arg0: int, arg1: int): int
                                    public getParent(arg0: int): int
                                    public getDocumentRoot(): int
                                    public getDocument(): int
                                    public getOwnerDocument(arg0: int): int
                                    public getDocumentRoot(arg0: int): int
                                    public getStringValue(arg0: int): com.sun.org.apache.xml.internal.utils.XMLString
                                    public getStringValueChunkCount(arg0: int): int
                                    public getStringValueChunk(arg0: int, arg1: int, arg2: int[]): char[]
                                    public getExpandedTypeID(arg0: int): int
                                    public getExpandedTypeID(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: int): int
                                    public getLocalNameFromExpandedNameID(arg0: int): string
                                    public getNamespaceFromExpandedNameID(arg0: int): string
                                    public getNodeName(arg0: int): string
                                    public getNodeNameX(arg0: int): string
                                    public getLocalName(arg0: int): string
                                    public getPrefix(arg0: int): string
                                    public getNamespaceURI(arg0: int): string
                                    public getNodeValue(arg0: int): string
                                    public getNodeType(arg0: int): short
                                    public getLevel(arg0: int): short
                                    public isSupported(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                                    public getDocumentBaseURI(): string
                                    public setDocumentBaseURI(arg0: java.lang.String | string): void
                                    public getDocumentSystemIdentifier(arg0: int): string
                                    public getDocumentEncoding(arg0: int): string
                                    public getDocumentStandalone(arg0: int): string
                                    public getDocumentVersion(arg0: int): string
                                    public getDocumentAllDeclarationsProcessed(): boolean
                                    public getDocumentTypeDeclarationSystemIdentifier(): string
                                    public getDocumentTypeDeclarationPublicIdentifier(): string
                                    public getElementById(arg0: java.lang.String | string): int
                                    public getUnparsedEntityURI(arg0: java.lang.String | string): string
                                    public supportsPreStripping(): boolean
                                    public isNodeAfter(arg0: int, arg1: int): boolean
                                    public isCharacterElementContentWhitespace(arg0: int): boolean
                                    public isDocumentAllDeclarationsProcessed(arg0: int): boolean
                                    public isAttributeSpecified(arg0: int): boolean
                                    public dispatchCharactersEvents(arg0: int, arg1: org.xml.sax.ContentHandler, arg2: boolean): void
                                    public dispatchToEvents(arg0: int, arg1: org.xml.sax.ContentHandler): void
                                    public getNode(arg0: int): org.w3c.dom.Node
                                    public appendChild(arg0: int, arg1: boolean, arg2: boolean): void
                                    public appendTextChild(arg0: java.lang.String | string): void
                                    public getAxisTraverser(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisTraverser
                                    public getAxisIterator(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getTypedAxisIterator(arg0: int, arg1: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                    public getSourceLocatorFor(arg0: int): javax.xml.transform.SourceLocator
                                    public documentRegistration(): void
                                    public documentRelease(): void
                                    public migrateTo(arg0: com.sun.org.apache.xml.internal.dtm.DTMManager): void
                                    public static class: java.lang.Class<any>
                                }
                                class DTMManagerDefault extends com.sun.org.apache.xml.internal.dtm.DTMManager {
                                    protected m_dtms: com.sun.org.apache.xml.internal.dtm.DTM[]
                                    protected m_readerManager: com.sun.org.apache.xml.internal.utils.XMLReaderManager
                                    protected m_defaultHandler: org.xml.sax.helpers.DefaultHandler
                                    public addDTM(arg0: com.sun.org.apache.xml.internal.dtm.DTM, arg1: int): void
                                    public addDTM(arg0: com.sun.org.apache.xml.internal.dtm.DTM, arg1: int, arg2: int): void
                                    public getFirstFreeDTMID(): int
                                    public constructor()
                                    public getDTM(arg0: javax.xml.transform.Source, arg1: boolean, arg2: com.sun.org.apache.xml.internal.dtm.DTMWSFilter, arg3: boolean, arg4: boolean): com.sun.org.apache.xml.internal.dtm.DTM
                                    public getDTMHandleFromNode(arg0: org.w3c.dom.Node): int
                                    public getXMLReader(arg0: javax.xml.transform.Source): org.xml.sax.XMLReader
                                    public releaseXMLReader(arg0: org.xml.sax.XMLReader): void
                                    public getDTM(arg0: int): com.sun.org.apache.xml.internal.dtm.DTM
                                    public getDTMIdentity(arg0: com.sun.org.apache.xml.internal.dtm.DTM): int
                                    public release(arg0: com.sun.org.apache.xml.internal.dtm.DTM, arg1: boolean): boolean
                                    public createDocumentFragment(): com.sun.org.apache.xml.internal.dtm.DTM
                                    public createDTMIterator(arg0: int, arg1: com.sun.org.apache.xml.internal.dtm.DTMFilter, arg2: boolean): com.sun.org.apache.xml.internal.dtm.DTMIterator
                                    public createDTMIterator(arg0: java.lang.String | string, arg1: com.sun.org.apache.xml.internal.utils.PrefixResolver): com.sun.org.apache.xml.internal.dtm.DTMIterator
                                    public createDTMIterator(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMIterator
                                    public createDTMIterator(arg0: java.lang.Object, arg1: int): com.sun.org.apache.xml.internal.dtm.DTMIterator
                                    public getExpandedNameTable(arg0: com.sun.org.apache.xml.internal.dtm.DTM): com.sun.org.apache.xml.internal.dtm.ref.ExpandedNameTable
                                    public static class: java.lang.Class<any>
                                }
                                class DTMNamedNodeMap implements org.w3c.dom.NamedNodeMap {
                                    public constructor(arg0: com.sun.org.apache.xml.internal.dtm.DTM, arg1: int)
                                    public getLength(): int
                                    public getNamedItem(arg0: java.lang.String | string): org.w3c.dom.Node
                                    public item(arg0: int): org.w3c.dom.Node
                                    public setNamedItem(arg0: org.w3c.dom.Node): org.w3c.dom.Node
                                    public removeNamedItem(arg0: java.lang.String | string): org.w3c.dom.Node
                                    public getNamedItemNS(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.Node
                                    public setNamedItemNS(arg0: org.w3c.dom.Node): org.w3c.dom.Node
                                    public removeNamedItemNS(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.Node
                                    public static class: java.lang.Class<any>
                                }
                                class DTMNodeIterator implements org.w3c.dom.traversal.NodeIterator {
                                    public constructor(arg0: com.sun.org.apache.xml.internal.dtm.DTMIterator)
                                    public getDTMIterator(): com.sun.org.apache.xml.internal.dtm.DTMIterator
                                    public detach(): void
                                    public getExpandEntityReferences(): boolean
                                    public getFilter(): org.w3c.dom.traversal.NodeFilter
                                    public getRoot(): org.w3c.dom.Node
                                    public getWhatToShow(): int
                                    public nextNode(): org.w3c.dom.Node
                                    public previousNode(): org.w3c.dom.Node
                                    public static class: java.lang.Class<any>
                                }
                                class DTMNodeList extends com.sun.org.apache.xml.internal.dtm.ref.DTMNodeListBase {
                                    public constructor(arg0: com.sun.org.apache.xml.internal.dtm.DTMIterator)
                                    public getDTMIterator(): com.sun.org.apache.xml.internal.dtm.DTMIterator
                                    public item(arg0: int): org.w3c.dom.Node
                                    public getLength(): int
                                    public static class: java.lang.Class<any>
                                }
                                class DTMNodeListBase implements org.w3c.dom.NodeList {
                                    public constructor()
                                    public item(arg0: int): org.w3c.dom.Node
                                    public getLength(): int
                                    public static class: java.lang.Class<any>
                                }
                                class DTMNodeProxy implements org.w3c.dom.Node , org.w3c.dom.Document , org.w3c.dom.Text , org.w3c.dom.Element , org.w3c.dom.Attr , org.w3c.dom.ProcessingInstruction , org.w3c.dom.Comment , org.w3c.dom.DocumentFragment {
                                    public dtm: com.sun.org.apache.xml.internal.dtm.DTM
                                    protected fDocumentURI: string
                                    protected actualEncoding: string
                                    public constructor(arg0: com.sun.org.apache.xml.internal.dtm.DTM, arg1: int)
                                    public getDTM(): com.sun.org.apache.xml.internal.dtm.DTM
                                    public getDTMNodeNumber(): int
                                    public equals(arg0: org.w3c.dom.Node): boolean
                                    public equals(arg0: java.lang.Object): boolean
                                    public hashCode(): int
                                    public sameNodeAs(arg0: org.w3c.dom.Node): boolean
                                    public getNodeName(): string
                                    public getTarget(): string
                                    public getLocalName(): string
                                    public getPrefix(): string
                                    public setPrefix(arg0: java.lang.String | string): void
                                    public getNamespaceURI(): string
                                    public supports(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                                    public isSupported(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                                    public getNodeValue(): string
                                    public getStringValue(): string
                                    public setNodeValue(arg0: java.lang.String | string): void
                                    public getNodeType(): short
                                    public getParentNode(): org.w3c.dom.Node
                                    public getOwnerNode(): org.w3c.dom.Node
                                    public getChildNodes(): org.w3c.dom.NodeList
                                    public getFirstChild(): org.w3c.dom.Node
                                    public getLastChild(): org.w3c.dom.Node
                                    public getPreviousSibling(): org.w3c.dom.Node
                                    public getNextSibling(): org.w3c.dom.Node
                                    public getAttributes(): org.w3c.dom.NamedNodeMap
                                    public hasAttribute(arg0: java.lang.String | string): boolean
                                    public hasAttributeNS(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                                    public getOwnerDocument(): org.w3c.dom.Document
                                    public insertBefore(arg0: org.w3c.dom.Node, arg1: org.w3c.dom.Node): org.w3c.dom.Node
                                    public replaceChild(arg0: org.w3c.dom.Node, arg1: org.w3c.dom.Node): org.w3c.dom.Node
                                    public removeChild(arg0: org.w3c.dom.Node): org.w3c.dom.Node
                                    public appendChild(arg0: org.w3c.dom.Node): org.w3c.dom.Node
                                    public hasChildNodes(): boolean
                                    public cloneNode(arg0: boolean): org.w3c.dom.Node
                                    public getDoctype(): org.w3c.dom.DocumentType
                                    public getImplementation(): org.w3c.dom.DOMImplementation
                                    public getDocumentElement(): org.w3c.dom.Element
                                    public createElement(arg0: java.lang.String | string): org.w3c.dom.Element
                                    public createDocumentFragment(): org.w3c.dom.DocumentFragment
                                    public createTextNode(arg0: java.lang.String | string): org.w3c.dom.Text
                                    public createComment(arg0: java.lang.String | string): org.w3c.dom.Comment
                                    public createCDATASection(arg0: java.lang.String | string): org.w3c.dom.CDATASection
                                    public createProcessingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.ProcessingInstruction
                                    public createAttribute(arg0: java.lang.String | string): org.w3c.dom.Attr
                                    public createEntityReference(arg0: java.lang.String | string): org.w3c.dom.EntityReference
                                    public getElementsByTagName(arg0: java.lang.String | string): org.w3c.dom.NodeList
                                    public importNode(arg0: org.w3c.dom.Node, arg1: boolean): org.w3c.dom.Node
                                    public createElementNS(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.Element
                                    public createAttributeNS(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.Attr
                                    public getElementsByTagNameNS(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.NodeList
                                    public getElementById(arg0: java.lang.String | string): org.w3c.dom.Element
                                    public splitText(arg0: int): org.w3c.dom.Text
                                    public getData(): string
                                    public setData(arg0: java.lang.String | string): void
                                    public getLength(): int
                                    public substringData(arg0: int, arg1: int): string
                                    public appendData(arg0: java.lang.String | string): void
                                    public insertData(arg0: int, arg1: java.lang.String | string): void
                                    public deleteData(arg0: int, arg1: int): void
                                    public replaceData(arg0: int, arg1: int, arg2: java.lang.String | string): void
                                    public getTagName(): string
                                    public getAttribute(arg0: java.lang.String | string): string
                                    public setAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                    public removeAttribute(arg0: java.lang.String | string): void
                                    public getAttributeNode(arg0: java.lang.String | string): org.w3c.dom.Attr
                                    public setAttributeNode(arg0: org.w3c.dom.Attr): org.w3c.dom.Attr
                                    public removeAttributeNode(arg0: org.w3c.dom.Attr): org.w3c.dom.Attr
                                    public hasAttributes(): boolean
                                    public normalize(): void
                                    public getAttributeNS(arg0: java.lang.String | string, arg1: java.lang.String | string): string
                                    public setAttributeNS(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                    public removeAttributeNS(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                    public getAttributeNodeNS(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.Attr
                                    public setAttributeNodeNS(arg0: org.w3c.dom.Attr): org.w3c.dom.Attr
                                    public getName(): string
                                    public getSpecified(): boolean
                                    public getValue(): string
                                    public setValue(arg0: java.lang.String | string): void
                                    public getOwnerElement(): org.w3c.dom.Element
                                    public adoptNode(arg0: org.w3c.dom.Node): org.w3c.dom.Node
                                    public getInputEncoding(): string
                                    public setEncoding(arg0: java.lang.String | string): void
                                    public getStandalone(): boolean
                                    public setStandalone(arg0: boolean): void
                                    public getStrictErrorChecking(): boolean
                                    public setStrictErrorChecking(arg0: boolean): void
                                    public getVersion(): string
                                    public setVersion(arg0: java.lang.String | string): void
                                    public setUserData(arg0: java.lang.String | string, arg1: java.lang.Object, arg2: org.w3c.dom.UserDataHandler): java.lang.Object
                                    public getUserData(arg0: java.lang.String | string): java.lang.Object
                                    public getFeature(arg0: java.lang.String | string, arg1: java.lang.String | string): java.lang.Object
                                    public isEqualNode(arg0: org.w3c.dom.Node): boolean
                                    public lookupNamespaceURI(arg0: java.lang.String | string): string
                                    public isDefaultNamespace(arg0: java.lang.String | string): boolean
                                    public lookupPrefix(arg0: java.lang.String | string): string
                                    public isSameNode(arg0: org.w3c.dom.Node): boolean
                                    public setTextContent(arg0: java.lang.String | string): void
                                    public getTextContent(): string
                                    public compareDocumentPosition(arg0: org.w3c.dom.Node): short
                                    public getBaseURI(): string
                                    public renameNode(arg0: org.w3c.dom.Node, arg1: java.lang.String | string, arg2: java.lang.String | string): org.w3c.dom.Node
                                    public normalizeDocument(): void
                                    public getDomConfig(): org.w3c.dom.DOMConfiguration
                                    public setDocumentURI(arg0: java.lang.String | string): void
                                    public getDocumentURI(): string
                                    public getActualEncoding(): string
                                    public setActualEncoding(arg0: java.lang.String | string): void
                                    public replaceWholeText(arg0: java.lang.String | string): org.w3c.dom.Text
                                    public getWholeText(): string
                                    public isElementContentWhitespace(): boolean
                                    public setIdAttribute(arg0: boolean): void
                                    public setIdAttribute(arg0: java.lang.String | string, arg1: boolean): void
                                    public setIdAttributeNode(arg0: org.w3c.dom.Attr, arg1: boolean): void
                                    public setIdAttributeNS(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: boolean): void
                                    public getSchemaTypeInfo(): org.w3c.dom.TypeInfo
                                    public isId(): boolean
                                    public getXmlEncoding(): string
                                    public setXmlEncoding(arg0: java.lang.String | string): void
                                    public getXmlStandalone(): boolean
                                    public setXmlStandalone(arg0: boolean): void
                                    public getXmlVersion(): string
                                    public setXmlVersion(arg0: java.lang.String | string): void
                                    public static class: java.lang.Class<any>
                                }
                                class DTMSafeStringPool extends com.sun.org.apache.xml.internal.dtm.ref.DTMStringPool {
                                    public constructor()
                                    public removeAllElements(): void
                                    public indexToString(arg0: int): string
                                    public stringToIndex(arg0: java.lang.String | string): int
                                    public static _main(arg0: java.lang.String[]): void
                                    public static class: java.lang.Class<any>
                                }
                                class DTMStringPool {
                                    public static NULL: int
                                    public constructor(arg0: int)
                                    public constructor()
                                    public removeAllElements(): void
                                    public indexToString(arg0: int): string
                                    public stringToIndex(arg0: java.lang.String | string): int
                                    public static _main(arg0: java.lang.String[]): void
                                    public static class: java.lang.Class<any>
                                }
                                class DTMTreeWalker {
                                    protected m_dtm: com.sun.org.apache.xml.internal.dtm.DTM
                                    public setDTM(arg0: com.sun.org.apache.xml.internal.dtm.DTM): void
                                    public getcontentHandler(): org.xml.sax.ContentHandler
                                    public setcontentHandler(arg0: org.xml.sax.ContentHandler): void
                                    public constructor()
                                    public constructor(arg0: org.xml.sax.ContentHandler, arg1: com.sun.org.apache.xml.internal.dtm.DTM)
                                    public traverse(arg0: int): void
                                    public traverse(arg0: int, arg1: int): void
                                    protected startNode(arg0: int): void
                                    protected endNode(arg0: int): void
                                    public static class: java.lang.Class<any>
                                }
                                class EmptyIterator implements com.sun.org.apache.xml.internal.dtm.DTMAxisIterator {
                                    public static getInstance(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public next(): int
                                    public reset(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getLast(): int
                                    public getPosition(): int
                                    public setMark(): void
                                    public gotoMark(): void
                                    public setStartNode(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public getStartNode(): int
                                    public isReverse(): boolean
                                    public cloneIterator(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                    public setRestartable(arg0: boolean): void
                                    public getNodeByPosition(arg0: int): int
                                    public static class: java.lang.Class<any>
                                }
                                class ExpandedNameTable {
                                    public static ELEMENT: int
                                    public static ATTRIBUTE: int
                                    public static TEXT: int
                                    public static CDATA_SECTION: int
                                    public static ENTITY_REFERENCE: int
                                    public static ENTITY: int
                                    public static PROCESSING_INSTRUCTION: int
                                    public static COMMENT: int
                                    public static DOCUMENT: int
                                    public static DOCUMENT_TYPE: int
                                    public static DOCUMENT_FRAGMENT: int
                                    public static NOTATION: int
                                    public static NAMESPACE: int
                                    public constructor()
                                    public getExpandedTypeID(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: int): int
                                    public getExpandedTypeID(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: int, arg3: boolean): int
                                    public getExpandedTypeID(arg0: int): int
                                    public getLocalName(arg0: int): string
                                    public getLocalNameID(arg0: int): int
                                    public getNamespace(arg0: int): string
                                    public getNamespaceID(arg0: int): int
                                    public getType(arg0: int): short
                                    public getSize(): int
                                    public getExtendedTypes(): com.sun.org.apache.xml.internal.dtm.ref.ExtendedType[]
                                    public static class: java.lang.Class<any>
                                }
                                class ExtendedType {
                                    public constructor(arg0: int, arg1: java.lang.String | string, arg2: java.lang.String | string)
                                    public constructor(arg0: int, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: int)
                                    protected redefine(arg0: int, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                    protected redefine(arg0: int, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: int): void
                                    public hashCode(): int
                                    public equals(arg0: com.sun.org.apache.xml.internal.dtm.ref.ExtendedType): boolean
                                    public getNodeType(): int
                                    public getLocalName(): string
                                    public getNamespace(): string
                                    public static class: java.lang.Class<any>
                                }
                                interface IncrementalSAXSource {
                                    setContentHandler(arg0: org.xml.sax.ContentHandler): void
                                    setLexicalHandler(arg0: org.xml.sax.ext.LexicalHandler): void
                                    setDTDHandler(arg0: org.xml.sax.DTDHandler): void
                                    deliverMoreNodes(arg0: boolean): java.lang.Object
                                    startParse(arg0: org.xml.sax.InputSource): void
                                }
                                class IncrementalSAXSource_Filter implements com.sun.org.apache.xml.internal.dtm.ref.IncrementalSAXSource , org.xml.sax.ContentHandler , org.xml.sax.DTDHandler , org.xml.sax.ext.LexicalHandler , org.xml.sax.ErrorHandler , java.lang.Runnable {
                                    public constructor()
                                    public constructor(arg0: com.sun.org.apache.xml.internal.dtm.ref.CoroutineManager, arg1: int)
                                    public static createIncrementalSAXSource(arg0: com.sun.org.apache.xml.internal.dtm.ref.CoroutineManager, arg1: int): com.sun.org.apache.xml.internal.dtm.ref.IncrementalSAXSource
                                    public init(arg0: com.sun.org.apache.xml.internal.dtm.ref.CoroutineManager, arg1: int, arg2: int): void
                                    public setXMLReader(arg0: org.xml.sax.XMLReader): void
                                    public setContentHandler(arg0: org.xml.sax.ContentHandler): void
                                    public setDTDHandler(arg0: org.xml.sax.DTDHandler): void
                                    public setLexicalHandler(arg0: org.xml.sax.ext.LexicalHandler): void
                                    public setErrHandler(arg0: org.xml.sax.ErrorHandler): void
                                    public setReturnFrequency(arg0: int): void
                                    public characters(arg0: char[], arg1: int, arg2: int): void
                                    public endDocument(): void
                                    public endElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                    public endPrefixMapping(arg0: java.lang.String | string): void
                                    public ignorableWhitespace(arg0: char[], arg1: int, arg2: int): void
                                    public processingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                    public setDocumentLocator(arg0: org.xml.sax.Locator): void
                                    public skippedEntity(arg0: java.lang.String | string): void
                                    public startDocument(): void
                                    public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: org.xml.sax.Attributes): void
                                    public startPrefixMapping(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                    public comment(arg0: char[], arg1: int, arg2: int): void
                                    public endCDATA(): void
                                    public endDTD(): void
                                    public endEntity(arg0: java.lang.String | string): void
                                    public startCDATA(): void
                                    public startDTD(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                    public startEntity(arg0: java.lang.String | string): void
                                    public notationDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                    public unparsedEntityDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string): void
                                    public error(arg0: org.xml.sax.SAXParseException): void
                                    public fatalError(arg0: org.xml.sax.SAXParseException): void
                                    public warning(arg0: org.xml.sax.SAXParseException): void
                                    public getSourceCoroutineID(): int
                                    public getControllerCoroutineID(): int
                                    public getCoroutineManager(): com.sun.org.apache.xml.internal.dtm.ref.CoroutineManager
                                    protected count_and_yield(arg0: boolean): void
                                    public startParse(arg0: org.xml.sax.InputSource): void
                                    public run(): void
                                    public deliverMoreNodes(arg0: boolean): java.lang.Object
                                    public static class: java.lang.Class<any>
                                }
                                class IncrementalSAXSource_Filter$$Lambda implements com.sun.org.apache.xml.internal.dtm.ref.IncrementalSAXSource , org.xml.sax.ContentHandler , org.xml.sax.DTDHandler , org.xml.sax.ext.LexicalHandler , org.xml.sax.ErrorHandler , java.lang.Runnable {
                                    public constructor()
                                }
                                class IncrementalSAXSource_Xerces implements com.sun.org.apache.xml.internal.dtm.ref.IncrementalSAXSource {
                                    public constructor()
                                    public constructor(arg0: com.sun.org.apache.xerces.internal.parsers.SAXParser)
                                    public static createIncrementalSAXSource(): com.sun.org.apache.xml.internal.dtm.ref.IncrementalSAXSource
                                    public static createIncrementalSAXSource(arg0: com.sun.org.apache.xerces.internal.parsers.SAXParser): com.sun.org.apache.xml.internal.dtm.ref.IncrementalSAXSource
                                    public setContentHandler(arg0: org.xml.sax.ContentHandler): void
                                    public setLexicalHandler(arg0: org.xml.sax.ext.LexicalHandler): void
                                    public setDTDHandler(arg0: org.xml.sax.DTDHandler): void
                                    public startParse(arg0: org.xml.sax.InputSource): void
                                    public deliverMoreNodes(arg0: boolean): java.lang.Object
                                    public static _main(arg0: java.lang.String[]): void
                                    public static class: java.lang.Class<any>
                                }
                                class NodeLocator implements javax.xml.transform.SourceLocator {
                                    protected m_publicId: string
                                    protected m_systemId: string
                                    protected m_lineNumber: int
                                    protected m_columnNumber: int
                                    public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: int, arg3: int)
                                    public getPublicId(): string
                                    public getSystemId(): string
                                    public getLineNumber(): int
                                    public getColumnNumber(): int
                                    public toString(): string
                                    public static class: java.lang.Class<any>
                                }
                            }
                            class Axis {
                                public static ANCESTOR: int
                                public static ANCESTORORSELF: int
                                public static ATTRIBUTE: int
                                public static CHILD: int
                                public static DESCENDANT: int
                                public static DESCENDANTORSELF: int
                                public static FOLLOWING: int
                                public static FOLLOWINGSIBLING: int
                                public static NAMESPACEDECLS: int
                                public static NAMESPACE: int
                                public static PARENT: int
                                public static PRECEDING: int
                                public static PRECEDINGSIBLING: int
                                public static SELF: int
                                public static ALLFROMNODE: int
                                public static PRECEDINGANDANCESTOR: int
                                public static ALL: int
                                public static DESCENDANTSFROMROOT: int
                                public static DESCENDANTSORSELFFROMROOT: int
                                public static ROOT: int
                                public static FILTEREDLIST: int
                                public constructor()
                                public static isReverse(arg0: int): boolean
                                public static getNames(arg0: int): string
                                public static getNamesLength(): int
                                public static class: java.lang.Class<any>
                            }
                            interface DTM {
                                NULL: int
                                ROOT_NODE: short
                                ELEMENT_NODE: short
                                ATTRIBUTE_NODE: short
                                TEXT_NODE: short
                                CDATA_SECTION_NODE: short
                                ENTITY_REFERENCE_NODE: short
                                ENTITY_NODE: short
                                PROCESSING_INSTRUCTION_NODE: short
                                COMMENT_NODE: short
                                DOCUMENT_NODE: short
                                DOCUMENT_TYPE_NODE: short
                                DOCUMENT_FRAGMENT_NODE: short
                                NOTATION_NODE: short
                                NAMESPACE_NODE: short
                                NTYPES: short
                                setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                getAxisTraverser(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisTraverser
                                getAxisIterator(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                getTypedAxisIterator(arg0: int, arg1: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                hasChildNodes(arg0: int): boolean
                                getFirstChild(arg0: int): int
                                getLastChild(arg0: int): int
                                getAttributeNode(arg0: int, arg1: java.lang.String | string, arg2: java.lang.String | string): int
                                getFirstAttribute(arg0: int): int
                                getFirstNamespaceNode(arg0: int, arg1: boolean): int
                                getNextSibling(arg0: int): int
                                getPreviousSibling(arg0: int): int
                                getNextAttribute(arg0: int): int
                                getNextNamespaceNode(arg0: int, arg1: int, arg2: boolean): int
                                getParent(arg0: int): int
                                getDocument(): int
                                getOwnerDocument(arg0: int): int
                                getDocumentRoot(arg0: int): int
                                getStringValue(arg0: int): com.sun.org.apache.xml.internal.utils.XMLString
                                getStringValueChunkCount(arg0: int): int
                                getStringValueChunk(arg0: int, arg1: int, arg2: int[]): char[]
                                getExpandedTypeID(arg0: int): int
                                getExpandedTypeID(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: int): int
                                getLocalNameFromExpandedNameID(arg0: int): string
                                getNamespaceFromExpandedNameID(arg0: int): string
                                getNodeName(arg0: int): string
                                getNodeNameX(arg0: int): string
                                getLocalName(arg0: int): string
                                getPrefix(arg0: int): string
                                getNamespaceURI(arg0: int): string
                                getNodeValue(arg0: int): string
                                getNodeType(arg0: int): short
                                getLevel(arg0: int): short
                                isSupported(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                                getDocumentBaseURI(): string
                                setDocumentBaseURI(arg0: java.lang.String | string): void
                                getDocumentSystemIdentifier(arg0: int): string
                                getDocumentEncoding(arg0: int): string
                                getDocumentStandalone(arg0: int): string
                                getDocumentVersion(arg0: int): string
                                getDocumentAllDeclarationsProcessed(): boolean
                                getDocumentTypeDeclarationSystemIdentifier(): string
                                getDocumentTypeDeclarationPublicIdentifier(): string
                                getElementById(arg0: java.lang.String | string): int
                                getUnparsedEntityURI(arg0: java.lang.String | string): string
                                supportsPreStripping(): boolean
                                isNodeAfter(arg0: int, arg1: int): boolean
                                isCharacterElementContentWhitespace(arg0: int): boolean
                                isDocumentAllDeclarationsProcessed(arg0: int): boolean
                                isAttributeSpecified(arg0: int): boolean
                                dispatchCharactersEvents(arg0: int, arg1: org.xml.sax.ContentHandler, arg2: boolean): void
                                dispatchToEvents(arg0: int, arg1: org.xml.sax.ContentHandler): void
                                getNode(arg0: int): org.w3c.dom.Node
                                needsTwoThreads(): boolean
                                getContentHandler(): org.xml.sax.ContentHandler
                                getLexicalHandler(): org.xml.sax.ext.LexicalHandler
                                getEntityResolver(): org.xml.sax.EntityResolver
                                getDTDHandler(): org.xml.sax.DTDHandler
                                getErrorHandler(): org.xml.sax.ErrorHandler
                                getDeclHandler(): org.xml.sax.ext.DeclHandler
                                appendChild(arg0: int, arg1: boolean, arg2: boolean): void
                                appendTextChild(arg0: java.lang.String | string): void
                                getSourceLocatorFor(arg0: int): javax.xml.transform.SourceLocator
                                documentRegistration(): void
                                documentRelease(): void
                                migrateTo(arg0: com.sun.org.apache.xml.internal.dtm.DTMManager): void
                            }
                            interface DTMAxisIterator extends java.lang.Cloneable {
                                END: int
                                next(): int
                                reset(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                getLast(): int
                                getPosition(): int
                                setMark(): void
                                gotoMark(): void
                                setStartNode(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                getStartNode(): int
                                isReverse(): boolean
                                cloneIterator(): com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                setRestartable(arg0: boolean): void
                                getNodeByPosition(arg0: int): int
                            }
                            abstract class DTMAxisTraverser {
                                public constructor()
                                public first(arg0: int): int
                                public first(arg0: int, arg1: int): int
                                public next(arg0: int, arg1: int): int
                                public next(arg0: int, arg1: int, arg2: int): int
                                public static class: java.lang.Class<any>
                            }
                            class DTMDOMException extends org.w3c.dom.DOMException {
                                public constructor(arg0: short, arg1: java.lang.String | string)
                                public constructor(arg0: short)
                                public static class: java.lang.Class<any>
                            }
                            class DTMException extends java.lang.RuntimeException {
                                public constructor(arg0: java.lang.String | string)
                                public constructor(arg0: java.lang.Throwable)
                                public constructor(arg0: java.lang.String | string, arg1: java.lang.Throwable)
                                public static class: java.lang.Class<any>
                            }
                            interface DTMFilter {
                                SHOW_ALL: int
                                SHOW_ELEMENT: int
                                SHOW_ATTRIBUTE: int
                                SHOW_TEXT: int
                                SHOW_CDATA_SECTION: int
                                SHOW_ENTITY_REFERENCE: int
                                SHOW_ENTITY: int
                                SHOW_PROCESSING_INSTRUCTION: int
                                SHOW_COMMENT: int
                                SHOW_DOCUMENT: int
                                SHOW_DOCUMENT_TYPE: int
                                SHOW_DOCUMENT_FRAGMENT: int
                                SHOW_NOTATION: int
                                SHOW_NAMESPACE: int
                                SHOW_BYFUNCTION: int
                                acceptNode(arg0: int, arg1: int): short
                                acceptNode(arg0: int, arg1: int, arg2: int): short
                            }
                            interface DTMIterator {
                                FILTER_ACCEPT: short
                                FILTER_REJECT: short
                                FILTER_SKIP: short
                                getDTM(arg0: int): com.sun.org.apache.xml.internal.dtm.DTM
                                getDTMManager(): com.sun.org.apache.xml.internal.dtm.DTMManager
                                getRoot(): int
                                setRoot(arg0: int, arg1: java.lang.Object): void
                                reset(): void
                                getWhatToShow(): int
                                getExpandEntityReferences(): boolean
                                nextNode(): int
                                previousNode(): int
                                detach(): void
                                allowDetachToRelease(arg0: boolean): void
                                getCurrentNode(): int
                                isFresh(): boolean
                                setShouldCacheNodes(arg0: boolean): void
                                isMutable(): boolean
                                getCurrentPos(): int
                                runTo(arg0: int): void
                                setCurrentPos(arg0: int): void
                                item(arg0: int): int
                                setItem(arg0: int, arg1: int): void
                                getLength(): int
                                cloneWithReset(): com.sun.org.apache.xml.internal.dtm.DTMIterator
                                clone(): java.lang.Object
                                isDocOrdered(): boolean
                                getAxis(): int
                            }
                            abstract class DTMManager {
                                protected m_xsf: com.sun.org.apache.xml.internal.utils.XMLStringFactory
                                public m_incremental: boolean
                                public m_source_location: boolean
                                public static IDENT_DTM_NODE_BITS: int
                                public static IDENT_NODE_DEFAULT: int
                                public static IDENT_DTM_DEFAULT: int
                                public static IDENT_MAX_DTMS: int
                                protected constructor()
                                public getXMLStringFactory(): com.sun.org.apache.xml.internal.utils.XMLStringFactory
                                public setXMLStringFactory(arg0: com.sun.org.apache.xml.internal.utils.XMLStringFactory): void
                                public static newInstance(arg0: com.sun.org.apache.xml.internal.utils.XMLStringFactory): com.sun.org.apache.xml.internal.dtm.DTMManager
                                public getDTM(arg0: javax.xml.transform.Source, arg1: boolean, arg2: com.sun.org.apache.xml.internal.dtm.DTMWSFilter, arg3: boolean, arg4: boolean): com.sun.org.apache.xml.internal.dtm.DTM
                                public getDTM(arg0: int): com.sun.org.apache.xml.internal.dtm.DTM
                                public getDTMHandleFromNode(arg0: org.w3c.dom.Node): int
                                public createDocumentFragment(): com.sun.org.apache.xml.internal.dtm.DTM
                                public release(arg0: com.sun.org.apache.xml.internal.dtm.DTM, arg1: boolean): boolean
                                public createDTMIterator(arg0: java.lang.Object, arg1: int): com.sun.org.apache.xml.internal.dtm.DTMIterator
                                public createDTMIterator(arg0: java.lang.String | string, arg1: com.sun.org.apache.xml.internal.utils.PrefixResolver): com.sun.org.apache.xml.internal.dtm.DTMIterator
                                public createDTMIterator(arg0: int, arg1: com.sun.org.apache.xml.internal.dtm.DTMFilter, arg2: boolean): com.sun.org.apache.xml.internal.dtm.DTMIterator
                                public createDTMIterator(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMIterator
                                public getIncremental(): boolean
                                public setIncremental(arg0: boolean): void
                                public getSource_location(): boolean
                                public setSource_location(arg0: boolean): void
                                public overrideDefaultParser(): boolean
                                public setOverrideDefaultParser(arg0: boolean): void
                                public getDTMIdentity(arg0: com.sun.org.apache.xml.internal.dtm.DTM): int
                                public getDTMIdentityMask(): int
                                public getNodeIdentityMask(): int
                                public static class: java.lang.Class<any>
                            }
                            interface DTMWSFilter {
                                NOTSTRIP: short
                                STRIP: short
                                INHERIT: short
                                getShouldStripSpace(arg0: int, arg1: com.sun.org.apache.xml.internal.dtm.DTM): short
                            }
                        }
                        namespace res {
                            class XMLErrorResources extends java.util.ListResourceBundle {
                                public static MAX_CODE: int
                                public static MAX_WARNING: int
                                public static MAX_OTHERS: int
                                public static MAX_MESSAGES: int
                                public static ER_FUNCTION_NOT_SUPPORTED: string
                                public static ER_CANNOT_OVERWRITE_CAUSE: string
                                public static ER_NO_DEFAULT_IMPL: string
                                public static ER_CHUNKEDINTARRAY_NOT_SUPPORTED: string
                                public static ER_OFFSET_BIGGER_THAN_SLOT: string
                                public static ER_COROUTINE_NOT_AVAIL: string
                                public static ER_COROUTINE_CO_EXIT: string
                                public static ER_COJOINROUTINESET_FAILED: string
                                public static ER_COROUTINE_PARAM: string
                                public static ER_PARSER_DOTERMINATE_ANSWERS: string
                                public static ER_NO_PARSE_CALL_WHILE_PARSING: string
                                public static ER_TYPED_ITERATOR_AXIS_NOT_IMPLEMENTED: string
                                public static ER_ITERATOR_AXIS_NOT_IMPLEMENTED: string
                                public static ER_ITERATOR_CLONE_NOT_SUPPORTED: string
                                public static ER_UNKNOWN_AXIS_TYPE: string
                                public static ER_AXIS_NOT_SUPPORTED: string
                                public static ER_NO_DTMIDS_AVAIL: string
                                public static ER_NOT_SUPPORTED: string
                                public static ER_NODE_NON_NULL: string
                                public static ER_COULD_NOT_RESOLVE_NODE: string
                                public static ER_STARTPARSE_WHILE_PARSING: string
                                public static ER_STARTPARSE_NEEDS_SAXPARSER: string
                                public static ER_COULD_NOT_INIT_PARSER: string
                                public static ER_EXCEPTION_CREATING_POOL: string
                                public static ER_PATH_CONTAINS_INVALID_ESCAPE_SEQUENCE: string
                                public static ER_SCHEME_REQUIRED: string
                                public static ER_NO_SCHEME_IN_URI: string
                                public static ER_NO_SCHEME_INURI: string
                                public static ER_PATH_INVALID_CHAR: string
                                public static ER_SCHEME_FROM_NULL_STRING: string
                                public static ER_SCHEME_NOT_CONFORMANT: string
                                public static ER_HOST_ADDRESS_NOT_WELLFORMED: string
                                public static ER_PORT_WHEN_HOST_NULL: string
                                public static ER_INVALID_PORT: string
                                public static ER_FRAG_FOR_GENERIC_URI: string
                                public static ER_FRAG_WHEN_PATH_NULL: string
                                public static ER_FRAG_INVALID_CHAR: string
                                public static ER_PARSER_IN_USE: string
                                public static ER_CANNOT_CHANGE_WHILE_PARSING: string
                                public static ER_SELF_CAUSATION_NOT_PERMITTED: string
                                public static ER_NO_USERINFO_IF_NO_HOST: string
                                public static ER_NO_PORT_IF_NO_HOST: string
                                public static ER_NO_QUERY_STRING_IN_PATH: string
                                public static ER_NO_FRAGMENT_STRING_IN_PATH: string
                                public static ER_CANNOT_INIT_URI_EMPTY_PARMS: string
                                public static ER_METHOD_NOT_SUPPORTED: string
                                public static ER_INCRSAXSRCFILTER_NOT_RESTARTABLE: string
                                public static ER_XMLRDR_NOT_BEFORE_STARTPARSE: string
                                public static ER_AXIS_TRAVERSER_NOT_SUPPORTED: string
                                public static ER_ERRORHANDLER_CREATED_WITH_NULL_PRINTWRITER: string
                                public static ER_SYSTEMID_UNKNOWN: string
                                public static ER_LOCATION_UNKNOWN: string
                                public static ER_PREFIX_MUST_RESOLVE: string
                                public static ER_CREATEDOCUMENT_NOT_SUPPORTED: string
                                public static ER_CHILD_HAS_NO_OWNER_DOCUMENT: string
                                public static ER_CHILD_HAS_NO_OWNER_DOCUMENT_ELEMENT: string
                                public static ER_CANT_OUTPUT_TEXT_BEFORE_DOC: string
                                public static ER_CANT_HAVE_MORE_THAN_ONE_ROOT: string
                                public static ER_ARG_LOCALNAME_NULL: string
                                public static ER_ARG_LOCALNAME_INVALID: string
                                public static ER_ARG_PREFIX_INVALID: string
                                public static ER_NAME_CANT_START_WITH_COLON: string
                                public static ER_RESOURCE_COULD_NOT_FIND: string
                                public static ER_RESOURCE_COULD_NOT_LOAD: string
                                public static ER_BUFFER_SIZE_LESSTHAN_ZERO: string
                                public static ER_INVALID_UTF16_SURROGATE: string
                                public static ER_OIERROR: string
                                public static ER_NAMESPACE_PREFIX: string
                                public static ER_STRAY_ATTRIBUTE: string
                                public static ER_STRAY_NAMESPACE: string
                                public static ER_COULD_NOT_LOAD_RESOURCE: string
                                public static ER_COULD_NOT_LOAD_METHOD_PROPERTY: string
                                public static ER_SERIALIZER_NOT_CONTENTHANDLER: string
                                public static ER_ILLEGAL_ATTRIBUTE_POSITION: string
                                public static ER_ILLEGAL_CHARACTER: string
                                public constructor()
                                protected getContents(): java.lang.Object[][]
                                public static class: java.lang.Class<any>
                            }
                            class XMLErrorResources_ca extends java.util.ListResourceBundle {
                                public static MAX_CODE: int
                                public static MAX_WARNING: int
                                public static MAX_OTHERS: int
                                public static MAX_MESSAGES: int
                                public static ER_FUNCTION_NOT_SUPPORTED: string
                                public static ER_CANNOT_OVERWRITE_CAUSE: string
                                public static ER_NO_DEFAULT_IMPL: string
                                public static ER_CHUNKEDINTARRAY_NOT_SUPPORTED: string
                                public static ER_OFFSET_BIGGER_THAN_SLOT: string
                                public static ER_COROUTINE_NOT_AVAIL: string
                                public static ER_COROUTINE_CO_EXIT: string
                                public static ER_COJOINROUTINESET_FAILED: string
                                public static ER_COROUTINE_PARAM: string
                                public static ER_PARSER_DOTERMINATE_ANSWERS: string
                                public static ER_NO_PARSE_CALL_WHILE_PARSING: string
                                public static ER_TYPED_ITERATOR_AXIS_NOT_IMPLEMENTED: string
                                public static ER_ITERATOR_AXIS_NOT_IMPLEMENTED: string
                                public static ER_ITERATOR_CLONE_NOT_SUPPORTED: string
                                public static ER_UNKNOWN_AXIS_TYPE: string
                                public static ER_AXIS_NOT_SUPPORTED: string
                                public static ER_NO_DTMIDS_AVAIL: string
                                public static ER_NOT_SUPPORTED: string
                                public static ER_NODE_NON_NULL: string
                                public static ER_COULD_NOT_RESOLVE_NODE: string
                                public static ER_STARTPARSE_WHILE_PARSING: string
                                public static ER_STARTPARSE_NEEDS_SAXPARSER: string
                                public static ER_COULD_NOT_INIT_PARSER: string
                                public static ER_EXCEPTION_CREATING_POOL: string
                                public static ER_PATH_CONTAINS_INVALID_ESCAPE_SEQUENCE: string
                                public static ER_SCHEME_REQUIRED: string
                                public static ER_NO_SCHEME_IN_URI: string
                                public static ER_NO_SCHEME_INURI: string
                                public static ER_PATH_INVALID_CHAR: string
                                public static ER_SCHEME_FROM_NULL_STRING: string
                                public static ER_SCHEME_NOT_CONFORMANT: string
                                public static ER_HOST_ADDRESS_NOT_WELLFORMED: string
                                public static ER_PORT_WHEN_HOST_NULL: string
                                public static ER_INVALID_PORT: string
                                public static ER_FRAG_FOR_GENERIC_URI: string
                                public static ER_FRAG_WHEN_PATH_NULL: string
                                public static ER_FRAG_INVALID_CHAR: string
                                public static ER_PARSER_IN_USE: string
                                public static ER_CANNOT_CHANGE_WHILE_PARSING: string
                                public static ER_SELF_CAUSATION_NOT_PERMITTED: string
                                public static ER_NO_USERINFO_IF_NO_HOST: string
                                public static ER_NO_PORT_IF_NO_HOST: string
                                public static ER_NO_QUERY_STRING_IN_PATH: string
                                public static ER_NO_FRAGMENT_STRING_IN_PATH: string
                                public static ER_CANNOT_INIT_URI_EMPTY_PARMS: string
                                public static ER_METHOD_NOT_SUPPORTED: string
                                public static ER_INCRSAXSRCFILTER_NOT_RESTARTABLE: string
                                public static ER_XMLRDR_NOT_BEFORE_STARTPARSE: string
                                public static ER_AXIS_TRAVERSER_NOT_SUPPORTED: string
                                public static ER_ERRORHANDLER_CREATED_WITH_NULL_PRINTWRITER: string
                                public static ER_SYSTEMID_UNKNOWN: string
                                public static ER_LOCATION_UNKNOWN: string
                                public static ER_PREFIX_MUST_RESOLVE: string
                                public static ER_CREATEDOCUMENT_NOT_SUPPORTED: string
                                public static ER_CHILD_HAS_NO_OWNER_DOCUMENT: string
                                public static ER_CHILD_HAS_NO_OWNER_DOCUMENT_ELEMENT: string
                                public static ER_CANT_OUTPUT_TEXT_BEFORE_DOC: string
                                public static ER_CANT_HAVE_MORE_THAN_ONE_ROOT: string
                                public static ER_ARG_LOCALNAME_NULL: string
                                public static ER_ARG_LOCALNAME_INVALID: string
                                public static ER_ARG_PREFIX_INVALID: string
                                public static ER_RESOURCE_COULD_NOT_FIND: string
                                public static ER_RESOURCE_COULD_NOT_LOAD: string
                                public static ER_BUFFER_SIZE_LESSTHAN_ZERO: string
                                public static ER_INVALID_UTF16_SURROGATE: string
                                public static ER_OIERROR: string
                                public static ER_NAMESPACE_PREFIX: string
                                public static ER_STRAY_ATTRIBUTE: string
                                public static ER_STRAY_NAMESPACE: string
                                public static ER_COULD_NOT_LOAD_RESOURCE: string
                                public static ER_COULD_NOT_LOAD_METHOD_PROPERTY: string
                                public static ER_SERIALIZER_NOT_CONTENTHANDLER: string
                                public static ER_ILLEGAL_ATTRIBUTE_POSITION: string
                                public constructor()
                                public getContents(): java.lang.Object[][]
                                public static class: java.lang.Class<any>
                            }
                            class XMLErrorResources_cs extends java.util.ListResourceBundle {
                                public static MAX_CODE: int
                                public static MAX_WARNING: int
                                public static MAX_OTHERS: int
                                public static MAX_MESSAGES: int
                                public static ER_FUNCTION_NOT_SUPPORTED: string
                                public static ER_CANNOT_OVERWRITE_CAUSE: string
                                public static ER_NO_DEFAULT_IMPL: string
                                public static ER_CHUNKEDINTARRAY_NOT_SUPPORTED: string
                                public static ER_OFFSET_BIGGER_THAN_SLOT: string
                                public static ER_COROUTINE_NOT_AVAIL: string
                                public static ER_COROUTINE_CO_EXIT: string
                                public static ER_COJOINROUTINESET_FAILED: string
                                public static ER_COROUTINE_PARAM: string
                                public static ER_PARSER_DOTERMINATE_ANSWERS: string
                                public static ER_NO_PARSE_CALL_WHILE_PARSING: string
                                public static ER_TYPED_ITERATOR_AXIS_NOT_IMPLEMENTED: string
                                public static ER_ITERATOR_AXIS_NOT_IMPLEMENTED: string
                                public static ER_ITERATOR_CLONE_NOT_SUPPORTED: string
                                public static ER_UNKNOWN_AXIS_TYPE: string
                                public static ER_AXIS_NOT_SUPPORTED: string
                                public static ER_NO_DTMIDS_AVAIL: string
                                public static ER_NOT_SUPPORTED: string
                                public static ER_NODE_NON_NULL: string
                                public static ER_COULD_NOT_RESOLVE_NODE: string
                                public static ER_STARTPARSE_WHILE_PARSING: string
                                public static ER_STARTPARSE_NEEDS_SAXPARSER: string
                                public static ER_COULD_NOT_INIT_PARSER: string
                                public static ER_EXCEPTION_CREATING_POOL: string
                                public static ER_PATH_CONTAINS_INVALID_ESCAPE_SEQUENCE: string
                                public static ER_SCHEME_REQUIRED: string
                                public static ER_NO_SCHEME_IN_URI: string
                                public static ER_NO_SCHEME_INURI: string
                                public static ER_PATH_INVALID_CHAR: string
                                public static ER_SCHEME_FROM_NULL_STRING: string
                                public static ER_SCHEME_NOT_CONFORMANT: string
                                public static ER_HOST_ADDRESS_NOT_WELLFORMED: string
                                public static ER_PORT_WHEN_HOST_NULL: string
                                public static ER_INVALID_PORT: string
                                public static ER_FRAG_FOR_GENERIC_URI: string
                                public static ER_FRAG_WHEN_PATH_NULL: string
                                public static ER_FRAG_INVALID_CHAR: string
                                public static ER_PARSER_IN_USE: string
                                public static ER_CANNOT_CHANGE_WHILE_PARSING: string
                                public static ER_SELF_CAUSATION_NOT_PERMITTED: string
                                public static ER_NO_USERINFO_IF_NO_HOST: string
                                public static ER_NO_PORT_IF_NO_HOST: string
                                public static ER_NO_QUERY_STRING_IN_PATH: string
                                public static ER_NO_FRAGMENT_STRING_IN_PATH: string
                                public static ER_CANNOT_INIT_URI_EMPTY_PARMS: string
                                public static ER_METHOD_NOT_SUPPORTED: string
                                public static ER_INCRSAXSRCFILTER_NOT_RESTARTABLE: string
                                public static ER_XMLRDR_NOT_BEFORE_STARTPARSE: string
                                public static ER_AXIS_TRAVERSER_NOT_SUPPORTED: string
                                public static ER_ERRORHANDLER_CREATED_WITH_NULL_PRINTWRITER: string
                                public static ER_SYSTEMID_UNKNOWN: string
                                public static ER_LOCATION_UNKNOWN: string
                                public static ER_PREFIX_MUST_RESOLVE: string
                                public static ER_CREATEDOCUMENT_NOT_SUPPORTED: string
                                public static ER_CHILD_HAS_NO_OWNER_DOCUMENT: string
                                public static ER_CHILD_HAS_NO_OWNER_DOCUMENT_ELEMENT: string
                                public static ER_CANT_OUTPUT_TEXT_BEFORE_DOC: string
                                public static ER_CANT_HAVE_MORE_THAN_ONE_ROOT: string
                                public static ER_ARG_LOCALNAME_NULL: string
                                public static ER_ARG_LOCALNAME_INVALID: string
                                public static ER_ARG_PREFIX_INVALID: string
                                public static ER_RESOURCE_COULD_NOT_FIND: string
                                public static ER_RESOURCE_COULD_NOT_LOAD: string
                                public static ER_BUFFER_SIZE_LESSTHAN_ZERO: string
                                public static ER_INVALID_UTF16_SURROGATE: string
                                public static ER_OIERROR: string
                                public static ER_NAMESPACE_PREFIX: string
                                public static ER_STRAY_ATTRIBUTE: string
                                public static ER_STRAY_NAMESPACE: string
                                public static ER_COULD_NOT_LOAD_RESOURCE: string
                                public static ER_COULD_NOT_LOAD_METHOD_PROPERTY: string
                                public static ER_SERIALIZER_NOT_CONTENTHANDLER: string
                                public static ER_ILLEGAL_ATTRIBUTE_POSITION: string
                                public constructor()
                                public getContents(): java.lang.Object[][]
                                public static class: java.lang.Class<any>
                            }
                            class XMLErrorResources_de extends java.util.ListResourceBundle {
                                public static MAX_CODE: int
                                public static MAX_WARNING: int
                                public static MAX_OTHERS: int
                                public static MAX_MESSAGES: int
                                public static ER_FUNCTION_NOT_SUPPORTED: string
                                public static ER_CANNOT_OVERWRITE_CAUSE: string
                                public static ER_NO_DEFAULT_IMPL: string
                                public static ER_CHUNKEDINTARRAY_NOT_SUPPORTED: string
                                public static ER_OFFSET_BIGGER_THAN_SLOT: string
                                public static ER_COROUTINE_NOT_AVAIL: string
                                public static ER_COROUTINE_CO_EXIT: string
                                public static ER_COJOINROUTINESET_FAILED: string
                                public static ER_COROUTINE_PARAM: string
                                public static ER_PARSER_DOTERMINATE_ANSWERS: string
                                public static ER_NO_PARSE_CALL_WHILE_PARSING: string
                                public static ER_TYPED_ITERATOR_AXIS_NOT_IMPLEMENTED: string
                                public static ER_ITERATOR_AXIS_NOT_IMPLEMENTED: string
                                public static ER_ITERATOR_CLONE_NOT_SUPPORTED: string
                                public static ER_UNKNOWN_AXIS_TYPE: string
                                public static ER_AXIS_NOT_SUPPORTED: string
                                public static ER_NO_DTMIDS_AVAIL: string
                                public static ER_NOT_SUPPORTED: string
                                public static ER_NODE_NON_NULL: string
                                public static ER_COULD_NOT_RESOLVE_NODE: string
                                public static ER_STARTPARSE_WHILE_PARSING: string
                                public static ER_STARTPARSE_NEEDS_SAXPARSER: string
                                public static ER_COULD_NOT_INIT_PARSER: string
                                public static ER_EXCEPTION_CREATING_POOL: string
                                public static ER_PATH_CONTAINS_INVALID_ESCAPE_SEQUENCE: string
                                public static ER_SCHEME_REQUIRED: string
                                public static ER_NO_SCHEME_IN_URI: string
                                public static ER_NO_SCHEME_INURI: string
                                public static ER_PATH_INVALID_CHAR: string
                                public static ER_SCHEME_FROM_NULL_STRING: string
                                public static ER_SCHEME_NOT_CONFORMANT: string
                                public static ER_HOST_ADDRESS_NOT_WELLFORMED: string
                                public static ER_PORT_WHEN_HOST_NULL: string
                                public static ER_INVALID_PORT: string
                                public static ER_FRAG_FOR_GENERIC_URI: string
                                public static ER_FRAG_WHEN_PATH_NULL: string
                                public static ER_FRAG_INVALID_CHAR: string
                                public static ER_PARSER_IN_USE: string
                                public static ER_CANNOT_CHANGE_WHILE_PARSING: string
                                public static ER_SELF_CAUSATION_NOT_PERMITTED: string
                                public static ER_NO_USERINFO_IF_NO_HOST: string
                                public static ER_NO_PORT_IF_NO_HOST: string
                                public static ER_NO_QUERY_STRING_IN_PATH: string
                                public static ER_NO_FRAGMENT_STRING_IN_PATH: string
                                public static ER_CANNOT_INIT_URI_EMPTY_PARMS: string
                                public static ER_METHOD_NOT_SUPPORTED: string
                                public static ER_INCRSAXSRCFILTER_NOT_RESTARTABLE: string
                                public static ER_XMLRDR_NOT_BEFORE_STARTPARSE: string
                                public static ER_AXIS_TRAVERSER_NOT_SUPPORTED: string
                                public static ER_ERRORHANDLER_CREATED_WITH_NULL_PRINTWRITER: string
                                public static ER_SYSTEMID_UNKNOWN: string
                                public static ER_LOCATION_UNKNOWN: string
                                public static ER_PREFIX_MUST_RESOLVE: string
                                public static ER_CREATEDOCUMENT_NOT_SUPPORTED: string
                                public static ER_CHILD_HAS_NO_OWNER_DOCUMENT: string
                                public static ER_CHILD_HAS_NO_OWNER_DOCUMENT_ELEMENT: string
                                public static ER_CANT_OUTPUT_TEXT_BEFORE_DOC: string
                                public static ER_CANT_HAVE_MORE_THAN_ONE_ROOT: string
                                public static ER_ARG_LOCALNAME_NULL: string
                                public static ER_ARG_LOCALNAME_INVALID: string
                                public static ER_ARG_PREFIX_INVALID: string
                                public static ER_NAME_CANT_START_WITH_COLON: string
                                public static ER_RESOURCE_COULD_NOT_FIND: string
                                public static ER_RESOURCE_COULD_NOT_LOAD: string
                                public static ER_BUFFER_SIZE_LESSTHAN_ZERO: string
                                public static ER_INVALID_UTF16_SURROGATE: string
                                public static ER_OIERROR: string
                                public static ER_NAMESPACE_PREFIX: string
                                public static ER_STRAY_ATTRIBUTE: string
                                public static ER_STRAY_NAMESPACE: string
                                public static ER_COULD_NOT_LOAD_RESOURCE: string
                                public static ER_COULD_NOT_LOAD_METHOD_PROPERTY: string
                                public static ER_SERIALIZER_NOT_CONTENTHANDLER: string
                                public static ER_ILLEGAL_ATTRIBUTE_POSITION: string
                                public static ER_ILLEGAL_CHARACTER: string
                                public constructor()
                                protected getContents(): java.lang.Object[][]
                                public static class: java.lang.Class<any>
                            }
                            class XMLErrorResources_en extends com.sun.org.apache.xml.internal.res.XMLErrorResources {
                                public constructor()
                                public static class: java.lang.Class<any>
                            }
                            class XMLErrorResources_es extends java.util.ListResourceBundle {
                                public static MAX_CODE: int
                                public static MAX_WARNING: int
                                public static MAX_OTHERS: int
                                public static MAX_MESSAGES: int
                                public static ER_FUNCTION_NOT_SUPPORTED: string
                                public static ER_CANNOT_OVERWRITE_CAUSE: string
                                public static ER_NO_DEFAULT_IMPL: string
                                public static ER_CHUNKEDINTARRAY_NOT_SUPPORTED: string
                                public static ER_OFFSET_BIGGER_THAN_SLOT: string
                                public static ER_COROUTINE_NOT_AVAIL: string
                                public static ER_COROUTINE_CO_EXIT: string
                                public static ER_COJOINROUTINESET_FAILED: string
                                public static ER_COROUTINE_PARAM: string
                                public static ER_PARSER_DOTERMINATE_ANSWERS: string
                                public static ER_NO_PARSE_CALL_WHILE_PARSING: string
                                public static ER_TYPED_ITERATOR_AXIS_NOT_IMPLEMENTED: string
                                public static ER_ITERATOR_AXIS_NOT_IMPLEMENTED: string
                                public static ER_ITERATOR_CLONE_NOT_SUPPORTED: string
                                public static ER_UNKNOWN_AXIS_TYPE: string
                                public static ER_AXIS_NOT_SUPPORTED: string
                                public static ER_NO_DTMIDS_AVAIL: string
                                public static ER_NOT_SUPPORTED: string
                                public static ER_NODE_NON_NULL: string
                                public static ER_COULD_NOT_RESOLVE_NODE: string
                                public static ER_STARTPARSE_WHILE_PARSING: string
                                public static ER_STARTPARSE_NEEDS_SAXPARSER: string
                                public static ER_COULD_NOT_INIT_PARSER: string
                                public static ER_EXCEPTION_CREATING_POOL: string
                                public static ER_PATH_CONTAINS_INVALID_ESCAPE_SEQUENCE: string
                                public static ER_SCHEME_REQUIRED: string
                                public static ER_NO_SCHEME_IN_URI: string
                                public static ER_NO_SCHEME_INURI: string
                                public static ER_PATH_INVALID_CHAR: string
                                public static ER_SCHEME_FROM_NULL_STRING: string
                                public static ER_SCHEME_NOT_CONFORMANT: string
                                public static ER_HOST_ADDRESS_NOT_WELLFORMED: string
                                public static ER_PORT_WHEN_HOST_NULL: string
                                public static ER_INVALID_PORT: string
                                public static ER_FRAG_FOR_GENERIC_URI: string
                                public static ER_FRAG_WHEN_PATH_NULL: string
                                public static ER_FRAG_INVALID_CHAR: string
                                public static ER_PARSER_IN_USE: string
                                public static ER_CANNOT_CHANGE_WHILE_PARSING: string
                                public static ER_SELF_CAUSATION_NOT_PERMITTED: string
                                public static ER_NO_USERINFO_IF_NO_HOST: string
                                public static ER_NO_PORT_IF_NO_HOST: string
                                public static ER_NO_QUERY_STRING_IN_PATH: string
                                public static ER_NO_FRAGMENT_STRING_IN_PATH: string
                                public static ER_CANNOT_INIT_URI_EMPTY_PARMS: string
                                public static ER_METHOD_NOT_SUPPORTED: string
                                public static ER_INCRSAXSRCFILTER_NOT_RESTARTABLE: string
                                public static ER_XMLRDR_NOT_BEFORE_STARTPARSE: string
                                public static ER_AXIS_TRAVERSER_NOT_SUPPORTED: string
                                public static ER_ERRORHANDLER_CREATED_WITH_NULL_PRINTWRITER: string
                                public static ER_SYSTEMID_UNKNOWN: string
                                public static ER_LOCATION_UNKNOWN: string
                                public static ER_PREFIX_MUST_RESOLVE: string
                                public static ER_CREATEDOCUMENT_NOT_SUPPORTED: string
                                public static ER_CHILD_HAS_NO_OWNER_DOCUMENT: string
                                public static ER_CHILD_HAS_NO_OWNER_DOCUMENT_ELEMENT: string
                                public static ER_CANT_OUTPUT_TEXT_BEFORE_DOC: string
                                public static ER_CANT_HAVE_MORE_THAN_ONE_ROOT: string
                                public static ER_ARG_LOCALNAME_NULL: string
                                public static ER_ARG_LOCALNAME_INVALID: string
                                public static ER_ARG_PREFIX_INVALID: string
                                public static ER_NAME_CANT_START_WITH_COLON: string
                                public static ER_RESOURCE_COULD_NOT_FIND: string
                                public static ER_RESOURCE_COULD_NOT_LOAD: string
                                public static ER_BUFFER_SIZE_LESSTHAN_ZERO: string
                                public static ER_INVALID_UTF16_SURROGATE: string
                                public static ER_OIERROR: string
                                public static ER_NAMESPACE_PREFIX: string
                                public static ER_STRAY_ATTRIBUTE: string
                                public static ER_STRAY_NAMESPACE: string
                                public static ER_COULD_NOT_LOAD_RESOURCE: string
                                public static ER_COULD_NOT_LOAD_METHOD_PROPERTY: string
                                public static ER_SERIALIZER_NOT_CONTENTHANDLER: string
                                public static ER_ILLEGAL_ATTRIBUTE_POSITION: string
                                public static ER_ILLEGAL_CHARACTER: string
                                public constructor()
                                protected getContents(): java.lang.Object[][]
                                public static class: java.lang.Class<any>
                            }
                            class XMLErrorResources_fr extends java.util.ListResourceBundle {
                                public static MAX_CODE: int
                                public static MAX_WARNING: int
                                public static MAX_OTHERS: int
                                public static MAX_MESSAGES: int
                                public static ER_FUNCTION_NOT_SUPPORTED: string
                                public static ER_CANNOT_OVERWRITE_CAUSE: string
                                public static ER_NO_DEFAULT_IMPL: string
                                public static ER_CHUNKEDINTARRAY_NOT_SUPPORTED: string
                                public static ER_OFFSET_BIGGER_THAN_SLOT: string
                                public static ER_COROUTINE_NOT_AVAIL: string
                                public static ER_COROUTINE_CO_EXIT: string
                                public static ER_COJOINROUTINESET_FAILED: string
                                public static ER_COROUTINE_PARAM: string
                                public static ER_PARSER_DOTERMINATE_ANSWERS: string
                                public static ER_NO_PARSE_CALL_WHILE_PARSING: string
                                public static ER_TYPED_ITERATOR_AXIS_NOT_IMPLEMENTED: string
                                public static ER_ITERATOR_AXIS_NOT_IMPLEMENTED: string
                                public static ER_ITERATOR_CLONE_NOT_SUPPORTED: string
                                public static ER_UNKNOWN_AXIS_TYPE: string
                                public static ER_AXIS_NOT_SUPPORTED: string
                                public static ER_NO_DTMIDS_AVAIL: string
                                public static ER_NOT_SUPPORTED: string
                                public static ER_NODE_NON_NULL: string
                                public static ER_COULD_NOT_RESOLVE_NODE: string
                                public static ER_STARTPARSE_WHILE_PARSING: string
                                public static ER_STARTPARSE_NEEDS_SAXPARSER: string
                                public static ER_COULD_NOT_INIT_PARSER: string
                                public static ER_EXCEPTION_CREATING_POOL: string
                                public static ER_PATH_CONTAINS_INVALID_ESCAPE_SEQUENCE: string
                                public static ER_SCHEME_REQUIRED: string
                                public static ER_NO_SCHEME_IN_URI: string
                                public static ER_NO_SCHEME_INURI: string
                                public static ER_PATH_INVALID_CHAR: string
                                public static ER_SCHEME_FROM_NULL_STRING: string
                                public static ER_SCHEME_NOT_CONFORMANT: string
                                public static ER_HOST_ADDRESS_NOT_WELLFORMED: string
                                public static ER_PORT_WHEN_HOST_NULL: string
                                public static ER_INVALID_PORT: string
                                public static ER_FRAG_FOR_GENERIC_URI: string
                                public static ER_FRAG_WHEN_PATH_NULL: string
                                public static ER_FRAG_INVALID_CHAR: string
                                public static ER_PARSER_IN_USE: string
                                public static ER_CANNOT_CHANGE_WHILE_PARSING: string
                                public static ER_SELF_CAUSATION_NOT_PERMITTED: string
                                public static ER_NO_USERINFO_IF_NO_HOST: string
                                public static ER_NO_PORT_IF_NO_HOST: string
                                public static ER_NO_QUERY_STRING_IN_PATH: string
                                public static ER_NO_FRAGMENT_STRING_IN_PATH: string
                                public static ER_CANNOT_INIT_URI_EMPTY_PARMS: string
                                public static ER_METHOD_NOT_SUPPORTED: string
                                public static ER_INCRSAXSRCFILTER_NOT_RESTARTABLE: string
                                public static ER_XMLRDR_NOT_BEFORE_STARTPARSE: string
                                public static ER_AXIS_TRAVERSER_NOT_SUPPORTED: string
                                public static ER_ERRORHANDLER_CREATED_WITH_NULL_PRINTWRITER: string
                                public static ER_SYSTEMID_UNKNOWN: string
                                public static ER_LOCATION_UNKNOWN: string
                                public static ER_PREFIX_MUST_RESOLVE: string
                                public static ER_CREATEDOCUMENT_NOT_SUPPORTED: string
                                public static ER_CHILD_HAS_NO_OWNER_DOCUMENT: string
                                public static ER_CHILD_HAS_NO_OWNER_DOCUMENT_ELEMENT: string
                                public static ER_CANT_OUTPUT_TEXT_BEFORE_DOC: string
                                public static ER_CANT_HAVE_MORE_THAN_ONE_ROOT: string
                                public static ER_ARG_LOCALNAME_NULL: string
                                public static ER_ARG_LOCALNAME_INVALID: string
                                public static ER_ARG_PREFIX_INVALID: string
                                public static ER_NAME_CANT_START_WITH_COLON: string
                                public static ER_RESOURCE_COULD_NOT_FIND: string
                                public static ER_RESOURCE_COULD_NOT_LOAD: string
                                public static ER_BUFFER_SIZE_LESSTHAN_ZERO: string
                                public static ER_INVALID_UTF16_SURROGATE: string
                                public static ER_OIERROR: string
                                public static ER_NAMESPACE_PREFIX: string
                                public static ER_STRAY_ATTRIBUTE: string
                                public static ER_STRAY_NAMESPACE: string
                                public static ER_COULD_NOT_LOAD_RESOURCE: string
                                public static ER_COULD_NOT_LOAD_METHOD_PROPERTY: string
                                public static ER_SERIALIZER_NOT_CONTENTHANDLER: string
                                public static ER_ILLEGAL_ATTRIBUTE_POSITION: string
                                public static ER_ILLEGAL_CHARACTER: string
                                public constructor()
                                protected getContents(): java.lang.Object[][]
                                public static class: java.lang.Class<any>
                            }
                            class XMLErrorResources_it extends java.util.ListResourceBundle {
                                public static MAX_CODE: int
                                public static MAX_WARNING: int
                                public static MAX_OTHERS: int
                                public static MAX_MESSAGES: int
                                public static ER_FUNCTION_NOT_SUPPORTED: string
                                public static ER_CANNOT_OVERWRITE_CAUSE: string
                                public static ER_NO_DEFAULT_IMPL: string
                                public static ER_CHUNKEDINTARRAY_NOT_SUPPORTED: string
                                public static ER_OFFSET_BIGGER_THAN_SLOT: string
                                public static ER_COROUTINE_NOT_AVAIL: string
                                public static ER_COROUTINE_CO_EXIT: string
                                public static ER_COJOINROUTINESET_FAILED: string
                                public static ER_COROUTINE_PARAM: string
                                public static ER_PARSER_DOTERMINATE_ANSWERS: string
                                public static ER_NO_PARSE_CALL_WHILE_PARSING: string
                                public static ER_TYPED_ITERATOR_AXIS_NOT_IMPLEMENTED: string
                                public static ER_ITERATOR_AXIS_NOT_IMPLEMENTED: string
                                public static ER_ITERATOR_CLONE_NOT_SUPPORTED: string
                                public static ER_UNKNOWN_AXIS_TYPE: string
                                public static ER_AXIS_NOT_SUPPORTED: string
                                public static ER_NO_DTMIDS_AVAIL: string
                                public static ER_NOT_SUPPORTED: string
                                public static ER_NODE_NON_NULL: string
                                public static ER_COULD_NOT_RESOLVE_NODE: string
                                public static ER_STARTPARSE_WHILE_PARSING: string
                                public static ER_STARTPARSE_NEEDS_SAXPARSER: string
                                public static ER_COULD_NOT_INIT_PARSER: string
                                public static ER_EXCEPTION_CREATING_POOL: string
                                public static ER_PATH_CONTAINS_INVALID_ESCAPE_SEQUENCE: string
                                public static ER_SCHEME_REQUIRED: string
                                public static ER_NO_SCHEME_IN_URI: string
                                public static ER_NO_SCHEME_INURI: string
                                public static ER_PATH_INVALID_CHAR: string
                                public static ER_SCHEME_FROM_NULL_STRING: string
                                public static ER_SCHEME_NOT_CONFORMANT: string
                                public static ER_HOST_ADDRESS_NOT_WELLFORMED: string
                                public static ER_PORT_WHEN_HOST_NULL: string
                                public static ER_INVALID_PORT: string
                                public static ER_FRAG_FOR_GENERIC_URI: string
                                public static ER_FRAG_WHEN_PATH_NULL: string
                                public static ER_FRAG_INVALID_CHAR: string
                                public static ER_PARSER_IN_USE: string
                                public static ER_CANNOT_CHANGE_WHILE_PARSING: string
                                public static ER_SELF_CAUSATION_NOT_PERMITTED: string
                                public static ER_NO_USERINFO_IF_NO_HOST: string
                                public static ER_NO_PORT_IF_NO_HOST: string
                                public static ER_NO_QUERY_STRING_IN_PATH: string
                                public static ER_NO_FRAGMENT_STRING_IN_PATH: string
                                public static ER_CANNOT_INIT_URI_EMPTY_PARMS: string
                                public static ER_METHOD_NOT_SUPPORTED: string
                                public static ER_INCRSAXSRCFILTER_NOT_RESTARTABLE: string
                                public static ER_XMLRDR_NOT_BEFORE_STARTPARSE: string
                                public static ER_AXIS_TRAVERSER_NOT_SUPPORTED: string
                                public static ER_ERRORHANDLER_CREATED_WITH_NULL_PRINTWRITER: string
                                public static ER_SYSTEMID_UNKNOWN: string
                                public static ER_LOCATION_UNKNOWN: string
                                public static ER_PREFIX_MUST_RESOLVE: string
                                public static ER_CREATEDOCUMENT_NOT_SUPPORTED: string
                                public static ER_CHILD_HAS_NO_OWNER_DOCUMENT: string
                                public static ER_CHILD_HAS_NO_OWNER_DOCUMENT_ELEMENT: string
                                public static ER_CANT_OUTPUT_TEXT_BEFORE_DOC: string
                                public static ER_CANT_HAVE_MORE_THAN_ONE_ROOT: string
                                public static ER_ARG_LOCALNAME_NULL: string
                                public static ER_ARG_LOCALNAME_INVALID: string
                                public static ER_ARG_PREFIX_INVALID: string
                                public static ER_NAME_CANT_START_WITH_COLON: string
                                public static ER_RESOURCE_COULD_NOT_FIND: string
                                public static ER_RESOURCE_COULD_NOT_LOAD: string
                                public static ER_BUFFER_SIZE_LESSTHAN_ZERO: string
                                public static ER_INVALID_UTF16_SURROGATE: string
                                public static ER_OIERROR: string
                                public static ER_NAMESPACE_PREFIX: string
                                public static ER_STRAY_ATTRIBUTE: string
                                public static ER_STRAY_NAMESPACE: string
                                public static ER_COULD_NOT_LOAD_RESOURCE: string
                                public static ER_COULD_NOT_LOAD_METHOD_PROPERTY: string
                                public static ER_SERIALIZER_NOT_CONTENTHANDLER: string
                                public static ER_ILLEGAL_ATTRIBUTE_POSITION: string
                                public static ER_ILLEGAL_CHARACTER: string
                                public constructor()
                                protected getContents(): java.lang.Object[][]
                                public static class: java.lang.Class<any>
                            }
                            class XMLErrorResources_ja extends java.util.ListResourceBundle {
                                public static MAX_CODE: int
                                public static MAX_WARNING: int
                                public static MAX_OTHERS: int
                                public static MAX_MESSAGES: int
                                public static ER_FUNCTION_NOT_SUPPORTED: string
                                public static ER_CANNOT_OVERWRITE_CAUSE: string
                                public static ER_NO_DEFAULT_IMPL: string
                                public static ER_CHUNKEDINTARRAY_NOT_SUPPORTED: string
                                public static ER_OFFSET_BIGGER_THAN_SLOT: string
                                public static ER_COROUTINE_NOT_AVAIL: string
                                public static ER_COROUTINE_CO_EXIT: string
                                public static ER_COJOINROUTINESET_FAILED: string
                                public static ER_COROUTINE_PARAM: string
                                public static ER_PARSER_DOTERMINATE_ANSWERS: string
                                public static ER_NO_PARSE_CALL_WHILE_PARSING: string
                                public static ER_TYPED_ITERATOR_AXIS_NOT_IMPLEMENTED: string
                                public static ER_ITERATOR_AXIS_NOT_IMPLEMENTED: string
                                public static ER_ITERATOR_CLONE_NOT_SUPPORTED: string
                                public static ER_UNKNOWN_AXIS_TYPE: string
                                public static ER_AXIS_NOT_SUPPORTED: string
                                public static ER_NO_DTMIDS_AVAIL: string
                                public static ER_NOT_SUPPORTED: string
                                public static ER_NODE_NON_NULL: string
                                public static ER_COULD_NOT_RESOLVE_NODE: string
                                public static ER_STARTPARSE_WHILE_PARSING: string
                                public static ER_STARTPARSE_NEEDS_SAXPARSER: string
                                public static ER_COULD_NOT_INIT_PARSER: string
                                public static ER_EXCEPTION_CREATING_POOL: string
                                public static ER_PATH_CONTAINS_INVALID_ESCAPE_SEQUENCE: string
                                public static ER_SCHEME_REQUIRED: string
                                public static ER_NO_SCHEME_IN_URI: string
                                public static ER_NO_SCHEME_INURI: string
                                public static ER_PATH_INVALID_CHAR: string
                                public static ER_SCHEME_FROM_NULL_STRING: string
                                public static ER_SCHEME_NOT_CONFORMANT: string
                                public static ER_HOST_ADDRESS_NOT_WELLFORMED: string
                                public static ER_PORT_WHEN_HOST_NULL: string
                                public static ER_INVALID_PORT: string
                                public static ER_FRAG_FOR_GENERIC_URI: string
                                public static ER_FRAG_WHEN_PATH_NULL: string
                                public static ER_FRAG_INVALID_CHAR: string
                                public static ER_PARSER_IN_USE: string
                                public static ER_CANNOT_CHANGE_WHILE_PARSING: string
                                public static ER_SELF_CAUSATION_NOT_PERMITTED: string
                                public static ER_NO_USERINFO_IF_NO_HOST: string
                                public static ER_NO_PORT_IF_NO_HOST: string
                                public static ER_NO_QUERY_STRING_IN_PATH: string
                                public static ER_NO_FRAGMENT_STRING_IN_PATH: string
                                public static ER_CANNOT_INIT_URI_EMPTY_PARMS: string
                                public static ER_METHOD_NOT_SUPPORTED: string
                                public static ER_INCRSAXSRCFILTER_NOT_RESTARTABLE: string
                                public static ER_XMLRDR_NOT_BEFORE_STARTPARSE: string
                                public static ER_AXIS_TRAVERSER_NOT_SUPPORTED: string
                                public static ER_ERRORHANDLER_CREATED_WITH_NULL_PRINTWRITER: string
                                public static ER_SYSTEMID_UNKNOWN: string
                                public static ER_LOCATION_UNKNOWN: string
                                public static ER_PREFIX_MUST_RESOLVE: string
                                public static ER_CREATEDOCUMENT_NOT_SUPPORTED: string
                                public static ER_CHILD_HAS_NO_OWNER_DOCUMENT: string
                                public static ER_CHILD_HAS_NO_OWNER_DOCUMENT_ELEMENT: string
                                public static ER_CANT_OUTPUT_TEXT_BEFORE_DOC: string
                                public static ER_CANT_HAVE_MORE_THAN_ONE_ROOT: string
                                public static ER_ARG_LOCALNAME_NULL: string
                                public static ER_ARG_LOCALNAME_INVALID: string
                                public static ER_ARG_PREFIX_INVALID: string
                                public static ER_NAME_CANT_START_WITH_COLON: string
                                public static ER_RESOURCE_COULD_NOT_FIND: string
                                public static ER_RESOURCE_COULD_NOT_LOAD: string
                                public static ER_BUFFER_SIZE_LESSTHAN_ZERO: string
                                public static ER_INVALID_UTF16_SURROGATE: string
                                public static ER_OIERROR: string
                                public static ER_NAMESPACE_PREFIX: string
                                public static ER_STRAY_ATTRIBUTE: string
                                public static ER_STRAY_NAMESPACE: string
                                public static ER_COULD_NOT_LOAD_RESOURCE: string
                                public static ER_COULD_NOT_LOAD_METHOD_PROPERTY: string
                                public static ER_SERIALIZER_NOT_CONTENTHANDLER: string
                                public static ER_ILLEGAL_ATTRIBUTE_POSITION: string
                                public static ER_ILLEGAL_CHARACTER: string
                                public constructor()
                                protected getContents(): java.lang.Object[][]
                                public static class: java.lang.Class<any>
                            }
                            class XMLErrorResources_ko extends java.util.ListResourceBundle {
                                public static MAX_CODE: int
                                public static MAX_WARNING: int
                                public static MAX_OTHERS: int
                                public static MAX_MESSAGES: int
                                public static ER_FUNCTION_NOT_SUPPORTED: string
                                public static ER_CANNOT_OVERWRITE_CAUSE: string
                                public static ER_NO_DEFAULT_IMPL: string
                                public static ER_CHUNKEDINTARRAY_NOT_SUPPORTED: string
                                public static ER_OFFSET_BIGGER_THAN_SLOT: string
                                public static ER_COROUTINE_NOT_AVAIL: string
                                public static ER_COROUTINE_CO_EXIT: string
                                public static ER_COJOINROUTINESET_FAILED: string
                                public static ER_COROUTINE_PARAM: string
                                public static ER_PARSER_DOTERMINATE_ANSWERS: string
                                public static ER_NO_PARSE_CALL_WHILE_PARSING: string
                                public static ER_TYPED_ITERATOR_AXIS_NOT_IMPLEMENTED: string
                                public static ER_ITERATOR_AXIS_NOT_IMPLEMENTED: string
                                public static ER_ITERATOR_CLONE_NOT_SUPPORTED: string
                                public static ER_UNKNOWN_AXIS_TYPE: string
                                public static ER_AXIS_NOT_SUPPORTED: string
                                public static ER_NO_DTMIDS_AVAIL: string
                                public static ER_NOT_SUPPORTED: string
                                public static ER_NODE_NON_NULL: string
                                public static ER_COULD_NOT_RESOLVE_NODE: string
                                public static ER_STARTPARSE_WHILE_PARSING: string
                                public static ER_STARTPARSE_NEEDS_SAXPARSER: string
                                public static ER_COULD_NOT_INIT_PARSER: string
                                public static ER_EXCEPTION_CREATING_POOL: string
                                public static ER_PATH_CONTAINS_INVALID_ESCAPE_SEQUENCE: string
                                public static ER_SCHEME_REQUIRED: string
                                public static ER_NO_SCHEME_IN_URI: string
                                public static ER_NO_SCHEME_INURI: string
                                public static ER_PATH_INVALID_CHAR: string
                                public static ER_SCHEME_FROM_NULL_STRING: string
                                public static ER_SCHEME_NOT_CONFORMANT: string
                                public static ER_HOST_ADDRESS_NOT_WELLFORMED: string
                                public static ER_PORT_WHEN_HOST_NULL: string
                                public static ER_INVALID_PORT: string
                                public static ER_FRAG_FOR_GENERIC_URI: string
                                public static ER_FRAG_WHEN_PATH_NULL: string
                                public static ER_FRAG_INVALID_CHAR: string
                                public static ER_PARSER_IN_USE: string
                                public static ER_CANNOT_CHANGE_WHILE_PARSING: string
                                public static ER_SELF_CAUSATION_NOT_PERMITTED: string
                                public static ER_NO_USERINFO_IF_NO_HOST: string
                                public static ER_NO_PORT_IF_NO_HOST: string
                                public static ER_NO_QUERY_STRING_IN_PATH: string
                                public static ER_NO_FRAGMENT_STRING_IN_PATH: string
                                public static ER_CANNOT_INIT_URI_EMPTY_PARMS: string
                                public static ER_METHOD_NOT_SUPPORTED: string
                                public static ER_INCRSAXSRCFILTER_NOT_RESTARTABLE: string
                                public static ER_XMLRDR_NOT_BEFORE_STARTPARSE: string
                                public static ER_AXIS_TRAVERSER_NOT_SUPPORTED: string
                                public static ER_ERRORHANDLER_CREATED_WITH_NULL_PRINTWRITER: string
                                public static ER_SYSTEMID_UNKNOWN: string
                                public static ER_LOCATION_UNKNOWN: string
                                public static ER_PREFIX_MUST_RESOLVE: string
                                public static ER_CREATEDOCUMENT_NOT_SUPPORTED: string
                                public static ER_CHILD_HAS_NO_OWNER_DOCUMENT: string
                                public static ER_CHILD_HAS_NO_OWNER_DOCUMENT_ELEMENT: string
                                public static ER_CANT_OUTPUT_TEXT_BEFORE_DOC: string
                                public static ER_CANT_HAVE_MORE_THAN_ONE_ROOT: string
                                public static ER_ARG_LOCALNAME_NULL: string
                                public static ER_ARG_LOCALNAME_INVALID: string
                                public static ER_ARG_PREFIX_INVALID: string
                                public static ER_NAME_CANT_START_WITH_COLON: string
                                public static ER_RESOURCE_COULD_NOT_FIND: string
                                public static ER_RESOURCE_COULD_NOT_LOAD: string
                                public static ER_BUFFER_SIZE_LESSTHAN_ZERO: string
                                public static ER_INVALID_UTF16_SURROGATE: string
                                public static ER_OIERROR: string
                                public static ER_NAMESPACE_PREFIX: string
                                public static ER_STRAY_ATTRIBUTE: string
                                public static ER_STRAY_NAMESPACE: string
                                public static ER_COULD_NOT_LOAD_RESOURCE: string
                                public static ER_COULD_NOT_LOAD_METHOD_PROPERTY: string
                                public static ER_SERIALIZER_NOT_CONTENTHANDLER: string
                                public static ER_ILLEGAL_ATTRIBUTE_POSITION: string
                                public static ER_ILLEGAL_CHARACTER: string
                                public constructor()
                                protected getContents(): java.lang.Object[][]
                                public static class: java.lang.Class<any>
                            }
                            class XMLErrorResources_pt_BR extends java.util.ListResourceBundle {
                                public static MAX_CODE: int
                                public static MAX_WARNING: int
                                public static MAX_OTHERS: int
                                public static MAX_MESSAGES: int
                                public static ER_FUNCTION_NOT_SUPPORTED: string
                                public static ER_CANNOT_OVERWRITE_CAUSE: string
                                public static ER_NO_DEFAULT_IMPL: string
                                public static ER_CHUNKEDINTARRAY_NOT_SUPPORTED: string
                                public static ER_OFFSET_BIGGER_THAN_SLOT: string
                                public static ER_COROUTINE_NOT_AVAIL: string
                                public static ER_COROUTINE_CO_EXIT: string
                                public static ER_COJOINROUTINESET_FAILED: string
                                public static ER_COROUTINE_PARAM: string
                                public static ER_PARSER_DOTERMINATE_ANSWERS: string
                                public static ER_NO_PARSE_CALL_WHILE_PARSING: string
                                public static ER_TYPED_ITERATOR_AXIS_NOT_IMPLEMENTED: string
                                public static ER_ITERATOR_AXIS_NOT_IMPLEMENTED: string
                                public static ER_ITERATOR_CLONE_NOT_SUPPORTED: string
                                public static ER_UNKNOWN_AXIS_TYPE: string
                                public static ER_AXIS_NOT_SUPPORTED: string
                                public static ER_NO_DTMIDS_AVAIL: string
                                public static ER_NOT_SUPPORTED: string
                                public static ER_NODE_NON_NULL: string
                                public static ER_COULD_NOT_RESOLVE_NODE: string
                                public static ER_STARTPARSE_WHILE_PARSING: string
                                public static ER_STARTPARSE_NEEDS_SAXPARSER: string
                                public static ER_COULD_NOT_INIT_PARSER: string
                                public static ER_EXCEPTION_CREATING_POOL: string
                                public static ER_PATH_CONTAINS_INVALID_ESCAPE_SEQUENCE: string
                                public static ER_SCHEME_REQUIRED: string
                                public static ER_NO_SCHEME_IN_URI: string
                                public static ER_NO_SCHEME_INURI: string
                                public static ER_PATH_INVALID_CHAR: string
                                public static ER_SCHEME_FROM_NULL_STRING: string
                                public static ER_SCHEME_NOT_CONFORMANT: string
                                public static ER_HOST_ADDRESS_NOT_WELLFORMED: string
                                public static ER_PORT_WHEN_HOST_NULL: string
                                public static ER_INVALID_PORT: string
                                public static ER_FRAG_FOR_GENERIC_URI: string
                                public static ER_FRAG_WHEN_PATH_NULL: string
                                public static ER_FRAG_INVALID_CHAR: string
                                public static ER_PARSER_IN_USE: string
                                public static ER_CANNOT_CHANGE_WHILE_PARSING: string
                                public static ER_SELF_CAUSATION_NOT_PERMITTED: string
                                public static ER_NO_USERINFO_IF_NO_HOST: string
                                public static ER_NO_PORT_IF_NO_HOST: string
                                public static ER_NO_QUERY_STRING_IN_PATH: string
                                public static ER_NO_FRAGMENT_STRING_IN_PATH: string
                                public static ER_CANNOT_INIT_URI_EMPTY_PARMS: string
                                public static ER_METHOD_NOT_SUPPORTED: string
                                public static ER_INCRSAXSRCFILTER_NOT_RESTARTABLE: string
                                public static ER_XMLRDR_NOT_BEFORE_STARTPARSE: string
                                public static ER_AXIS_TRAVERSER_NOT_SUPPORTED: string
                                public static ER_ERRORHANDLER_CREATED_WITH_NULL_PRINTWRITER: string
                                public static ER_SYSTEMID_UNKNOWN: string
                                public static ER_LOCATION_UNKNOWN: string
                                public static ER_PREFIX_MUST_RESOLVE: string
                                public static ER_CREATEDOCUMENT_NOT_SUPPORTED: string
                                public static ER_CHILD_HAS_NO_OWNER_DOCUMENT: string
                                public static ER_CHILD_HAS_NO_OWNER_DOCUMENT_ELEMENT: string
                                public static ER_CANT_OUTPUT_TEXT_BEFORE_DOC: string
                                public static ER_CANT_HAVE_MORE_THAN_ONE_ROOT: string
                                public static ER_ARG_LOCALNAME_NULL: string
                                public static ER_ARG_LOCALNAME_INVALID: string
                                public static ER_ARG_PREFIX_INVALID: string
                                public static ER_NAME_CANT_START_WITH_COLON: string
                                public static ER_RESOURCE_COULD_NOT_FIND: string
                                public static ER_RESOURCE_COULD_NOT_LOAD: string
                                public static ER_BUFFER_SIZE_LESSTHAN_ZERO: string
                                public static ER_INVALID_UTF16_SURROGATE: string
                                public static ER_OIERROR: string
                                public static ER_NAMESPACE_PREFIX: string
                                public static ER_STRAY_ATTRIBUTE: string
                                public static ER_STRAY_NAMESPACE: string
                                public static ER_COULD_NOT_LOAD_RESOURCE: string
                                public static ER_COULD_NOT_LOAD_METHOD_PROPERTY: string
                                public static ER_SERIALIZER_NOT_CONTENTHANDLER: string
                                public static ER_ILLEGAL_ATTRIBUTE_POSITION: string
                                public static ER_ILLEGAL_CHARACTER: string
                                public constructor()
                                protected getContents(): java.lang.Object[][]
                                public static class: java.lang.Class<any>
                            }
                            class XMLErrorResources_sk extends java.util.ListResourceBundle {
                                public static MAX_CODE: int
                                public static MAX_WARNING: int
                                public static MAX_OTHERS: int
                                public static MAX_MESSAGES: int
                                public static ER_FUNCTION_NOT_SUPPORTED: string
                                public static ER_CANNOT_OVERWRITE_CAUSE: string
                                public static ER_NO_DEFAULT_IMPL: string
                                public static ER_CHUNKEDINTARRAY_NOT_SUPPORTED: string
                                public static ER_OFFSET_BIGGER_THAN_SLOT: string
                                public static ER_COROUTINE_NOT_AVAIL: string
                                public static ER_COROUTINE_CO_EXIT: string
                                public static ER_COJOINROUTINESET_FAILED: string
                                public static ER_COROUTINE_PARAM: string
                                public static ER_PARSER_DOTERMINATE_ANSWERS: string
                                public static ER_NO_PARSE_CALL_WHILE_PARSING: string
                                public static ER_TYPED_ITERATOR_AXIS_NOT_IMPLEMENTED: string
                                public static ER_ITERATOR_AXIS_NOT_IMPLEMENTED: string
                                public static ER_ITERATOR_CLONE_NOT_SUPPORTED: string
                                public static ER_UNKNOWN_AXIS_TYPE: string
                                public static ER_AXIS_NOT_SUPPORTED: string
                                public static ER_NO_DTMIDS_AVAIL: string
                                public static ER_NOT_SUPPORTED: string
                                public static ER_NODE_NON_NULL: string
                                public static ER_COULD_NOT_RESOLVE_NODE: string
                                public static ER_STARTPARSE_WHILE_PARSING: string
                                public static ER_STARTPARSE_NEEDS_SAXPARSER: string
                                public static ER_COULD_NOT_INIT_PARSER: string
                                public static ER_EXCEPTION_CREATING_POOL: string
                                public static ER_PATH_CONTAINS_INVALID_ESCAPE_SEQUENCE: string
                                public static ER_SCHEME_REQUIRED: string
                                public static ER_NO_SCHEME_IN_URI: string
                                public static ER_NO_SCHEME_INURI: string
                                public static ER_PATH_INVALID_CHAR: string
                                public static ER_SCHEME_FROM_NULL_STRING: string
                                public static ER_SCHEME_NOT_CONFORMANT: string
                                public static ER_HOST_ADDRESS_NOT_WELLFORMED: string
                                public static ER_PORT_WHEN_HOST_NULL: string
                                public static ER_INVALID_PORT: string
                                public static ER_FRAG_FOR_GENERIC_URI: string
                                public static ER_FRAG_WHEN_PATH_NULL: string
                                public static ER_FRAG_INVALID_CHAR: string
                                public static ER_PARSER_IN_USE: string
                                public static ER_CANNOT_CHANGE_WHILE_PARSING: string
                                public static ER_SELF_CAUSATION_NOT_PERMITTED: string
                                public static ER_NO_USERINFO_IF_NO_HOST: string
                                public static ER_NO_PORT_IF_NO_HOST: string
                                public static ER_NO_QUERY_STRING_IN_PATH: string
                                public static ER_NO_FRAGMENT_STRING_IN_PATH: string
                                public static ER_CANNOT_INIT_URI_EMPTY_PARMS: string
                                public static ER_METHOD_NOT_SUPPORTED: string
                                public static ER_INCRSAXSRCFILTER_NOT_RESTARTABLE: string
                                public static ER_XMLRDR_NOT_BEFORE_STARTPARSE: string
                                public static ER_AXIS_TRAVERSER_NOT_SUPPORTED: string
                                public static ER_ERRORHANDLER_CREATED_WITH_NULL_PRINTWRITER: string
                                public static ER_SYSTEMID_UNKNOWN: string
                                public static ER_LOCATION_UNKNOWN: string
                                public static ER_PREFIX_MUST_RESOLVE: string
                                public static ER_CREATEDOCUMENT_NOT_SUPPORTED: string
                                public static ER_CHILD_HAS_NO_OWNER_DOCUMENT: string
                                public static ER_CHILD_HAS_NO_OWNER_DOCUMENT_ELEMENT: string
                                public static ER_CANT_OUTPUT_TEXT_BEFORE_DOC: string
                                public static ER_CANT_HAVE_MORE_THAN_ONE_ROOT: string
                                public static ER_ARG_LOCALNAME_NULL: string
                                public static ER_ARG_LOCALNAME_INVALID: string
                                public static ER_ARG_PREFIX_INVALID: string
                                public static ER_RESOURCE_COULD_NOT_FIND: string
                                public static ER_RESOURCE_COULD_NOT_LOAD: string
                                public static ER_BUFFER_SIZE_LESSTHAN_ZERO: string
                                public static ER_INVALID_UTF16_SURROGATE: string
                                public static ER_OIERROR: string
                                public static ER_NAMESPACE_PREFIX: string
                                public static ER_STRAY_ATTRIBUTE: string
                                public static ER_STRAY_NAMESPACE: string
                                public static ER_COULD_NOT_LOAD_RESOURCE: string
                                public static ER_COULD_NOT_LOAD_METHOD_PROPERTY: string
                                public static ER_SERIALIZER_NOT_CONTENTHANDLER: string
                                public static ER_ILLEGAL_ATTRIBUTE_POSITION: string
                                public constructor()
                                public getContents(): java.lang.Object[][]
                                public static class: java.lang.Class<any>
                            }
                            class XMLErrorResources_sv extends java.util.ListResourceBundle {
                                public static MAX_CODE: int
                                public static MAX_WARNING: int
                                public static MAX_OTHERS: int
                                public static MAX_MESSAGES: int
                                public static ER_FUNCTION_NOT_SUPPORTED: string
                                public static ER_CANNOT_OVERWRITE_CAUSE: string
                                public static ER_NO_DEFAULT_IMPL: string
                                public static ER_CHUNKEDINTARRAY_NOT_SUPPORTED: string
                                public static ER_OFFSET_BIGGER_THAN_SLOT: string
                                public static ER_COROUTINE_NOT_AVAIL: string
                                public static ER_COROUTINE_CO_EXIT: string
                                public static ER_COJOINROUTINESET_FAILED: string
                                public static ER_COROUTINE_PARAM: string
                                public static ER_PARSER_DOTERMINATE_ANSWERS: string
                                public static ER_NO_PARSE_CALL_WHILE_PARSING: string
                                public static ER_TYPED_ITERATOR_AXIS_NOT_IMPLEMENTED: string
                                public static ER_ITERATOR_AXIS_NOT_IMPLEMENTED: string
                                public static ER_ITERATOR_CLONE_NOT_SUPPORTED: string
                                public static ER_UNKNOWN_AXIS_TYPE: string
                                public static ER_AXIS_NOT_SUPPORTED: string
                                public static ER_NO_DTMIDS_AVAIL: string
                                public static ER_NOT_SUPPORTED: string
                                public static ER_NODE_NON_NULL: string
                                public static ER_COULD_NOT_RESOLVE_NODE: string
                                public static ER_STARTPARSE_WHILE_PARSING: string
                                public static ER_STARTPARSE_NEEDS_SAXPARSER: string
                                public static ER_COULD_NOT_INIT_PARSER: string
                                public static ER_EXCEPTION_CREATING_POOL: string
                                public static ER_PATH_CONTAINS_INVALID_ESCAPE_SEQUENCE: string
                                public static ER_SCHEME_REQUIRED: string
                                public static ER_NO_SCHEME_IN_URI: string
                                public static ER_NO_SCHEME_INURI: string
                                public static ER_PATH_INVALID_CHAR: string
                                public static ER_SCHEME_FROM_NULL_STRING: string
                                public static ER_SCHEME_NOT_CONFORMANT: string
                                public static ER_HOST_ADDRESS_NOT_WELLFORMED: string
                                public static ER_PORT_WHEN_HOST_NULL: string
                                public static ER_INVALID_PORT: string
                                public static ER_FRAG_FOR_GENERIC_URI: string
                                public static ER_FRAG_WHEN_PATH_NULL: string
                                public static ER_FRAG_INVALID_CHAR: string
                                public static ER_PARSER_IN_USE: string
                                public static ER_CANNOT_CHANGE_WHILE_PARSING: string
                                public static ER_SELF_CAUSATION_NOT_PERMITTED: string
                                public static ER_NO_USERINFO_IF_NO_HOST: string
                                public static ER_NO_PORT_IF_NO_HOST: string
                                public static ER_NO_QUERY_STRING_IN_PATH: string
                                public static ER_NO_FRAGMENT_STRING_IN_PATH: string
                                public static ER_CANNOT_INIT_URI_EMPTY_PARMS: string
                                public static ER_METHOD_NOT_SUPPORTED: string
                                public static ER_INCRSAXSRCFILTER_NOT_RESTARTABLE: string
                                public static ER_XMLRDR_NOT_BEFORE_STARTPARSE: string
                                public static ER_AXIS_TRAVERSER_NOT_SUPPORTED: string
                                public static ER_ERRORHANDLER_CREATED_WITH_NULL_PRINTWRITER: string
                                public static ER_SYSTEMID_UNKNOWN: string
                                public static ER_LOCATION_UNKNOWN: string
                                public static ER_PREFIX_MUST_RESOLVE: string
                                public static ER_CREATEDOCUMENT_NOT_SUPPORTED: string
                                public static ER_CHILD_HAS_NO_OWNER_DOCUMENT: string
                                public static ER_CHILD_HAS_NO_OWNER_DOCUMENT_ELEMENT: string
                                public static ER_CANT_OUTPUT_TEXT_BEFORE_DOC: string
                                public static ER_CANT_HAVE_MORE_THAN_ONE_ROOT: string
                                public static ER_ARG_LOCALNAME_NULL: string
                                public static ER_ARG_LOCALNAME_INVALID: string
                                public static ER_ARG_PREFIX_INVALID: string
                                public static ER_NAME_CANT_START_WITH_COLON: string
                                public static ER_RESOURCE_COULD_NOT_FIND: string
                                public static ER_RESOURCE_COULD_NOT_LOAD: string
                                public static ER_BUFFER_SIZE_LESSTHAN_ZERO: string
                                public static ER_INVALID_UTF16_SURROGATE: string
                                public static ER_OIERROR: string
                                public static ER_NAMESPACE_PREFIX: string
                                public static ER_STRAY_ATTRIBUTE: string
                                public static ER_STRAY_NAMESPACE: string
                                public static ER_COULD_NOT_LOAD_RESOURCE: string
                                public static ER_COULD_NOT_LOAD_METHOD_PROPERTY: string
                                public static ER_SERIALIZER_NOT_CONTENTHANDLER: string
                                public static ER_ILLEGAL_ATTRIBUTE_POSITION: string
                                public static ER_ILLEGAL_CHARACTER: string
                                public constructor()
                                protected getContents(): java.lang.Object[][]
                                public static class: java.lang.Class<any>
                            }
                            class XMLErrorResources_tr extends java.util.ListResourceBundle {
                                public static MAX_CODE: int
                                public static MAX_WARNING: int
                                public static MAX_OTHERS: int
                                public static MAX_MESSAGES: int
                                public static ER_FUNCTION_NOT_SUPPORTED: string
                                public static ER_CANNOT_OVERWRITE_CAUSE: string
                                public static ER_NO_DEFAULT_IMPL: string
                                public static ER_CHUNKEDINTARRAY_NOT_SUPPORTED: string
                                public static ER_OFFSET_BIGGER_THAN_SLOT: string
                                public static ER_COROUTINE_NOT_AVAIL: string
                                public static ER_COROUTINE_CO_EXIT: string
                                public static ER_COJOINROUTINESET_FAILED: string
                                public static ER_COROUTINE_PARAM: string
                                public static ER_PARSER_DOTERMINATE_ANSWERS: string
                                public static ER_NO_PARSE_CALL_WHILE_PARSING: string
                                public static ER_TYPED_ITERATOR_AXIS_NOT_IMPLEMENTED: string
                                public static ER_ITERATOR_AXIS_NOT_IMPLEMENTED: string
                                public static ER_ITERATOR_CLONE_NOT_SUPPORTED: string
                                public static ER_UNKNOWN_AXIS_TYPE: string
                                public static ER_AXIS_NOT_SUPPORTED: string
                                public static ER_NO_DTMIDS_AVAIL: string
                                public static ER_NOT_SUPPORTED: string
                                public static ER_NODE_NON_NULL: string
                                public static ER_COULD_NOT_RESOLVE_NODE: string
                                public static ER_STARTPARSE_WHILE_PARSING: string
                                public static ER_STARTPARSE_NEEDS_SAXPARSER: string
                                public static ER_COULD_NOT_INIT_PARSER: string
                                public static ER_EXCEPTION_CREATING_POOL: string
                                public static ER_PATH_CONTAINS_INVALID_ESCAPE_SEQUENCE: string
                                public static ER_SCHEME_REQUIRED: string
                                public static ER_NO_SCHEME_IN_URI: string
                                public static ER_NO_SCHEME_INURI: string
                                public static ER_PATH_INVALID_CHAR: string
                                public static ER_SCHEME_FROM_NULL_STRING: string
                                public static ER_SCHEME_NOT_CONFORMANT: string
                                public static ER_HOST_ADDRESS_NOT_WELLFORMED: string
                                public static ER_PORT_WHEN_HOST_NULL: string
                                public static ER_INVALID_PORT: string
                                public static ER_FRAG_FOR_GENERIC_URI: string
                                public static ER_FRAG_WHEN_PATH_NULL: string
                                public static ER_FRAG_INVALID_CHAR: string
                                public static ER_PARSER_IN_USE: string
                                public static ER_CANNOT_CHANGE_WHILE_PARSING: string
                                public static ER_SELF_CAUSATION_NOT_PERMITTED: string
                                public static ER_NO_USERINFO_IF_NO_HOST: string
                                public static ER_NO_PORT_IF_NO_HOST: string
                                public static ER_NO_QUERY_STRING_IN_PATH: string
                                public static ER_NO_FRAGMENT_STRING_IN_PATH: string
                                public static ER_CANNOT_INIT_URI_EMPTY_PARMS: string
                                public static ER_METHOD_NOT_SUPPORTED: string
                                public static ER_INCRSAXSRCFILTER_NOT_RESTARTABLE: string
                                public static ER_XMLRDR_NOT_BEFORE_STARTPARSE: string
                                public static ER_AXIS_TRAVERSER_NOT_SUPPORTED: string
                                public static ER_ERRORHANDLER_CREATED_WITH_NULL_PRINTWRITER: string
                                public static ER_SYSTEMID_UNKNOWN: string
                                public static ER_LOCATION_UNKNOWN: string
                                public static ER_PREFIX_MUST_RESOLVE: string
                                public static ER_CREATEDOCUMENT_NOT_SUPPORTED: string
                                public static ER_CHILD_HAS_NO_OWNER_DOCUMENT: string
                                public static ER_CHILD_HAS_NO_OWNER_DOCUMENT_ELEMENT: string
                                public static ER_CANT_OUTPUT_TEXT_BEFORE_DOC: string
                                public static ER_CANT_HAVE_MORE_THAN_ONE_ROOT: string
                                public static ER_ARG_LOCALNAME_NULL: string
                                public static ER_ARG_LOCALNAME_INVALID: string
                                public static ER_ARG_PREFIX_INVALID: string
                                public static ER_RESOURCE_COULD_NOT_FIND: string
                                public static ER_RESOURCE_COULD_NOT_LOAD: string
                                public static ER_BUFFER_SIZE_LESSTHAN_ZERO: string
                                public static ER_INVALID_UTF16_SURROGATE: string
                                public static ER_OIERROR: string
                                public static ER_NAMESPACE_PREFIX: string
                                public static ER_STRAY_ATTRIBUTE: string
                                public static ER_STRAY_NAMESPACE: string
                                public static ER_COULD_NOT_LOAD_RESOURCE: string
                                public static ER_COULD_NOT_LOAD_METHOD_PROPERTY: string
                                public static ER_SERIALIZER_NOT_CONTENTHANDLER: string
                                public static ER_ILLEGAL_ATTRIBUTE_POSITION: string
                                public constructor()
                                public getContents(): java.lang.Object[][]
                                public static class: java.lang.Class<any>
                            }
                            class XMLErrorResources_zh_CN extends java.util.ListResourceBundle {
                                public static MAX_CODE: int
                                public static MAX_WARNING: int
                                public static MAX_OTHERS: int
                                public static MAX_MESSAGES: int
                                public static ER_FUNCTION_NOT_SUPPORTED: string
                                public static ER_CANNOT_OVERWRITE_CAUSE: string
                                public static ER_NO_DEFAULT_IMPL: string
                                public static ER_CHUNKEDINTARRAY_NOT_SUPPORTED: string
                                public static ER_OFFSET_BIGGER_THAN_SLOT: string
                                public static ER_COROUTINE_NOT_AVAIL: string
                                public static ER_COROUTINE_CO_EXIT: string
                                public static ER_COJOINROUTINESET_FAILED: string
                                public static ER_COROUTINE_PARAM: string
                                public static ER_PARSER_DOTERMINATE_ANSWERS: string
                                public static ER_NO_PARSE_CALL_WHILE_PARSING: string
                                public static ER_TYPED_ITERATOR_AXIS_NOT_IMPLEMENTED: string
                                public static ER_ITERATOR_AXIS_NOT_IMPLEMENTED: string
                                public static ER_ITERATOR_CLONE_NOT_SUPPORTED: string
                                public static ER_UNKNOWN_AXIS_TYPE: string
                                public static ER_AXIS_NOT_SUPPORTED: string
                                public static ER_NO_DTMIDS_AVAIL: string
                                public static ER_NOT_SUPPORTED: string
                                public static ER_NODE_NON_NULL: string
                                public static ER_COULD_NOT_RESOLVE_NODE: string
                                public static ER_STARTPARSE_WHILE_PARSING: string
                                public static ER_STARTPARSE_NEEDS_SAXPARSER: string
                                public static ER_COULD_NOT_INIT_PARSER: string
                                public static ER_EXCEPTION_CREATING_POOL: string
                                public static ER_PATH_CONTAINS_INVALID_ESCAPE_SEQUENCE: string
                                public static ER_SCHEME_REQUIRED: string
                                public static ER_NO_SCHEME_IN_URI: string
                                public static ER_NO_SCHEME_INURI: string
                                public static ER_PATH_INVALID_CHAR: string
                                public static ER_SCHEME_FROM_NULL_STRING: string
                                public static ER_SCHEME_NOT_CONFORMANT: string
                                public static ER_HOST_ADDRESS_NOT_WELLFORMED: string
                                public static ER_PORT_WHEN_HOST_NULL: string
                                public static ER_INVALID_PORT: string
                                public static ER_FRAG_FOR_GENERIC_URI: string
                                public static ER_FRAG_WHEN_PATH_NULL: string
                                public static ER_FRAG_INVALID_CHAR: string
                                public static ER_PARSER_IN_USE: string
                                public static ER_CANNOT_CHANGE_WHILE_PARSING: string
                                public static ER_SELF_CAUSATION_NOT_PERMITTED: string
                                public static ER_NO_USERINFO_IF_NO_HOST: string
                                public static ER_NO_PORT_IF_NO_HOST: string
                                public static ER_NO_QUERY_STRING_IN_PATH: string
                                public static ER_NO_FRAGMENT_STRING_IN_PATH: string
                                public static ER_CANNOT_INIT_URI_EMPTY_PARMS: string
                                public static ER_METHOD_NOT_SUPPORTED: string
                                public static ER_INCRSAXSRCFILTER_NOT_RESTARTABLE: string
                                public static ER_XMLRDR_NOT_BEFORE_STARTPARSE: string
                                public static ER_AXIS_TRAVERSER_NOT_SUPPORTED: string
                                public static ER_ERRORHANDLER_CREATED_WITH_NULL_PRINTWRITER: string
                                public static ER_SYSTEMID_UNKNOWN: string
                                public static ER_LOCATION_UNKNOWN: string
                                public static ER_PREFIX_MUST_RESOLVE: string
                                public static ER_CREATEDOCUMENT_NOT_SUPPORTED: string
                                public static ER_CHILD_HAS_NO_OWNER_DOCUMENT: string
                                public static ER_CHILD_HAS_NO_OWNER_DOCUMENT_ELEMENT: string
                                public static ER_CANT_OUTPUT_TEXT_BEFORE_DOC: string
                                public static ER_CANT_HAVE_MORE_THAN_ONE_ROOT: string
                                public static ER_ARG_LOCALNAME_NULL: string
                                public static ER_ARG_LOCALNAME_INVALID: string
                                public static ER_ARG_PREFIX_INVALID: string
                                public static ER_NAME_CANT_START_WITH_COLON: string
                                public static ER_RESOURCE_COULD_NOT_FIND: string
                                public static ER_RESOURCE_COULD_NOT_LOAD: string
                                public static ER_BUFFER_SIZE_LESSTHAN_ZERO: string
                                public static ER_INVALID_UTF16_SURROGATE: string
                                public static ER_OIERROR: string
                                public static ER_NAMESPACE_PREFIX: string
                                public static ER_STRAY_ATTRIBUTE: string
                                public static ER_STRAY_NAMESPACE: string
                                public static ER_COULD_NOT_LOAD_RESOURCE: string
                                public static ER_COULD_NOT_LOAD_METHOD_PROPERTY: string
                                public static ER_SERIALIZER_NOT_CONTENTHANDLER: string
                                public static ER_ILLEGAL_ATTRIBUTE_POSITION: string
                                public static ER_ILLEGAL_CHARACTER: string
                                public constructor()
                                protected getContents(): java.lang.Object[][]
                                public static class: java.lang.Class<any>
                            }
                            class XMLErrorResources_zh_HK extends com.sun.org.apache.xml.internal.res.XMLErrorResources_zh_TW {
                                public constructor()
                                public static class: java.lang.Class<any>
                            }
                            class XMLErrorResources_zh_TW extends java.util.ListResourceBundle {
                                public static MAX_CODE: int
                                public static MAX_WARNING: int
                                public static MAX_OTHERS: int
                                public static MAX_MESSAGES: int
                                public static ER_FUNCTION_NOT_SUPPORTED: string
                                public static ER_CANNOT_OVERWRITE_CAUSE: string
                                public static ER_NO_DEFAULT_IMPL: string
                                public static ER_CHUNKEDINTARRAY_NOT_SUPPORTED: string
                                public static ER_OFFSET_BIGGER_THAN_SLOT: string
                                public static ER_COROUTINE_NOT_AVAIL: string
                                public static ER_COROUTINE_CO_EXIT: string
                                public static ER_COJOINROUTINESET_FAILED: string
                                public static ER_COROUTINE_PARAM: string
                                public static ER_PARSER_DOTERMINATE_ANSWERS: string
                                public static ER_NO_PARSE_CALL_WHILE_PARSING: string
                                public static ER_TYPED_ITERATOR_AXIS_NOT_IMPLEMENTED: string
                                public static ER_ITERATOR_AXIS_NOT_IMPLEMENTED: string
                                public static ER_ITERATOR_CLONE_NOT_SUPPORTED: string
                                public static ER_UNKNOWN_AXIS_TYPE: string
                                public static ER_AXIS_NOT_SUPPORTED: string
                                public static ER_NO_DTMIDS_AVAIL: string
                                public static ER_NOT_SUPPORTED: string
                                public static ER_NODE_NON_NULL: string
                                public static ER_COULD_NOT_RESOLVE_NODE: string
                                public static ER_STARTPARSE_WHILE_PARSING: string
                                public static ER_STARTPARSE_NEEDS_SAXPARSER: string
                                public static ER_COULD_NOT_INIT_PARSER: string
                                public static ER_EXCEPTION_CREATING_POOL: string
                                public static ER_PATH_CONTAINS_INVALID_ESCAPE_SEQUENCE: string
                                public static ER_SCHEME_REQUIRED: string
                                public static ER_NO_SCHEME_IN_URI: string
                                public static ER_NO_SCHEME_INURI: string
                                public static ER_PATH_INVALID_CHAR: string
                                public static ER_SCHEME_FROM_NULL_STRING: string
                                public static ER_SCHEME_NOT_CONFORMANT: string
                                public static ER_HOST_ADDRESS_NOT_WELLFORMED: string
                                public static ER_PORT_WHEN_HOST_NULL: string
                                public static ER_INVALID_PORT: string
                                public static ER_FRAG_FOR_GENERIC_URI: string
                                public static ER_FRAG_WHEN_PATH_NULL: string
                                public static ER_FRAG_INVALID_CHAR: string
                                public static ER_PARSER_IN_USE: string
                                public static ER_CANNOT_CHANGE_WHILE_PARSING: string
                                public static ER_SELF_CAUSATION_NOT_PERMITTED: string
                                public static ER_NO_USERINFO_IF_NO_HOST: string
                                public static ER_NO_PORT_IF_NO_HOST: string
                                public static ER_NO_QUERY_STRING_IN_PATH: string
                                public static ER_NO_FRAGMENT_STRING_IN_PATH: string
                                public static ER_CANNOT_INIT_URI_EMPTY_PARMS: string
                                public static ER_METHOD_NOT_SUPPORTED: string
                                public static ER_INCRSAXSRCFILTER_NOT_RESTARTABLE: string
                                public static ER_XMLRDR_NOT_BEFORE_STARTPARSE: string
                                public static ER_AXIS_TRAVERSER_NOT_SUPPORTED: string
                                public static ER_ERRORHANDLER_CREATED_WITH_NULL_PRINTWRITER: string
                                public static ER_SYSTEMID_UNKNOWN: string
                                public static ER_LOCATION_UNKNOWN: string
                                public static ER_PREFIX_MUST_RESOLVE: string
                                public static ER_CREATEDOCUMENT_NOT_SUPPORTED: string
                                public static ER_CHILD_HAS_NO_OWNER_DOCUMENT: string
                                public static ER_CHILD_HAS_NO_OWNER_DOCUMENT_ELEMENT: string
                                public static ER_CANT_OUTPUT_TEXT_BEFORE_DOC: string
                                public static ER_CANT_HAVE_MORE_THAN_ONE_ROOT: string
                                public static ER_ARG_LOCALNAME_NULL: string
                                public static ER_ARG_LOCALNAME_INVALID: string
                                public static ER_ARG_PREFIX_INVALID: string
                                public static ER_NAME_CANT_START_WITH_COLON: string
                                public static ER_RESOURCE_COULD_NOT_FIND: string
                                public static ER_RESOURCE_COULD_NOT_LOAD: string
                                public static ER_BUFFER_SIZE_LESSTHAN_ZERO: string
                                public static ER_INVALID_UTF16_SURROGATE: string
                                public static ER_OIERROR: string
                                public static ER_NAMESPACE_PREFIX: string
                                public static ER_STRAY_ATTRIBUTE: string
                                public static ER_STRAY_NAMESPACE: string
                                public static ER_COULD_NOT_LOAD_RESOURCE: string
                                public static ER_COULD_NOT_LOAD_METHOD_PROPERTY: string
                                public static ER_SERIALIZER_NOT_CONTENTHANDLER: string
                                public static ER_ILLEGAL_ATTRIBUTE_POSITION: string
                                public static ER_ILLEGAL_CHARACTER: string
                                public constructor()
                                protected getContents(): java.lang.Object[][]
                                public static class: java.lang.Class<any>
                            }
                            class XMLMessages {
                                protected fLocale: java.util.Locale
                                protected static BAD_CODE: string
                                protected static FORMAT_FAILED: string
                                public constructor()
                                public setLocale(arg0: java.util.Locale): void
                                public getLocale(): java.util.Locale
                                public static createXMLMessage(arg0: java.lang.String | string, arg1: java.lang.Object[]): string
                                public static createMsg(arg0: java.util.ListResourceBundle, arg1: java.lang.String | string, arg2: java.lang.Object[]): string
                                public static class: java.lang.Class<any>
                            }
                        }
                        namespace serialize {
                            abstract class BaseMarkupSerializer implements org.xml.sax.ContentHandler , org.xml.sax.DocumentHandler , org.xml.sax.ext.LexicalHandler , org.xml.sax.DTDHandler , org.xml.sax.ext.DeclHandler , com.sun.org.apache.xml.internal.serialize.DOMSerializer , com.sun.org.apache.xml.internal.serialize.Serializer {
                                protected features: short
                                protected fDOMErrorHandler: org.w3c.dom.DOMErrorHandler
                                protected fDOMError: com.sun.org.apache.xerces.internal.dom.DOMErrorImpl
                                protected fDOMFilter: org.w3c.dom.ls.LSSerializerFilter
                                protected _encodingInfo: com.sun.org.apache.xml.internal.serialize.EncodingInfo
                                protected _started: boolean
                                protected _prefixes: java.util.Map<java.lang.String, java.lang.String>
                                protected _docTypePublicId: string
                                protected _docTypeSystemId: string
                                protected _format: com.sun.org.apache.xml.internal.serialize.OutputFormat
                                protected _printer: com.sun.org.apache.xml.internal.serialize.Printer
                                protected _indenting: boolean
                                protected fStrBuffer: java.lang.StringBuffer
                                protected fCurrentNode: org.w3c.dom.Node
                                protected constructor(arg0: com.sun.org.apache.xml.internal.serialize.OutputFormat)
                                public asDocumentHandler(): org.xml.sax.DocumentHandler
                                public asContentHandler(): org.xml.sax.ContentHandler
                                public asDOMSerializer(): com.sun.org.apache.xml.internal.serialize.DOMSerializer
                                public setOutputByteStream(arg0: java.io.OutputStream | java.io.OutputStream$$Lambda): void
                                public setOutputCharStream(arg0: java.io.Writer | java.io.Writer$$Lambda): void
                                public setOutputFormat(arg0: com.sun.org.apache.xml.internal.serialize.OutputFormat): void
                                public reset(): boolean
                                protected prepare(): void
                                public serialize(arg0: org.w3c.dom.Element): void
                                public serialize(arg0: org.w3c.dom.Node): void
                                public serialize(arg0: org.w3c.dom.DocumentFragment): void
                                public serialize(arg0: org.w3c.dom.Document): void
                                public startDocument(): void
                                public characters(arg0: char[], arg1: int, arg2: int): void
                                public ignorableWhitespace(arg0: char[], arg1: int, arg2: int): void
                                public processingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public processingInstructionIO(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public comment(arg0: char[], arg1: int, arg2: int): void
                                public comment(arg0: java.lang.String | string): void
                                public startCDATA(): void
                                public endCDATA(): void
                                public startNonEscaping(): void
                                public endNonEscaping(): void
                                public startPreserving(): void
                                public endPreserving(): void
                                public endDocument(): void
                                public startEntity(arg0: java.lang.String | string): void
                                public endEntity(arg0: java.lang.String | string): void
                                public setDocumentLocator(arg0: org.xml.sax.Locator): void
                                public skippedEntity(arg0: java.lang.String | string): void
                                public startPrefixMapping(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public endPrefixMapping(arg0: java.lang.String | string): void
                                public startDTD(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public endDTD(): void
                                public elementDecl(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public attributeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string): void
                                public internalEntityDecl(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public externalEntityDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public unparsedEntityDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string): void
                                public notationDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                protected serializeNode(arg0: org.w3c.dom.Node): void
                                protected serializeDocument(): void
                                protected serializeDTD(arg0: java.lang.String | string): void
                                protected content(): com.sun.org.apache.xml.internal.serialize.ElementState
                                protected characters(arg0: java.lang.String | string): void
                                protected getEntityRef(arg0: int): string
                                protected serializeElement(arg0: org.w3c.dom.Element): void
                                protected serializePreRoot(): void
                                protected printCDATAText(arg0: java.lang.String | string): void
                                protected surrogates(arg0: int, arg1: int): void
                                protected printText(arg0: char[], arg1: int, arg2: int, arg3: boolean, arg4: boolean): void
                                protected printText(arg0: java.lang.String | string, arg1: boolean, arg2: boolean): void
                                protected printDoctypeURL(arg0: java.lang.String | string): void
                                protected printEscaped(arg0: int): void
                                protected printEscaped(arg0: java.lang.String | string): void
                                protected getElementState(): com.sun.org.apache.xml.internal.serialize.ElementState
                                protected enterElementState(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: boolean): com.sun.org.apache.xml.internal.serialize.ElementState
                                protected leaveElementState(): com.sun.org.apache.xml.internal.serialize.ElementState
                                protected isDocumentState(): boolean
                                protected getPrefix(arg0: java.lang.String | string): string
                                protected modifyDOMError(arg0: java.lang.String | string, arg1: short, arg2: java.lang.String | string, arg3: org.w3c.dom.Node): org.w3c.dom.DOMError
                                protected fatalError(arg0: java.lang.String | string): void
                                protected checkUnboundNamespacePrefixedNode(arg0: org.w3c.dom.Node): void
                                public static class: java.lang.Class<any>
                            }
                            interface DOMSerializer {
                                serialize(arg0: org.w3c.dom.Element): void
                                serialize(arg0: org.w3c.dom.Document): void
                                serialize(arg0: org.w3c.dom.DocumentFragment): void
                            }
                            class DOMSerializerImpl implements org.w3c.dom.ls.LSSerializer , org.w3c.dom.DOMConfiguration {
                                protected features: short
                                protected static NAMESPACES: short
                                protected static WELLFORMED: short
                                protected static ENTITIES: short
                                protected static CDATA: short
                                protected static SPLITCDATA: short
                                protected static COMMENTS: short
                                protected static DISCARDDEFAULT: short
                                protected static INFOSET: short
                                protected static XMLDECL: short
                                protected static NSDECL: short
                                protected static DOM_ELEMENT_CONTENT_WHITESPACE: short
                                protected static FORMAT_PRETTY_PRINT: short
                                public constructor()
                                public getDomConfig(): org.w3c.dom.DOMConfiguration
                                public setParameter(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                public canSetParameter(arg0: java.lang.String | string, arg1: java.lang.Object): boolean
                                public getParameterNames(): org.w3c.dom.DOMStringList
                                public getParameter(arg0: java.lang.String | string): java.lang.Object
                                public writeToString(arg0: org.w3c.dom.Node): string
                                public setNewLine(arg0: java.lang.String | string): void
                                public getNewLine(): string
                                public getFilter(): org.w3c.dom.ls.LSSerializerFilter
                                public setFilter(arg0: org.w3c.dom.ls.LSSerializerFilter): void
                                public write(arg0: org.w3c.dom.Node, arg1: org.w3c.dom.ls.LSOutput): boolean
                                public writeToURI(arg0: org.w3c.dom.Node, arg1: java.lang.String | string): boolean
                                public static class: java.lang.Class<any>
                            }
                            class ElementState {
                                public rawName: string
                                public localName: string
                                public namespaceURI: string
                                public preserveSpace: boolean
                                public empty: boolean
                                public afterElement: boolean
                                public afterComment: boolean
                                public doCData: boolean
                                public unescaped: boolean
                                public inCData: boolean
                                public prefixes: java.util.Map<java.lang.String, java.lang.String>
                                public constructor()
                                public static class: java.lang.Class<any>
                            }
                            class EncodingInfo {
                                public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: int)
                                public getIANAName(): string
                                public getWriter(arg0: java.io.OutputStream | java.io.OutputStream$$Lambda): java.io.Writer
                                public isPrintable(arg0: char): boolean
                                public static testJavaEncodingName(arg0: java.lang.String | string): void
                                public static class: java.lang.Class<any>
                            }
                            class Encodings {
                                public static class: java.lang.Class<any>
                            }
                            class HTMLSerializer extends com.sun.org.apache.xml.internal.serialize.BaseMarkupSerializer {
                                public static XHTMLNamespace: string
                                protected constructor(arg0: boolean, arg1: com.sun.org.apache.xml.internal.serialize.OutputFormat)
                                public constructor()
                                public constructor(arg0: com.sun.org.apache.xml.internal.serialize.OutputFormat)
                                public constructor(arg0: java.io.Writer | java.io.Writer$$Lambda, arg1: com.sun.org.apache.xml.internal.serialize.OutputFormat)
                                public constructor(arg0: java.io.OutputStream | java.io.OutputStream$$Lambda, arg1: com.sun.org.apache.xml.internal.serialize.OutputFormat)
                                public setOutputFormat(arg0: com.sun.org.apache.xml.internal.serialize.OutputFormat): void
                                public setXHTMLNamespace(arg0: java.lang.String | string): void
                                public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: org.xml.sax.Attributes): void
                                public endElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public endElementIO(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public characters(arg0: char[], arg1: int, arg2: int): void
                                public startElement(arg0: java.lang.String | string, arg1: org.xml.sax.AttributeList): void
                                public endElement(arg0: java.lang.String | string): void
                                protected startDocument(arg0: java.lang.String | string): void
                                protected serializeElement(arg0: org.w3c.dom.Element): void
                                protected characters(arg0: java.lang.String | string): void
                                protected getEntityRef(arg0: int): string
                                protected escapeURI(arg0: java.lang.String | string): string
                                public static class: java.lang.Class<any>
                            }
                            class HTMLdtd {
                                public static HTMLPublicId: string
                                public static HTMLSystemId: string
                                public static XHTMLPublicId: string
                                public static XHTMLSystemId: string
                                public constructor()
                                public static isEmptyTag(arg0: java.lang.String | string): boolean
                                public static isElementContent(arg0: java.lang.String | string): boolean
                                public static isPreserveSpace(arg0: java.lang.String | string): boolean
                                public static isOptionalClosing(arg0: java.lang.String | string): boolean
                                public static isOnlyOpening(arg0: java.lang.String | string): boolean
                                public static isClosing(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                                public static isURI(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                                public static isBoolean(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                                public static charFromName(arg0: java.lang.String | string): int
                                public static fromChar(arg0: int): string
                                public static class: java.lang.Class<any>
                            }
                            class IndentPrinter extends com.sun.org.apache.xml.internal.serialize.Printer {
                                public constructor(arg0: java.io.Writer | java.io.Writer$$Lambda, arg1: com.sun.org.apache.xml.internal.serialize.OutputFormat)
                                public enterDTD(): void
                                public leaveDTD(): string
                                public printText(arg0: java.lang.String | string): void
                                public printText(arg0: java.lang.StringBuffer): void
                                public printText(arg0: char): void
                                public printText(arg0: char[], arg1: int, arg2: int): void
                                public printSpace(): void
                                public breakLine(): void
                                public breakLine(arg0: boolean): void
                                public flushLine(arg0: boolean): void
                                public flush(): void
                                public indent(): void
                                public unindent(): void
                                public getNextIndent(): int
                                public setNextIndent(arg0: int): void
                                public setThisIndent(arg0: int): void
                                public static class: java.lang.Class<any>
                            }
                            class LineSeparator {
                                public static Unix: string
                                public static Windows: string
                                public static Macintosh: string
                                public static Web: string
                                public constructor()
                                public static class: java.lang.Class<any>
                            }
                            class Method {
                                public static XML: string
                                public static HTML: string
                                public static XHTML: string
                                public static TEXT: string
                                public static FOP: string
                                public constructor()
                                public static class: java.lang.Class<any>
                            }
                            class OutputFormat {
                                public constructor()
                                public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: boolean)
                                public constructor(arg0: org.w3c.dom.Document)
                                public constructor(arg0: org.w3c.dom.Document, arg1: java.lang.String | string, arg2: boolean)
                                public getMethod(): string
                                public setMethod(arg0: java.lang.String | string): void
                                public getVersion(): string
                                public setVersion(arg0: java.lang.String | string): void
                                public getIndent(): int
                                public getIndenting(): boolean
                                public setIndent(arg0: int): void
                                public setIndenting(arg0: boolean): void
                                public getEncoding(): string
                                public setEncoding(arg0: java.lang.String | string): void
                                public setEncoding(arg0: com.sun.org.apache.xml.internal.serialize.EncodingInfo): void
                                public getEncodingInfo(): com.sun.org.apache.xml.internal.serialize.EncodingInfo
                                public setAllowJavaNames(arg0: boolean): void
                                public setAllowJavaNames(): boolean
                                public getMediaType(): string
                                public setMediaType(arg0: java.lang.String | string): void
                                public setDoctype(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public getDoctypePublic(): string
                                public getDoctypeSystem(): string
                                public getOmitComments(): boolean
                                public setOmitComments(arg0: boolean): void
                                public getOmitDocumentType(): boolean
                                public setOmitDocumentType(arg0: boolean): void
                                public getOmitXMLDeclaration(): boolean
                                public setOmitXMLDeclaration(arg0: boolean): void
                                public getStandalone(): boolean
                                public setStandalone(arg0: boolean): void
                                public getCDataElements(): java.lang.String[]
                                public isCDataElement(arg0: java.lang.String | string): boolean
                                public setCDataElements(arg0: java.lang.String[]): void
                                public getNonEscapingElements(): java.lang.String[]
                                public isNonEscapingElement(arg0: java.lang.String | string): boolean
                                public setNonEscapingElements(arg0: java.lang.String[]): void
                                public getLineSeparator(): string
                                public setLineSeparator(arg0: java.lang.String | string): void
                                public getPreserveSpace(): boolean
                                public setPreserveSpace(arg0: boolean): void
                                public getLineWidth(): int
                                public setLineWidth(arg0: int): void
                                public getPreserveEmptyAttributes(): boolean
                                public setPreserveEmptyAttributes(arg0: boolean): void
                                public getLastPrintable(): char
                                public static whichMethod(arg0: org.w3c.dom.Document): string
                                public static whichDoctypePublic(arg0: org.w3c.dom.Document): string
                                public static whichDoctypeSystem(arg0: org.w3c.dom.Document): string
                                public static whichMediaType(arg0: java.lang.String | string): string
                                public static class: java.lang.Class<any>
                            }
                            class Printer {
                                protected _format: com.sun.org.apache.xml.internal.serialize.OutputFormat
                                protected _writer: java.io.Writer
                                protected _dtdWriter: java.io.StringWriter
                                protected _docWriter: java.io.Writer
                                protected _exception: java.io.IOException
                                public constructor(arg0: java.io.Writer | java.io.Writer$$Lambda, arg1: com.sun.org.apache.xml.internal.serialize.OutputFormat)
                                public getException(): java.io.IOException
                                public enterDTD(): void
                                public leaveDTD(): string
                                public printText(arg0: java.lang.String | string): void
                                public printText(arg0: java.lang.StringBuffer): void
                                public printText(arg0: char[], arg1: int, arg2: int): void
                                public printText(arg0: char): void
                                public printSpace(): void
                                public breakLine(): void
                                public breakLine(arg0: boolean): void
                                public flushLine(arg0: boolean): void
                                public flush(): void
                                public indent(): void
                                public unindent(): void
                                public getNextIndent(): int
                                public setNextIndent(arg0: int): void
                                public setThisIndent(arg0: int): void
                                public static class: java.lang.Class<any>
                            }
                            interface Serializer {
                                setOutputByteStream(arg0: java.io.OutputStream | java.io.OutputStream$$Lambda): void
                                setOutputCharStream(arg0: java.io.Writer | java.io.Writer$$Lambda): void
                                setOutputFormat(arg0: com.sun.org.apache.xml.internal.serialize.OutputFormat): void
                                asDocumentHandler(): org.xml.sax.DocumentHandler
                                asContentHandler(): org.xml.sax.ContentHandler
                                asDOMSerializer(): com.sun.org.apache.xml.internal.serialize.DOMSerializer
                            }
                            abstract class SerializerFactory {
                                public static FactoriesProperty: string
                                public constructor()
                                public static registerSerializerFactory(arg0: com.sun.org.apache.xml.internal.serialize.SerializerFactory): void
                                public static getSerializerFactory(arg0: java.lang.String | string): com.sun.org.apache.xml.internal.serialize.SerializerFactory
                                protected getSupportedMethod(): string
                                public makeSerializer(arg0: com.sun.org.apache.xml.internal.serialize.OutputFormat): com.sun.org.apache.xml.internal.serialize.Serializer
                                public makeSerializer(arg0: java.io.Writer | java.io.Writer$$Lambda, arg1: com.sun.org.apache.xml.internal.serialize.OutputFormat): com.sun.org.apache.xml.internal.serialize.Serializer
                                public makeSerializer(arg0: java.io.OutputStream | java.io.OutputStream$$Lambda, arg1: com.sun.org.apache.xml.internal.serialize.OutputFormat): com.sun.org.apache.xml.internal.serialize.Serializer
                                public static class: java.lang.Class<any>
                            }
                            class SerializerFactoryImpl extends com.sun.org.apache.xml.internal.serialize.SerializerFactory {
                                public makeSerializer(arg0: com.sun.org.apache.xml.internal.serialize.OutputFormat): com.sun.org.apache.xml.internal.serialize.Serializer
                                public makeSerializer(arg0: java.io.Writer | java.io.Writer$$Lambda, arg1: com.sun.org.apache.xml.internal.serialize.OutputFormat): com.sun.org.apache.xml.internal.serialize.Serializer
                                public makeSerializer(arg0: java.io.OutputStream | java.io.OutputStream$$Lambda, arg1: com.sun.org.apache.xml.internal.serialize.OutputFormat): com.sun.org.apache.xml.internal.serialize.Serializer
                                protected getSupportedMethod(): string
                                public static class: java.lang.Class<any>
                            }
                            class TextSerializer extends com.sun.org.apache.xml.internal.serialize.BaseMarkupSerializer {
                                public constructor()
                                public setOutputFormat(arg0: com.sun.org.apache.xml.internal.serialize.OutputFormat): void
                                public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: org.xml.sax.Attributes): void
                                public endElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public startElement(arg0: java.lang.String | string, arg1: org.xml.sax.AttributeList): void
                                public endElement(arg0: java.lang.String | string): void
                                public endElementIO(arg0: java.lang.String | string): void
                                public processingInstructionIO(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public comment(arg0: java.lang.String | string): void
                                public comment(arg0: char[], arg1: int, arg2: int): void
                                public characters(arg0: char[], arg1: int, arg2: int): void
                                protected characters(arg0: java.lang.String | string, arg1: boolean): void
                                protected startDocument(arg0: java.lang.String | string): void
                                protected serializeElement(arg0: org.w3c.dom.Element): void
                                protected serializeNode(arg0: org.w3c.dom.Node): void
                                protected content(): com.sun.org.apache.xml.internal.serialize.ElementState
                                protected getEntityRef(arg0: int): string
                                public static class: java.lang.Class<any>
                            }
                            class XHTMLSerializer extends com.sun.org.apache.xml.internal.serialize.HTMLSerializer {
                                public constructor()
                                public constructor(arg0: com.sun.org.apache.xml.internal.serialize.OutputFormat)
                                public constructor(arg0: java.io.Writer | java.io.Writer$$Lambda, arg1: com.sun.org.apache.xml.internal.serialize.OutputFormat)
                                public constructor(arg0: java.io.OutputStream | java.io.OutputStream$$Lambda, arg1: com.sun.org.apache.xml.internal.serialize.OutputFormat)
                                public setOutputFormat(arg0: com.sun.org.apache.xml.internal.serialize.OutputFormat): void
                                public static class: java.lang.Class<any>
                            }
                            class XML11Serializer extends com.sun.org.apache.xml.internal.serialize.XMLSerializer {
                                protected static DEBUG: boolean
                                protected fNSBinder: com.sun.org.apache.xerces.internal.util.NamespaceSupport
                                protected fLocalNSBinder: com.sun.org.apache.xerces.internal.util.NamespaceSupport
                                protected fSymbolTable: com.sun.org.apache.xerces.internal.util.SymbolTable
                                protected fDOML1: boolean
                                protected fNamespaceCounter: int
                                protected static PREFIX: string
                                protected fNamespaces: boolean
                                public constructor()
                                public constructor(arg0: com.sun.org.apache.xml.internal.serialize.OutputFormat)
                                public constructor(arg0: java.io.Writer | java.io.Writer$$Lambda, arg1: com.sun.org.apache.xml.internal.serialize.OutputFormat)
                                public constructor(arg0: java.io.OutputStream | java.io.OutputStream$$Lambda, arg1: com.sun.org.apache.xml.internal.serialize.OutputFormat)
                                public characters(arg0: char[], arg1: int, arg2: int): void
                                protected printEscaped(arg0: java.lang.String | string): void
                                protected printCDATAText(arg0: java.lang.String | string): void
                                protected printXMLChar(arg0: int): void
                                protected surrogates(arg0: int, arg1: int): void
                                protected printText(arg0: java.lang.String | string, arg1: boolean, arg2: boolean): void
                                protected printText(arg0: char[], arg1: int, arg2: int, arg3: boolean, arg4: boolean): void
                                public reset(): boolean
                                public static class: java.lang.Class<any>
                            }
                            class XMLSerializer extends com.sun.org.apache.xml.internal.serialize.BaseMarkupSerializer {
                                protected static DEBUG: boolean
                                protected fNSBinder: com.sun.org.apache.xerces.internal.util.NamespaceSupport
                                protected fLocalNSBinder: com.sun.org.apache.xerces.internal.util.NamespaceSupport
                                protected fSymbolTable: com.sun.org.apache.xerces.internal.util.SymbolTable
                                protected static PREFIX: string
                                protected fNamespaces: boolean
                                protected fNamespacePrefixes: boolean
                                public constructor()
                                public constructor(arg0: com.sun.org.apache.xml.internal.serialize.OutputFormat)
                                public constructor(arg0: java.io.Writer | java.io.Writer$$Lambda, arg1: com.sun.org.apache.xml.internal.serialize.OutputFormat)
                                public constructor(arg0: java.io.OutputStream | java.io.OutputStream$$Lambda, arg1: com.sun.org.apache.xml.internal.serialize.OutputFormat)
                                public setOutputFormat(arg0: com.sun.org.apache.xml.internal.serialize.OutputFormat): void
                                public setNamespaces(arg0: boolean): void
                                public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: org.xml.sax.Attributes): void
                                public endElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public endElementIO(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public startElement(arg0: java.lang.String | string, arg1: org.xml.sax.AttributeList): void
                                public endElement(arg0: java.lang.String | string): void
                                protected startDocument(arg0: java.lang.String | string): void
                                protected serializeElement(arg0: org.w3c.dom.Element): void
                                protected getEntityRef(arg0: int): string
                                protected printEscaped(arg0: java.lang.String | string): void
                                protected printXMLChar(arg0: int): void
                                protected printText(arg0: java.lang.String | string, arg1: boolean, arg2: boolean): void
                                protected printText(arg0: char[], arg1: int, arg2: int, arg3: boolean, arg4: boolean): void
                                protected checkUnboundNamespacePrefixedNode(arg0: org.w3c.dom.Node): void
                                public reset(): boolean
                                public static class: java.lang.Class<any>
                            }
                        }
                        namespace serializer {
                            namespace utils {
                                class BoolStack {
                                    public constructor()
                                    public constructor(arg0: int)
                                    public size(): int
                                    public clear(): void
                                    public push(arg0: boolean): boolean
                                    public pop(): boolean
                                    public popAndTop(): boolean
                                    public setTop(arg0: boolean): void
                                    public peek(): boolean
                                    public peekOrFalse(): boolean
                                    public peekOrTrue(): boolean
                                    public isEmpty(): boolean
                                    public static class: java.lang.Class<any>
                                }
                                class Messages {
                                    public createMessage(arg0: java.lang.String | string, arg1: java.lang.Object[]): string
                                    public static class: java.lang.Class<any>
                                }
                                class MsgKey {
                                    public static BAD_MSGKEY: string
                                    public static BAD_MSGFORMAT: string
                                    public static ER_RESOURCE_COULD_NOT_FIND: string
                                    public static ER_RESOURCE_COULD_NOT_LOAD: string
                                    public static ER_BUFFER_SIZE_LESSTHAN_ZERO: string
                                    public static ER_INVALID_UTF16_SURROGATE: string
                                    public static ER_OIERROR: string
                                    public static ER_NAMESPACE_PREFIX: string
                                    public static ER_STRAY_ATTRIBUTE: string
                                    public static ER_STRAY_NAMESPACE: string
                                    public static ER_COULD_NOT_LOAD_RESOURCE: string
                                    public static ER_COULD_NOT_LOAD_METHOD_PROPERTY: string
                                    public static ER_SERIALIZER_NOT_CONTENTHANDLER: string
                                    public static ER_ILLEGAL_ATTRIBUTE_POSITION: string
                                    public static ER_ILLEGAL_CHARACTER: string
                                    public static ER_INVALID_PORT: string
                                    public static ER_PORT_WHEN_HOST_NULL: string
                                    public static ER_HOST_ADDRESS_NOT_WELLFORMED: string
                                    public static ER_SCHEME_NOT_CONFORMANT: string
                                    public static ER_SCHEME_FROM_NULL_STRING: string
                                    public static ER_PATH_CONTAINS_INVALID_ESCAPE_SEQUENCE: string
                                    public static ER_PATH_INVALID_CHAR: string
                                    public static ER_NO_SCHEME_INURI: string
                                    public static ER_FRAG_INVALID_CHAR: string
                                    public static ER_FRAG_WHEN_PATH_NULL: string
                                    public static ER_FRAG_FOR_GENERIC_URI: string
                                    public static ER_NO_SCHEME_IN_URI: string
                                    public static ER_CANNOT_INIT_URI_EMPTY_PARMS: string
                                    public static ER_NO_FRAGMENT_STRING_IN_PATH: string
                                    public static ER_NO_QUERY_STRING_IN_PATH: string
                                    public static ER_NO_PORT_IF_NO_HOST: string
                                    public static ER_NO_USERINFO_IF_NO_HOST: string
                                    public static ER_SCHEME_REQUIRED: string
                                    public static ER_XML_VERSION_NOT_SUPPORTED: string
                                    public static ER_FACTORY_PROPERTY_MISSING: string
                                    public static ER_ENCODING_NOT_SUPPORTED: string
                                    public constructor()
                                    public static class: java.lang.Class<any>
                                }
                                class SerializerMessages extends java.util.ListResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                class SerializerMessages_ca extends java.util.ListResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                class SerializerMessages_cs extends java.util.ListResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                class SerializerMessages_de extends java.util.ListResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                class SerializerMessages_en extends com.sun.org.apache.xml.internal.serializer.utils.SerializerMessages {
                                    public constructor()
                                    public static class: java.lang.Class<any>
                                }
                                class SerializerMessages_es extends java.util.ListResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                class SerializerMessages_fr extends java.util.ListResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                class SerializerMessages_it extends java.util.ListResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                class SerializerMessages_ja extends java.util.ListResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                class SerializerMessages_ko extends java.util.ListResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                class SerializerMessages_pt_BR extends java.util.ListResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                class SerializerMessages_sv extends java.util.ListResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                class SerializerMessages_zh_CN extends java.util.ListResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                class SerializerMessages_zh_TW extends java.util.ListResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                class StringToIntTable {
                                    public static INVALID_KEY: int
                                    public constructor()
                                    public constructor(arg0: int)
                                    public getLength(): int
                                    public put(arg0: java.lang.String | string, arg1: int): void
                                    public get(arg0: java.lang.String | string): int
                                    public getIgnoreCase(arg0: java.lang.String | string): int
                                    public contains(arg0: java.lang.String | string): boolean
                                    public keys(): java.lang.String[]
                                    public static class: java.lang.Class<any>
                                }
                                class SystemIDResolver {
                                    public constructor()
                                    public static getAbsoluteURIFromRelative(arg0: java.lang.String | string): string
                                    public static isAbsoluteURI(arg0: java.lang.String | string): boolean
                                    public static isAbsolutePath(arg0: java.lang.String | string): boolean
                                    public static getAbsoluteURI(arg0: java.lang.String | string): string
                                    public static getAbsoluteURI(arg0: java.lang.String | string, arg1: java.lang.String | string): string
                                    public static class: java.lang.Class<any>
                                }
                                class URI {
                                    public constructor()
                                    public constructor(arg0: com.sun.org.apache.xml.internal.serializer.utils.URI)
                                    public constructor(arg0: java.lang.String | string)
                                    public constructor(arg0: com.sun.org.apache.xml.internal.serializer.utils.URI, arg1: java.lang.String | string)
                                    public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string)
                                    public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string)
                                    public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: int, arg4: java.lang.String | string, arg5: java.lang.String | string, arg6: java.lang.String | string)
                                    public getScheme(): string
                                    public getSchemeSpecificPart(): string
                                    public getUserinfo(): string
                                    public getHost(): string
                                    public getPort(): int
                                    public getPath(arg0: boolean, arg1: boolean): string
                                    public getPath(): string
                                    public getQueryString(): string
                                    public getFragment(): string
                                    public setScheme(arg0: java.lang.String | string): void
                                    public setUserinfo(arg0: java.lang.String | string): void
                                    public setHost(arg0: java.lang.String | string): void
                                    public setPort(arg0: int): void
                                    public setPath(arg0: java.lang.String | string): void
                                    public appendPath(arg0: java.lang.String | string): void
                                    public setQueryString(arg0: java.lang.String | string): void
                                    public setFragment(arg0: java.lang.String | string): void
                                    public equals(arg0: java.lang.Object): boolean
                                    public hashCode(): int
                                    public toString(): string
                                    public isGenericURI(): boolean
                                    public static isConformantSchemeName(arg0: java.lang.String | string): boolean
                                    public static isWellFormedAddress(arg0: java.lang.String | string): boolean
                                    public static class: java.lang.Class<any>
                                }
                                class Utils {
                                    public static messages: com.sun.org.apache.xml.internal.serializer.utils.Messages
                                    public constructor()
                                    public static class: java.lang.Class<any>
                                }
                                class WrappedRuntimeException extends java.lang.RuntimeException {
                                    public constructor(arg0: java.lang.Exception)
                                    public constructor(arg0: java.lang.String | string, arg1: java.lang.Exception)
                                    public getException(): java.lang.Exception
                                    public static class: java.lang.Class<any>
                                }
                            }
                            class AttributesImplSerializer extends org.xml.sax.helpers.AttributesImpl {
                                public constructor()
                                public getIndex(arg0: java.lang.String | string): int
                                public addAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string): void
                                public clear(): void
                                public setAttributes(arg0: org.xml.sax.Attributes): void
                                public getIndex(arg0: java.lang.String | string, arg1: java.lang.String | string): int
                                public static class: java.lang.Class<any>
                            }
                            class CharInfo {
                                public static HTML_ENTITIES_RESOURCE: string
                                public static XML_ENTITIES_RESOURCE: string
                                public static S_HORIZONAL_TAB: char
                                public static S_LINEFEED: char
                                public static S_CARRIAGERETURN: char
                                public static class: java.lang.Class<any>
                            }
                            interface DOMSerializer {
                                serialize(arg0: org.w3c.dom.Node): void
                            }
                            interface DOMSerializer$$Lambda {
                                (arg0: org.w3c.dom.Node): void
                            }
                            class ElemContext {
                                public static class: java.lang.Class<any>
                            }
                            class ElemDesc {
                                public static ATTRURL: int
                                public static ATTREMPTY: int
                                public isAttrFlagSet(arg0: java.lang.String | string, arg1: int): boolean
                                public static class: java.lang.Class<any>
                            }
                            class EmptySerializer implements com.sun.org.apache.xml.internal.serializer.SerializationHandler {
                                protected static ERR: string
                                public constructor()
                                protected couldThrowIOException(): void
                                protected couldThrowSAXException(): void
                                protected couldThrowSAXException(arg0: char[], arg1: int, arg2: int): void
                                protected couldThrowSAXException(arg0: java.lang.String | string): void
                                public asContentHandler(): org.xml.sax.ContentHandler
                                public setContentHandler(arg0: org.xml.sax.ContentHandler): void
                                public close(): void
                                public getOutputFormat(): java.util.Properties
                                public getOutputStream(): java.io.OutputStream
                                public getWriter(): java.io.Writer
                                public reset(): boolean
                                public serialize(arg0: org.w3c.dom.Node): void
                                public setCdataSectionElements(arg0: java.util.Vector): void
                                public setEscaping(arg0: boolean): boolean
                                public setIndent(arg0: boolean): void
                                public setIndentAmount(arg0: int): void
                                public setIsStandalone(arg0: boolean): void
                                public setOutputFormat(arg0: java.util.Properties): void
                                public setOutputStream(arg0: java.io.OutputStream | java.io.OutputStream$$Lambda): void
                                public setVersion(arg0: java.lang.String | string): void
                                public setWriter(arg0: java.io.Writer | java.io.Writer$$Lambda): void
                                public setTransformer(arg0: javax.xml.transform.Transformer): void
                                public getTransformer(): javax.xml.transform.Transformer
                                public flushPending(): void
                                public addAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string, arg5: boolean): void
                                public addAttributes(arg0: org.xml.sax.Attributes): void
                                public addAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public characters(arg0: java.lang.String | string): void
                                public endElement(arg0: java.lang.String | string): void
                                public startDocument(): void
                                public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public startElement(arg0: java.lang.String | string): void
                                public namespaceAfterStartElement(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public startPrefixMapping(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: boolean): boolean
                                public entityReference(arg0: java.lang.String | string): void
                                public getNamespaceMappings(): com.sun.org.apache.xml.internal.serializer.NamespaceMappings
                                public getPrefix(arg0: java.lang.String | string): string
                                public getNamespaceURI(arg0: java.lang.String | string, arg1: boolean): string
                                public getNamespaceURIFromPrefix(arg0: java.lang.String | string): string
                                public setDocumentLocator(arg0: org.xml.sax.Locator): void
                                public endDocument(): void
                                public startPrefixMapping(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public endPrefixMapping(arg0: java.lang.String | string): void
                                public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: org.xml.sax.Attributes): void
                                public endElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public characters(arg0: char[], arg1: int, arg2: int): void
                                public ignorableWhitespace(arg0: char[], arg1: int, arg2: int): void
                                public processingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public skippedEntity(arg0: java.lang.String | string): void
                                public comment(arg0: java.lang.String | string): void
                                public startDTD(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public endDTD(): void
                                public startEntity(arg0: java.lang.String | string): void
                                public endEntity(arg0: java.lang.String | string): void
                                public startCDATA(): void
                                public endCDATA(): void
                                public comment(arg0: char[], arg1: int, arg2: int): void
                                public getDoctypePublic(): string
                                public getDoctypeSystem(): string
                                public getEncoding(): string
                                public getIndent(): boolean
                                public getIndentAmount(): int
                                public getMediaType(): string
                                public getOmitXMLDeclaration(): boolean
                                public getStandalone(): string
                                public getVersion(): string
                                public setDoctype(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public setDoctypePublic(arg0: java.lang.String | string): void
                                public setDoctypeSystem(arg0: java.lang.String | string): void
                                public setEncoding(arg0: java.lang.String | string): void
                                public setMediaType(arg0: java.lang.String | string): void
                                public setOmitXMLDeclaration(arg0: boolean): void
                                public setStandalone(arg0: java.lang.String | string): void
                                public elementDecl(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public attributeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string): void
                                public internalEntityDecl(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public externalEntityDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public warning(arg0: org.xml.sax.SAXParseException): void
                                public error(arg0: org.xml.sax.SAXParseException): void
                                public fatalError(arg0: org.xml.sax.SAXParseException): void
                                public asDOMSerializer(): com.sun.org.apache.xml.internal.serializer.DOMSerializer
                                public setNamespaceMappings(arg0: com.sun.org.apache.xml.internal.serializer.NamespaceMappings): void
                                public setSourceLocator(arg0: javax.xml.transform.SourceLocator): void
                                public addUniqueAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: int): void
                                public characters(arg0: org.w3c.dom.Node): void
                                public addXSLAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public addAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string): void
                                public notationDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public unparsedEntityDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string): void
                                public setDTDEntityExpansion(arg0: boolean): void
                                public static class: java.lang.Class<any>
                            }
                            class EncodingInfo {
                                public isInEncoding(arg0: char): boolean
                                public isInEncoding(arg0: char, arg1: char): boolean
                                public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string)
                                public static class: java.lang.Class<any>
                            }
                            class Encodings {
                                public constructor()
                                public static getLastPrintable(): int
                                public static convertMime2JavaEncoding(arg0: java.lang.String | string): string
                                public static class: java.lang.Class<any>
                            }
                            interface ExtendedContentHandler extends org.xml.sax.ContentHandler {
                                NO_BAD_CHARS: int
                                HTML_ATTREMPTY: int
                                HTML_ATTRURL: int
                                addAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string, arg5: boolean): void
                                addAttributes(arg0: org.xml.sax.Attributes): void
                                addAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                characters(arg0: java.lang.String | string): void
                                characters(arg0: org.w3c.dom.Node): void
                                endElement(arg0: java.lang.String | string): void
                                startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                startElement(arg0: java.lang.String | string): void
                                namespaceAfterStartElement(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                startPrefixMapping(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: boolean): boolean
                                entityReference(arg0: java.lang.String | string): void
                                getNamespaceMappings(): com.sun.org.apache.xml.internal.serializer.NamespaceMappings
                                getPrefix(arg0: java.lang.String | string): string
                                getNamespaceURI(arg0: java.lang.String | string, arg1: boolean): string
                                getNamespaceURIFromPrefix(arg0: java.lang.String | string): string
                                setSourceLocator(arg0: javax.xml.transform.SourceLocator): void
                                addUniqueAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: int): void
                                addXSLAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                addAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string): void
                            }
                            interface ExtendedLexicalHandler extends org.xml.sax.ext.LexicalHandler {
                                comment(arg0: java.lang.String | string): void
                            }
                            class Method {
                                public static XML: string
                                public static HTML: string
                                public static XHTML: string
                                public static TEXT: string
                                public static UNKNOWN: string
                                public static class: java.lang.Class<any>
                            }
                            class NamespaceMappings {
                                public constructor()
                                public lookupNamespace(arg0: java.lang.String | string): string
                                public lookupPrefix(arg0: java.lang.String | string): string
                                public generateNextPrefix(): string
                                public clone(): java.lang.Object
                                public static class: java.lang.Class<any>
                            }
                            class OutputPropertiesFactory {
                                public static S_BUILTIN_EXTENSIONS_UNIVERSAL: string
                                public static S_KEY_INDENT_AMOUNT: string
                                public static S_KEY_LINE_SEPARATOR: string
                                public static S_KEY_CONTENT_HANDLER: string
                                public static S_KEY_ENTITIES: string
                                public static S_USE_URL_ESCAPING: string
                                public static S_OMIT_META_TAG: string
                                public static S_BUILTIN_OLD_EXTENSIONS_UNIVERSAL: string
                                public static S_BUILTIN_OLD_EXTENSIONS_UNIVERSAL_LEN: int
                                public static ORACLE_IS_STANDALONE: string
                                public constructor()
                                public static getDefaultMethodProperties(arg0: java.lang.String | string): java.util.Properties
                                public static class: java.lang.Class<any>
                            }
                            class OutputPropertyUtils {
                                public constructor()
                                public static getBooleanProperty(arg0: java.lang.String | string, arg1: java.util.Properties): boolean
                                public static getIntProperty(arg0: java.lang.String | string, arg1: java.util.Properties): int
                                public static class: java.lang.Class<any>
                            }
                            interface SerializationHandler extends com.sun.org.apache.xml.internal.serializer.ExtendedContentHandler , com.sun.org.apache.xml.internal.serializer.ExtendedLexicalHandler , com.sun.org.apache.xml.internal.serializer.XSLOutputAttributes , org.xml.sax.ext.DeclHandler , org.xml.sax.DTDHandler , org.xml.sax.ErrorHandler , com.sun.org.apache.xml.internal.serializer.DOMSerializer , com.sun.org.apache.xml.internal.serializer.Serializer {
                                setContentHandler(arg0: org.xml.sax.ContentHandler): void
                                close(): void
                                serialize(arg0: org.w3c.dom.Node): void
                                setEscaping(arg0: boolean): boolean
                                setIndentAmount(arg0: int): void
                                setTransformer(arg0: javax.xml.transform.Transformer): void
                                getTransformer(): javax.xml.transform.Transformer
                                setNamespaceMappings(arg0: com.sun.org.apache.xml.internal.serializer.NamespaceMappings): void
                                flushPending(): void
                                setDTDEntityExpansion(arg0: boolean): void
                                setIsStandalone(arg0: boolean): void
                            }
                            interface Serializer {
                                setOutputStream(arg0: java.io.OutputStream | java.io.OutputStream$$Lambda): void
                                getOutputStream(): java.io.OutputStream
                                setWriter(arg0: java.io.Writer | java.io.Writer$$Lambda): void
                                getWriter(): java.io.Writer
                                setOutputFormat(arg0: java.util.Properties): void
                                getOutputFormat(): java.util.Properties
                                asContentHandler(): org.xml.sax.ContentHandler
                                asDOMSerializer(): com.sun.org.apache.xml.internal.serializer.DOMSerializer
                                reset(): boolean
                            }
                            abstract class SerializerBase implements com.sun.org.apache.xml.internal.serializer.SerializationHandler , com.sun.org.apache.xml.internal.serializer.SerializerConstants {
                                protected m_needToCallStartDocument: boolean
                                protected m_cdataTagOpen: boolean
                                protected m_attributes: com.sun.org.apache.xml.internal.serializer.AttributesImplSerializer
                                protected m_inEntityRef: boolean
                                protected m_inExternalDTD: boolean
                                protected m_standaloneWasSpecified: boolean
                                protected m_isStandalone: boolean
                                protected m_doIndent: boolean
                                protected m_indentAmount: int
                                protected m_cdataSectionElements: java.util.Vector
                                protected m_prefixMap: com.sun.org.apache.xml.internal.serializer.NamespaceMappings
                                protected m_tracer: com.sun.org.apache.xml.internal.serializer.SerializerTrace
                                protected m_sourceLocator: javax.xml.transform.SourceLocator
                                protected m_writer: java.io.Writer
                                protected m_elemContext: com.sun.org.apache.xml.internal.serializer.ElemContext
                                protected m_charsBuff: char[]
                                protected m_attrBuff: char[]
                                protected m_needToCallSetDocumentInfo: boolean
                                public constructor()
                                protected fireEndElem(arg0: java.lang.String | string): void
                                protected fireCharEvent(arg0: char[], arg1: int, arg2: int): void
                                public comment(arg0: java.lang.String | string): void
                                protected patchName(arg0: java.lang.String | string): string
                                protected static getLocalName(arg0: java.lang.String | string): string
                                public setDocumentLocator(arg0: org.xml.sax.Locator): void
                                public addAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string, arg5: boolean): void
                                public addAttributeAlways(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string, arg5: boolean): boolean
                                public addAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public addXSLAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public addAttributes(arg0: org.xml.sax.Attributes): void
                                public asContentHandler(): org.xml.sax.ContentHandler
                                public endEntity(arg0: java.lang.String | string): void
                                public close(): void
                                protected initCDATA(): void
                                public getEncoding(): string
                                public setEncoding(arg0: java.lang.String | string): void
                                public setOmitXMLDeclaration(arg0: boolean): void
                                public getOmitXMLDeclaration(): boolean
                                public getDoctypePublic(): string
                                public setDoctypePublic(arg0: java.lang.String | string): void
                                public getDoctypeSystem(): string
                                public setDoctypeSystem(arg0: java.lang.String | string): void
                                public setDoctype(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public setStandalone(arg0: java.lang.String | string): void
                                protected setStandaloneInternal(arg0: java.lang.String | string): void
                                public getStandalone(): string
                                public getIndent(): boolean
                                public getMediaType(): string
                                public getVersion(): string
                                public setVersion(arg0: java.lang.String | string): void
                                public setMediaType(arg0: java.lang.String | string): void
                                public getIndentAmount(): int
                                public setIndentAmount(arg0: int): void
                                public setIndent(arg0: boolean): void
                                public setIsStandalone(arg0: boolean): void
                                public namespaceAfterStartElement(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public asDOMSerializer(): com.sun.org.apache.xml.internal.serializer.DOMSerializer
                                protected isCdataSection(): boolean
                                protected static getPrefixPart(arg0: java.lang.String | string): string
                                public getNamespaceMappings(): com.sun.org.apache.xml.internal.serializer.NamespaceMappings
                                public getPrefix(arg0: java.lang.String | string): string
                                public getNamespaceURI(arg0: java.lang.String | string, arg1: boolean): string
                                public getNamespaceURIFromPrefix(arg0: java.lang.String | string): string
                                public entityReference(arg0: java.lang.String | string): void
                                public setTransformer(arg0: javax.xml.transform.Transformer): void
                                public getTransformer(): javax.xml.transform.Transformer
                                public characters(arg0: org.w3c.dom.Node): void
                                public error(arg0: org.xml.sax.SAXParseException): void
                                public fatalError(arg0: org.xml.sax.SAXParseException): void
                                public warning(arg0: org.xml.sax.SAXParseException): void
                                protected fireStartEntity(arg0: java.lang.String | string): void
                                protected fireCDATAEvent(arg0: char[], arg1: int, arg2: int): void
                                protected fireCommentEvent(arg0: char[], arg1: int, arg2: int): void
                                public fireEndEntity(arg0: java.lang.String | string): void
                                protected fireStartDoc(): void
                                protected fireEndDoc(): void
                                protected fireStartElem(arg0: java.lang.String | string): void
                                protected fireEscapingEvent(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                protected fireEntityReference(arg0: java.lang.String | string): void
                                public startDocument(): void
                                protected startDocumentInternal(): void
                                protected setDocumentInfo(): void
                                public setSourceLocator(arg0: javax.xml.transform.SourceLocator): void
                                public setNamespaceMappings(arg0: com.sun.org.apache.xml.internal.serializer.NamespaceMappings): void
                                public reset(): boolean
                                public addAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string): void
                                public notationDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public unparsedEntityDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string): void
                                public setDTDEntityExpansion(arg0: boolean): void
                                public static class: java.lang.Class<any>
                            }
                            interface SerializerConstants {
                                CDATA_CONTINUE: string
                                CDATA_DELIMITER_CLOSE: string
                                CDATA_DELIMITER_OPEN: string
                                EMPTYSTRING: string
                                ENTITY_AMP: string
                                ENTITY_CRLF: string
                                ENTITY_GT: string
                                ENTITY_LT: string
                                ENTITY_QUOT: string
                                XML_PREFIX: string
                                XMLNS_PREFIX: string
                                XMLNS_URI: string
                                DEFAULT_SAX_SERIALIZER: string
                                XMLVERSION11: string
                                XMLVERSION10: string
                            }
                            class SerializerFactory {
                                public static getSerializer(arg0: java.util.Properties): com.sun.org.apache.xml.internal.serializer.Serializer
                                public static class: java.lang.Class<any>
                            }
                            interface SerializerTrace {
                                EVENTTYPE_STARTDOCUMENT: int
                                EVENTTYPE_ENDDOCUMENT: int
                                EVENTTYPE_STARTELEMENT: int
                                EVENTTYPE_ENDELEMENT: int
                                EVENTTYPE_CHARACTERS: int
                                EVENTTYPE_IGNORABLEWHITESPACE: int
                                EVENTTYPE_PI: int
                                EVENTTYPE_COMMENT: int
                                EVENTTYPE_ENTITYREF: int
                                EVENTTYPE_CDATA: int
                                EVENTTYPE_OUTPUT_PSEUDO_CHARACTERS: int
                                EVENTTYPE_OUTPUT_CHARACTERS: int
                                hasTraceListeners(): boolean
                                fireGenerateEvent(arg0: int): void
                                fireGenerateEvent(arg0: int, arg1: java.lang.String | string, arg2: org.xml.sax.Attributes): void
                                fireGenerateEvent(arg0: int, arg1: char[], arg2: int, arg3: int): void
                                fireGenerateEvent(arg0: int, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                fireGenerateEvent(arg0: int, arg1: java.lang.String | string): void
                            }
                            class SerializerTraceWriter extends java.io.Writer implements com.sun.org.apache.xml.internal.serializer.WriterChain {
                                public constructor(arg0: java.io.Writer | java.io.Writer$$Lambda, arg1: com.sun.org.apache.xml.internal.serializer.SerializerTrace)
                                public flush(): void
                                public close(): void
                                public write(arg0: int): void
                                public write(arg0: char[], arg1: int, arg2: int): void
                                public write(arg0: java.lang.String | string): void
                                public getWriter(): java.io.Writer
                                public getOutputStream(): java.io.OutputStream
                                public static class: java.lang.Class<any>
                            }
                            class ToHTMLSAXHandler extends com.sun.org.apache.xml.internal.serializer.ToSAXHandler {
                                protected m_escapeSetting: boolean
                                public getOutputFormat(): java.util.Properties
                                public getOutputStream(): java.io.OutputStream
                                public getWriter(): java.io.Writer
                                public indent(arg0: int): void
                                public serialize(arg0: org.w3c.dom.Node): void
                                public setEscaping(arg0: boolean): boolean
                                public setIndent(arg0: boolean): void
                                public setOutputFormat(arg0: java.util.Properties): void
                                public setOutputStream(arg0: java.io.OutputStream | java.io.OutputStream$$Lambda): void
                                public setWriter(arg0: java.io.Writer | java.io.Writer$$Lambda): void
                                public attributeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string): void
                                public elementDecl(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public externalEntityDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public internalEntityDecl(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public endElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public endPrefixMapping(arg0: java.lang.String | string): void
                                public ignorableWhitespace(arg0: char[], arg1: int, arg2: int): void
                                public processingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public setDocumentLocator(arg0: org.xml.sax.Locator): void
                                public skippedEntity(arg0: java.lang.String | string): void
                                public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: org.xml.sax.Attributes): void
                                public comment(arg0: char[], arg1: int, arg2: int): void
                                public endCDATA(): void
                                public endDTD(): void
                                public startCDATA(): void
                                public startEntity(arg0: java.lang.String | string): void
                                public endDocument(): void
                                protected closeStartTag(): void
                                public close(): void
                                public characters(arg0: java.lang.String | string): void
                                public constructor(arg0: org.xml.sax.ContentHandler, arg1: java.lang.String | string)
                                public constructor(arg0: org.xml.sax.ContentHandler, arg1: org.xml.sax.ext.LexicalHandler, arg2: java.lang.String | string)
                                public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public startElement(arg0: java.lang.String | string): void
                                public endElement(arg0: java.lang.String | string): void
                                public characters(arg0: char[], arg1: int, arg2: int): void
                                public flushPending(): void
                                public startPrefixMapping(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: boolean): boolean
                                public startPrefixMapping(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public namespaceAfterStartElement(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public reset(): boolean
                                public static class: java.lang.Class<any>
                            }
                            class ToHTMLStream extends com.sun.org.apache.xml.internal.serializer.ToStream {
                                protected m_inDTD: boolean
                                public setSpecialEscapeURLs(arg0: boolean): void
                                public setOmitMetaTag(arg0: boolean): void
                                public setOutputFormat(arg0: java.util.Properties): void
                                public static getElemDesc(arg0: java.lang.String | string): com.sun.org.apache.xml.internal.serializer.ElemDesc
                                public constructor()
                                protected startDocumentInternal(): void
                                public endDocument(): void
                                public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: org.xml.sax.Attributes): void
                                public endElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                protected processAttribute(arg0: java.io.Writer | java.io.Writer$$Lambda, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: com.sun.org.apache.xml.internal.serializer.ElemDesc): void
                                public writeAttrURI(arg0: java.io.Writer | java.io.Writer$$Lambda, arg1: java.lang.String | string, arg2: boolean): void
                                public writeAttrString(arg0: java.io.Writer | java.io.Writer$$Lambda, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public characters(arg0: char[], arg1: int, arg2: int): void
                                public cdata(arg0: char[], arg1: int, arg2: int): void
                                public processingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public entityReference(arg0: java.lang.String | string): void
                                public endElement(arg0: java.lang.String | string): void
                                public processAttributes(arg0: java.io.Writer | java.io.Writer$$Lambda, arg1: int): void
                                protected closeStartTag(): void
                                protected init(arg0: java.io.OutputStream | java.io.OutputStream$$Lambda, arg1: java.util.Properties): void
                                public setOutputStream(arg0: java.io.OutputStream | java.io.OutputStream$$Lambda): void
                                public namespaceAfterStartElement(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public startDTD(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public endDTD(): void
                                public attributeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string): void
                                public elementDecl(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public internalEntityDecl(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public externalEntityDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public addUniqueAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: int): void
                                public comment(arg0: char[], arg1: int, arg2: int): void
                                public reset(): boolean
                                public static class: java.lang.Class<any>
                            }
                            abstract class ToSAXHandler extends com.sun.org.apache.xml.internal.serializer.SerializerBase {
                                protected m_saxHandler: org.xml.sax.ContentHandler
                                protected m_lexHandler: org.xml.sax.ext.LexicalHandler
                                protected m_state: com.sun.org.apache.xml.internal.serializer.TransformStateSetter
                                public constructor()
                                public constructor(arg0: org.xml.sax.ContentHandler, arg1: org.xml.sax.ext.LexicalHandler, arg2: java.lang.String | string)
                                public constructor(arg0: org.xml.sax.ContentHandler, arg1: java.lang.String | string)
                                protected startDocumentInternal(): void
                                public startDTD(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public characters(arg0: java.lang.String | string): void
                                public comment(arg0: java.lang.String | string): void
                                public processingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                protected closeStartTag(): void
                                protected closeCDATA(): void
                                public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: org.xml.sax.Attributes): void
                                public setLexHandler(arg0: org.xml.sax.ext.LexicalHandler): void
                                public setContentHandler(arg0: org.xml.sax.ContentHandler): void
                                public setCdataSectionElements(arg0: java.util.Vector): void
                                public setShouldOutputNSAttr(arg0: boolean): void
                                public flushPending(): void
                                public setTransformState(arg0: com.sun.org.apache.xml.internal.serializer.TransformStateSetter): void
                                public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public startElement(arg0: java.lang.String | string): void
                                public characters(arg0: org.w3c.dom.Node): void
                                public fatalError(arg0: org.xml.sax.SAXParseException): void
                                public error(arg0: org.xml.sax.SAXParseException): void
                                public warning(arg0: org.xml.sax.SAXParseException): void
                                public reset(): boolean
                                public addUniqueAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: int): void
                                public static class: java.lang.Class<any>
                            }
                            abstract class ToStream extends com.sun.org.apache.xml.internal.serializer.SerializerBase {
                                protected m_disableOutputEscapingStates: com.sun.org.apache.xml.internal.serializer.ToStream$BoolStack
                                protected m_preserves: com.sun.org.apache.xml.internal.serializer.ToStream$BoolStack
                                protected m_ispreserve: boolean
                                protected m_isprevtext: boolean
                                protected m_maxCharacter: int
                                protected m_lineSep: char[]
                                protected m_lineSepUse: boolean
                                protected m_lineSepLen: int
                                protected m_charInfo: com.sun.org.apache.xml.internal.serializer.CharInfo
                                protected m_spaceBeforeClose: boolean
                                protected m_inDoctype: boolean
                                protected m_format: java.util.Properties
                                protected m_cdataStartCalled: boolean
                                public constructor()
                                protected closeCDATA(): void
                                public serialize(arg0: org.w3c.dom.Node): void
                                protected flushWriter(): void
                                public getOutputStream(): java.io.OutputStream
                                public elementDecl(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public internalEntityDecl(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                protected outputLineSep(): void
                                public setOutputFormat(arg0: java.util.Properties): void
                                protected init(arg0: java.io.OutputStream | java.io.OutputStream$$Lambda, arg1: java.util.Properties, arg2: boolean): void
                                public getOutputFormat(): java.util.Properties
                                public setWriter(arg0: java.io.Writer | java.io.Writer$$Lambda): void
                                public setLineSepUse(arg0: boolean): boolean
                                public setOutputStream(arg0: java.io.OutputStream | java.io.OutputStream$$Lambda): void
                                public setEscaping(arg0: boolean): boolean
                                protected indent(arg0: int): void
                                protected indent(): void
                                public attributeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string): void
                                public getWriter(): java.io.Writer
                                public externalEntityDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                protected escapingNotNeeded(arg0: char): boolean
                                protected writeUTF16Surrogate(arg0: char, arg1: char[], arg2: int, arg3: int): int
                                protected accumDefaultEntity(arg0: java.io.Writer | java.io.Writer$$Lambda, arg1: char, arg2: int, arg3: char[], arg4: int, arg5: boolean, arg6: boolean): int
                                public endNonEscaping(): void
                                public startNonEscaping(): void
                                protected cdata(arg0: char[], arg1: int, arg2: int): void
                                protected charactersRaw(arg0: char[], arg1: int, arg2: int): void
                                public characters(arg0: char[], arg1: int, arg2: int): void
                                public characters(arg0: java.lang.String | string): void
                                protected accumDefaultEscape(arg0: java.io.Writer | java.io.Writer$$Lambda, arg1: char, arg2: int, arg3: char[], arg4: int, arg5: boolean, arg6: boolean): int
                                public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: org.xml.sax.Attributes): void
                                public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public startElement(arg0: java.lang.String | string): void
                                public processAttributes(arg0: java.io.Writer | java.io.Writer$$Lambda, arg1: int): void
                                public writeAttrString(arg0: java.io.Writer | java.io.Writer$$Lambda, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public endElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public endElement(arg0: java.lang.String | string): void
                                public startPrefixMapping(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public startPrefixMapping(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: boolean): boolean
                                public comment(arg0: char[], arg1: int, arg2: int): void
                                public endCDATA(): void
                                public endDTD(): void
                                public endPrefixMapping(arg0: java.lang.String | string): void
                                public ignorableWhitespace(arg0: char[], arg1: int, arg2: int): void
                                public skippedEntity(arg0: java.lang.String | string): void
                                public startCDATA(): void
                                public startEntity(arg0: java.lang.String | string): void
                                protected closeStartTag(): void
                                public startDTD(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public getIndentAmount(): int
                                public setIndentAmount(arg0: int): void
                                protected shouldIndent(): boolean
                                public setCdataSectionElements(arg0: java.util.Vector): void
                                protected ensureAttributesNamespaceIsDeclared(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): string
                                public flushPending(): void
                                public setContentHandler(arg0: org.xml.sax.ContentHandler): void
                                public addAttributeAlways(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string, arg5: boolean): boolean
                                protected firePseudoAttributes(): void
                                public setTransformer(arg0: javax.xml.transform.Transformer): void
                                public reset(): boolean
                                public setEncoding(arg0: java.lang.String | string): void
                                public notationDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public unparsedEntityDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string): void
                                public setDTDEntityExpansion(arg0: boolean): void
                                public static class: java.lang.Class<any>
                            }
                            class ToTextSAXHandler extends com.sun.org.apache.xml.internal.serializer.ToSAXHandler {
                                public endElement(arg0: java.lang.String | string): void
                                public endElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public constructor(arg0: org.xml.sax.ContentHandler, arg1: org.xml.sax.ext.LexicalHandler, arg2: java.lang.String | string)
                                public constructor(arg0: org.xml.sax.ContentHandler, arg1: java.lang.String | string)
                                public comment(arg0: char[], arg1: int, arg2: int): void
                                public comment(arg0: java.lang.String | string): void
                                public getOutputFormat(): java.util.Properties
                                public getOutputStream(): java.io.OutputStream
                                public getWriter(): java.io.Writer
                                public indent(arg0: int): void
                                public reset(): boolean
                                public serialize(arg0: org.w3c.dom.Node): void
                                public setEscaping(arg0: boolean): boolean
                                public setIndent(arg0: boolean): void
                                public setOutputFormat(arg0: java.util.Properties): void
                                public setOutputStream(arg0: java.io.OutputStream | java.io.OutputStream$$Lambda): void
                                public setWriter(arg0: java.io.Writer | java.io.Writer$$Lambda): void
                                public addAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string, arg5: boolean): void
                                public attributeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string): void
                                public elementDecl(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public externalEntityDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public internalEntityDecl(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public endPrefixMapping(arg0: java.lang.String | string): void
                                public ignorableWhitespace(arg0: char[], arg1: int, arg2: int): void
                                public processingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public setDocumentLocator(arg0: org.xml.sax.Locator): void
                                public skippedEntity(arg0: java.lang.String | string): void
                                public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: org.xml.sax.Attributes): void
                                public endCDATA(): void
                                public endDTD(): void
                                public startCDATA(): void
                                public startEntity(arg0: java.lang.String | string): void
                                public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public startElement(arg0: java.lang.String | string): void
                                public endDocument(): void
                                public characters(arg0: java.lang.String | string): void
                                public characters(arg0: char[], arg1: int, arg2: int): void
                                public addAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public startPrefixMapping(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: boolean): boolean
                                public startPrefixMapping(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public namespaceAfterStartElement(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public static class: java.lang.Class<any>
                            }
                            class ToTextStream extends com.sun.org.apache.xml.internal.serializer.ToStream {
                                public constructor()
                                protected startDocumentInternal(): void
                                public endDocument(): void
                                public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: org.xml.sax.Attributes): void
                                public endElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public characters(arg0: char[], arg1: int, arg2: int): void
                                public charactersRaw(arg0: char[], arg1: int, arg2: int): void
                                public cdata(arg0: char[], arg1: int, arg2: int): void
                                public ignorableWhitespace(arg0: char[], arg1: int, arg2: int): void
                                public processingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public comment(arg0: java.lang.String | string): void
                                public comment(arg0: char[], arg1: int, arg2: int): void
                                public entityReference(arg0: java.lang.String | string): void
                                public addAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string, arg5: boolean): void
                                public endCDATA(): void
                                public endElement(arg0: java.lang.String | string): void
                                public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public characters(arg0: java.lang.String | string): void
                                public addAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public addUniqueAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: int): void
                                public startPrefixMapping(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: boolean): boolean
                                public startPrefixMapping(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public namespaceAfterStartElement(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public flushPending(): void
                                public static class: java.lang.Class<any>
                            }
                            class ToUnknownStream extends com.sun.org.apache.xml.internal.serializer.SerializerBase {
                                public constructor()
                                public asContentHandler(): org.xml.sax.ContentHandler
                                public close(): void
                                public getOutputFormat(): java.util.Properties
                                public getOutputStream(): java.io.OutputStream
                                public getWriter(): java.io.Writer
                                public reset(): boolean
                                public serialize(arg0: org.w3c.dom.Node): void
                                public setEscaping(arg0: boolean): boolean
                                public setOutputFormat(arg0: java.util.Properties): void
                                public setOutputStream(arg0: java.io.OutputStream | java.io.OutputStream$$Lambda): void
                                public setWriter(arg0: java.io.Writer | java.io.Writer$$Lambda): void
                                public addAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string): void
                                public addAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string, arg5: boolean): void
                                public addAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public addUniqueAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: int): void
                                public characters(arg0: java.lang.String | string): void
                                public endElement(arg0: java.lang.String | string): void
                                public startPrefixMapping(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public namespaceAfterStartElement(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public startPrefixMapping(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: boolean): boolean
                                public setVersion(arg0: java.lang.String | string): void
                                public startDocument(): void
                                public startElement(arg0: java.lang.String | string): void
                                public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: org.xml.sax.Attributes): void
                                public comment(arg0: java.lang.String | string): void
                                public getDoctypePublic(): string
                                public getDoctypeSystem(): string
                                public getEncoding(): string
                                public getIndent(): boolean
                                public getIndentAmount(): int
                                public getMediaType(): string
                                public getOmitXMLDeclaration(): boolean
                                public getStandalone(): string
                                public getVersion(): string
                                public setDoctype(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public setDoctypePublic(arg0: java.lang.String | string): void
                                public setDoctypeSystem(arg0: java.lang.String | string): void
                                public setEncoding(arg0: java.lang.String | string): void
                                public setIndent(arg0: boolean): void
                                public setIndentAmount(arg0: int): void
                                public setMediaType(arg0: java.lang.String | string): void
                                public setOmitXMLDeclaration(arg0: boolean): void
                                public setStandalone(arg0: java.lang.String | string): void
                                public attributeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string): void
                                public elementDecl(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public externalEntityDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public internalEntityDecl(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public characters(arg0: char[], arg1: int, arg2: int): void
                                public endDocument(): void
                                public endElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public endPrefixMapping(arg0: java.lang.String | string): void
                                public ignorableWhitespace(arg0: char[], arg1: int, arg2: int): void
                                public processingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public setDocumentLocator(arg0: org.xml.sax.Locator): void
                                public skippedEntity(arg0: java.lang.String | string): void
                                public comment(arg0: char[], arg1: int, arg2: int): void
                                public endCDATA(): void
                                public endDTD(): void
                                public endEntity(arg0: java.lang.String | string): void
                                public startCDATA(): void
                                public startDTD(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public startEntity(arg0: java.lang.String | string): void
                                public asDOMSerializer(): com.sun.org.apache.xml.internal.serializer.DOMSerializer
                                public setCdataSectionElements(arg0: java.util.Vector): void
                                public addAttributes(arg0: org.xml.sax.Attributes): void
                                public getNamespaceMappings(): com.sun.org.apache.xml.internal.serializer.NamespaceMappings
                                public flushPending(): void
                                public getPrefix(arg0: java.lang.String | string): string
                                public entityReference(arg0: java.lang.String | string): void
                                public getNamespaceURI(arg0: java.lang.String | string, arg1: boolean): string
                                public getNamespaceURIFromPrefix(arg0: java.lang.String | string): string
                                public setTransformer(arg0: javax.xml.transform.Transformer): void
                                public getTransformer(): javax.xml.transform.Transformer
                                public setContentHandler(arg0: org.xml.sax.ContentHandler): void
                                public setSourceLocator(arg0: javax.xml.transform.SourceLocator): void
                                protected firePseudoElement(arg0: java.lang.String | string): void
                                public static class: java.lang.Class<any>
                            }
                            class ToXMLSAXHandler extends com.sun.org.apache.xml.internal.serializer.ToSAXHandler {
                                protected m_escapeSetting: boolean
                                public constructor()
                                public getOutputFormat(): java.util.Properties
                                public getOutputStream(): java.io.OutputStream
                                public getWriter(): java.io.Writer
                                public indent(arg0: int): void
                                public serialize(arg0: org.w3c.dom.Node): void
                                public setEscaping(arg0: boolean): boolean
                                public setOutputFormat(arg0: java.util.Properties): void
                                public setOutputStream(arg0: java.io.OutputStream | java.io.OutputStream$$Lambda): void
                                public setWriter(arg0: java.io.Writer | java.io.Writer$$Lambda): void
                                public attributeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string): void
                                public elementDecl(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public externalEntityDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public internalEntityDecl(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public endDocument(): void
                                protected closeStartTag(): void
                                public closeCDATA(): void
                                public endElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public endPrefixMapping(arg0: java.lang.String | string): void
                                public ignorableWhitespace(arg0: char[], arg1: int, arg2: int): void
                                public setDocumentLocator(arg0: org.xml.sax.Locator): void
                                public skippedEntity(arg0: java.lang.String | string): void
                                public startPrefixMapping(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public startPrefixMapping(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: boolean): boolean
                                public comment(arg0: char[], arg1: int, arg2: int): void
                                public endCDATA(): void
                                public endDTD(): void
                                public startEntity(arg0: java.lang.String | string): void
                                public characters(arg0: java.lang.String | string): void
                                public constructor(arg0: org.xml.sax.ContentHandler, arg1: java.lang.String | string)
                                public constructor(arg0: org.xml.sax.ContentHandler, arg1: org.xml.sax.ext.LexicalHandler, arg2: java.lang.String | string)
                                public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public startElement(arg0: java.lang.String | string): void
                                public characters(arg0: char[], arg1: int, arg2: int): void
                                public endElement(arg0: java.lang.String | string): void
                                public namespaceAfterStartElement(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public processingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                protected popNamespace(arg0: java.lang.String | string): boolean
                                public startCDATA(): void
                                public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: org.xml.sax.Attributes): void
                                public addAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string, arg5: boolean): void
                                public reset(): boolean
                                public static class: java.lang.Class<any>
                            }
                            class ToXMLStream extends com.sun.org.apache.xml.internal.serializer.ToStream {
                                public constructor()
                                public CopyFrom(arg0: com.sun.org.apache.xml.internal.serializer.ToXMLStream): void
                                public startDocumentInternal(): void
                                public endDocument(): void
                                public startPreserving(): void
                                public endPreserving(): void
                                public processingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public entityReference(arg0: java.lang.String | string): void
                                public addUniqueAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: int): void
                                public addAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string, arg5: boolean): void
                                public endElement(arg0: java.lang.String | string): void
                                public namespaceAfterStartElement(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                protected pushNamespace(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                                public reset(): boolean
                                public static class: java.lang.Class<any>
                            }
                            interface TransformStateSetter {
                                setCurrentNode(arg0: org.w3c.dom.Node): void
                                resetState(arg0: javax.xml.transform.Transformer): void
                            }
                            class TreeWalker {
                                public getContentHandler(): org.xml.sax.ContentHandler
                                public constructor(arg0: org.xml.sax.ContentHandler)
                                public constructor(arg0: org.xml.sax.ContentHandler, arg1: java.lang.String | string)
                                public traverse(arg0: org.w3c.dom.Node): void
                                public traverse(arg0: org.w3c.dom.Node, arg1: org.w3c.dom.Node): void
                                protected startNode(arg0: org.w3c.dom.Node): void
                                protected endNode(arg0: org.w3c.dom.Node): void
                                public static class: java.lang.Class<any>
                            }
                            class Version {
                                public constructor()
                                public static getVersion(): string
                                public static _main(arg0: java.lang.String[]): void
                                public static getProduct(): string
                                public static getImplementationLanguage(): string
                                public static getMajorVersionNum(): int
                                public static getReleaseVersionNum(): int
                                public static getMaintenanceVersionNum(): int
                                public static getDevelopmentVersionNum(): int
                                public static class: java.lang.Class<any>
                            }
                            interface WriterChain {
                                write(arg0: int): void
                                write(arg0: char[]): void
                                write(arg0: char[], arg1: int, arg2: int): void
                                write(arg0: java.lang.String | string): void
                                write(arg0: java.lang.String | string, arg1: int, arg2: int): void
                                flush(): void
                                close(): void
                                getWriter(): java.io.Writer
                                getOutputStream(): java.io.OutputStream
                            }
                            class WriterToASCI extends java.io.Writer implements com.sun.org.apache.xml.internal.serializer.WriterChain {
                                public constructor(arg0: java.io.OutputStream | java.io.OutputStream$$Lambda)
                                public write(arg0: char[], arg1: int, arg2: int): void
                                public write(arg0: int): void
                                public write(arg0: java.lang.String | string): void
                                public flush(): void
                                public close(): void
                                public getOutputStream(): java.io.OutputStream
                                public getWriter(): java.io.Writer
                                public static class: java.lang.Class<any>
                            }
                            class WriterToUTF8Buffered extends java.io.Writer implements com.sun.org.apache.xml.internal.serializer.WriterChain {
                                public constructor(arg0: java.io.OutputStream | java.io.OutputStream$$Lambda)
                                public write(arg0: int): void
                                public write(arg0: char[], arg1: int, arg2: int): void
                                public write(arg0: java.lang.String | string): void
                                public flushBuffer(): void
                                public flush(): void
                                public close(): void
                                public getOutputStream(): java.io.OutputStream
                                public getWriter(): java.io.Writer
                                public static class: java.lang.Class<any>
                            }
                            interface XSLOutputAttributes {
                                getDoctypePublic(): string
                                getDoctypeSystem(): string
                                getEncoding(): string
                                getIndent(): boolean
                                getIndentAmount(): int
                                getMediaType(): string
                                getOmitXMLDeclaration(): boolean
                                getStandalone(): string
                                getVersion(): string
                                setCdataSectionElements(arg0: java.util.Vector): void
                                setDoctype(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                setDoctypePublic(arg0: java.lang.String | string): void
                                setDoctypeSystem(arg0: java.lang.String | string): void
                                setEncoding(arg0: java.lang.String | string): void
                                setIndent(arg0: boolean): void
                                setMediaType(arg0: java.lang.String | string): void
                                setOmitXMLDeclaration(arg0: boolean): void
                                setStandalone(arg0: java.lang.String | string): void
                                setVersion(arg0: java.lang.String | string): void
                            }
                        }
                        namespace utils {
                            namespace res {
                                class CharArrayWrapper {
                                    public constructor(arg0: char[])
                                    public getChar(arg0: int): char
                                    public getLength(): int
                                    public static class: java.lang.Class<any>
                                }
                                class IntArrayWrapper {
                                    public constructor(arg0: int[])
                                    public getInt(arg0: int): int
                                    public getLength(): int
                                    public static class: java.lang.Class<any>
                                }
                                class LongArrayWrapper {
                                    public constructor(arg0: long[])
                                    public getLong(arg0: int): long
                                    public getLength(): int
                                    public static class: java.lang.Class<any>
                                }
                                class StringArrayWrapper {
                                    public constructor(arg0: java.lang.String[])
                                    public getString(arg0: int): string
                                    public getLength(): int
                                    public static class: java.lang.Class<any>
                                }
                                class XResourceBundle extends java.util.ListResourceBundle {
                                    public static ERROR_RESOURCES: string
                                    public static XSLT_RESOURCE: string
                                    public static LANG_BUNDLE_NAME: string
                                    public static MULT_ORDER: string
                                    public static MULT_PRECEDES: string
                                    public static MULT_FOLLOWS: string
                                    public static LANG_ORIENTATION: string
                                    public static LANG_RIGHTTOLEFT: string
                                    public static LANG_LEFTTORIGHT: string
                                    public static LANG_NUMBERING: string
                                    public static LANG_ADDITIVE: string
                                    public static LANG_MULT_ADD: string
                                    public static LANG_MULTIPLIER: string
                                    public static LANG_MULTIPLIER_CHAR: string
                                    public static LANG_NUMBERGROUPS: string
                                    public static LANG_NUM_TABLES: string
                                    public static LANG_ALPHABET: string
                                    public static LANG_TRAD_ALPHABET: string
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                abstract class XResourceBundleBase extends java.util.ListResourceBundle {
                                    public constructor()
                                    public getMessageKey(arg0: int): string
                                    public getWarningKey(arg0: int): string
                                    public static class: java.lang.Class<any>
                                }
                                class XResources_de extends com.sun.org.apache.xml.internal.utils.res.XResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                class XResources_en extends com.sun.org.apache.xml.internal.utils.res.XResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                class XResources_es extends com.sun.org.apache.xml.internal.utils.res.XResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                class XResources_fr extends com.sun.org.apache.xml.internal.utils.res.XResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                class XResources_it extends com.sun.org.apache.xml.internal.utils.res.XResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                class XResources_ja_JP_A extends com.sun.org.apache.xml.internal.utils.res.XResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                class XResources_ja_JP_HA extends com.sun.org.apache.xml.internal.utils.res.XResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                class XResources_ja_JP_HI extends com.sun.org.apache.xml.internal.utils.res.XResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                class XResources_ja_JP_I extends com.sun.org.apache.xml.internal.utils.res.XResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                class XResources_ko extends com.sun.org.apache.xml.internal.utils.res.XResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                class XResources_sv extends com.sun.org.apache.xml.internal.utils.res.XResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                class XResources_zh_CN extends com.sun.org.apache.xml.internal.utils.res.XResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                                class XResources_zh_TW extends com.sun.org.apache.xml.internal.utils.res.XResourceBundle {
                                    public constructor()
                                    public getContents(): java.lang.Object[][]
                                    public static class: java.lang.Class<any>
                                }
                            }
                            class AttList implements org.xml.sax.Attributes {
                                public constructor(arg0: org.w3c.dom.NamedNodeMap)
                                public getLength(): int
                                public getURI(arg0: int): string
                                public getLocalName(arg0: int): string
                                public getQName(arg0: int): string
                                public getType(arg0: int): string
                                public getValue(arg0: int): string
                                public getType(arg0: java.lang.String | string): string
                                public getType(arg0: java.lang.String | string, arg1: java.lang.String | string): string
                                public getValue(arg0: java.lang.String | string): string
                                public getValue(arg0: java.lang.String | string, arg1: java.lang.String | string): string
                                public getIndex(arg0: java.lang.String | string, arg1: java.lang.String | string): int
                                public getIndex(arg0: java.lang.String | string): int
                                public static class: java.lang.Class<any>
                            }
                            class BoolStack implements java.lang.Cloneable {
                                public constructor()
                                public constructor(arg0: int)
                                public size(): int
                                public clear(): void
                                public push(arg0: boolean): boolean
                                public pop(): boolean
                                public popAndTop(): boolean
                                public setTop(arg0: boolean): void
                                public peek(): boolean
                                public peekOrFalse(): boolean
                                public peekOrTrue(): boolean
                                public isEmpty(): boolean
                                public clone(): java.lang.Object
                                public static class: java.lang.Class<any>
                            }
                            class CharKey {
                                public constructor(arg0: char)
                                public constructor()
                                public setChar(arg0: char): void
                                public hashCode(): int
                                public equals(arg0: java.lang.Object): boolean
                                public static class: java.lang.Class<any>
                            }
                            class Constants {
                                public static S_XMLNAMESPACEURI: string
                                public static S_XSLNAMESPACEURL: string
                                public static S_OLDXSLNAMESPACEURL: string
                                public static S_VENDOR: string
                                public static S_VENDORURL: string
                                public static S_BUILTIN_EXTENSIONS_URL: string
                                public static S_BUILTIN_OLD_EXTENSIONS_URL: string
                                public static S_EXTENSIONS_OLD_JAVA_URL: string
                                public static S_EXTENSIONS_JAVA_URL: string
                                public static S_EXTENSIONS_LOTUSXSL_JAVA_URL: string
                                public static S_EXTENSIONS_XALANLIB_URL: string
                                public static S_EXTENSIONS_REDIRECT_URL: string
                                public static S_EXTENSIONS_PIPE_URL: string
                                public static S_EXTENSIONS_SQL_URL: string
                                public static S_EXSLT_COMMON_URL: string
                                public static S_EXSLT_MATH_URL: string
                                public static S_EXSLT_SETS_URL: string
                                public static S_EXSLT_DATETIME_URL: string
                                public static S_EXSLT_FUNCTIONS_URL: string
                                public static S_EXSLT_DYNAMIC_URL: string
                                public static S_EXSLT_STRINGS_URL: string
                                public static XSLTVERSUPPORTED: double
                                public constructor()
                                public static class: java.lang.Class<any>
                            }
                            class DOM2Helper {
                                public static getLocalNameOfNode(arg0: org.w3c.dom.Node): string
                                public static getNamespaceOfNode(arg0: org.w3c.dom.Node): string
                                public static isNodeAfter(arg0: org.w3c.dom.Node, arg1: org.w3c.dom.Node): boolean
                                public static isNodeTheSame(arg0: org.w3c.dom.Node, arg1: org.w3c.dom.Node): boolean
                                public static getParentOfNode(arg0: org.w3c.dom.Node): org.w3c.dom.Node
                                public static class: java.lang.Class<any>
                            }
                            class DOMBuilder implements org.xml.sax.ContentHandler , org.xml.sax.ext.LexicalHandler {
                                public m_doc: org.w3c.dom.Document
                                protected m_currentNode: org.w3c.dom.Node
                                protected m_root: org.w3c.dom.Node
                                protected m_nextSibling: org.w3c.dom.Node
                                public m_docFrag: org.w3c.dom.DocumentFragment
                                protected m_elemStack: java.util.Stack
                                protected m_inCData: boolean
                                public constructor(arg0: org.w3c.dom.Document, arg1: org.w3c.dom.Node)
                                public constructor(arg0: org.w3c.dom.Document, arg1: org.w3c.dom.DocumentFragment)
                                public constructor(arg0: org.w3c.dom.Document)
                                public getRootDocument(): org.w3c.dom.Node
                                public getRootNode(): org.w3c.dom.Node
                                public getCurrentNode(): org.w3c.dom.Node
                                public setNextSibling(arg0: org.w3c.dom.Node): void
                                public getNextSibling(): org.w3c.dom.Node
                                public getWriter(): java.io.Writer
                                protected append(arg0: org.w3c.dom.Node): void
                                public setDocumentLocator(arg0: org.xml.sax.Locator): void
                                public startDocument(): void
                                public endDocument(): void
                                public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: org.xml.sax.Attributes): void
                                public endElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public setIDAttribute(arg0: java.lang.String | string, arg1: org.w3c.dom.Element): void
                                public characters(arg0: char[], arg1: int, arg2: int): void
                                public charactersRaw(arg0: char[], arg1: int, arg2: int): void
                                public startEntity(arg0: java.lang.String | string): void
                                public endEntity(arg0: java.lang.String | string): void
                                public entityReference(arg0: java.lang.String | string): void
                                public ignorableWhitespace(arg0: char[], arg1: int, arg2: int): void
                                public processingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public comment(arg0: char[], arg1: int, arg2: int): void
                                public startCDATA(): void
                                public endCDATA(): void
                                public cdata(arg0: char[], arg1: int, arg2: int): void
                                public startDTD(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public endDTD(): void
                                public startPrefixMapping(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public endPrefixMapping(arg0: java.lang.String | string): void
                                public skippedEntity(arg0: java.lang.String | string): void
                                public static class: java.lang.Class<any>
                            }
                            class DefaultErrorHandler implements org.xml.sax.ErrorHandler , javax.xml.transform.ErrorListener {
                                public constructor(arg0: java.io.PrintWriter)
                                public constructor(arg0: java.io.PrintStream)
                                public constructor()
                                public constructor(arg0: boolean)
                                public warning(arg0: org.xml.sax.SAXParseException): void
                                public error(arg0: org.xml.sax.SAXParseException): void
                                public fatalError(arg0: org.xml.sax.SAXParseException): void
                                public warning(arg0: javax.xml.transform.TransformerException): void
                                public error(arg0: javax.xml.transform.TransformerException): void
                                public fatalError(arg0: javax.xml.transform.TransformerException): void
                                public static ensureLocationSet(arg0: javax.xml.transform.TransformerException): void
                                public static printLocation(arg0: java.io.PrintStream, arg1: javax.xml.transform.TransformerException): void
                                public static printLocation(arg0: java.io.PrintStream, arg1: org.xml.sax.SAXParseException): void
                                public static printLocation(arg0: java.io.PrintWriter, arg1: java.lang.Throwable): void
                                public static class: java.lang.Class<any>
                            }
                            class ElemDesc {
                                public static class: java.lang.Class<any>
                            }
                            class FastStringBuffer {
                                public static SUPPRESS_LEADING_WS: int
                                public static SUPPRESS_TRAILING_WS: int
                                public static SUPPRESS_BOTH: int
                                public constructor(arg0: int, arg1: int, arg2: int)
                                public constructor(arg0: int, arg1: int)
                                public constructor(arg0: int)
                                public constructor()
                                public size(): int
                                public length(): int
                                public reset(): void
                                public setLength(arg0: int): void
                                public toString(): string
                                public append(arg0: char): void
                                public append(arg0: java.lang.String | string): void
                                public append(arg0: java.lang.StringBuffer): void
                                public append(arg0: char[], arg1: int, arg2: int): void
                                public append(arg0: com.sun.org.apache.xml.internal.utils.FastStringBuffer): void
                                public isWhitespace(arg0: int, arg1: int): boolean
                                public getString(arg0: int, arg1: int): string
                                protected getOneChunkString(arg0: int, arg1: int, arg2: int): string
                                public charAt(arg0: int): char
                                public sendSAXcharacters(arg0: org.xml.sax.ContentHandler, arg1: int, arg2: int): void
                                public sendNormalizedSAXcharacters(arg0: org.xml.sax.ContentHandler, arg1: int, arg2: int): int
                                public static sendNormalizedSAXcharacters(arg0: char[], arg1: int, arg2: int, arg3: org.xml.sax.ContentHandler): void
                                public sendSAXComment(arg0: org.xml.sax.ext.LexicalHandler, arg1: int, arg2: int): void
                                public static class: java.lang.Class<any>
                            }
                            class IntStack extends com.sun.org.apache.xml.internal.utils.IntVector {
                                public constructor()
                                public constructor(arg0: int)
                                public constructor(arg0: com.sun.org.apache.xml.internal.utils.IntStack)
                                public push(arg0: int): int
                                public pop(): int
                                public quickPop(arg0: int): void
                                public peek(): int
                                public peek(arg0: int): int
                                public setTop(arg0: int): void
                                public empty(): boolean
                                public search(arg0: int): int
                                public clone(): java.lang.Object
                                public static class: java.lang.Class<any>
                            }
                            class IntVector implements java.lang.Cloneable {
                                protected m_blocksize: int
                                protected m_map: int[]
                                protected m_firstFree: int
                                protected m_mapSize: int
                                public constructor()
                                public constructor(arg0: int)
                                public constructor(arg0: int, arg1: int)
                                public constructor(arg0: com.sun.org.apache.xml.internal.utils.IntVector)
                                public size(): int
                                public setSize(arg0: int): void
                                public addElement(arg0: int): void
                                public addElements(arg0: int, arg1: int): void
                                public addElements(arg0: int): void
                                public insertElementAt(arg0: int, arg1: int): void
                                public removeAllElements(): void
                                public removeElement(arg0: int): boolean
                                public removeElementAt(arg0: int): void
                                public setElementAt(arg0: int, arg1: int): void
                                public elementAt(arg0: int): int
                                public contains(arg0: int): boolean
                                public indexOf(arg0: int, arg1: int): int
                                public indexOf(arg0: int): int
                                public lastIndexOf(arg0: int): int
                                public clone(): java.lang.Object
                                public static class: java.lang.Class<any>
                            }
                            class ListingErrorHandler implements org.xml.sax.ErrorHandler , javax.xml.transform.ErrorListener {
                                protected m_pw: java.io.PrintWriter
                                protected throwOnWarning: boolean
                                protected throwOnError: boolean
                                protected throwOnFatalError: boolean
                                public constructor(arg0: java.io.PrintWriter)
                                public constructor()
                                public warning(arg0: org.xml.sax.SAXParseException): void
                                public error(arg0: org.xml.sax.SAXParseException): void
                                public fatalError(arg0: org.xml.sax.SAXParseException): void
                                public warning(arg0: javax.xml.transform.TransformerException): void
                                public error(arg0: javax.xml.transform.TransformerException): void
                                public fatalError(arg0: javax.xml.transform.TransformerException): void
                                public static logExceptionLocation(arg0: java.io.PrintWriter, arg1: java.lang.Throwable): void
                                public static logSourceLine(arg0: java.io.PrintWriter, arg1: javax.xml.transform.SourceLocator): void
                                protected static getSourceLine(arg0: java.lang.String | string, arg1: int): string
                                public setThrowOnWarning(arg0: boolean): void
                                public getThrowOnWarning(): boolean
                                public setThrowOnError(arg0: boolean): void
                                public getThrowOnError(): boolean
                                public setThrowOnFatalError(arg0: boolean): void
                                public getThrowOnFatalError(): boolean
                                public static class: java.lang.Class<any>
                            }
                            class LocaleUtility {
                                public static IETF_SEPARATOR: char
                                public static EMPTY_STRING: string
                                public constructor()
                                public static langToLocale(arg0: java.lang.String | string): java.util.Locale
                                public static class: java.lang.Class<any>
                            }
                            class MutableAttrListImpl extends org.xml.sax.helpers.AttributesImpl implements java.io.Serializable {
                                public constructor()
                                public constructor(arg0: org.xml.sax.Attributes)
                                public addAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string): void
                                public addAttributes(arg0: org.xml.sax.Attributes): void
                                public contains(arg0: java.lang.String | string): boolean
                                public static class: java.lang.Class<any>
                            }
                            class NSInfo {
                                public m_namespace: string
                                public m_hasXMLNSAttrs: boolean
                                public m_hasProcessedNS: boolean
                                public m_ancestorHasXMLNSAttrs: int
                                public static ANCESTORXMLNSUNPROCESSED: int
                                public static ANCESTORHASXMLNS: int
                                public static ANCESTORNOXMLNS: int
                                public constructor(arg0: boolean, arg1: boolean)
                                public constructor(arg0: boolean, arg1: boolean, arg2: int)
                                public constructor(arg0: java.lang.String | string, arg1: boolean)
                                public static class: java.lang.Class<any>
                            }
                            class NameSpace implements java.io.Serializable {
                                public m_next: com.sun.org.apache.xml.internal.utils.NameSpace
                                public m_prefix: string
                                public m_uri: string
                                public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string)
                                public static class: java.lang.Class<any>
                            }
                            interface NodeConsumer {
                                setOriginatingNode(arg0: org.w3c.dom.Node): void
                            }
                            interface NodeConsumer$$Lambda {
                                (arg0: org.w3c.dom.Node): void
                            }
                            class NodeVector implements java.io.Serializable , java.lang.Cloneable {
                                protected m_firstFree: int
                                public constructor()
                                public constructor(arg0: int)
                                public clone(): java.lang.Object
                                public size(): int
                                public addElement(arg0: int): void
                                public push(arg0: int): void
                                public pop(): int
                                public popAndTop(): int
                                public popQuick(): void
                                public peepOrNull(): int
                                public pushPair(arg0: int, arg1: int): void
                                public popPair(): void
                                public setTail(arg0: int): void
                                public setTailSub1(arg0: int): void
                                public peepTail(): int
                                public peepTailSub1(): int
                                public insertInOrder(arg0: int): void
                                public insertElementAt(arg0: int, arg1: int): void
                                public appendNodes(arg0: com.sun.org.apache.xml.internal.utils.NodeVector): void
                                public removeAllElements(): void
                                public RemoveAllNoClear(): void
                                public removeElement(arg0: int): boolean
                                public removeElementAt(arg0: int): void
                                public setElementAt(arg0: int, arg1: int): void
                                public elementAt(arg0: int): int
                                public contains(arg0: int): boolean
                                public indexOf(arg0: int, arg1: int): int
                                public indexOf(arg0: int): int
                                public sort(arg0: int[], arg1: int, arg2: int): void
                                public sort(): void
                                public static class: java.lang.Class<any>
                            }
                            class ObjectPool implements java.io.Serializable {
                                public constructor(arg0: java.lang.Class)
                                public constructor(arg0: java.lang.String | string)
                                public constructor(arg0: java.lang.Class, arg1: int)
                                public constructor()
                                public getInstanceIfFree(): java.lang.Object
                                public getInstance(): java.lang.Object
                                public freeInstance(arg0: java.lang.Object): void
                                public static class: java.lang.Class<any>
                            }
                            class ObjectStack extends com.sun.org.apache.xml.internal.utils.ObjectVector {
                                public constructor()
                                public constructor(arg0: int)
                                public constructor(arg0: com.sun.org.apache.xml.internal.utils.ObjectStack)
                                public push(arg0: java.lang.Object): java.lang.Object
                                public pop(): java.lang.Object
                                public quickPop(arg0: int): void
                                public peek(): java.lang.Object
                                public peek(arg0: int): java.lang.Object
                                public setTop(arg0: java.lang.Object): void
                                public empty(): boolean
                                public search(arg0: java.lang.Object): int
                                public clone(): java.lang.Object
                                public static class: java.lang.Class<any>
                            }
                            class ObjectVector implements java.lang.Cloneable {
                                protected m_blocksize: int
                                protected m_map: java.lang.Object[]
                                protected m_firstFree: int
                                protected m_mapSize: int
                                public constructor()
                                public constructor(arg0: int)
                                public constructor(arg0: int, arg1: int)
                                public constructor(arg0: com.sun.org.apache.xml.internal.utils.ObjectVector)
                                public size(): int
                                public setSize(arg0: int): void
                                public addElement(arg0: java.lang.Object): void
                                public addElements(arg0: java.lang.Object, arg1: int): void
                                public addElements(arg0: int): void
                                public insertElementAt(arg0: java.lang.Object, arg1: int): void
                                public removeAllElements(): void
                                public removeElement(arg0: java.lang.Object): boolean
                                public removeElementAt(arg0: int): void
                                public setElementAt(arg0: java.lang.Object, arg1: int): void
                                public elementAt(arg0: int): java.lang.Object
                                public contains(arg0: java.lang.Object): boolean
                                public indexOf(arg0: java.lang.Object, arg1: int): int
                                public indexOf(arg0: java.lang.Object): int
                                public lastIndexOf(arg0: java.lang.Object): int
                                public setToSize(arg0: int): void
                                public clone(): java.lang.Object
                                public static class: java.lang.Class<any>
                            }
                            interface PrefixResolver {
                                getNamespaceForPrefix(arg0: java.lang.String | string): string
                                getNamespaceForPrefix(arg0: java.lang.String | string, arg1: org.w3c.dom.Node): string
                                getBaseIdentifier(): string
                                handlesNullPrefixes(): boolean
                            }
                            class PrefixResolverDefault implements com.sun.org.apache.xml.internal.utils.PrefixResolver {
                                public constructor(arg0: org.w3c.dom.Node)
                                public getNamespaceForPrefix(arg0: java.lang.String | string): string
                                public getNamespaceForPrefix(arg0: java.lang.String | string, arg1: org.w3c.dom.Node): string
                                public getBaseIdentifier(): string
                                public handlesNullPrefixes(): boolean
                                public static class: java.lang.Class<any>
                            }
                            class QName implements java.io.Serializable {
                                protected _localName: string
                                protected _namespaceURI: string
                                protected _prefix: string
                                public static S_XMLNAMESPACEURI: string
                                public constructor()
                                public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string)
                                public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: boolean)
                                public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string)
                                public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: boolean)
                                public constructor(arg0: java.lang.String | string)
                                public constructor(arg0: java.lang.String | string, arg1: boolean)
                                public constructor(arg0: java.lang.String | string, arg1: java.util.Stack)
                                public constructor(arg0: java.lang.String | string, arg1: java.util.Stack, arg2: boolean)
                                public constructor(arg0: java.lang.String | string, arg1: org.w3c.dom.Element, arg2: com.sun.org.apache.xml.internal.utils.PrefixResolver)
                                public constructor(arg0: java.lang.String | string, arg1: org.w3c.dom.Element, arg2: com.sun.org.apache.xml.internal.utils.PrefixResolver, arg3: boolean)
                                public constructor(arg0: java.lang.String | string, arg1: com.sun.org.apache.xml.internal.utils.PrefixResolver)
                                public constructor(arg0: java.lang.String | string, arg1: com.sun.org.apache.xml.internal.utils.PrefixResolver, arg2: boolean)
                                public getNamespaceURI(): string
                                public getPrefix(): string
                                public getLocalName(): string
                                public toString(): string
                                public toNamespacedString(): string
                                public getNamespace(): string
                                public getLocalPart(): string
                                public hashCode(): int
                                public equals(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                                public equals(arg0: java.lang.Object): boolean
                                public static getQNameFromString(arg0: java.lang.String | string): com.sun.org.apache.xml.internal.utils.QName
                                public static isXMLNSDecl(arg0: java.lang.String | string): boolean
                                public static getPrefixFromXMLNSDecl(arg0: java.lang.String | string): string
                                public static getLocalPart(arg0: java.lang.String | string): string
                                public static getPrefixPart(arg0: java.lang.String | string): string
                                public static class: java.lang.Class<any>
                            }
                            interface RawCharacterHandler {
                                charactersRaw(arg0: char[], arg1: int, arg2: int): void
                            }
                            interface RawCharacterHandler$$Lambda {
                                (arg0: char[], arg1: int, arg2: int): void
                            }
                            class SAXSourceLocator extends org.xml.sax.helpers.LocatorImpl implements javax.xml.transform.SourceLocator , java.io.Serializable {
                                public constructor()
                                public constructor(arg0: org.xml.sax.Locator)
                                public constructor(arg0: javax.xml.transform.SourceLocator)
                                public constructor(arg0: org.xml.sax.SAXParseException)
                                public getPublicId(): string
                                public getSystemId(): string
                                public getLineNumber(): int
                                public getColumnNumber(): int
                                public static class: java.lang.Class<any>
                            }
                            class SerializableLocatorImpl implements org.xml.sax.Locator , java.io.Serializable {
                                public constructor()
                                public constructor(arg0: org.xml.sax.Locator)
                                public getPublicId(): string
                                public getSystemId(): string
                                public getLineNumber(): int
                                public getColumnNumber(): int
                                public setPublicId(arg0: java.lang.String | string): void
                                public setSystemId(arg0: java.lang.String | string): void
                                public setLineNumber(arg0: int): void
                                public setColumnNumber(arg0: int): void
                                public static class: java.lang.Class<any>
                            }
                            class StopParseException extends org.xml.sax.SAXException {
                                public static class: java.lang.Class<any>
                            }
                            class StringBufferPool {
                                public constructor()
                                public static get(): com.sun.org.apache.xml.internal.utils.FastStringBuffer
                                public static free(arg0: com.sun.org.apache.xml.internal.utils.FastStringBuffer): void
                                public static class: java.lang.Class<any>
                            }
                            class StringComparable implements java.lang.Comparable {
                                public static UNKNOWN_CASE: int
                                public static UPPER_CASE: int
                                public static LOWER_CASE: int
                                public constructor(arg0: java.lang.String | string, arg1: java.util.Locale, arg2: java.text.Collator, arg3: java.lang.String | string)
                                public static getComparator(arg0: java.lang.String | string, arg1: java.util.Locale, arg2: java.text.Collator, arg3: java.lang.String | string): java.lang.Comparable
                                public toString(): string
                                public compareTo(arg0: java.lang.Object): int
                                public static class: java.lang.Class<any>
                            }
                            class StringComparable$$Lambda implements java.lang.Comparable {
                                public static UNKNOWN_CASE: int
                            }
                            class StringToIntTable {
                                public static INVALID_KEY: int
                                public constructor()
                                public constructor(arg0: int)
                                public getLength(): int
                                public put(arg0: java.lang.String | string, arg1: int): void
                                public get(arg0: java.lang.String | string): int
                                public getIgnoreCase(arg0: java.lang.String | string): int
                                public contains(arg0: java.lang.String | string): boolean
                                public keys(): java.lang.String[]
                                public static class: java.lang.Class<any>
                            }
                            class StringToStringTable {
                                public constructor()
                                public constructor(arg0: int)
                                public getLength(): int
                                public put(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public get(arg0: java.lang.String | string): string
                                public remove(arg0: java.lang.String | string): void
                                public getIgnoreCase(arg0: java.lang.String | string): string
                                public getByValue(arg0: java.lang.String | string): string
                                public elementAt(arg0: int): string
                                public contains(arg0: java.lang.String | string): boolean
                                public containsValue(arg0: java.lang.String | string): boolean
                                public static class: java.lang.Class<any>
                            }
                            class StringToStringTableVector {
                                public constructor()
                                public constructor(arg0: int)
                                public getLength(): int
                                public size(): int
                                public addElement(arg0: com.sun.org.apache.xml.internal.utils.StringToStringTable): void
                                public get(arg0: java.lang.String | string): string
                                public containsKey(arg0: java.lang.String | string): boolean
                                public removeLastElem(): void
                                public elementAt(arg0: int): com.sun.org.apache.xml.internal.utils.StringToStringTable
                                public contains(arg0: com.sun.org.apache.xml.internal.utils.StringToStringTable): boolean
                                public static class: java.lang.Class<any>
                            }
                            class StringVector implements java.io.Serializable {
                                protected m_blocksize: int
                                protected m_map: java.lang.String[]
                                protected m_firstFree: int
                                protected m_mapSize: int
                                public constructor()
                                public constructor(arg0: int)
                                public getLength(): int
                                public size(): int
                                public addElement(arg0: java.lang.String | string): void
                                public elementAt(arg0: int): string
                                public contains(arg0: java.lang.String | string): boolean
                                public containsIgnoreCase(arg0: java.lang.String | string): boolean
                                public push(arg0: java.lang.String | string): void
                                public pop(): string
                                public peek(): string
                                public static class: java.lang.Class<any>
                            }
                            class StylesheetPIHandler extends org.xml.sax.helpers.DefaultHandler {
                                public setURIResolver(arg0: javax.xml.transform.URIResolver | javax.xml.transform.URIResolver$$Lambda): void
                                public getURIResolver(): javax.xml.transform.URIResolver
                                public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string)
                                public getAssociatedStylesheet(): javax.xml.transform.Source
                                public processingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: org.xml.sax.Attributes): void
                                public setBaseId(arg0: java.lang.String | string): void
                                public getBaseId(): string
                                public static class: java.lang.Class<any>
                            }
                            class SuballocatedByteVector {
                                protected m_blocksize: int
                                protected m_numblocks: int
                                protected m_map: byte[][]
                                protected m_firstFree: int
                                protected m_map0: byte[]
                                public constructor()
                                public constructor(arg0: int)
                                public constructor(arg0: int, arg1: int)
                                public size(): int
                                public addElement(arg0: byte): void
                                public removeAllElements(): void
                                public setElementAt(arg0: byte, arg1: int): void
                                public elementAt(arg0: int): byte
                                public indexOf(arg0: byte, arg1: int): int
                                public indexOf(arg0: byte): int
                                public static class: java.lang.Class<any>
                            }
                            class SuballocatedIntVector {
                                protected m_blocksize: int
                                protected m_SHIFT: int
                                protected m_MASK: int
                                protected static NUMBLOCKS_DEFAULT: int
                                protected m_numblocks: int
                                protected m_map: int[][]
                                protected m_firstFree: int
                                protected m_map0: int[]
                                protected m_buildCache: int[]
                                protected m_buildCacheStartIndex: int
                                public constructor()
                                public constructor(arg0: int, arg1: int)
                                public constructor(arg0: int)
                                public size(): int
                                public setSize(arg0: int): void
                                public addElement(arg0: int): void
                                public removeAllElements(): void
                                public setElementAt(arg0: int, arg1: int): void
                                public elementAt(arg0: int): int
                                public indexOf(arg0: int, arg1: int): int
                                public indexOf(arg0: int): int
                                public getMap0(): int[]
                                public getMap(): int[][]
                                public static class: java.lang.Class<any>
                            }
                            class SystemIDResolver {
                                public constructor()
                                public static getAbsoluteURIFromRelative(arg0: java.lang.String | string): string
                                public static isAbsoluteURI(arg0: java.lang.String | string): boolean
                                public static isAbsolutePath(arg0: java.lang.String | string): boolean
                                public static getAbsoluteURI(arg0: java.lang.String | string): string
                                public static getAbsoluteURI(arg0: java.lang.String | string, arg1: java.lang.String | string): string
                                public static class: java.lang.Class<any>
                            }
                            class ThreadControllerWrapper {
                                public constructor()
                                public static runThread(arg0: java.lang.Runnable | java.lang.Runnable$$Lambda, arg1: int): java.lang.Thread
                                public static waitThread(arg0: java.lang.Thread | java.lang.Thread$$Lambda, arg1: java.lang.Runnable | java.lang.Runnable$$Lambda): void
                                public static class: java.lang.Class<any>
                            }
                            class TreeWalker {
                                public getContentHandler(): org.xml.sax.ContentHandler
                                public setContentHandler(arg0: org.xml.sax.ContentHandler): void
                                public constructor(arg0: org.xml.sax.ContentHandler, arg1: java.lang.String | string)
                                public constructor(arg0: org.xml.sax.ContentHandler)
                                public traverse(arg0: org.w3c.dom.Node): void
                                public traverseFragment(arg0: org.w3c.dom.Node): void
                                public traverse(arg0: org.w3c.dom.Node, arg1: org.w3c.dom.Node): void
                                protected startNode(arg0: org.w3c.dom.Node): void
                                protected endNode(arg0: org.w3c.dom.Node): void
                                public static class: java.lang.Class<any>
                            }
                            class Trie {
                                public static ALPHA_SIZE: int
                                public constructor()
                                public put(arg0: java.lang.String | string, arg1: java.lang.Object): java.lang.Object
                                public get(arg0: java.lang.String | string): java.lang.Object
                                public static class: java.lang.Class<any>
                            }
                            class URI implements java.io.Serializable {
                                public constructor()
                                public constructor(arg0: com.sun.org.apache.xml.internal.utils.URI)
                                public constructor(arg0: java.lang.String | string)
                                public constructor(arg0: com.sun.org.apache.xml.internal.utils.URI, arg1: java.lang.String | string)
                                public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string)
                                public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string)
                                public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: int, arg4: java.lang.String | string, arg5: java.lang.String | string, arg6: java.lang.String | string)
                                public getScheme(): string
                                public getSchemeSpecificPart(): string
                                public getUserinfo(): string
                                public getHost(): string
                                public getPort(): int
                                public getPath(arg0: boolean, arg1: boolean): string
                                public getPath(): string
                                public getQueryString(): string
                                public getFragment(): string
                                public setScheme(arg0: java.lang.String | string): void
                                public setUserinfo(arg0: java.lang.String | string): void
                                public setHost(arg0: java.lang.String | string): void
                                public setPort(arg0: int): void
                                public setPath(arg0: java.lang.String | string): void
                                public appendPath(arg0: java.lang.String | string): void
                                public setQueryString(arg0: java.lang.String | string): void
                                public setFragment(arg0: java.lang.String | string): void
                                public equals(arg0: java.lang.Object): boolean
                                public hashCode(): int
                                public toString(): string
                                public isGenericURI(): boolean
                                public static isConformantSchemeName(arg0: java.lang.String | string): boolean
                                public static isWellFormedAddress(arg0: java.lang.String | string): boolean
                                public static class: java.lang.Class<any>
                            }
                            class UnImplNode implements org.w3c.dom.Node , org.w3c.dom.Element , org.w3c.dom.NodeList , org.w3c.dom.Document {
                                protected fDocumentURI: string
                                protected actualEncoding: string
                                public constructor()
                                public error(arg0: java.lang.String | string): void
                                public error(arg0: java.lang.String | string, arg1: java.lang.Object[]): void
                                public appendChild(arg0: org.w3c.dom.Node): org.w3c.dom.Node
                                public hasChildNodes(): boolean
                                public getNodeType(): short
                                public getParentNode(): org.w3c.dom.Node
                                public getChildNodes(): org.w3c.dom.NodeList
                                public getFirstChild(): org.w3c.dom.Node
                                public getLastChild(): org.w3c.dom.Node
                                public getNextSibling(): org.w3c.dom.Node
                                public getLength(): int
                                public item(arg0: int): org.w3c.dom.Node
                                public getOwnerDocument(): org.w3c.dom.Document
                                public getTagName(): string
                                public getNodeName(): string
                                public normalize(): void
                                public getElementsByTagName(arg0: java.lang.String | string): org.w3c.dom.NodeList
                                public removeAttributeNode(arg0: org.w3c.dom.Attr): org.w3c.dom.Attr
                                public setAttributeNode(arg0: org.w3c.dom.Attr): org.w3c.dom.Attr
                                public hasAttribute(arg0: java.lang.String | string): boolean
                                public hasAttributeNS(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                                public getAttributeNode(arg0: java.lang.String | string): org.w3c.dom.Attr
                                public removeAttribute(arg0: java.lang.String | string): void
                                public setAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public getAttribute(arg0: java.lang.String | string): string
                                public hasAttributes(): boolean
                                public getElementsByTagNameNS(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.NodeList
                                public setAttributeNodeNS(arg0: org.w3c.dom.Attr): org.w3c.dom.Attr
                                public getAttributeNodeNS(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.Attr
                                public removeAttributeNS(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                                public setAttributeNS(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public getAttributeNS(arg0: java.lang.String | string, arg1: java.lang.String | string): string
                                public getPreviousSibling(): org.w3c.dom.Node
                                public cloneNode(arg0: boolean): org.w3c.dom.Node
                                public getNodeValue(): string
                                public setNodeValue(arg0: java.lang.String | string): void
                                public setValue(arg0: java.lang.String | string): void
                                public getOwnerElement(): org.w3c.dom.Element
                                public getSpecified(): boolean
                                public getAttributes(): org.w3c.dom.NamedNodeMap
                                public insertBefore(arg0: org.w3c.dom.Node, arg1: org.w3c.dom.Node): org.w3c.dom.Node
                                public replaceChild(arg0: org.w3c.dom.Node, arg1: org.w3c.dom.Node): org.w3c.dom.Node
                                public removeChild(arg0: org.w3c.dom.Node): org.w3c.dom.Node
                                public isSupported(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                                public getNamespaceURI(): string
                                public getPrefix(): string
                                public setPrefix(arg0: java.lang.String | string): void
                                public getLocalName(): string
                                public getDoctype(): org.w3c.dom.DocumentType
                                public getImplementation(): org.w3c.dom.DOMImplementation
                                public getDocumentElement(): org.w3c.dom.Element
                                public createElement(arg0: java.lang.String | string): org.w3c.dom.Element
                                public createDocumentFragment(): org.w3c.dom.DocumentFragment
                                public createTextNode(arg0: java.lang.String | string): org.w3c.dom.Text
                                public createComment(arg0: java.lang.String | string): org.w3c.dom.Comment
                                public createCDATASection(arg0: java.lang.String | string): org.w3c.dom.CDATASection
                                public createProcessingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.ProcessingInstruction
                                public createAttribute(arg0: java.lang.String | string): org.w3c.dom.Attr
                                public createEntityReference(arg0: java.lang.String | string): org.w3c.dom.EntityReference
                                public importNode(arg0: org.w3c.dom.Node, arg1: boolean): org.w3c.dom.Node
                                public createElementNS(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.Element
                                public createAttributeNS(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.Attr
                                public getElementById(arg0: java.lang.String | string): org.w3c.dom.Element
                                public setData(arg0: java.lang.String | string): void
                                public substringData(arg0: int, arg1: int): string
                                public appendData(arg0: java.lang.String | string): void
                                public insertData(arg0: int, arg1: java.lang.String | string): void
                                public deleteData(arg0: int, arg1: int): void
                                public replaceData(arg0: int, arg1: int, arg2: java.lang.String | string): void
                                public splitText(arg0: int): org.w3c.dom.Text
                                public adoptNode(arg0: org.w3c.dom.Node): org.w3c.dom.Node
                                public getInputEncoding(): string
                                public setInputEncoding(arg0: java.lang.String | string): void
                                public getStandalone(): boolean
                                public setStandalone(arg0: boolean): void
                                public getStrictErrorChecking(): boolean
                                public setStrictErrorChecking(arg0: boolean): void
                                public getVersion(): string
                                public setVersion(arg0: java.lang.String | string): void
                                public setUserData(arg0: java.lang.String | string, arg1: java.lang.Object, arg2: org.w3c.dom.UserDataHandler): java.lang.Object
                                public getUserData(arg0: java.lang.String | string): java.lang.Object
                                public getFeature(arg0: java.lang.String | string, arg1: java.lang.String | string): java.lang.Object
                                public isEqualNode(arg0: org.w3c.dom.Node): boolean
                                public lookupNamespaceURI(arg0: java.lang.String | string): string
                                public isDefaultNamespace(arg0: java.lang.String | string): boolean
                                public lookupPrefix(arg0: java.lang.String | string): string
                                public isSameNode(arg0: org.w3c.dom.Node): boolean
                                public setTextContent(arg0: java.lang.String | string): void
                                public getTextContent(): string
                                public compareDocumentPosition(arg0: org.w3c.dom.Node): short
                                public getBaseURI(): string
                                public renameNode(arg0: org.w3c.dom.Node, arg1: java.lang.String | string, arg2: java.lang.String | string): org.w3c.dom.Node
                                public normalizeDocument(): void
                                public getDomConfig(): org.w3c.dom.DOMConfiguration
                                public setDocumentURI(arg0: java.lang.String | string): void
                                public getDocumentURI(): string
                                public getActualEncoding(): string
                                public setActualEncoding(arg0: java.lang.String | string): void
                                public replaceWholeText(arg0: java.lang.String | string): org.w3c.dom.Text
                                public getWholeText(): string
                                public isWhitespaceInElementContent(): boolean
                                public setIdAttribute(arg0: boolean): void
                                public setIdAttribute(arg0: java.lang.String | string, arg1: boolean): void
                                public setIdAttributeNode(arg0: org.w3c.dom.Attr, arg1: boolean): void
                                public setIdAttributeNS(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: boolean): void
                                public getSchemaTypeInfo(): org.w3c.dom.TypeInfo
                                public isId(): boolean
                                public getXmlEncoding(): string
                                public setXmlEncoding(arg0: java.lang.String | string): void
                                public getXmlStandalone(): boolean
                                public setXmlStandalone(arg0: boolean): void
                                public getXmlVersion(): string
                                public setXmlVersion(arg0: java.lang.String | string): void
                                public static class: java.lang.Class<any>
                            }
                            class WrappedRuntimeException extends java.lang.RuntimeException {
                                public constructor(arg0: java.lang.Exception)
                                public constructor(arg0: java.lang.String | string, arg1: java.lang.Exception)
                                public getException(): java.lang.Exception
                                public static class: java.lang.Class<any>
                            }
                            class WrongParserException extends java.lang.RuntimeException {
                                public constructor(arg0: java.lang.String | string)
                                public static class: java.lang.Class<any>
                            }
                            class XML11Char {
                                public static MASK_XML11_VALID: int
                                public static MASK_XML11_SPACE: int
                                public static MASK_XML11_NAME_START: int
                                public static MASK_XML11_NAME: int
                                public static MASK_XML11_CONTROL: int
                                public static MASK_XML11_CONTENT: int
                                public static MASK_XML11_NCNAME_START: int
                                public static MASK_XML11_NCNAME: int
                                public static MASK_XML11_CONTENT_INTERNAL: int
                                public constructor()
                                public static isXML11Space(arg0: int): boolean
                                public static isXML11Valid(arg0: int): boolean
                                public static isXML11Invalid(arg0: int): boolean
                                public static isXML11ValidLiteral(arg0: int): boolean
                                public static isXML11Content(arg0: int): boolean
                                public static isXML11InternalEntityContent(arg0: int): boolean
                                public static isXML11NameStart(arg0: int): boolean
                                public static isXML11Name(arg0: int): boolean
                                public static isXML11NCNameStart(arg0: int): boolean
                                public static isXML11NCName(arg0: int): boolean
                                public static isXML11NameHighSurrogate(arg0: int): boolean
                                public static isXML11ValidName(arg0: java.lang.String | string): boolean
                                public static isXML11ValidNCName(arg0: java.lang.String | string): boolean
                                public static isXML11ValidNmtoken(arg0: java.lang.String | string): boolean
                                public static isXML11ValidQName(arg0: java.lang.String | string): boolean
                                public static class: java.lang.Class<any>
                            }
                            class XMLChar {
                                public static MASK_VALID: int
                                public static MASK_SPACE: int
                                public static MASK_NAME_START: int
                                public static MASK_NAME: int
                                public static MASK_PUBID: int
                                public static MASK_CONTENT: int
                                public static MASK_NCNAME_START: int
                                public static MASK_NCNAME: int
                                public constructor()
                                public static isSupplemental(arg0: int): boolean
                                public static supplemental(arg0: char, arg1: char): int
                                public static highSurrogate(arg0: int): char
                                public static lowSurrogate(arg0: int): char
                                public static isHighSurrogate(arg0: int): boolean
                                public static isLowSurrogate(arg0: int): boolean
                                public static isValid(arg0: int): boolean
                                public static isInvalid(arg0: int): boolean
                                public static isContent(arg0: int): boolean
                                public static isMarkup(arg0: int): boolean
                                public static isSpace(arg0: int): boolean
                                public static isNameStart(arg0: int): boolean
                                public static isName(arg0: int): boolean
                                public static isNCNameStart(arg0: int): boolean
                                public static isNCName(arg0: int): boolean
                                public static isPubid(arg0: int): boolean
                                public static isValidName(arg0: java.lang.String | string): boolean
                                public static isValidNCName(arg0: java.lang.String | string): boolean
                                public static isValidNmtoken(arg0: java.lang.String | string): boolean
                                public static isValidIANAEncoding(arg0: java.lang.String | string): boolean
                                public static isValidJavaEncoding(arg0: java.lang.String | string): boolean
                                public static isValidQName(arg0: java.lang.String | string): boolean
                                public static class: java.lang.Class<any>
                            }
                            class XMLCharacterRecognizer {
                                public constructor()
                                public static isWhiteSpace(arg0: char): boolean
                                public static isWhiteSpace(arg0: char[], arg1: int, arg2: int): boolean
                                public static isWhiteSpace(arg0: java.lang.StringBuffer): boolean
                                public static isWhiteSpace(arg0: java.lang.String | string): boolean
                                public static class: java.lang.Class<any>
                            }
                            class XMLReaderManager {
                                public static getInstance(arg0: boolean): com.sun.org.apache.xml.internal.utils.XMLReaderManager
                                public getXMLReader(): org.xml.sax.XMLReader
                                public releaseXMLReader(arg0: org.xml.sax.XMLReader): void
                                public overrideDefaultParser(): boolean
                                public setOverrideDefaultParser(arg0: boolean): void
                                public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                public getProperty(arg0: java.lang.String | string): java.lang.Object
                                public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                                public static class: java.lang.Class<any>
                            }
                            interface XMLString {
                                dispatchCharactersEvents(arg0: org.xml.sax.ContentHandler): void
                                dispatchAsComment(arg0: org.xml.sax.ext.LexicalHandler): void
                                fixWhiteSpace(arg0: boolean, arg1: boolean, arg2: boolean): com.sun.org.apache.xml.internal.utils.XMLString
                                length(): int
                                charAt(arg0: int): char
                                getChars(arg0: int, arg1: int, arg2: char[], arg3: int): void
                                equals(arg0: com.sun.org.apache.xml.internal.utils.XMLString): boolean
                                equals(arg0: java.lang.String | string): boolean
                                equals(arg0: java.lang.Object): boolean
                                equalsIgnoreCase(arg0: java.lang.String | string): boolean
                                compareTo(arg0: com.sun.org.apache.xml.internal.utils.XMLString): int
                                compareToIgnoreCase(arg0: com.sun.org.apache.xml.internal.utils.XMLString): int
                                startsWith(arg0: java.lang.String | string, arg1: int): boolean
                                startsWith(arg0: com.sun.org.apache.xml.internal.utils.XMLString, arg1: int): boolean
                                startsWith(arg0: java.lang.String | string): boolean
                                startsWith(arg0: com.sun.org.apache.xml.internal.utils.XMLString): boolean
                                endsWith(arg0: java.lang.String | string): boolean
                                hashCode(): int
                                indexOf(arg0: int): int
                                indexOf(arg0: int, arg1: int): int
                                lastIndexOf(arg0: int): int
                                lastIndexOf(arg0: int, arg1: int): int
                                indexOf(arg0: java.lang.String | string): int
                                indexOf(arg0: com.sun.org.apache.xml.internal.utils.XMLString): int
                                indexOf(arg0: java.lang.String | string, arg1: int): int
                                lastIndexOf(arg0: java.lang.String | string): int
                                lastIndexOf(arg0: java.lang.String | string, arg1: int): int
                                substring(arg0: int): com.sun.org.apache.xml.internal.utils.XMLString
                                substring(arg0: int, arg1: int): com.sun.org.apache.xml.internal.utils.XMLString
                                concat(arg0: java.lang.String | string): com.sun.org.apache.xml.internal.utils.XMLString
                                toLowerCase(arg0: java.util.Locale): com.sun.org.apache.xml.internal.utils.XMLString
                                toLowerCase(): com.sun.org.apache.xml.internal.utils.XMLString
                                toUpperCase(arg0: java.util.Locale): com.sun.org.apache.xml.internal.utils.XMLString
                                toUpperCase(): com.sun.org.apache.xml.internal.utils.XMLString
                                trim(): com.sun.org.apache.xml.internal.utils.XMLString
                                toString(): string
                                hasString(): boolean
                                toDouble(): double
                            }
                            class XMLStringDefault implements com.sun.org.apache.xml.internal.utils.XMLString {
                                public constructor(arg0: java.lang.String | string)
                                public dispatchCharactersEvents(arg0: org.xml.sax.ContentHandler): void
                                public dispatchAsComment(arg0: org.xml.sax.ext.LexicalHandler): void
                                public fixWhiteSpace(arg0: boolean, arg1: boolean, arg2: boolean): com.sun.org.apache.xml.internal.utils.XMLString
                                public length(): int
                                public charAt(arg0: int): char
                                public getChars(arg0: int, arg1: int, arg2: char[], arg3: int): void
                                public equals(arg0: java.lang.String | string): boolean
                                public equals(arg0: com.sun.org.apache.xml.internal.utils.XMLString): boolean
                                public equals(arg0: java.lang.Object): boolean
                                public equalsIgnoreCase(arg0: java.lang.String | string): boolean
                                public compareTo(arg0: com.sun.org.apache.xml.internal.utils.XMLString): int
                                public compareToIgnoreCase(arg0: com.sun.org.apache.xml.internal.utils.XMLString): int
                                public startsWith(arg0: java.lang.String | string, arg1: int): boolean
                                public startsWith(arg0: com.sun.org.apache.xml.internal.utils.XMLString, arg1: int): boolean
                                public startsWith(arg0: java.lang.String | string): boolean
                                public startsWith(arg0: com.sun.org.apache.xml.internal.utils.XMLString): boolean
                                public endsWith(arg0: java.lang.String | string): boolean
                                public hashCode(): int
                                public indexOf(arg0: int): int
                                public indexOf(arg0: int, arg1: int): int
                                public lastIndexOf(arg0: int): int
                                public lastIndexOf(arg0: int, arg1: int): int
                                public indexOf(arg0: java.lang.String | string): int
                                public indexOf(arg0: com.sun.org.apache.xml.internal.utils.XMLString): int
                                public indexOf(arg0: java.lang.String | string, arg1: int): int
                                public lastIndexOf(arg0: java.lang.String | string): int
                                public lastIndexOf(arg0: java.lang.String | string, arg1: int): int
                                public substring(arg0: int): com.sun.org.apache.xml.internal.utils.XMLString
                                public substring(arg0: int, arg1: int): com.sun.org.apache.xml.internal.utils.XMLString
                                public concat(arg0: java.lang.String | string): com.sun.org.apache.xml.internal.utils.XMLString
                                public toLowerCase(arg0: java.util.Locale): com.sun.org.apache.xml.internal.utils.XMLString
                                public toLowerCase(): com.sun.org.apache.xml.internal.utils.XMLString
                                public toUpperCase(arg0: java.util.Locale): com.sun.org.apache.xml.internal.utils.XMLString
                                public toUpperCase(): com.sun.org.apache.xml.internal.utils.XMLString
                                public trim(): com.sun.org.apache.xml.internal.utils.XMLString
                                public toString(): string
                                public hasString(): boolean
                                public toDouble(): double
                                public static class: java.lang.Class<any>
                            }
                            abstract class XMLStringFactory {
                                public constructor()
                                public newstr(arg0: java.lang.String | string): com.sun.org.apache.xml.internal.utils.XMLString
                                public newstr(arg0: com.sun.org.apache.xml.internal.utils.FastStringBuffer, arg1: int, arg2: int): com.sun.org.apache.xml.internal.utils.XMLString
                                public newstr(arg0: char[], arg1: int, arg2: int): com.sun.org.apache.xml.internal.utils.XMLString
                                public emptystr(): com.sun.org.apache.xml.internal.utils.XMLString
                                public static class: java.lang.Class<any>
                            }
                            class XMLStringFactoryDefault extends com.sun.org.apache.xml.internal.utils.XMLStringFactory {
                                public constructor()
                                public newstr(arg0: java.lang.String | string): com.sun.org.apache.xml.internal.utils.XMLString
                                public newstr(arg0: com.sun.org.apache.xml.internal.utils.FastStringBuffer, arg1: int, arg2: int): com.sun.org.apache.xml.internal.utils.XMLString
                                public newstr(arg0: char[], arg1: int, arg2: int): com.sun.org.apache.xml.internal.utils.XMLString
                                public emptystr(): com.sun.org.apache.xml.internal.utils.XMLString
                                public static class: java.lang.Class<any>
                            }
                        }
                    }
                }
                namespace xpath {
                    namespace internal {
                        namespace axes {
                            class AttributeIterator extends com.sun.org.apache.xpath.internal.axes.ChildTestIterator {
                                protected getNextNode(): int
                                public getAxis(): int
                                public static class: java.lang.Class<any>
                            }
                            class AxesWalker extends com.sun.org.apache.xpath.internal.axes.PredicatedNodeTest implements java.lang.Cloneable , com.sun.org.apache.xpath.internal.axes.PathComponent , com.sun.org.apache.xpath.internal.ExpressionOwner {
                                protected m_nextWalker: com.sun.org.apache.xpath.internal.axes.AxesWalker
                                protected m_axis: int
                                protected m_traverser: com.sun.org.apache.xml.internal.dtm.DTMAxisTraverser
                                public constructor(arg0: com.sun.org.apache.xpath.internal.axes.LocPathIterator | com.sun.org.apache.xpath.internal.axes.LocPathIterator$$Lambda, arg1: int)
                                public wi(): com.sun.org.apache.xpath.internal.axes.WalkingIterator
                                public init(arg0: com.sun.org.apache.xpath.internal.compiler.Compiler, arg1: int, arg2: int): void
                                public clone(): java.lang.Object
                                public detach(): void
                                public getRoot(): int
                                public getAnalysisBits(): int
                                public setRoot(arg0: int): void
                                public getCurrentNode(): int
                                public setNextWalker(arg0: com.sun.org.apache.xpath.internal.axes.AxesWalker): void
                                public getNextWalker(): com.sun.org.apache.xpath.internal.axes.AxesWalker
                                public setPrevWalker(arg0: com.sun.org.apache.xpath.internal.axes.AxesWalker): void
                                public getPrevWalker(): com.sun.org.apache.xpath.internal.axes.AxesWalker
                                protected getNextNode(): int
                                public nextNode(): int
                                public getLastPos(arg0: com.sun.org.apache.xpath.internal.XPathContext): int
                                public setDefaultDTM(arg0: com.sun.org.apache.xml.internal.dtm.DTM): void
                                public getDTM(arg0: int): com.sun.org.apache.xml.internal.dtm.DTM
                                public isDocOrdered(): boolean
                                public getAxis(): int
                                public callVisitors(arg0: com.sun.org.apache.xpath.internal.ExpressionOwner, arg1: com.sun.org.apache.xpath.internal.XPathVisitor): void
                                public getExpression(): com.sun.org.apache.xpath.internal.Expression
                                public setExpression(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): void
                                public deepEquals(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): boolean
                                public static class: java.lang.Class<any>
                            }
                            abstract class BasicTestIterator extends com.sun.org.apache.xpath.internal.axes.LocPathIterator {
                                protected constructor()
                                protected constructor(arg0: com.sun.org.apache.xml.internal.utils.PrefixResolver)
                                protected constructor(arg0: com.sun.org.apache.xpath.internal.compiler.Compiler, arg1: int, arg2: int)
                                protected constructor(arg0: com.sun.org.apache.xpath.internal.compiler.Compiler, arg1: int, arg2: int, arg3: boolean)
                                protected getNextNode(): int
                                public nextNode(): int
                                public cloneWithReset(): com.sun.org.apache.xml.internal.dtm.DTMIterator
                                public static class: java.lang.Class<any>
                            }
                            class ChildIterator extends com.sun.org.apache.xpath.internal.axes.LocPathIterator {
                                public asNode(arg0: com.sun.org.apache.xpath.internal.XPathContext): int
                                public nextNode(): int
                                public getAxis(): int
                                public static class: java.lang.Class<any>
                            }
                            class ChildTestIterator extends com.sun.org.apache.xpath.internal.axes.BasicTestIterator {
                                protected m_traverser: com.sun.org.apache.xml.internal.dtm.DTMAxisTraverser
                                public constructor(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisTraverser)
                                protected getNextNode(): int
                                public cloneWithReset(): com.sun.org.apache.xml.internal.dtm.DTMIterator
                                public setRoot(arg0: int, arg1: java.lang.Object): void
                                public getAxis(): int
                                public detach(): void
                                public static class: java.lang.Class<any>
                            }
                            interface ContextNodeList {
                                getCurrentNode(): org.w3c.dom.Node
                                getCurrentPos(): int
                                reset(): void
                                setShouldCacheNodes(arg0: boolean): void
                                runTo(arg0: int): void
                                setCurrentPos(arg0: int): void
                                size(): int
                                isFresh(): boolean
                                cloneWithReset(): org.w3c.dom.traversal.NodeIterator
                                clone(): java.lang.Object
                                getLast(): int
                                setLast(arg0: int): void
                            }
                            class DescendantIterator extends com.sun.org.apache.xpath.internal.axes.LocPathIterator {
                                protected m_traverser: com.sun.org.apache.xml.internal.dtm.DTMAxisTraverser
                                protected m_axis: int
                                protected m_extendedTypeID: int
                                public constructor()
                                public cloneWithReset(): com.sun.org.apache.xml.internal.dtm.DTMIterator
                                public nextNode(): int
                                public setRoot(arg0: int, arg1: java.lang.Object): void
                                public asNode(arg0: com.sun.org.apache.xpath.internal.XPathContext): int
                                public detach(): void
                                public getAxis(): int
                                public deepEquals(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): boolean
                                public static class: java.lang.Class<any>
                            }
                            class FilterExprIterator extends com.sun.org.apache.xpath.internal.axes.BasicTestIterator {
                                public constructor()
                                public constructor(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda)
                                public setRoot(arg0: int, arg1: java.lang.Object): void
                                protected getNextNode(): int
                                public detach(): void
                                public fixupVariables(arg0: java.util.Vector, arg1: int): void
                                public getInnerExpression(): com.sun.org.apache.xpath.internal.Expression
                                public setInnerExpression(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): void
                                public getAnalysisBits(): int
                                public isDocOrdered(): boolean
                                public callPredicateVisitors(arg0: com.sun.org.apache.xpath.internal.XPathVisitor): void
                                public deepEquals(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): boolean
                                public static class: java.lang.Class<any>
                            }
                            class FilterExprIteratorSimple extends com.sun.org.apache.xpath.internal.axes.LocPathIterator {
                                public constructor()
                                public constructor(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda)
                                public setRoot(arg0: int, arg1: java.lang.Object): void
                                public static executeFilterExpr(arg0: int, arg1: com.sun.org.apache.xpath.internal.XPathContext, arg2: com.sun.org.apache.xml.internal.utils.PrefixResolver, arg3: boolean, arg4: int, arg5: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): com.sun.org.apache.xpath.internal.objects.XNodeSet
                                public nextNode(): int
                                public detach(): void
                                public fixupVariables(arg0: java.util.Vector, arg1: int): void
                                public getInnerExpression(): com.sun.org.apache.xpath.internal.Expression
                                public setInnerExpression(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): void
                                public getAnalysisBits(): int
                                public isDocOrdered(): boolean
                                public callPredicateVisitors(arg0: com.sun.org.apache.xpath.internal.XPathVisitor): void
                                public deepEquals(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): boolean
                                public getAxis(): int
                                public static class: java.lang.Class<any>
                            }
                            class FilterExprWalker extends com.sun.org.apache.xpath.internal.axes.AxesWalker {
                                public constructor(arg0: com.sun.org.apache.xpath.internal.axes.WalkingIterator)
                                public init(arg0: com.sun.org.apache.xpath.internal.compiler.Compiler, arg1: int, arg2: int): void
                                public detach(): void
                                public setRoot(arg0: int): void
                                public clone(): java.lang.Object
                                public acceptNode(arg0: int): short
                                public getNextNode(): int
                                public getLastPos(arg0: com.sun.org.apache.xpath.internal.XPathContext): int
                                public fixupVariables(arg0: java.util.Vector, arg1: int): void
                                public getInnerExpression(): com.sun.org.apache.xpath.internal.Expression
                                public setInnerExpression(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): void
                                public getAnalysisBits(): int
                                public isDocOrdered(): boolean
                                public getAxis(): int
                                public callPredicateVisitors(arg0: com.sun.org.apache.xpath.internal.XPathVisitor): void
                                public deepEquals(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): boolean
                                public static class: java.lang.Class<any>
                            }
                            class HasPositionalPredChecker extends com.sun.org.apache.xpath.internal.XPathVisitor {
                                public constructor()
                                public static check(arg0: com.sun.org.apache.xpath.internal.axes.LocPathIterator | com.sun.org.apache.xpath.internal.axes.LocPathIterator$$Lambda): boolean
                                public visitFunction(arg0: com.sun.org.apache.xpath.internal.ExpressionOwner, arg1: com.sun.org.apache.xpath.internal.functions.Function): boolean
                                public visitPredicate(arg0: com.sun.org.apache.xpath.internal.ExpressionOwner, arg1: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): boolean
                                public static class: java.lang.Class<any>
                            }
                            class IteratorPool implements java.io.Serializable {
                                public constructor(arg0: com.sun.org.apache.xml.internal.dtm.DTMIterator)
                                public getInstanceOrThrow(): com.sun.org.apache.xml.internal.dtm.DTMIterator
                                public getInstance(): com.sun.org.apache.xml.internal.dtm.DTMIterator
                                public freeInstance(arg0: com.sun.org.apache.xml.internal.dtm.DTMIterator): void
                                public static class: java.lang.Class<any>
                            }
                            abstract class LocPathIterator extends com.sun.org.apache.xpath.internal.axes.PredicatedNodeTest implements java.lang.Cloneable , com.sun.org.apache.xml.internal.dtm.DTMIterator , java.io.Serializable , com.sun.org.apache.xpath.internal.axes.PathComponent {
                                protected m_allowDetach: boolean
                                protected m_clones: com.sun.org.apache.xpath.internal.axes.IteratorPool
                                protected m_cdtm: com.sun.org.apache.xml.internal.dtm.DTM
                                public m_lastFetched: int
                                protected m_context: int
                                protected m_currentContextNode: int
                                protected m_pos: int
                                protected m_length: int
                                protected m_execContext: com.sun.org.apache.xpath.internal.XPathContext
                                protected constructor()
                                protected constructor(arg0: com.sun.org.apache.xml.internal.utils.PrefixResolver)
                                protected constructor(arg0: com.sun.org.apache.xpath.internal.compiler.Compiler, arg1: int, arg2: int)
                                protected constructor(arg0: com.sun.org.apache.xpath.internal.compiler.Compiler, arg1: int, arg2: int, arg3: boolean)
                                public getAnalysisBits(): int
                                public setEnvironment(arg0: java.lang.Object): void
                                public getDTM(arg0: int): com.sun.org.apache.xml.internal.dtm.DTM
                                public getDTMManager(): com.sun.org.apache.xml.internal.dtm.DTMManager
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public executeCharsToContentHandler(arg0: com.sun.org.apache.xpath.internal.XPathContext, arg1: org.xml.sax.ContentHandler): void
                                public asIterator(arg0: com.sun.org.apache.xpath.internal.XPathContext, arg1: int): com.sun.org.apache.xml.internal.dtm.DTMIterator
                                public isNodesetExpr(): boolean
                                public asNode(arg0: com.sun.org.apache.xpath.internal.XPathContext): int
                                public bool(arg0: com.sun.org.apache.xpath.internal.XPathContext): boolean
                                public setIsTopLevel(arg0: boolean): void
                                public getIsTopLevel(): boolean
                                public setRoot(arg0: int, arg1: java.lang.Object): void
                                protected setNextPosition(arg0: int): void
                                public getCurrentPos(): int
                                public setShouldCacheNodes(arg0: boolean): void
                                public isMutable(): boolean
                                public setCurrentPos(arg0: int): void
                                public incrementCurrentPos(): void
                                public size(): int
                                public item(arg0: int): int
                                public setItem(arg0: int, arg1: int): void
                                public getLength(): int
                                public isFresh(): boolean
                                public previousNode(): int
                                public getWhatToShow(): int
                                public getFilter(): com.sun.org.apache.xml.internal.dtm.DTMFilter
                                public getRoot(): int
                                public getExpandEntityReferences(): boolean
                                public allowDetachToRelease(arg0: boolean): void
                                public detach(): void
                                public reset(): void
                                public cloneWithReset(): com.sun.org.apache.xml.internal.dtm.DTMIterator
                                public nextNode(): int
                                protected returnNextNode(arg0: int): int
                                public getCurrentNode(): int
                                public runTo(arg0: int): void
                                public getFoundLast(): boolean
                                public getXPathContext(): com.sun.org.apache.xpath.internal.XPathContext
                                public getContext(): int
                                public getCurrentContextNode(): int
                                public setCurrentContextNode(arg0: int): void
                                public getPrefixResolver(): com.sun.org.apache.xml.internal.utils.PrefixResolver
                                public callVisitors(arg0: com.sun.org.apache.xpath.internal.ExpressionOwner, arg1: com.sun.org.apache.xpath.internal.XPathVisitor): void
                                public isDocOrdered(): boolean
                                public getAxis(): int
                                public getLastPos(arg0: com.sun.org.apache.xpath.internal.XPathContext): int
                                public static class: java.lang.Class<any>
                            }
                            abstract class LocPathIterator$$Lambda extends com.sun.org.apache.xpath.internal.axes.PredicatedNodeTest implements java.lang.Cloneable , com.sun.org.apache.xml.internal.dtm.DTMIterator , java.io.Serializable , com.sun.org.apache.xpath.internal.axes.PathComponent {
                                protected m_allowDetach: boolean
                            }
                            class MatchPatternIterator extends com.sun.org.apache.xpath.internal.axes.LocPathIterator {
                                protected m_pattern: com.sun.org.apache.xpath.internal.patterns.StepPattern
                                protected m_superAxis: int
                                protected m_traverser: com.sun.org.apache.xml.internal.dtm.DTMAxisTraverser
                                public setRoot(arg0: int, arg1: java.lang.Object): void
                                public detach(): void
                                protected getNextNode(): int
                                public nextNode(): int
                                public acceptNode(arg0: int, arg1: com.sun.org.apache.xpath.internal.XPathContext): short
                                public static class: java.lang.Class<any>
                            }
                            class NodeSequence extends com.sun.org.apache.xpath.internal.objects.XObject implements com.sun.org.apache.xml.internal.dtm.DTMIterator , java.lang.Cloneable , com.sun.org.apache.xpath.internal.axes.PathComponent {
                                protected m_last: int
                                protected m_next: int
                                protected m_iter: com.sun.org.apache.xml.internal.dtm.DTMIterator
                                protected m_dtmMgr: com.sun.org.apache.xml.internal.dtm.DTMManager
                                protected getVector(): com.sun.org.apache.xml.internal.utils.NodeVector
                                protected SetVector(arg0: com.sun.org.apache.xml.internal.utils.NodeVector): void
                                public hasCache(): boolean
                                public setIter(arg0: com.sun.org.apache.xml.internal.dtm.DTMIterator): void
                                public getContainedIter(): com.sun.org.apache.xml.internal.dtm.DTMIterator
                                public constructor(arg0: java.lang.Object)
                                public constructor()
                                public getDTM(arg0: int): com.sun.org.apache.xml.internal.dtm.DTM
                                public getDTMManager(): com.sun.org.apache.xml.internal.dtm.DTMManager
                                public getRoot(): int
                                public setRoot(arg0: int, arg1: java.lang.Object): void
                                public reset(): void
                                public getWhatToShow(): int
                                public getExpandEntityReferences(): boolean
                                public nextNode(): int
                                public previousNode(): int
                                public detach(): void
                                public allowDetachToRelease(arg0: boolean): void
                                public getCurrentNode(): int
                                public isFresh(): boolean
                                public setShouldCacheNodes(arg0: boolean): void
                                public isMutable(): boolean
                                public getCurrentPos(): int
                                public runTo(arg0: int): void
                                public setCurrentPos(arg0: int): void
                                public item(arg0: int): int
                                public setItem(arg0: int, arg1: int): void
                                public getLength(): int
                                public cloneWithReset(): com.sun.org.apache.xml.internal.dtm.DTMIterator
                                public clone(): java.lang.Object
                                public isDocOrdered(): boolean
                                public getAxis(): int
                                public getAnalysisBits(): int
                                public fixupVariables(arg0: java.util.Vector, arg1: int): void
                                protected addNodeInDocOrder(arg0: int): int
                                protected setObject(arg0: java.lang.Object): void
                                protected getIteratorCache(): com.sun.org.apache.xpath.internal.axes.NodeSequence$IteratorCache
                                public static class: java.lang.Class<any>
                            }
                            class NodeSequence$$Lambda extends com.sun.org.apache.xpath.internal.objects.XObject implements com.sun.org.apache.xml.internal.dtm.DTMIterator , java.lang.Cloneable , com.sun.org.apache.xpath.internal.axes.PathComponent {
                                protected m_last: int
                            }
                            class OneStepIterator extends com.sun.org.apache.xpath.internal.axes.ChildTestIterator {
                                protected m_axis: int
                                protected m_iterator: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                public constructor(arg0: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, arg1: int)
                                public setRoot(arg0: int, arg1: java.lang.Object): void
                                public detach(): void
                                protected getNextNode(): int
                                public clone(): java.lang.Object
                                public cloneWithReset(): com.sun.org.apache.xml.internal.dtm.DTMIterator
                                public isReverseAxes(): boolean
                                protected getProximityPosition(arg0: int): int
                                public getLength(): int
                                protected countProximityPosition(arg0: int): void
                                public reset(): void
                                public getAxis(): int
                                public deepEquals(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): boolean
                                public static class: java.lang.Class<any>
                            }
                            class OneStepIteratorForward extends com.sun.org.apache.xpath.internal.axes.ChildTestIterator {
                                protected m_axis: int
                                public constructor(arg0: int)
                                public setRoot(arg0: int, arg1: java.lang.Object): void
                                protected getNextNode(): int
                                public getAxis(): int
                                public deepEquals(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): boolean
                                public static class: java.lang.Class<any>
                            }
                            interface PathComponent {
                                getAnalysisBits(): int
                            }
                            interface PathComponent$$Lambda {
                                (): int
                            }
                            abstract class PredicatedNodeTest extends com.sun.org.apache.xpath.internal.patterns.NodeTest implements com.sun.org.apache.xpath.internal.axes.SubContextList {
                                protected m_predCount: int
                                protected m_foundLast: boolean
                                protected m_lpi: com.sun.org.apache.xpath.internal.axes.LocPathIterator
                                protected m_proximityPositions: int[]
                                public clone(): java.lang.Object
                                public getPredicateCount(): int
                                public setPredicateCount(arg0: int): void
                                protected initPredicateInfo(arg0: com.sun.org.apache.xpath.internal.compiler.Compiler, arg1: int): void
                                public getPredicate(arg0: int): com.sun.org.apache.xpath.internal.Expression
                                public getProximityPosition(): int
                                public getProximityPosition(arg0: com.sun.org.apache.xpath.internal.XPathContext): int
                                public getLastPos(arg0: com.sun.org.apache.xpath.internal.XPathContext): int
                                protected getProximityPosition(arg0: int): int
                                public resetProximityPositions(): void
                                public initProximityPosition(arg0: int): void
                                protected countProximityPosition(arg0: int): void
                                public isReverseAxes(): boolean
                                public getPredicateIndex(): int
                                public fixupVariables(arg0: java.util.Vector, arg1: int): void
                                protected nodeToString(arg0: int): string
                                public acceptNode(arg0: int): short
                                public getLocPathIterator(): com.sun.org.apache.xpath.internal.axes.LocPathIterator
                                public setLocPathIterator(arg0: com.sun.org.apache.xpath.internal.axes.LocPathIterator | com.sun.org.apache.xpath.internal.axes.LocPathIterator$$Lambda): void
                                public canTraverseOutsideSubtree(): boolean
                                public callPredicateVisitors(arg0: com.sun.org.apache.xpath.internal.XPathVisitor): void
                                public deepEquals(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): boolean
                                public static class: java.lang.Class<any>
                            }
                            class RTFIterator extends com.sun.org.apache.xpath.internal.NodeSetDTM {
                                public constructor(arg0: int, arg1: com.sun.org.apache.xml.internal.dtm.DTMManager)
                                public static class: java.lang.Class<any>
                            }
                            class ReverseAxesWalker extends com.sun.org.apache.xpath.internal.axes.AxesWalker {
                                protected m_iterator: com.sun.org.apache.xml.internal.dtm.DTMAxisIterator
                                public setRoot(arg0: int): void
                                public detach(): void
                                protected getNextNode(): int
                                public isReverseAxes(): boolean
                                protected getProximityPosition(arg0: int): int
                                protected countProximityPosition(arg0: int): void
                                public getLastPos(arg0: com.sun.org.apache.xpath.internal.XPathContext): int
                                public isDocOrdered(): boolean
                                public static class: java.lang.Class<any>
                            }
                            class SelfIteratorNoPredicate extends com.sun.org.apache.xpath.internal.axes.LocPathIterator {
                                public constructor()
                                public nextNode(): int
                                public asNode(arg0: com.sun.org.apache.xpath.internal.XPathContext): int
                                public getLastPos(arg0: com.sun.org.apache.xpath.internal.XPathContext): int
                                public static class: java.lang.Class<any>
                            }
                            interface SubContextList {
                                getLastPos(arg0: com.sun.org.apache.xpath.internal.XPathContext): int
                                getProximityPosition(arg0: com.sun.org.apache.xpath.internal.XPathContext): int
                            }
                            class UnionChildIterator extends com.sun.org.apache.xpath.internal.axes.ChildTestIterator {
                                public constructor()
                                public addNodeTest(arg0: com.sun.org.apache.xpath.internal.axes.PredicatedNodeTest): void
                                public fixupVariables(arg0: java.util.Vector, arg1: int): void
                                public acceptNode(arg0: int): short
                                public static class: java.lang.Class<any>
                            }
                            class UnionPathIterator extends com.sun.org.apache.xpath.internal.axes.LocPathIterator implements java.lang.Cloneable , com.sun.org.apache.xml.internal.dtm.DTMIterator , java.io.Serializable , com.sun.org.apache.xpath.internal.axes.PathComponent {
                                protected m_exprs: com.sun.org.apache.xpath.internal.axes.LocPathIterator[]
                                protected m_iterators: com.sun.org.apache.xml.internal.dtm.DTMIterator[]
                                public constructor()
                                public setRoot(arg0: int, arg1: java.lang.Object): void
                                public addIterator(arg0: com.sun.org.apache.xml.internal.dtm.DTMIterator): void
                                public detach(): void
                                public constructor(arg0: com.sun.org.apache.xpath.internal.compiler.Compiler, arg1: int)
                                public static createUnionIterator(arg0: com.sun.org.apache.xpath.internal.compiler.Compiler, arg1: int): com.sun.org.apache.xpath.internal.axes.LocPathIterator
                                public getAnalysisBits(): int
                                public clone(): java.lang.Object
                                protected createDTMIterator(arg0: com.sun.org.apache.xpath.internal.compiler.Compiler, arg1: int): com.sun.org.apache.xpath.internal.axes.LocPathIterator
                                protected loadLocationPaths(arg0: com.sun.org.apache.xpath.internal.compiler.Compiler, arg1: int, arg2: int): void
                                public nextNode(): int
                                public fixupVariables(arg0: java.util.Vector, arg1: int): void
                                public getAxis(): int
                                public callVisitors(arg0: com.sun.org.apache.xpath.internal.ExpressionOwner, arg1: com.sun.org.apache.xpath.internal.XPathVisitor): void
                                public deepEquals(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): boolean
                                public static class: java.lang.Class<any>
                            }
                            class UnionPathIterator$$Lambda extends com.sun.org.apache.xpath.internal.axes.LocPathIterator implements java.lang.Cloneable , com.sun.org.apache.xml.internal.dtm.DTMIterator , java.io.Serializable , com.sun.org.apache.xpath.internal.axes.PathComponent {
                                protected m_exprs: com.sun.org.apache.xpath.internal.axes.LocPathIterator[]
                            }
                            class WalkerFactory {
                                public static BITS_COUNT: int
                                public static BITS_RESERVED: int
                                public static BIT_PREDICATE: int
                                public static BIT_ANCESTOR: int
                                public static BIT_ANCESTOR_OR_SELF: int
                                public static BIT_ATTRIBUTE: int
                                public static BIT_CHILD: int
                                public static BIT_DESCENDANT: int
                                public static BIT_DESCENDANT_OR_SELF: int
                                public static BIT_FOLLOWING: int
                                public static BIT_FOLLOWING_SIBLING: int
                                public static BIT_NAMESPACE: int
                                public static BIT_PARENT: int
                                public static BIT_PRECEDING: int
                                public static BIT_PRECEDING_SIBLING: int
                                public static BIT_SELF: int
                                public static BIT_FILTER: int
                                public static BIT_ROOT: int
                                public static BITMASK_TRAVERSES_OUTSIDE_SUBTREE: int
                                public static BIT_BACKWARDS_SELF: int
                                public static BIT_ANY_DESCENDANT_FROM_ROOT: int
                                public static BIT_NODETEST_ANY: int
                                public static BIT_MATCH_PATTERN: int
                                public constructor()
                                public static isSet(arg0: int, arg1: int): boolean
                                public static diagnoseIterator(arg0: java.lang.String | string, arg1: int, arg2: com.sun.org.apache.xpath.internal.compiler.Compiler): void
                                public static newDTMIterator(arg0: com.sun.org.apache.xpath.internal.compiler.Compiler, arg1: int, arg2: boolean): com.sun.org.apache.xml.internal.dtm.DTMIterator
                                public static getAxisFromStep(arg0: com.sun.org.apache.xpath.internal.compiler.Compiler, arg1: int): int
                                public static getAnalysisBitFromAxes(arg0: int): int
                                public static mightBeProximate(arg0: com.sun.org.apache.xpath.internal.compiler.Compiler, arg1: int, arg2: int): boolean
                                public static isDownwardAxisOfMany(arg0: int): boolean
                                public static getAnalysisString(arg0: int): string
                                public static hasPredicate(arg0: int): boolean
                                public static isWild(arg0: int): boolean
                                public static walksAncestors(arg0: int): boolean
                                public static walksAttributes(arg0: int): boolean
                                public static walksNamespaces(arg0: int): boolean
                                public static walksChildren(arg0: int): boolean
                                public static walksDescendants(arg0: int): boolean
                                public static walksSubtree(arg0: int): boolean
                                public static walksSubtreeOnlyMaybeAbsolute(arg0: int): boolean
                                public static walksSubtreeOnly(arg0: int): boolean
                                public static walksFilteredList(arg0: int): boolean
                                public static walksSubtreeOnlyFromRootOrContext(arg0: int): boolean
                                public static walksInDocOrder(arg0: int): boolean
                                public static walksFollowingOnlyMaybeAbsolute(arg0: int): boolean
                                public static walksUp(arg0: int): boolean
                                public static walksSideways(arg0: int): boolean
                                public static walksExtraNodes(arg0: int): boolean
                                public static walksExtraNodesOnly(arg0: int): boolean
                                public static isAbsolute(arg0: int): boolean
                                public static walksChildrenOnly(arg0: int): boolean
                                public static walksChildrenAndExtraAndSelfOnly(arg0: int): boolean
                                public static walksDescendantsAndExtraAndSelfOnly(arg0: int): boolean
                                public static walksSelfOnly(arg0: int): boolean
                                public static walksUpOnly(arg0: int): boolean
                                public static walksDownOnly(arg0: int): boolean
                                public static walksDownExtraOnly(arg0: int): boolean
                                public static canSkipSubtrees(arg0: int): boolean
                                public static canCrissCross(arg0: int): boolean
                                public static isNaturalDocOrder(arg0: int): boolean
                                public static isOneStep(arg0: int): boolean
                                public static getStepCount(arg0: int): int
                                public static class: java.lang.Class<any>
                            }
                            class WalkingIterator extends com.sun.org.apache.xpath.internal.axes.LocPathIterator implements com.sun.org.apache.xpath.internal.ExpressionOwner {
                                protected m_lastUsedWalker: com.sun.org.apache.xpath.internal.axes.AxesWalker
                                protected m_firstWalker: com.sun.org.apache.xpath.internal.axes.AxesWalker
                                public constructor(arg0: com.sun.org.apache.xml.internal.utils.PrefixResolver)
                                public getAnalysisBits(): int
                                public clone(): java.lang.Object
                                public reset(): void
                                public setRoot(arg0: int, arg1: java.lang.Object): void
                                public nextNode(): int
                                public getFirstWalker(): com.sun.org.apache.xpath.internal.axes.AxesWalker
                                public setFirstWalker(arg0: com.sun.org.apache.xpath.internal.axes.AxesWalker): void
                                public setLastUsedWalker(arg0: com.sun.org.apache.xpath.internal.axes.AxesWalker): void
                                public getLastUsedWalker(): com.sun.org.apache.xpath.internal.axes.AxesWalker
                                public detach(): void
                                public fixupVariables(arg0: java.util.Vector, arg1: int): void
                                public callVisitors(arg0: com.sun.org.apache.xpath.internal.ExpressionOwner, arg1: com.sun.org.apache.xpath.internal.XPathVisitor): void
                                public getExpression(): com.sun.org.apache.xpath.internal.Expression
                                public setExpression(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): void
                                public deepEquals(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): boolean
                                public static class: java.lang.Class<any>
                            }
                            class WalkingIteratorSorted extends com.sun.org.apache.xpath.internal.axes.WalkingIterator {
                                protected m_inNaturalOrderStatic: boolean
                                public constructor(arg0: com.sun.org.apache.xml.internal.utils.PrefixResolver)
                                public isDocOrdered(): boolean
                                public fixupVariables(arg0: java.util.Vector, arg1: int): void
                                public static class: java.lang.Class<any>
                            }
                        }
                        namespace compiler {
                            class Compiler extends com.sun.org.apache.xpath.internal.compiler.OpMap {
                                public constructor(arg0: javax.xml.transform.ErrorListener, arg1: javax.xml.transform.SourceLocator, arg2: com.sun.org.apache.xpath.internal.compiler.FunctionTable)
                                public constructor()
                                public compile(arg0: int): com.sun.org.apache.xpath.internal.Expression
                                protected or(arg0: int): com.sun.org.apache.xpath.internal.Expression
                                protected and(arg0: int): com.sun.org.apache.xpath.internal.Expression
                                protected notequals(arg0: int): com.sun.org.apache.xpath.internal.Expression
                                protected equals(arg0: int): com.sun.org.apache.xpath.internal.Expression
                                protected lte(arg0: int): com.sun.org.apache.xpath.internal.Expression
                                protected lt(arg0: int): com.sun.org.apache.xpath.internal.Expression
                                protected gte(arg0: int): com.sun.org.apache.xpath.internal.Expression
                                protected gt(arg0: int): com.sun.org.apache.xpath.internal.Expression
                                protected plus(arg0: int): com.sun.org.apache.xpath.internal.Expression
                                protected minus(arg0: int): com.sun.org.apache.xpath.internal.Expression
                                protected mult(arg0: int): com.sun.org.apache.xpath.internal.Expression
                                protected div(arg0: int): com.sun.org.apache.xpath.internal.Expression
                                protected mod(arg0: int): com.sun.org.apache.xpath.internal.Expression
                                protected neg(arg0: int): com.sun.org.apache.xpath.internal.Expression
                                protected string(arg0: int): com.sun.org.apache.xpath.internal.Expression
                                protected bool(arg0: int): com.sun.org.apache.xpath.internal.Expression
                                protected number(arg0: int): com.sun.org.apache.xpath.internal.Expression
                                protected literal(arg0: int): com.sun.org.apache.xpath.internal.Expression
                                protected numberlit(arg0: int): com.sun.org.apache.xpath.internal.Expression
                                protected variable(arg0: int): com.sun.org.apache.xpath.internal.Expression
                                protected group(arg0: int): com.sun.org.apache.xpath.internal.Expression
                                protected arg(arg0: int): com.sun.org.apache.xpath.internal.Expression
                                protected union(arg0: int): com.sun.org.apache.xpath.internal.Expression
                                public getLocationPathDepth(): int
                                public locationPath(arg0: int): com.sun.org.apache.xpath.internal.Expression
                                public predicate(arg0: int): com.sun.org.apache.xpath.internal.Expression
                                protected matchPattern(arg0: int): com.sun.org.apache.xpath.internal.Expression
                                public locationPathPattern(arg0: int): com.sun.org.apache.xpath.internal.Expression
                                public getWhatToShow(arg0: int): int
                                protected stepPattern(arg0: int, arg1: int, arg2: com.sun.org.apache.xpath.internal.patterns.StepPattern): com.sun.org.apache.xpath.internal.patterns.StepPattern
                                public getCompiledPredicates(arg0: int): com.sun.org.apache.xpath.internal.Expression[]
                                public countPredicates(arg0: int): int
                                public warn(arg0: java.lang.String | string, arg1: java.lang.Object[]): void
                                public assertion(arg0: boolean, arg1: java.lang.String | string): void
                                public error(arg0: java.lang.String | string, arg1: java.lang.Object[]): void
                                public getNamespaceContext(): com.sun.org.apache.xml.internal.utils.PrefixResolver
                                public setNamespaceContext(arg0: com.sun.org.apache.xml.internal.utils.PrefixResolver): void
                                public static class: java.lang.Class<any>
                            }
                            class FuncLoader {
                                public getName(): string
                                public constructor(arg0: java.lang.String | string, arg1: int)
                                public static class: java.lang.Class<any>
                            }
                            class FunctionTable {
                                public static FUNC_CURRENT: int
                                public static FUNC_LAST: int
                                public static FUNC_POSITION: int
                                public static FUNC_COUNT: int
                                public static FUNC_ID: int
                                public static FUNC_KEY: int
                                public static FUNC_LOCAL_PART: int
                                public static FUNC_NAMESPACE: int
                                public static FUNC_QNAME: int
                                public static FUNC_GENERATE_ID: int
                                public static FUNC_NOT: int
                                public static FUNC_TRUE: int
                                public static FUNC_FALSE: int
                                public static FUNC_BOOLEAN: int
                                public static FUNC_NUMBER: int
                                public static FUNC_FLOOR: int
                                public static FUNC_CEILING: int
                                public static FUNC_ROUND: int
                                public static FUNC_SUM: int
                                public static FUNC_STRING: int
                                public static FUNC_STARTS_WITH: int
                                public static FUNC_CONTAINS: int
                                public static FUNC_SUBSTRING_BEFORE: int
                                public static FUNC_SUBSTRING_AFTER: int
                                public static FUNC_NORMALIZE_SPACE: int
                                public static FUNC_TRANSLATE: int
                                public static FUNC_CONCAT: int
                                public static FUNC_SUBSTRING: int
                                public static FUNC_STRING_LENGTH: int
                                public static FUNC_SYSTEM_PROPERTY: int
                                public static FUNC_LANG: int
                                public static FUNC_EXT_FUNCTION_AVAILABLE: int
                                public static FUNC_EXT_ELEM_AVAILABLE: int
                                public static FUNC_UNPARSED_ENTITY_URI: int
                                public static FUNC_DOCLOCATION: int
                                public constructor()
                                public installFunction(arg0: java.lang.String | string, arg1: java.lang.Class): int
                                public functionAvailable(arg0: java.lang.String | string): boolean
                                public static class: java.lang.Class<any>
                            }
                            class Keywords {
                                public static FUNC_CURRENT_STRING: string
                                public static FUNC_LAST_STRING: string
                                public static FUNC_POSITION_STRING: string
                                public static FUNC_COUNT_STRING: string
                                public static FUNC_KEY_STRING: string
                                public static FUNC_LOCAL_PART_STRING: string
                                public static FUNC_NAMESPACE_STRING: string
                                public static FUNC_NAME_STRING: string
                                public static FUNC_GENERATE_ID_STRING: string
                                public static FUNC_NOT_STRING: string
                                public static FUNC_TRUE_STRING: string
                                public static FUNC_FALSE_STRING: string
                                public static FUNC_BOOLEAN_STRING: string
                                public static FUNC_LANG_STRING: string
                                public static FUNC_NUMBER_STRING: string
                                public static FUNC_FLOOR_STRING: string
                                public static FUNC_CEILING_STRING: string
                                public static FUNC_ROUND_STRING: string
                                public static FUNC_SUM_STRING: string
                                public static FUNC_STRING_STRING: string
                                public static FUNC_STARTS_WITH_STRING: string
                                public static FUNC_CONTAINS_STRING: string
                                public static FUNC_SUBSTRING_BEFORE_STRING: string
                                public static FUNC_SUBSTRING_AFTER_STRING: string
                                public static FUNC_NORMALIZE_SPACE_STRING: string
                                public static FUNC_TRANSLATE_STRING: string
                                public static FUNC_CONCAT_STRING: string
                                public static FUNC_SYSTEM_PROPERTY_STRING: string
                                public static FUNC_EXT_FUNCTION_AVAILABLE_STRING: string
                                public static FUNC_EXT_ELEM_AVAILABLE_STRING: string
                                public static FUNC_SUBSTRING_STRING: string
                                public static FUNC_STRING_LENGTH_STRING: string
                                public static FUNC_UNPARSED_ENTITY_URI_STRING: string
                                public static FUNC_DOCLOCATION_STRING: string
                                public constructor()
                                public static class: java.lang.Class<any>
                            }
                            class Lexer {
                                public static class: java.lang.Class<any>
                            }
                            class OpCodes {
                                public static ENDOP: int
                                public static EMPTY: int
                                public static ELEMWILDCARD: int
                                public static OP_XPATH: int
                                public static OP_OR: int
                                public static OP_AND: int
                                public static OP_NOTEQUALS: int
                                public static OP_EQUALS: int
                                public static OP_LTE: int
                                public static OP_LT: int
                                public static OP_GTE: int
                                public static OP_GT: int
                                public static OP_PLUS: int
                                public static OP_MINUS: int
                                public static OP_MULT: int
                                public static OP_DIV: int
                                public static OP_MOD: int
                                public static OP_QUO: int
                                public static OP_NEG: int
                                public static OP_STRING: int
                                public static OP_BOOL: int
                                public static OP_NUMBER: int
                                public static OP_UNION: int
                                public static OP_LITERAL: int
                                public static OP_VARIABLE: int
                                public static OP_GROUP: int
                                public static OP_EXTFUNCTION: int
                                public static OP_FUNCTION: int
                                public static OP_ARGUMENT: int
                                public static OP_NUMBERLIT: int
                                public static OP_LOCATIONPATH: int
                                public static OP_PREDICATE: int
                                public static OP_MATCHPATTERN: int
                                public static OP_LOCATIONPATHPATTERN: int
                                public static NODETYPE_COMMENT: int
                                public static NODETYPE_TEXT: int
                                public static NODETYPE_PI: int
                                public static NODETYPE_NODE: int
                                public static NODENAME: int
                                public static NODETYPE_ROOT: int
                                public static NODETYPE_ANYELEMENT: int
                                public static NODETYPE_FUNCTEST: int
                                public static AXES_START_TYPES: int
                                public static FROM_ANCESTORS: int
                                public static FROM_ANCESTORS_OR_SELF: int
                                public static FROM_ATTRIBUTES: int
                                public static FROM_CHILDREN: int
                                public static FROM_DESCENDANTS: int
                                public static FROM_DESCENDANTS_OR_SELF: int
                                public static FROM_FOLLOWING: int
                                public static FROM_FOLLOWING_SIBLINGS: int
                                public static FROM_PARENT: int
                                public static FROM_PRECEDING: int
                                public static FROM_PRECEDING_SIBLINGS: int
                                public static FROM_SELF: int
                                public static FROM_NAMESPACE: int
                                public static FROM_ROOT: int
                                public static MATCH_ATTRIBUTE: int
                                public static MATCH_ANY_ANCESTOR: int
                                public static MATCH_IMMEDIATE_ANCESTOR: int
                                public static AXES_END_TYPES: int
                                public constructor()
                                public static class: java.lang.Class<any>
                            }
                            class OpMap {
                                protected m_currentPattern: string
                                public static MAPINDEX_LENGTH: int
                                public constructor()
                                public toString(): string
                                public getPatternString(): string
                                public getTokenQueue(): com.sun.org.apache.xml.internal.utils.ObjectVector
                                public getToken(arg0: int): java.lang.Object
                                public getTokenQueueSize(): int
                                public getOpMap(): com.sun.org.apache.xpath.internal.compiler.OpMapVector
                                public getOp(arg0: int): int
                                public setOp(arg0: int, arg1: int): void
                                public getNextOpPos(arg0: int): int
                                public getNextStepPos(arg0: int): int
                                public static getNextOpPos(arg0: int[], arg1: int): int
                                public getFirstPredicateOpPos(arg0: int): int
                                public error(arg0: java.lang.String | string, arg1: java.lang.Object[]): void
                                public static getFirstChildPos(arg0: int): int
                                public getArgLength(arg0: int): int
                                public getArgLengthOfStep(arg0: int): int
                                public static getFirstChildPosOfStep(arg0: int): int
                                public getStepTestType(arg0: int): int
                                public getStepNS(arg0: int): string
                                public getStepLocalName(arg0: int): string
                                public static class: java.lang.Class<any>
                            }
                            class OpMapVector {
                                protected m_blocksize: int
                                protected m_map: int[]
                                protected m_lengthPos: int
                                protected m_mapSize: int
                                public constructor(arg0: int, arg1: int, arg2: int)
                                public elementAt(arg0: int): int
                                public setElementAt(arg0: int, arg1: int): void
                                public setToSize(arg0: int): void
                                public static class: java.lang.Class<any>
                            }
                            class PsuedoNames {
                                public static PSEUDONAME_ANY: string
                                public static PSEUDONAME_ROOT: string
                                public static PSEUDONAME_TEXT: string
                                public static PSEUDONAME_COMMENT: string
                                public static PSEUDONAME_PI: string
                                public static PSEUDONAME_OTHER: string
                                public constructor()
                                public static class: java.lang.Class<any>
                            }
                            class XPathDumper {
                                public constructor()
                                public static class: java.lang.Class<any>
                            }
                            class XPathParser {
                                public static CONTINUE_AFTER_FATAL_ERROR: string
                                protected static FILTER_MATCH_FAILED: int
                                protected static FILTER_MATCH_PRIMARY: int
                                protected static FILTER_MATCH_PREDICATES: int
                                public constructor(arg0: javax.xml.transform.ErrorListener, arg1: javax.xml.transform.SourceLocator)
                                public initXPath(arg0: com.sun.org.apache.xpath.internal.compiler.Compiler, arg1: java.lang.String | string, arg2: com.sun.org.apache.xml.internal.utils.PrefixResolver): void
                                public initMatchPattern(arg0: com.sun.org.apache.xpath.internal.compiler.Compiler, arg1: java.lang.String | string, arg2: com.sun.org.apache.xml.internal.utils.PrefixResolver): void
                                public setErrorHandler(arg0: javax.xml.transform.ErrorListener): void
                                public getErrorListener(): javax.xml.transform.ErrorListener
                                protected dumpRemainingTokenQueue(): string
                                protected Expr(): void
                                protected OrExpr(): void
                                protected AndExpr(): void
                                protected EqualityExpr(arg0: int): int
                                protected RelationalExpr(arg0: int): int
                                protected AdditiveExpr(arg0: int): int
                                protected MultiplicativeExpr(arg0: int): int
                                protected UnaryExpr(): void
                                protected StringExpr(): void
                                protected BooleanExpr(): void
                                protected NumberExpr(): void
                                protected UnionExpr(): void
                                protected PathExpr(): void
                                protected FilterExpr(): int
                                protected PrimaryExpr(): boolean
                                protected Argument(): void
                                protected FunctionCall(): boolean
                                protected LocationPath(): void
                                protected RelativeLocationPath(): boolean
                                protected Step(): boolean
                                protected Basis(): void
                                protected AxisName(): int
                                protected NodeTest(arg0: int): void
                                protected Predicate(): void
                                protected PredicateExpr(): void
                                protected QName(): void
                                protected NCName(): void
                                protected Literal(): void
                                protected Number(): void
                                protected Pattern(): void
                                protected LocationPathPattern(): void
                                protected IdKeyPattern(): void
                                protected RelativePathPattern(): void
                                protected StepPattern(arg0: boolean): boolean
                                protected AbbreviatedNodeTestStep(arg0: boolean): boolean
                                public static class: java.lang.Class<any>
                            }
                        }
                        namespace functions {
                            class FuncBoolean extends com.sun.org.apache.xpath.internal.functions.FunctionOneArg {
                                public constructor()
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public static class: java.lang.Class<any>
                            }
                            class FuncCeiling extends com.sun.org.apache.xpath.internal.functions.FunctionOneArg {
                                public constructor()
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public static class: java.lang.Class<any>
                            }
                            class FuncConcat extends com.sun.org.apache.xpath.internal.functions.FunctionMultiArgs {
                                public constructor()
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public checkNumberArgs(arg0: int): void
                                protected reportWrongNumberArgs(): void
                                public static class: java.lang.Class<any>
                            }
                            class FuncContains extends com.sun.org.apache.xpath.internal.functions.Function2Args {
                                public constructor()
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public static class: java.lang.Class<any>
                            }
                            class FuncCount extends com.sun.org.apache.xpath.internal.functions.FunctionOneArg {
                                public constructor()
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public static class: java.lang.Class<any>
                            }
                            class FuncCurrent extends com.sun.org.apache.xpath.internal.functions.Function {
                                public constructor()
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public fixupVariables(arg0: java.util.Vector, arg1: int): void
                                public static class: java.lang.Class<any>
                            }
                            class FuncDoclocation extends com.sun.org.apache.xpath.internal.functions.FunctionDef1Arg {
                                public constructor()
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public static class: java.lang.Class<any>
                            }
                            class FuncExtElementAvailable extends com.sun.org.apache.xpath.internal.functions.FunctionOneArg {
                                public constructor()
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public static class: java.lang.Class<any>
                            }
                            class FuncExtFunction extends com.sun.org.apache.xpath.internal.functions.Function {
                                public fixupVariables(arg0: java.util.Vector, arg1: int): void
                                public getNamespace(): string
                                public getFunctionName(): string
                                public getMethodKey(): java.lang.Object
                                public getArg(arg0: int): com.sun.org.apache.xpath.internal.Expression
                                public getArgCount(): int
                                public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.Object)
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public setArg(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda, arg1: int): void
                                public checkNumberArgs(arg0: int): void
                                public callArgVisitors(arg0: com.sun.org.apache.xpath.internal.XPathVisitor): void
                                public exprSetParent(arg0: com.sun.org.apache.xpath.internal.ExpressionNode): void
                                protected reportWrongNumberArgs(): void
                                public toString(): string
                                public static class: java.lang.Class<any>
                            }
                            class FuncExtFunctionAvailable extends com.sun.org.apache.xpath.internal.functions.FunctionOneArg {
                                public constructor()
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public setFunctionTable(arg0: com.sun.org.apache.xpath.internal.compiler.FunctionTable): void
                                public static class: java.lang.Class<any>
                            }
                            class FuncFalse extends com.sun.org.apache.xpath.internal.functions.Function {
                                public constructor()
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public fixupVariables(arg0: java.util.Vector, arg1: int): void
                                public static class: java.lang.Class<any>
                            }
                            class FuncFloor extends com.sun.org.apache.xpath.internal.functions.FunctionOneArg {
                                public constructor()
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public static class: java.lang.Class<any>
                            }
                            class FuncGenerateId extends com.sun.org.apache.xpath.internal.functions.FunctionDef1Arg {
                                public constructor()
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public static class: java.lang.Class<any>
                            }
                            class FuncId extends com.sun.org.apache.xpath.internal.functions.FunctionOneArg {
                                public constructor()
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public static class: java.lang.Class<any>
                            }
                            class FuncLang extends com.sun.org.apache.xpath.internal.functions.FunctionOneArg {
                                public constructor()
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public static class: java.lang.Class<any>
                            }
                            class FuncLast extends com.sun.org.apache.xpath.internal.functions.Function {
                                public constructor()
                                public postCompileStep(arg0: com.sun.org.apache.xpath.internal.compiler.Compiler): void
                                public getCountOfContextNodeList(arg0: com.sun.org.apache.xpath.internal.XPathContext): int
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public fixupVariables(arg0: java.util.Vector, arg1: int): void
                                public static class: java.lang.Class<any>
                            }
                            class FuncLocalPart extends com.sun.org.apache.xpath.internal.functions.FunctionDef1Arg {
                                public constructor()
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public static class: java.lang.Class<any>
                            }
                            class FuncNamespace extends com.sun.org.apache.xpath.internal.functions.FunctionDef1Arg {
                                public constructor()
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public static class: java.lang.Class<any>
                            }
                            class FuncNormalizeSpace extends com.sun.org.apache.xpath.internal.functions.FunctionDef1Arg {
                                public constructor()
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public executeCharsToContentHandler(arg0: com.sun.org.apache.xpath.internal.XPathContext, arg1: org.xml.sax.ContentHandler): void
                                public static class: java.lang.Class<any>
                            }
                            class FuncNot extends com.sun.org.apache.xpath.internal.functions.FunctionOneArg {
                                public constructor()
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public static class: java.lang.Class<any>
                            }
                            class FuncNumber extends com.sun.org.apache.xpath.internal.functions.FunctionDef1Arg {
                                public constructor()
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public static class: java.lang.Class<any>
                            }
                            class FuncPosition extends com.sun.org.apache.xpath.internal.functions.Function {
                                public constructor()
                                public postCompileStep(arg0: com.sun.org.apache.xpath.internal.compiler.Compiler): void
                                public getPositionInContextNodeList(arg0: com.sun.org.apache.xpath.internal.XPathContext): int
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public fixupVariables(arg0: java.util.Vector, arg1: int): void
                                public static class: java.lang.Class<any>
                            }
                            class FuncQname extends com.sun.org.apache.xpath.internal.functions.FunctionDef1Arg {
                                public constructor()
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public static class: java.lang.Class<any>
                            }
                            class FuncRound extends com.sun.org.apache.xpath.internal.functions.FunctionOneArg {
                                public constructor()
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public static class: java.lang.Class<any>
                            }
                            class FuncStartsWith extends com.sun.org.apache.xpath.internal.functions.Function2Args {
                                public constructor()
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public static class: java.lang.Class<any>
                            }
                            class FuncString extends com.sun.org.apache.xpath.internal.functions.FunctionDef1Arg {
                                public constructor()
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public static class: java.lang.Class<any>
                            }
                            class FuncStringLength extends com.sun.org.apache.xpath.internal.functions.FunctionDef1Arg {
                                public constructor()
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public static class: java.lang.Class<any>
                            }
                            class FuncSubstring extends com.sun.org.apache.xpath.internal.functions.Function3Args {
                                public constructor()
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public checkNumberArgs(arg0: int): void
                                protected reportWrongNumberArgs(): void
                                public static class: java.lang.Class<any>
                            }
                            class FuncSubstringAfter extends com.sun.org.apache.xpath.internal.functions.Function2Args {
                                public constructor()
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public static class: java.lang.Class<any>
                            }
                            class FuncSubstringBefore extends com.sun.org.apache.xpath.internal.functions.Function2Args {
                                public constructor()
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public static class: java.lang.Class<any>
                            }
                            class FuncSum extends com.sun.org.apache.xpath.internal.functions.FunctionOneArg {
                                public constructor()
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public static class: java.lang.Class<any>
                            }
                            class FuncSystemProperty extends com.sun.org.apache.xpath.internal.functions.FunctionOneArg {
                                public constructor()
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public loadPropertyFile(arg0: java.lang.String | string, arg1: java.util.Properties): void
                                public static class: java.lang.Class<any>
                            }
                            class FuncTranslate extends com.sun.org.apache.xpath.internal.functions.Function3Args {
                                public constructor()
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public static class: java.lang.Class<any>
                            }
                            class FuncTrue extends com.sun.org.apache.xpath.internal.functions.Function {
                                public constructor()
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public fixupVariables(arg0: java.util.Vector, arg1: int): void
                                public static class: java.lang.Class<any>
                            }
                            class FuncUnparsedEntityURI extends com.sun.org.apache.xpath.internal.functions.FunctionOneArg {
                                public constructor()
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public static class: java.lang.Class<any>
                            }
                            abstract class Function extends com.sun.org.apache.xpath.internal.Expression {
                                public constructor()
                                public setArg(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda, arg1: int): void
                                public checkNumberArgs(arg0: int): void
                                protected reportWrongNumberArgs(): void
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public callArgVisitors(arg0: com.sun.org.apache.xpath.internal.XPathVisitor): void
                                public callVisitors(arg0: com.sun.org.apache.xpath.internal.ExpressionOwner, arg1: com.sun.org.apache.xpath.internal.XPathVisitor): void
                                public deepEquals(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): boolean
                                public postCompileStep(arg0: com.sun.org.apache.xpath.internal.compiler.Compiler): void
                                public static class: java.lang.Class<any>
                            }
                            class Function2Args extends com.sun.org.apache.xpath.internal.functions.FunctionOneArg {
                                public constructor()
                                public getArg1(): com.sun.org.apache.xpath.internal.Expression
                                public fixupVariables(arg0: java.util.Vector, arg1: int): void
                                public setArg(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda, arg1: int): void
                                public checkNumberArgs(arg0: int): void
                                protected reportWrongNumberArgs(): void
                                public canTraverseOutsideSubtree(): boolean
                                public callArgVisitors(arg0: com.sun.org.apache.xpath.internal.XPathVisitor): void
                                public deepEquals(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): boolean
                                public static class: java.lang.Class<any>
                            }
                            class Function3Args extends com.sun.org.apache.xpath.internal.functions.Function2Args {
                                public constructor()
                                public getArg2(): com.sun.org.apache.xpath.internal.Expression
                                public fixupVariables(arg0: java.util.Vector, arg1: int): void
                                public setArg(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda, arg1: int): void
                                public checkNumberArgs(arg0: int): void
                                protected reportWrongNumberArgs(): void
                                public canTraverseOutsideSubtree(): boolean
                                public callArgVisitors(arg0: com.sun.org.apache.xpath.internal.XPathVisitor): void
                                public deepEquals(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): boolean
                                public static class: java.lang.Class<any>
                            }
                            class FunctionDef1Arg extends com.sun.org.apache.xpath.internal.functions.FunctionOneArg {
                                public constructor()
                                protected getArg0AsNode(arg0: com.sun.org.apache.xpath.internal.XPathContext): int
                                public Arg0IsNodesetExpr(): boolean
                                protected getArg0AsString(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xml.internal.utils.XMLString
                                protected getArg0AsNumber(arg0: com.sun.org.apache.xpath.internal.XPathContext): double
                                public checkNumberArgs(arg0: int): void
                                protected reportWrongNumberArgs(): void
                                public canTraverseOutsideSubtree(): boolean
                                public static class: java.lang.Class<any>
                            }
                            class FunctionMultiArgs extends com.sun.org.apache.xpath.internal.functions.Function3Args {
                                public constructor()
                                public getArgs(): com.sun.org.apache.xpath.internal.Expression[]
                                public setArg(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda, arg1: int): void
                                public fixupVariables(arg0: java.util.Vector, arg1: int): void
                                public checkNumberArgs(arg0: int): void
                                protected reportWrongNumberArgs(): void
                                public canTraverseOutsideSubtree(): boolean
                                public callArgVisitors(arg0: com.sun.org.apache.xpath.internal.XPathVisitor): void
                                public deepEquals(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): boolean
                                public static class: java.lang.Class<any>
                            }
                            class FunctionOneArg extends com.sun.org.apache.xpath.internal.functions.Function implements com.sun.org.apache.xpath.internal.ExpressionOwner {
                                public constructor()
                                public getArg0(): com.sun.org.apache.xpath.internal.Expression
                                public setArg(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda, arg1: int): void
                                public checkNumberArgs(arg0: int): void
                                protected reportWrongNumberArgs(): void
                                public canTraverseOutsideSubtree(): boolean
                                public fixupVariables(arg0: java.util.Vector, arg1: int): void
                                public callArgVisitors(arg0: com.sun.org.apache.xpath.internal.XPathVisitor): void
                                public getExpression(): com.sun.org.apache.xpath.internal.Expression
                                public setExpression(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): void
                                public deepEquals(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): boolean
                                public static class: java.lang.Class<any>
                            }
                            class WrongNumberArgsException extends java.lang.Exception {
                                public constructor(arg0: java.lang.String | string)
                                public static class: java.lang.Class<any>
                            }
                        }
                        namespace jaxp {
                            class JAXPExtensionsProvider implements com.sun.org.apache.xpath.internal.ExtensionsProvider {
                                public constructor(arg0: javax.xml.xpath.XPathFunctionResolver | javax.xml.xpath.XPathFunctionResolver$$Lambda)
                                public constructor(arg0: javax.xml.xpath.XPathFunctionResolver | javax.xml.xpath.XPathFunctionResolver$$Lambda, arg1: boolean, arg2: jdk.xml.internal.JdkXmlFeatures)
                                public functionAvailable(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                                public elementAvailable(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                                public extFunction(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.util.Vector, arg3: java.lang.Object): java.lang.Object
                                public extFunction(arg0: com.sun.org.apache.xpath.internal.functions.FuncExtFunction, arg1: java.util.Vector): java.lang.Object
                                public static class: java.lang.Class<any>
                            }
                            class JAXPPrefixResolver implements com.sun.org.apache.xml.internal.utils.PrefixResolver {
                                public static S_XMLNAMESPACEURI: string
                                public constructor(arg0: javax.xml.namespace.NamespaceContext)
                                public getNamespaceForPrefix(arg0: java.lang.String | string): string
                                public getBaseIdentifier(): string
                                public handlesNullPrefixes(): boolean
                                public getNamespaceForPrefix(arg0: java.lang.String | string, arg1: org.w3c.dom.Node): string
                                public static class: java.lang.Class<any>
                            }
                            class JAXPVariableStack extends com.sun.org.apache.xpath.internal.VariableStack {
                                public constructor(arg0: javax.xml.xpath.XPathVariableResolver | javax.xml.xpath.XPathVariableResolver$$Lambda)
                                public getVariableOrParam(arg0: com.sun.org.apache.xpath.internal.XPathContext, arg1: com.sun.org.apache.xml.internal.utils.QName): com.sun.org.apache.xpath.internal.objects.XObject
                                public static class: java.lang.Class<any>
                            }
                            class XPathExpressionImpl implements javax.xml.xpath.XPathExpression {
                                protected constructor()
                                protected constructor(arg0: com.sun.org.apache.xpath.internal.XPath, arg1: com.sun.org.apache.xpath.internal.jaxp.JAXPPrefixResolver, arg2: javax.xml.xpath.XPathFunctionResolver | javax.xml.xpath.XPathFunctionResolver$$Lambda, arg3: javax.xml.xpath.XPathVariableResolver | javax.xml.xpath.XPathVariableResolver$$Lambda)
                                protected constructor(arg0: com.sun.org.apache.xpath.internal.XPath, arg1: com.sun.org.apache.xpath.internal.jaxp.JAXPPrefixResolver, arg2: javax.xml.xpath.XPathFunctionResolver | javax.xml.xpath.XPathFunctionResolver$$Lambda, arg3: javax.xml.xpath.XPathVariableResolver | javax.xml.xpath.XPathVariableResolver$$Lambda, arg4: boolean, arg5: jdk.xml.internal.JdkXmlFeatures)
                                public setXPath(arg0: com.sun.org.apache.xpath.internal.XPath): void
                                public eval(arg0: java.lang.Object, arg1: javax.xml.namespace.QName): java.lang.Object
                                public evaluate(arg0: java.lang.Object, arg1: javax.xml.namespace.QName): java.lang.Object
                                public evaluate(arg0: java.lang.Object): string
                                public evaluate(arg0: org.xml.sax.InputSource, arg1: javax.xml.namespace.QName): java.lang.Object
                                public evaluate(arg0: org.xml.sax.InputSource): string
                                public static class: java.lang.Class<any>
                            }
                            class XPathFactoryImpl extends javax.xml.xpath.XPathFactory {
                                public constructor()
                                public isObjectModelSupported(arg0: java.lang.String | string): boolean
                                public newXPath(): javax.xml.xpath.XPath
                                public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                                public getFeature(arg0: java.lang.String | string): boolean
                                public setXPathFunctionResolver(arg0: javax.xml.xpath.XPathFunctionResolver | javax.xml.xpath.XPathFunctionResolver$$Lambda): void
                                public setXPathVariableResolver(arg0: javax.xml.xpath.XPathVariableResolver | javax.xml.xpath.XPathVariableResolver$$Lambda): void
                                public static class: java.lang.Class<any>
                            }
                            class XPathImpl implements javax.xml.xpath.XPath {
                                public setXPathVariableResolver(arg0: javax.xml.xpath.XPathVariableResolver | javax.xml.xpath.XPathVariableResolver$$Lambda): void
                                public getXPathVariableResolver(): javax.xml.xpath.XPathVariableResolver
                                public setXPathFunctionResolver(arg0: javax.xml.xpath.XPathFunctionResolver | javax.xml.xpath.XPathFunctionResolver$$Lambda): void
                                public getXPathFunctionResolver(): javax.xml.xpath.XPathFunctionResolver
                                public setNamespaceContext(arg0: javax.xml.namespace.NamespaceContext): void
                                public getNamespaceContext(): javax.xml.namespace.NamespaceContext
                                public evaluate(arg0: java.lang.String | string, arg1: java.lang.Object, arg2: javax.xml.namespace.QName): java.lang.Object
                                public evaluate(arg0: java.lang.String | string, arg1: java.lang.Object): string
                                public compile(arg0: java.lang.String | string): javax.xml.xpath.XPathExpression
                                public evaluate(arg0: java.lang.String | string, arg1: org.xml.sax.InputSource, arg2: javax.xml.namespace.QName): java.lang.Object
                                public evaluate(arg0: java.lang.String | string, arg1: org.xml.sax.InputSource): string
                                public reset(): void
                                public static class: java.lang.Class<any>
                            }
                        }
                        namespace objects {
                            class DTMXRTreeFrag {
                                public constructor(arg0: int, arg1: com.sun.org.apache.xpath.internal.XPathContext)
                                public destruct(): void
                                public getDTMIdentity(): int
                                public hashCode(): int
                                public equals(arg0: java.lang.Object): boolean
                                public static class: java.lang.Class<any>
                            }
                            class XBoolean extends com.sun.org.apache.xpath.internal.objects.XObject {
                                public static S_TRUE: com.sun.org.apache.xpath.internal.objects.XBoolean
                                public static S_FALSE: com.sun.org.apache.xpath.internal.objects.XBoolean
                                public constructor(arg0: boolean)
                                public constructor(arg0: java.lang.Boolean | boolean)
                                public getType(): int
                                public getTypeString(): string
                                public num(): double
                                public bool(): boolean
                                public str(): string
                                public object(): java.lang.Object
                                public equals(arg0: com.sun.org.apache.xpath.internal.objects.XObject): boolean
                                public static class: java.lang.Class<any>
                            }
                            class XBooleanStatic extends com.sun.org.apache.xpath.internal.objects.XBoolean {
                                public constructor(arg0: boolean)
                                public equals(arg0: com.sun.org.apache.xpath.internal.objects.XObject): boolean
                                public static class: java.lang.Class<any>
                            }
                            class XMLStringFactoryImpl extends com.sun.org.apache.xml.internal.utils.XMLStringFactory {
                                public constructor()
                                public static getFactory(): com.sun.org.apache.xml.internal.utils.XMLStringFactory
                                public newstr(arg0: java.lang.String | string): com.sun.org.apache.xml.internal.utils.XMLString
                                public newstr(arg0: com.sun.org.apache.xml.internal.utils.FastStringBuffer, arg1: int, arg2: int): com.sun.org.apache.xml.internal.utils.XMLString
                                public newstr(arg0: char[], arg1: int, arg2: int): com.sun.org.apache.xml.internal.utils.XMLString
                                public emptystr(): com.sun.org.apache.xml.internal.utils.XMLString
                                public static class: java.lang.Class<any>
                            }
                            class XNodeSet extends com.sun.org.apache.xpath.internal.axes.NodeSequence {
                                protected constructor()
                                public constructor(arg0: com.sun.org.apache.xml.internal.dtm.DTMIterator)
                                public constructor(arg0: com.sun.org.apache.xpath.internal.objects.XNodeSet)
                                public constructor(arg0: com.sun.org.apache.xml.internal.dtm.DTMManager)
                                public constructor(arg0: int, arg1: com.sun.org.apache.xml.internal.dtm.DTMManager)
                                public getType(): int
                                public getTypeString(): string
                                public getNumberFromNode(arg0: int): double
                                public num(): double
                                public numWithSideEffects(): double
                                public bool(): boolean
                                public boolWithSideEffects(): boolean
                                public getStringFromNode(arg0: int): com.sun.org.apache.xml.internal.utils.XMLString
                                public dispatchCharactersEvents(arg0: org.xml.sax.ContentHandler): void
                                public xstr(): com.sun.org.apache.xml.internal.utils.XMLString
                                public appendToFsb(arg0: com.sun.org.apache.xml.internal.utils.FastStringBuffer): void
                                public str(): string
                                public object(): java.lang.Object
                                public nodeset(): org.w3c.dom.traversal.NodeIterator
                                public nodelist(): org.w3c.dom.NodeList
                                public iterRaw(): com.sun.org.apache.xml.internal.dtm.DTMIterator
                                public release(arg0: com.sun.org.apache.xml.internal.dtm.DTMIterator): void
                                public iter(): com.sun.org.apache.xml.internal.dtm.DTMIterator
                                public getFresh(): com.sun.org.apache.xpath.internal.objects.XObject
                                public mutableNodeset(): com.sun.org.apache.xpath.internal.NodeSetDTM
                                public compare(arg0: com.sun.org.apache.xpath.internal.objects.XObject, arg1: com.sun.org.apache.xpath.internal.objects.Comparator): boolean
                                public lessThan(arg0: com.sun.org.apache.xpath.internal.objects.XObject): boolean
                                public lessThanOrEqual(arg0: com.sun.org.apache.xpath.internal.objects.XObject): boolean
                                public greaterThan(arg0: com.sun.org.apache.xpath.internal.objects.XObject): boolean
                                public greaterThanOrEqual(arg0: com.sun.org.apache.xpath.internal.objects.XObject): boolean
                                public equals(arg0: com.sun.org.apache.xpath.internal.objects.XObject): boolean
                                public notEquals(arg0: com.sun.org.apache.xpath.internal.objects.XObject): boolean
                                public static class: java.lang.Class<any>
                            }
                            class XNodeSetForDOM extends com.sun.org.apache.xpath.internal.objects.XNodeSet {
                                public constructor(arg0: org.w3c.dom.Node, arg1: com.sun.org.apache.xml.internal.dtm.DTMManager)
                                public constructor(arg0: com.sun.org.apache.xpath.internal.objects.XNodeSet)
                                public constructor(arg0: org.w3c.dom.NodeList, arg1: com.sun.org.apache.xpath.internal.XPathContext)
                                public constructor(arg0: org.w3c.dom.traversal.NodeIterator, arg1: com.sun.org.apache.xpath.internal.XPathContext)
                                public object(): java.lang.Object
                                public nodeset(): org.w3c.dom.traversal.NodeIterator
                                public nodelist(): org.w3c.dom.NodeList
                                public static class: java.lang.Class<any>
                            }
                            class XNull extends com.sun.org.apache.xpath.internal.objects.XNodeSet {
                                public constructor()
                                public getType(): int
                                public getTypeString(): string
                                public num(): double
                                public bool(): boolean
                                public str(): string
                                public rtf(arg0: com.sun.org.apache.xpath.internal.XPathContext): int
                                public equals(arg0: com.sun.org.apache.xpath.internal.objects.XObject): boolean
                                public static class: java.lang.Class<any>
                            }
                            class XNumber extends com.sun.org.apache.xpath.internal.objects.XObject {
                                public constructor(arg0: double)
                                public constructor(arg0: java.lang.Number)
                                public getType(): int
                                public getTypeString(): string
                                public num(): double
                                public num(arg0: com.sun.org.apache.xpath.internal.XPathContext): double
                                public bool(): boolean
                                public str(): string
                                public object(): java.lang.Object
                                public equals(arg0: com.sun.org.apache.xpath.internal.objects.XObject): boolean
                                public isStableNumber(): boolean
                                public callVisitors(arg0: com.sun.org.apache.xpath.internal.ExpressionOwner, arg1: com.sun.org.apache.xpath.internal.XPathVisitor): void
                                public static class: java.lang.Class<any>
                            }
                            class XObject extends com.sun.org.apache.xpath.internal.Expression implements java.io.Serializable , java.lang.Cloneable {
                                protected m_obj: java.lang.Object
                                public static CLASS_NULL: int
                                public static CLASS_UNKNOWN: int
                                public static CLASS_BOOLEAN: int
                                public static CLASS_NUMBER: int
                                public static CLASS_STRING: int
                                public static CLASS_NODESET: int
                                public static CLASS_RTREEFRAG: int
                                public static CLASS_UNRESOLVEDVARIABLE: int
                                public constructor()
                                public constructor(arg0: java.lang.Object)
                                protected setObject(arg0: java.lang.Object): void
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public allowDetachToRelease(arg0: boolean): void
                                public detach(): void
                                public destruct(): void
                                public reset(): void
                                public dispatchCharactersEvents(arg0: org.xml.sax.ContentHandler): void
                                public static create(arg0: java.lang.Object): com.sun.org.apache.xpath.internal.objects.XObject
                                public static create(arg0: java.lang.Object, arg1: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public getType(): int
                                public getTypeString(): string
                                public num(): double
                                public numWithSideEffects(): double
                                public bool(): boolean
                                public boolWithSideEffects(): boolean
                                public xstr(): com.sun.org.apache.xml.internal.utils.XMLString
                                public str(): string
                                public toString(): string
                                public rtf(arg0: com.sun.org.apache.xpath.internal.XPathContext): int
                                public rtree(arg0: com.sun.org.apache.xpath.internal.XPathContext): org.w3c.dom.DocumentFragment
                                public rtree(): org.w3c.dom.DocumentFragment
                                public rtf(): int
                                public object(): java.lang.Object
                                public iter(): com.sun.org.apache.xml.internal.dtm.DTMIterator
                                public getFresh(): com.sun.org.apache.xpath.internal.objects.XObject
                                public nodeset(): org.w3c.dom.traversal.NodeIterator
                                public nodelist(): org.w3c.dom.NodeList
                                public mutableNodeset(): com.sun.org.apache.xpath.internal.NodeSetDTM
                                public castToType(arg0: int, arg1: com.sun.org.apache.xpath.internal.XPathContext): java.lang.Object
                                public lessThan(arg0: com.sun.org.apache.xpath.internal.objects.XObject): boolean
                                public lessThanOrEqual(arg0: com.sun.org.apache.xpath.internal.objects.XObject): boolean
                                public greaterThan(arg0: com.sun.org.apache.xpath.internal.objects.XObject): boolean
                                public greaterThanOrEqual(arg0: com.sun.org.apache.xpath.internal.objects.XObject): boolean
                                public equals(arg0: com.sun.org.apache.xpath.internal.objects.XObject): boolean
                                public notEquals(arg0: com.sun.org.apache.xpath.internal.objects.XObject): boolean
                                protected error(arg0: java.lang.String | string): void
                                protected error(arg0: java.lang.String | string, arg1: java.lang.Object[]): void
                                public fixupVariables(arg0: java.util.Vector, arg1: int): void
                                public appendToFsb(arg0: com.sun.org.apache.xml.internal.utils.FastStringBuffer): void
                                public callVisitors(arg0: com.sun.org.apache.xpath.internal.ExpressionOwner, arg1: com.sun.org.apache.xpath.internal.XPathVisitor): void
                                public deepEquals(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): boolean
                                public static class: java.lang.Class<any>
                            }
                            class XObjectFactory {
                                public constructor()
                                public static create(arg0: java.lang.Object): com.sun.org.apache.xpath.internal.objects.XObject
                                public static create(arg0: java.lang.Object, arg1: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public static class: java.lang.Class<any>
                            }
                            class XRTreeFrag extends com.sun.org.apache.xpath.internal.objects.XObject implements java.lang.Cloneable {
                                protected m_allowRelease: boolean
                                public constructor(arg0: int, arg1: com.sun.org.apache.xpath.internal.XPathContext, arg2: com.sun.org.apache.xpath.internal.ExpressionNode)
                                public constructor(arg0: int, arg1: com.sun.org.apache.xpath.internal.XPathContext)
                                public object(): java.lang.Object
                                public constructor(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda)
                                public allowDetachToRelease(arg0: boolean): void
                                public detach(): void
                                public getType(): int
                                public getTypeString(): string
                                public num(): double
                                public bool(): boolean
                                public xstr(): com.sun.org.apache.xml.internal.utils.XMLString
                                public appendToFsb(arg0: com.sun.org.apache.xml.internal.utils.FastStringBuffer): void
                                public str(): string
                                public rtf(): int
                                public asNodeIterator(): com.sun.org.apache.xml.internal.dtm.DTMIterator
                                public convertToNodeset(): org.w3c.dom.NodeList
                                public equals(arg0: com.sun.org.apache.xpath.internal.objects.XObject): boolean
                                public static class: java.lang.Class<any>
                            }
                            class XRTreeFragSelectWrapper extends com.sun.org.apache.xpath.internal.objects.XRTreeFrag implements java.lang.Cloneable {
                                public constructor(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda)
                                public fixupVariables(arg0: java.util.Vector, arg1: int): void
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public detach(): void
                                public num(): double
                                public xstr(): com.sun.org.apache.xml.internal.utils.XMLString
                                public str(): string
                                public getType(): int
                                public rtf(): int
                                public asNodeIterator(): com.sun.org.apache.xml.internal.dtm.DTMIterator
                                public static class: java.lang.Class<any>
                            }
                            class XString extends com.sun.org.apache.xpath.internal.objects.XObject implements com.sun.org.apache.xml.internal.utils.XMLString {
                                public static EMPTYSTRING: com.sun.org.apache.xpath.internal.objects.XString
                                protected constructor(arg0: java.lang.Object)
                                public constructor(arg0: java.lang.String | string)
                                public getType(): int
                                public getTypeString(): string
                                public hasString(): boolean
                                public num(): double
                                public toDouble(): double
                                public bool(): boolean
                                public xstr(): com.sun.org.apache.xml.internal.utils.XMLString
                                public str(): string
                                public rtf(arg0: com.sun.org.apache.xpath.internal.XPathContext): int
                                public dispatchCharactersEvents(arg0: org.xml.sax.ContentHandler): void
                                public dispatchAsComment(arg0: org.xml.sax.ext.LexicalHandler): void
                                public length(): int
                                public charAt(arg0: int): char
                                public getChars(arg0: int, arg1: int, arg2: char[], arg3: int): void
                                public equals(arg0: com.sun.org.apache.xpath.internal.objects.XObject): boolean
                                public equals(arg0: java.lang.String | string): boolean
                                public equals(arg0: com.sun.org.apache.xml.internal.utils.XMLString): boolean
                                public equals(arg0: java.lang.Object): boolean
                                public equalsIgnoreCase(arg0: java.lang.String | string): boolean
                                public compareTo(arg0: com.sun.org.apache.xml.internal.utils.XMLString): int
                                public compareToIgnoreCase(arg0: com.sun.org.apache.xml.internal.utils.XMLString): int
                                public startsWith(arg0: java.lang.String | string, arg1: int): boolean
                                public startsWith(arg0: java.lang.String | string): boolean
                                public startsWith(arg0: com.sun.org.apache.xml.internal.utils.XMLString, arg1: int): boolean
                                public startsWith(arg0: com.sun.org.apache.xml.internal.utils.XMLString): boolean
                                public endsWith(arg0: java.lang.String | string): boolean
                                public hashCode(): int
                                public indexOf(arg0: int): int
                                public indexOf(arg0: int, arg1: int): int
                                public lastIndexOf(arg0: int): int
                                public lastIndexOf(arg0: int, arg1: int): int
                                public indexOf(arg0: java.lang.String | string): int
                                public indexOf(arg0: com.sun.org.apache.xml.internal.utils.XMLString): int
                                public indexOf(arg0: java.lang.String | string, arg1: int): int
                                public lastIndexOf(arg0: java.lang.String | string): int
                                public lastIndexOf(arg0: java.lang.String | string, arg1: int): int
                                public substring(arg0: int): com.sun.org.apache.xml.internal.utils.XMLString
                                public substring(arg0: int, arg1: int): com.sun.org.apache.xml.internal.utils.XMLString
                                public concat(arg0: java.lang.String | string): com.sun.org.apache.xml.internal.utils.XMLString
                                public toLowerCase(arg0: java.util.Locale): com.sun.org.apache.xml.internal.utils.XMLString
                                public toLowerCase(): com.sun.org.apache.xml.internal.utils.XMLString
                                public toUpperCase(arg0: java.util.Locale): com.sun.org.apache.xml.internal.utils.XMLString
                                public toUpperCase(): com.sun.org.apache.xml.internal.utils.XMLString
                                public trim(): com.sun.org.apache.xml.internal.utils.XMLString
                                public fixWhiteSpace(arg0: boolean, arg1: boolean, arg2: boolean): com.sun.org.apache.xml.internal.utils.XMLString
                                public callVisitors(arg0: com.sun.org.apache.xpath.internal.ExpressionOwner, arg1: com.sun.org.apache.xpath.internal.XPathVisitor): void
                                public static class: java.lang.Class<any>
                            }
                            class XStringForChars extends com.sun.org.apache.xpath.internal.objects.XString {
                                protected m_strCache: string
                                public constructor(arg0: char[], arg1: int, arg2: int)
                                public fsb(): com.sun.org.apache.xml.internal.utils.FastStringBuffer
                                public appendToFsb(arg0: com.sun.org.apache.xml.internal.utils.FastStringBuffer): void
                                public hasString(): boolean
                                public str(): string
                                public object(): java.lang.Object
                                public dispatchCharactersEvents(arg0: org.xml.sax.ContentHandler): void
                                public dispatchAsComment(arg0: org.xml.sax.ext.LexicalHandler): void
                                public length(): int
                                public charAt(arg0: int): char
                                public getChars(arg0: int, arg1: int, arg2: char[], arg3: int): void
                                public static class: java.lang.Class<any>
                            }
                            class XStringForFSB extends com.sun.org.apache.xpath.internal.objects.XString {
                                protected m_strCache: string
                                protected m_hash: int
                                public constructor(arg0: com.sun.org.apache.xml.internal.utils.FastStringBuffer, arg1: int, arg2: int)
                                public fsb(): com.sun.org.apache.xml.internal.utils.FastStringBuffer
                                public appendToFsb(arg0: com.sun.org.apache.xml.internal.utils.FastStringBuffer): void
                                public hasString(): boolean
                                public object(): java.lang.Object
                                public str(): string
                                public dispatchCharactersEvents(arg0: org.xml.sax.ContentHandler): void
                                public dispatchAsComment(arg0: org.xml.sax.ext.LexicalHandler): void
                                public length(): int
                                public charAt(arg0: int): char
                                public getChars(arg0: int, arg1: int, arg2: char[], arg3: int): void
                                public equals(arg0: com.sun.org.apache.xml.internal.utils.XMLString): boolean
                                public equals(arg0: com.sun.org.apache.xpath.internal.objects.XObject): boolean
                                public equals(arg0: java.lang.String | string): boolean
                                public equals(arg0: java.lang.Object): boolean
                                public equalsIgnoreCase(arg0: java.lang.String | string): boolean
                                public compareTo(arg0: com.sun.org.apache.xml.internal.utils.XMLString): int
                                public compareToIgnoreCase(arg0: com.sun.org.apache.xml.internal.utils.XMLString): int
                                public hashCode(): int
                                public startsWith(arg0: com.sun.org.apache.xml.internal.utils.XMLString, arg1: int): boolean
                                public startsWith(arg0: com.sun.org.apache.xml.internal.utils.XMLString): boolean
                                public indexOf(arg0: int): int
                                public indexOf(arg0: int, arg1: int): int
                                public substring(arg0: int): com.sun.org.apache.xml.internal.utils.XMLString
                                public substring(arg0: int, arg1: int): com.sun.org.apache.xml.internal.utils.XMLString
                                public concat(arg0: java.lang.String | string): com.sun.org.apache.xml.internal.utils.XMLString
                                public trim(): com.sun.org.apache.xml.internal.utils.XMLString
                                public fixWhiteSpace(arg0: boolean, arg1: boolean, arg2: boolean): com.sun.org.apache.xml.internal.utils.XMLString
                                public toDouble(): double
                                public static class: java.lang.Class<any>
                            }
                        }
                        namespace operations {
                            class And extends com.sun.org.apache.xpath.internal.operations.Operation {
                                public constructor()
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public bool(arg0: com.sun.org.apache.xpath.internal.XPathContext): boolean
                                public static class: java.lang.Class<any>
                            }
                            class Bool extends com.sun.org.apache.xpath.internal.operations.UnaryOperation {
                                public constructor()
                                public operate(arg0: com.sun.org.apache.xpath.internal.objects.XObject): com.sun.org.apache.xpath.internal.objects.XObject
                                public bool(arg0: com.sun.org.apache.xpath.internal.XPathContext): boolean
                                public static class: java.lang.Class<any>
                            }
                            class Div extends com.sun.org.apache.xpath.internal.operations.Operation {
                                public constructor()
                                public operate(arg0: com.sun.org.apache.xpath.internal.objects.XObject, arg1: com.sun.org.apache.xpath.internal.objects.XObject): com.sun.org.apache.xpath.internal.objects.XObject
                                public num(arg0: com.sun.org.apache.xpath.internal.XPathContext): double
                                public static class: java.lang.Class<any>
                            }
                            class Equals extends com.sun.org.apache.xpath.internal.operations.Operation {
                                public constructor()
                                public operate(arg0: com.sun.org.apache.xpath.internal.objects.XObject, arg1: com.sun.org.apache.xpath.internal.objects.XObject): com.sun.org.apache.xpath.internal.objects.XObject
                                public bool(arg0: com.sun.org.apache.xpath.internal.XPathContext): boolean
                                public static class: java.lang.Class<any>
                            }
                            class Gt extends com.sun.org.apache.xpath.internal.operations.Operation {
                                public constructor()
                                public operate(arg0: com.sun.org.apache.xpath.internal.objects.XObject, arg1: com.sun.org.apache.xpath.internal.objects.XObject): com.sun.org.apache.xpath.internal.objects.XObject
                                public static class: java.lang.Class<any>
                            }
                            class Gte extends com.sun.org.apache.xpath.internal.operations.Operation {
                                public constructor()
                                public operate(arg0: com.sun.org.apache.xpath.internal.objects.XObject, arg1: com.sun.org.apache.xpath.internal.objects.XObject): com.sun.org.apache.xpath.internal.objects.XObject
                                public static class: java.lang.Class<any>
                            }
                            class Lt extends com.sun.org.apache.xpath.internal.operations.Operation {
                                public constructor()
                                public operate(arg0: com.sun.org.apache.xpath.internal.objects.XObject, arg1: com.sun.org.apache.xpath.internal.objects.XObject): com.sun.org.apache.xpath.internal.objects.XObject
                                public static class: java.lang.Class<any>
                            }
                            class Lte extends com.sun.org.apache.xpath.internal.operations.Operation {
                                public constructor()
                                public operate(arg0: com.sun.org.apache.xpath.internal.objects.XObject, arg1: com.sun.org.apache.xpath.internal.objects.XObject): com.sun.org.apache.xpath.internal.objects.XObject
                                public static class: java.lang.Class<any>
                            }
                            class Minus extends com.sun.org.apache.xpath.internal.operations.Operation {
                                public constructor()
                                public operate(arg0: com.sun.org.apache.xpath.internal.objects.XObject, arg1: com.sun.org.apache.xpath.internal.objects.XObject): com.sun.org.apache.xpath.internal.objects.XObject
                                public num(arg0: com.sun.org.apache.xpath.internal.XPathContext): double
                                public static class: java.lang.Class<any>
                            }
                            class Mod extends com.sun.org.apache.xpath.internal.operations.Operation {
                                public constructor()
                                public operate(arg0: com.sun.org.apache.xpath.internal.objects.XObject, arg1: com.sun.org.apache.xpath.internal.objects.XObject): com.sun.org.apache.xpath.internal.objects.XObject
                                public num(arg0: com.sun.org.apache.xpath.internal.XPathContext): double
                                public static class: java.lang.Class<any>
                            }
                            class Mult extends com.sun.org.apache.xpath.internal.operations.Operation {
                                public constructor()
                                public operate(arg0: com.sun.org.apache.xpath.internal.objects.XObject, arg1: com.sun.org.apache.xpath.internal.objects.XObject): com.sun.org.apache.xpath.internal.objects.XObject
                                public num(arg0: com.sun.org.apache.xpath.internal.XPathContext): double
                                public static class: java.lang.Class<any>
                            }
                            class Neg extends com.sun.org.apache.xpath.internal.operations.UnaryOperation {
                                public constructor()
                                public operate(arg0: com.sun.org.apache.xpath.internal.objects.XObject): com.sun.org.apache.xpath.internal.objects.XObject
                                public num(arg0: com.sun.org.apache.xpath.internal.XPathContext): double
                                public static class: java.lang.Class<any>
                            }
                            class NotEquals extends com.sun.org.apache.xpath.internal.operations.Operation {
                                public constructor()
                                public operate(arg0: com.sun.org.apache.xpath.internal.objects.XObject, arg1: com.sun.org.apache.xpath.internal.objects.XObject): com.sun.org.apache.xpath.internal.objects.XObject
                                public static class: java.lang.Class<any>
                            }
                            class Number extends com.sun.org.apache.xpath.internal.operations.UnaryOperation {
                                public constructor()
                                public operate(arg0: com.sun.org.apache.xpath.internal.objects.XObject): com.sun.org.apache.xpath.internal.objects.XObject
                                public num(arg0: com.sun.org.apache.xpath.internal.XPathContext): double
                                public static class: java.lang.Class<any>
                            }
                            class Operation extends com.sun.org.apache.xpath.internal.Expression implements com.sun.org.apache.xpath.internal.ExpressionOwner {
                                protected m_left: com.sun.org.apache.xpath.internal.Expression
                                protected m_right: com.sun.org.apache.xpath.internal.Expression
                                public constructor()
                                public fixupVariables(arg0: java.util.Vector, arg1: int): void
                                public canTraverseOutsideSubtree(): boolean
                                public setLeftRight(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda, arg1: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): void
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public operate(arg0: com.sun.org.apache.xpath.internal.objects.XObject, arg1: com.sun.org.apache.xpath.internal.objects.XObject): com.sun.org.apache.xpath.internal.objects.XObject
                                public getLeftOperand(): com.sun.org.apache.xpath.internal.Expression
                                public getRightOperand(): com.sun.org.apache.xpath.internal.Expression
                                public callVisitors(arg0: com.sun.org.apache.xpath.internal.ExpressionOwner, arg1: com.sun.org.apache.xpath.internal.XPathVisitor): void
                                public getExpression(): com.sun.org.apache.xpath.internal.Expression
                                public setExpression(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): void
                                public deepEquals(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): boolean
                                public static class: java.lang.Class<any>
                            }
                            class Or extends com.sun.org.apache.xpath.internal.operations.Operation {
                                public constructor()
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public bool(arg0: com.sun.org.apache.xpath.internal.XPathContext): boolean
                                public static class: java.lang.Class<any>
                            }
                            class Plus extends com.sun.org.apache.xpath.internal.operations.Operation {
                                public constructor()
                                public operate(arg0: com.sun.org.apache.xpath.internal.objects.XObject, arg1: com.sun.org.apache.xpath.internal.objects.XObject): com.sun.org.apache.xpath.internal.objects.XObject
                                public num(arg0: com.sun.org.apache.xpath.internal.XPathContext): double
                                public static class: java.lang.Class<any>
                            }
                            class Quo extends com.sun.org.apache.xpath.internal.operations.Operation {
                                public constructor()
                                public operate(arg0: com.sun.org.apache.xpath.internal.objects.XObject, arg1: com.sun.org.apache.xpath.internal.objects.XObject): com.sun.org.apache.xpath.internal.objects.XObject
                                public static class: java.lang.Class<any>
                            }
                            class String extends com.sun.org.apache.xpath.internal.operations.UnaryOperation {
                                public constructor()
                                public operate(arg0: com.sun.org.apache.xpath.internal.objects.XObject): com.sun.org.apache.xpath.internal.objects.XObject
                                public static class: java.lang.Class<any>
                            }
                            abstract class UnaryOperation extends com.sun.org.apache.xpath.internal.Expression implements com.sun.org.apache.xpath.internal.ExpressionOwner {
                                protected m_right: com.sun.org.apache.xpath.internal.Expression
                                public constructor()
                                public fixupVariables(arg0: java.util.Vector, arg1: int): void
                                public canTraverseOutsideSubtree(): boolean
                                public setRight(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): void
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public operate(arg0: com.sun.org.apache.xpath.internal.objects.XObject): com.sun.org.apache.xpath.internal.objects.XObject
                                public getOperand(): com.sun.org.apache.xpath.internal.Expression
                                public callVisitors(arg0: com.sun.org.apache.xpath.internal.ExpressionOwner, arg1: com.sun.org.apache.xpath.internal.XPathVisitor): void
                                public getExpression(): com.sun.org.apache.xpath.internal.Expression
                                public setExpression(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): void
                                public deepEquals(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): boolean
                                public static class: java.lang.Class<any>
                            }
                            class Variable extends com.sun.org.apache.xpath.internal.Expression implements com.sun.org.apache.xpath.internal.axes.PathComponent {
                                protected m_qname: com.sun.org.apache.xml.internal.utils.QName
                                protected m_index: int
                                protected m_isGlobal: boolean
                                public constructor()
                                public setIndex(arg0: int): void
                                public getIndex(): int
                                public setIsGlobal(arg0: boolean): void
                                public getGlobal(): boolean
                                public fixupVariables(arg0: java.util.Vector, arg1: int): void
                                public setQName(arg0: com.sun.org.apache.xml.internal.utils.QName): void
                                public getQName(): com.sun.org.apache.xml.internal.utils.QName
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext, arg1: boolean): com.sun.org.apache.xpath.internal.objects.XObject
                                public isStableNumber(): boolean
                                public getAnalysisBits(): int
                                public callVisitors(arg0: com.sun.org.apache.xpath.internal.ExpressionOwner, arg1: com.sun.org.apache.xpath.internal.XPathVisitor): void
                                public deepEquals(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): boolean
                                public isPsuedoVarRef(): boolean
                                public static class: java.lang.Class<any>
                            }
                            class Variable$$Lambda extends com.sun.org.apache.xpath.internal.Expression implements com.sun.org.apache.xpath.internal.axes.PathComponent {
                                protected m_qname: com.sun.org.apache.xml.internal.utils.QName
                            }
                            class VariableSafeAbsRef extends com.sun.org.apache.xpath.internal.operations.Variable {
                                public constructor()
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext, arg1: boolean): com.sun.org.apache.xpath.internal.objects.XObject
                                public static class: java.lang.Class<any>
                            }
                        }
                        namespace patterns {
                            class ContextMatchStepPattern extends com.sun.org.apache.xpath.internal.patterns.StepPattern {
                                public constructor(arg0: int, arg1: int)
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public executeRelativePathPattern(arg0: com.sun.org.apache.xpath.internal.XPathContext, arg1: com.sun.org.apache.xpath.internal.patterns.StepPattern): com.sun.org.apache.xpath.internal.objects.XObject
                                public static class: java.lang.Class<any>
                            }
                            class FunctionPattern extends com.sun.org.apache.xpath.internal.patterns.StepPattern {
                                public constructor(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda, arg1: int, arg2: int)
                                public calcScore(): void
                                public fixupVariables(arg0: java.util.Vector, arg1: int): void
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext, arg1: int): com.sun.org.apache.xpath.internal.objects.XObject
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext, arg1: int, arg2: com.sun.org.apache.xml.internal.dtm.DTM, arg3: int): com.sun.org.apache.xpath.internal.objects.XObject
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                protected callSubtreeVisitors(arg0: com.sun.org.apache.xpath.internal.XPathVisitor): void
                                public static class: java.lang.Class<any>
                            }
                            class NodeTest extends com.sun.org.apache.xpath.internal.Expression {
                                public static WILD: string
                                public static SUPPORTS_PRE_STRIPPING: string
                                protected m_whatToShow: int
                                public static SHOW_BYFUNCTION: int
                                protected m_name: string
                                public static SCORE_NODETEST: com.sun.org.apache.xpath.internal.objects.XNumber
                                public static SCORE_NSWILD: com.sun.org.apache.xpath.internal.objects.XNumber
                                public static SCORE_QNAME: com.sun.org.apache.xpath.internal.objects.XNumber
                                public static SCORE_OTHER: com.sun.org.apache.xpath.internal.objects.XNumber
                                public static SCORE_NONE: com.sun.org.apache.xpath.internal.objects.XNumber
                                public getWhatToShow(): int
                                public setWhatToShow(arg0: int): void
                                public getNamespace(): string
                                public setNamespace(arg0: java.lang.String | string): void
                                public getLocalName(): string
                                public setLocalName(arg0: java.lang.String | string): void
                                public constructor(arg0: int, arg1: java.lang.String | string, arg2: java.lang.String | string)
                                public constructor(arg0: int)
                                public deepEquals(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): boolean
                                public constructor()
                                public initNodeTest(arg0: int): void
                                public initNodeTest(arg0: int, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                                public getStaticScore(): com.sun.org.apache.xpath.internal.objects.XNumber
                                public setStaticScore(arg0: com.sun.org.apache.xpath.internal.objects.XNumber): void
                                protected calcScore(): void
                                public getDefaultScore(): double
                                public static getNodeTypeTest(arg0: int): int
                                public static debugWhatToShow(arg0: int): void
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext, arg1: int): com.sun.org.apache.xpath.internal.objects.XObject
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext, arg1: int, arg2: com.sun.org.apache.xml.internal.dtm.DTM, arg3: int): com.sun.org.apache.xpath.internal.objects.XObject
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public fixupVariables(arg0: java.util.Vector, arg1: int): void
                                public callVisitors(arg0: com.sun.org.apache.xpath.internal.ExpressionOwner, arg1: com.sun.org.apache.xpath.internal.XPathVisitor): void
                                public static class: java.lang.Class<any>
                            }
                            interface NodeTestFilter {
                                setNodeTest(arg0: com.sun.org.apache.xpath.internal.patterns.NodeTest): void
                            }
                            interface NodeTestFilter$$Lambda {
                                (arg0: com.sun.org.apache.xpath.internal.patterns.NodeTest): void
                            }
                            class StepPattern extends com.sun.org.apache.xpath.internal.patterns.NodeTest implements com.sun.org.apache.xpath.internal.axes.SubContextList , com.sun.org.apache.xpath.internal.ExpressionOwner {
                                protected m_axis: int
                                public constructor(arg0: int, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: int, arg4: int)
                                public constructor(arg0: int, arg1: int, arg2: int)
                                public calcTargetString(): void
                                public getTargetString(): string
                                public fixupVariables(arg0: java.util.Vector, arg1: int): void
                                public setRelativePathPattern(arg0: com.sun.org.apache.xpath.internal.patterns.StepPattern): void
                                public getRelativePathPattern(): com.sun.org.apache.xpath.internal.patterns.StepPattern
                                public getPredicates(): com.sun.org.apache.xpath.internal.Expression[]
                                public canTraverseOutsideSubtree(): boolean
                                public getPredicate(arg0: int): com.sun.org.apache.xpath.internal.Expression
                                public getPredicateCount(): int
                                public setPredicates(arg0: com.sun.org.apache.xpath.internal.Expression[]): void
                                public calcScore(): void
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext, arg1: int): com.sun.org.apache.xpath.internal.objects.XObject
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext, arg1: int, arg2: com.sun.org.apache.xml.internal.dtm.DTM, arg3: int): com.sun.org.apache.xpath.internal.objects.XObject
                                public getProximityPosition(arg0: com.sun.org.apache.xpath.internal.XPathContext): int
                                public getLastPos(arg0: com.sun.org.apache.xpath.internal.XPathContext): int
                                protected executeRelativePathPattern(arg0: com.sun.org.apache.xpath.internal.XPathContext, arg1: com.sun.org.apache.xml.internal.dtm.DTM, arg2: int): com.sun.org.apache.xpath.internal.objects.XObject
                                protected executePredicates(arg0: com.sun.org.apache.xpath.internal.XPathContext, arg1: com.sun.org.apache.xml.internal.dtm.DTM, arg2: int): boolean
                                public toString(): string
                                public getMatchScore(arg0: com.sun.org.apache.xpath.internal.XPathContext, arg1: int): double
                                public setAxis(arg0: int): void
                                public getAxis(): int
                                public callVisitors(arg0: com.sun.org.apache.xpath.internal.ExpressionOwner, arg1: com.sun.org.apache.xpath.internal.XPathVisitor): void
                                protected callSubtreeVisitors(arg0: com.sun.org.apache.xpath.internal.XPathVisitor): void
                                public getExpression(): com.sun.org.apache.xpath.internal.Expression
                                public setExpression(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): void
                                public deepEquals(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): boolean
                                public static class: java.lang.Class<any>
                            }
                            class UnionPattern extends com.sun.org.apache.xpath.internal.Expression {
                                public constructor()
                                public fixupVariables(arg0: java.util.Vector, arg1: int): void
                                public canTraverseOutsideSubtree(): boolean
                                public setPatterns(arg0: com.sun.org.apache.xpath.internal.patterns.StepPattern[]): void
                                public getPatterns(): com.sun.org.apache.xpath.internal.patterns.StepPattern[]
                                public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                                public callVisitors(arg0: com.sun.org.apache.xpath.internal.ExpressionOwner, arg1: com.sun.org.apache.xpath.internal.XPathVisitor): void
                                public deepEquals(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): boolean
                                public static class: java.lang.Class<any>
                            }
                        }
                        namespace res {
                            class XPATHErrorResources extends java.util.ListResourceBundle {
                                public static ERROR0000: string
                                public static ER_CURRENT_NOT_ALLOWED_IN_MATCH: string
                                public static ER_CURRENT_TAKES_NO_ARGS: string
                                public static ER_DOCUMENT_REPLACED: string
                                public static ER_CONTEXT_HAS_NO_OWNERDOC: string
                                public static ER_LOCALNAME_HAS_TOO_MANY_ARGS: string
                                public static ER_NAMESPACEURI_HAS_TOO_MANY_ARGS: string
                                public static ER_NORMALIZESPACE_HAS_TOO_MANY_ARGS: string
                                public static ER_NUMBER_HAS_TOO_MANY_ARGS: string
                                public static ER_NAME_HAS_TOO_MANY_ARGS: string
                                public static ER_STRING_HAS_TOO_MANY_ARGS: string
                                public static ER_STRINGLENGTH_HAS_TOO_MANY_ARGS: string
                                public static ER_TRANSLATE_TAKES_3_ARGS: string
                                public static ER_UNPARSEDENTITYURI_TAKES_1_ARG: string
                                public static ER_NAMESPACEAXIS_NOT_IMPLEMENTED: string
                                public static ER_UNKNOWN_AXIS: string
                                public static ER_UNKNOWN_MATCH_OPERATION: string
                                public static ER_INCORRECT_ARG_LENGTH: string
                                public static ER_CANT_CONVERT_TO_NUMBER: string
                                public static ER_CANT_CONVERT_XPATHRESULTTYPE_TO_NUMBER: string
                                public static ER_CANT_CONVERT_TO_NODELIST: string
                                public static ER_CANT_CONVERT_TO_MUTABLENODELIST: string
                                public static ER_CANT_CONVERT_TO_TYPE: string
                                public static ER_EXPECTED_MATCH_PATTERN: string
                                public static ER_COULDNOT_GET_VAR_NAMED: string
                                public static ER_UNKNOWN_OPCODE: string
                                public static ER_EXTRA_ILLEGAL_TOKENS: string
                                public static ER_EXPECTED_DOUBLE_QUOTE: string
                                public static ER_EXPECTED_SINGLE_QUOTE: string
                                public static ER_EMPTY_EXPRESSION: string
                                public static ER_EXPECTED_BUT_FOUND: string
                                public static ER_INCORRECT_PROGRAMMER_ASSERTION: string
                                public static ER_BOOLEAN_ARG_NO_LONGER_OPTIONAL: string
                                public static ER_FOUND_COMMA_BUT_NO_PRECEDING_ARG: string
                                public static ER_FOUND_COMMA_BUT_NO_FOLLOWING_ARG: string
                                public static ER_PREDICATE_ILLEGAL_SYNTAX: string
                                public static ER_ILLEGAL_AXIS_NAME: string
                                public static ER_UNKNOWN_NODETYPE: string
                                public static ER_PATTERN_LITERAL_NEEDS_BE_QUOTED: string
                                public static ER_COULDNOT_BE_FORMATTED_TO_NUMBER: string
                                public static ER_COULDNOT_CREATE_XMLPROCESSORLIAISON: string
                                public static ER_DIDNOT_FIND_XPATH_SELECT_EXP: string
                                public static ER_COULDNOT_FIND_ENDOP_AFTER_OPLOCATIONPATH: string
                                public static ER_ERROR_OCCURED: string
                                public static ER_ILLEGAL_VARIABLE_REFERENCE: string
                                public static ER_AXES_NOT_ALLOWED: string
                                public static ER_KEY_HAS_TOO_MANY_ARGS: string
                                public static ER_COUNT_TAKES_1_ARG: string
                                public static ER_COULDNOT_FIND_FUNCTION: string
                                public static ER_UNSUPPORTED_ENCODING: string
                                public static ER_PROBLEM_IN_DTM_NEXTSIBLING: string
                                public static ER_CANNOT_WRITE_TO_EMPTYNODELISTIMPL: string
                                public static ER_SETDOMFACTORY_NOT_SUPPORTED: string
                                public static ER_PREFIX_MUST_RESOLVE: string
                                public static ER_PARSE_NOT_SUPPORTED: string
                                public static ER_SAX_API_NOT_HANDLED: string
                                public static ER_IGNORABLE_WHITESPACE_NOT_HANDLED: string
                                public static ER_DTM_CANNOT_HANDLE_NODES: string
                                public static ER_XERCES_CANNOT_HANDLE_NODES: string
                                public static ER_XERCES_PARSE_ERROR_DETAILS: string
                                public static ER_XERCES_PARSE_ERROR: string
                                public static ER_INVALID_UTF16_SURROGATE: string
                                public static ER_OIERROR: string
                                public static ER_CANNOT_CREATE_URL: string
                                public static ER_XPATH_READOBJECT: string
                                public static ER_FUNCTION_TOKEN_NOT_FOUND: string
                                public static ER_CANNOT_DEAL_XPATH_TYPE: string
                                public static ER_NODESET_NOT_MUTABLE: string
                                public static ER_NODESETDTM_NOT_MUTABLE: string
                                public static ER_VAR_NOT_RESOLVABLE: string
                                public static ER_NULL_ERROR_HANDLER: string
                                public static ER_PROG_ASSERT_UNKNOWN_OPCODE: string
                                public static ER_ZERO_OR_ONE: string
                                public static ER_RTF_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_ASNODEITERATOR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_FSB_NOT_SUPPORTED_XSTRINGFORCHARS: string
                                public static ER_COULD_NOT_FIND_VAR: string
                                public static ER_XSTRINGFORCHARS_CANNOT_TAKE_STRING: string
                                public static ER_FASTSTRINGBUFFER_CANNOT_BE_NULL: string
                                public static ER_TWO_OR_THREE: string
                                public static ER_VARIABLE_ACCESSED_BEFORE_BIND: string
                                public static ER_FSB_CANNOT_TAKE_STRING: string
                                public static ER_SETTING_WALKER_ROOT_TO_NULL: string
                                public static ER_NODESETDTM_CANNOT_ITERATE: string
                                public static ER_NODESET_CANNOT_ITERATE: string
                                public static ER_NODESETDTM_CANNOT_INDEX: string
                                public static ER_NODESET_CANNOT_INDEX: string
                                public static ER_CANNOT_CALL_SETSHOULDCACHENODE: string
                                public static ER_ONLY_ALLOWS: string
                                public static ER_UNKNOWN_STEP: string
                                public static ER_EXPECTED_REL_LOC_PATH: string
                                public static ER_EXPECTED_LOC_PATH: string
                                public static ER_EXPECTED_LOC_PATH_AT_END_EXPR: string
                                public static ER_EXPECTED_LOC_STEP: string
                                public static ER_EXPECTED_NODE_TEST: string
                                public static ER_EXPECTED_STEP_PATTERN: string
                                public static ER_EXPECTED_REL_PATH_PATTERN: string
                                public static ER_CANT_CONVERT_TO_BOOLEAN: string
                                public static ER_CANT_CONVERT_TO_SINGLENODE: string
                                public static ER_CANT_GET_SNAPSHOT_LENGTH: string
                                public static ER_NON_ITERATOR_TYPE: string
                                public static ER_DOC_MUTATED: string
                                public static ER_INVALID_XPATH_TYPE: string
                                public static ER_EMPTY_XPATH_RESULT: string
                                public static ER_INCOMPATIBLE_TYPES: string
                                public static ER_NULL_RESOLVER: string
                                public static ER_CANT_CONVERT_TO_STRING: string
                                public static ER_NON_SNAPSHOT_TYPE: string
                                public static ER_WRONG_DOCUMENT: string
                                public static ER_WRONG_NODETYPE: string
                                public static ER_XPATH_ERROR: string
                                public static ER_EXTENSION_FUNCTION_CANNOT_BE_INVOKED: string
                                public static ER_RESOLVE_VARIABLE_RETURNS_NULL: string
                                public static ER_UNSUPPORTED_RETURN_TYPE: string
                                public static ER_SOURCE_RETURN_TYPE_CANNOT_BE_NULL: string
                                public static ER_ARG_CANNOT_BE_NULL: string
                                public static ER_OBJECT_MODEL_NULL: string
                                public static ER_OBJECT_MODEL_EMPTY: string
                                public static ER_FEATURE_NAME_NULL: string
                                public static ER_FEATURE_UNKNOWN: string
                                public static ER_GETTING_NULL_FEATURE: string
                                public static ER_GETTING_UNKNOWN_FEATURE: string
                                public static ER_SECUREPROCESSING_FEATURE: string
                                public static ER_NULL_XPATH_FUNCTION_RESOLVER: string
                                public static ER_NULL_XPATH_VARIABLE_RESOLVER: string
                                public static WG_LOCALE_NAME_NOT_HANDLED: string
                                public static WG_PROPERTY_NOT_SUPPORTED: string
                                public static WG_DONT_DO_ANYTHING_WITH_NS: string
                                public static WG_SECURITY_EXCEPTION: string
                                public static WG_QUO_NO_LONGER_DEFINED: string
                                public static WG_NEED_DERIVED_OBJECT_TO_IMPLEMENT_NODETEST: string
                                public static WG_FUNCTION_TOKEN_NOT_FOUND: string
                                public static WG_COULDNOT_FIND_FUNCTION: string
                                public static WG_CANNOT_MAKE_URL_FROM: string
                                public static WG_EXPAND_ENTITIES_NOT_SUPPORTED: string
                                public static WG_ILLEGAL_VARIABLE_REFERENCE: string
                                public static WG_UNSUPPORTED_ENCODING: string
                                public static ER_DETACH_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_NUM_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_XSTR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_STR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static BAD_CODE: string
                                public static FORMAT_FAILED: string
                                public static ERROR_RESOURCES: string
                                public static ERROR_STRING: string
                                public static ERROR_HEADER: string
                                public static WARNING_HEADER: string
                                public static XSL_HEADER: string
                                public static XML_HEADER: string
                                public static QUERY_HEADER: string
                                public constructor()
                                public getContents(): java.lang.Object[][]
                                public static class: java.lang.Class<any>
                            }
                            class XPATHErrorResources_de extends java.util.ListResourceBundle {
                                public static ERROR0000: string
                                public static ER_CURRENT_NOT_ALLOWED_IN_MATCH: string
                                public static ER_CURRENT_TAKES_NO_ARGS: string
                                public static ER_DOCUMENT_REPLACED: string
                                public static ER_CONTEXT_HAS_NO_OWNERDOC: string
                                public static ER_LOCALNAME_HAS_TOO_MANY_ARGS: string
                                public static ER_NAMESPACEURI_HAS_TOO_MANY_ARGS: string
                                public static ER_NORMALIZESPACE_HAS_TOO_MANY_ARGS: string
                                public static ER_NUMBER_HAS_TOO_MANY_ARGS: string
                                public static ER_NAME_HAS_TOO_MANY_ARGS: string
                                public static ER_STRING_HAS_TOO_MANY_ARGS: string
                                public static ER_STRINGLENGTH_HAS_TOO_MANY_ARGS: string
                                public static ER_TRANSLATE_TAKES_3_ARGS: string
                                public static ER_UNPARSEDENTITYURI_TAKES_1_ARG: string
                                public static ER_NAMESPACEAXIS_NOT_IMPLEMENTED: string
                                public static ER_UNKNOWN_AXIS: string
                                public static ER_UNKNOWN_MATCH_OPERATION: string
                                public static ER_INCORRECT_ARG_LENGTH: string
                                public static ER_CANT_CONVERT_TO_NUMBER: string
                                public static ER_CANT_CONVERT_XPATHRESULTTYPE_TO_NUMBER: string
                                public static ER_CANT_CONVERT_TO_NODELIST: string
                                public static ER_CANT_CONVERT_TO_MUTABLENODELIST: string
                                public static ER_CANT_CONVERT_TO_TYPE: string
                                public static ER_EXPECTED_MATCH_PATTERN: string
                                public static ER_COULDNOT_GET_VAR_NAMED: string
                                public static ER_UNKNOWN_OPCODE: string
                                public static ER_EXTRA_ILLEGAL_TOKENS: string
                                public static ER_EXPECTED_DOUBLE_QUOTE: string
                                public static ER_EXPECTED_SINGLE_QUOTE: string
                                public static ER_EMPTY_EXPRESSION: string
                                public static ER_EXPECTED_BUT_FOUND: string
                                public static ER_INCORRECT_PROGRAMMER_ASSERTION: string
                                public static ER_BOOLEAN_ARG_NO_LONGER_OPTIONAL: string
                                public static ER_FOUND_COMMA_BUT_NO_PRECEDING_ARG: string
                                public static ER_FOUND_COMMA_BUT_NO_FOLLOWING_ARG: string
                                public static ER_PREDICATE_ILLEGAL_SYNTAX: string
                                public static ER_ILLEGAL_AXIS_NAME: string
                                public static ER_UNKNOWN_NODETYPE: string
                                public static ER_PATTERN_LITERAL_NEEDS_BE_QUOTED: string
                                public static ER_COULDNOT_BE_FORMATTED_TO_NUMBER: string
                                public static ER_COULDNOT_CREATE_XMLPROCESSORLIAISON: string
                                public static ER_DIDNOT_FIND_XPATH_SELECT_EXP: string
                                public static ER_COULDNOT_FIND_ENDOP_AFTER_OPLOCATIONPATH: string
                                public static ER_ERROR_OCCURED: string
                                public static ER_ILLEGAL_VARIABLE_REFERENCE: string
                                public static ER_AXES_NOT_ALLOWED: string
                                public static ER_KEY_HAS_TOO_MANY_ARGS: string
                                public static ER_COUNT_TAKES_1_ARG: string
                                public static ER_COULDNOT_FIND_FUNCTION: string
                                public static ER_UNSUPPORTED_ENCODING: string
                                public static ER_PROBLEM_IN_DTM_NEXTSIBLING: string
                                public static ER_CANNOT_WRITE_TO_EMPTYNODELISTIMPL: string
                                public static ER_SETDOMFACTORY_NOT_SUPPORTED: string
                                public static ER_PREFIX_MUST_RESOLVE: string
                                public static ER_PARSE_NOT_SUPPORTED: string
                                public static ER_SAX_API_NOT_HANDLED: string
                                public static ER_IGNORABLE_WHITESPACE_NOT_HANDLED: string
                                public static ER_DTM_CANNOT_HANDLE_NODES: string
                                public static ER_XERCES_CANNOT_HANDLE_NODES: string
                                public static ER_XERCES_PARSE_ERROR_DETAILS: string
                                public static ER_XERCES_PARSE_ERROR: string
                                public static ER_INVALID_UTF16_SURROGATE: string
                                public static ER_OIERROR: string
                                public static ER_CANNOT_CREATE_URL: string
                                public static ER_XPATH_READOBJECT: string
                                public static ER_FUNCTION_TOKEN_NOT_FOUND: string
                                public static ER_CANNOT_DEAL_XPATH_TYPE: string
                                public static ER_NODESET_NOT_MUTABLE: string
                                public static ER_NODESETDTM_NOT_MUTABLE: string
                                public static ER_VAR_NOT_RESOLVABLE: string
                                public static ER_NULL_ERROR_HANDLER: string
                                public static ER_PROG_ASSERT_UNKNOWN_OPCODE: string
                                public static ER_ZERO_OR_ONE: string
                                public static ER_RTF_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_ASNODEITERATOR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_FSB_NOT_SUPPORTED_XSTRINGFORCHARS: string
                                public static ER_COULD_NOT_FIND_VAR: string
                                public static ER_XSTRINGFORCHARS_CANNOT_TAKE_STRING: string
                                public static ER_FASTSTRINGBUFFER_CANNOT_BE_NULL: string
                                public static ER_TWO_OR_THREE: string
                                public static ER_VARIABLE_ACCESSED_BEFORE_BIND: string
                                public static ER_FSB_CANNOT_TAKE_STRING: string
                                public static ER_SETTING_WALKER_ROOT_TO_NULL: string
                                public static ER_NODESETDTM_CANNOT_ITERATE: string
                                public static ER_NODESET_CANNOT_ITERATE: string
                                public static ER_NODESETDTM_CANNOT_INDEX: string
                                public static ER_NODESET_CANNOT_INDEX: string
                                public static ER_CANNOT_CALL_SETSHOULDCACHENODE: string
                                public static ER_ONLY_ALLOWS: string
                                public static ER_UNKNOWN_STEP: string
                                public static ER_EXPECTED_REL_LOC_PATH: string
                                public static ER_EXPECTED_LOC_PATH: string
                                public static ER_EXPECTED_LOC_PATH_AT_END_EXPR: string
                                public static ER_EXPECTED_LOC_STEP: string
                                public static ER_EXPECTED_NODE_TEST: string
                                public static ER_EXPECTED_STEP_PATTERN: string
                                public static ER_EXPECTED_REL_PATH_PATTERN: string
                                public static ER_CANT_CONVERT_TO_BOOLEAN: string
                                public static ER_CANT_CONVERT_TO_SINGLENODE: string
                                public static ER_CANT_GET_SNAPSHOT_LENGTH: string
                                public static ER_NON_ITERATOR_TYPE: string
                                public static ER_DOC_MUTATED: string
                                public static ER_INVALID_XPATH_TYPE: string
                                public static ER_EMPTY_XPATH_RESULT: string
                                public static ER_INCOMPATIBLE_TYPES: string
                                public static ER_NULL_RESOLVER: string
                                public static ER_CANT_CONVERT_TO_STRING: string
                                public static ER_NON_SNAPSHOT_TYPE: string
                                public static ER_WRONG_DOCUMENT: string
                                public static ER_WRONG_NODETYPE: string
                                public static ER_XPATH_ERROR: string
                                public static ER_EXTENSION_FUNCTION_CANNOT_BE_INVOKED: string
                                public static ER_RESOLVE_VARIABLE_RETURNS_NULL: string
                                public static ER_UNSUPPORTED_RETURN_TYPE: string
                                public static ER_SOURCE_RETURN_TYPE_CANNOT_BE_NULL: string
                                public static ER_ARG_CANNOT_BE_NULL: string
                                public static ER_OBJECT_MODEL_NULL: string
                                public static ER_OBJECT_MODEL_EMPTY: string
                                public static ER_FEATURE_NAME_NULL: string
                                public static ER_FEATURE_UNKNOWN: string
                                public static ER_GETTING_NULL_FEATURE: string
                                public static ER_GETTING_UNKNOWN_FEATURE: string
                                public static ER_SECUREPROCESSING_FEATURE: string
                                public static ER_NULL_XPATH_FUNCTION_RESOLVER: string
                                public static ER_NULL_XPATH_VARIABLE_RESOLVER: string
                                public static WG_LOCALE_NAME_NOT_HANDLED: string
                                public static WG_PROPERTY_NOT_SUPPORTED: string
                                public static WG_DONT_DO_ANYTHING_WITH_NS: string
                                public static WG_SECURITY_EXCEPTION: string
                                public static WG_QUO_NO_LONGER_DEFINED: string
                                public static WG_NEED_DERIVED_OBJECT_TO_IMPLEMENT_NODETEST: string
                                public static WG_FUNCTION_TOKEN_NOT_FOUND: string
                                public static WG_COULDNOT_FIND_FUNCTION: string
                                public static WG_CANNOT_MAKE_URL_FROM: string
                                public static WG_EXPAND_ENTITIES_NOT_SUPPORTED: string
                                public static WG_ILLEGAL_VARIABLE_REFERENCE: string
                                public static WG_UNSUPPORTED_ENCODING: string
                                public static ER_DETACH_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_NUM_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_XSTR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_STR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static BAD_CODE: string
                                public static FORMAT_FAILED: string
                                public static ERROR_RESOURCES: string
                                public static ERROR_STRING: string
                                public static ERROR_HEADER: string
                                public static WARNING_HEADER: string
                                public static XSL_HEADER: string
                                public static XML_HEADER: string
                                public static QUERY_HEADER: string
                                public constructor()
                                public getContents(): java.lang.Object[][]
                                public static class: java.lang.Class<any>
                            }
                            class XPATHErrorResources_en extends com.sun.org.apache.xpath.internal.res.XPATHErrorResources {
                                public constructor()
                                public static class: java.lang.Class<any>
                            }
                            class XPATHErrorResources_es extends java.util.ListResourceBundle {
                                public static ERROR0000: string
                                public static ER_CURRENT_NOT_ALLOWED_IN_MATCH: string
                                public static ER_CURRENT_TAKES_NO_ARGS: string
                                public static ER_DOCUMENT_REPLACED: string
                                public static ER_CONTEXT_HAS_NO_OWNERDOC: string
                                public static ER_LOCALNAME_HAS_TOO_MANY_ARGS: string
                                public static ER_NAMESPACEURI_HAS_TOO_MANY_ARGS: string
                                public static ER_NORMALIZESPACE_HAS_TOO_MANY_ARGS: string
                                public static ER_NUMBER_HAS_TOO_MANY_ARGS: string
                                public static ER_NAME_HAS_TOO_MANY_ARGS: string
                                public static ER_STRING_HAS_TOO_MANY_ARGS: string
                                public static ER_STRINGLENGTH_HAS_TOO_MANY_ARGS: string
                                public static ER_TRANSLATE_TAKES_3_ARGS: string
                                public static ER_UNPARSEDENTITYURI_TAKES_1_ARG: string
                                public static ER_NAMESPACEAXIS_NOT_IMPLEMENTED: string
                                public static ER_UNKNOWN_AXIS: string
                                public static ER_UNKNOWN_MATCH_OPERATION: string
                                public static ER_INCORRECT_ARG_LENGTH: string
                                public static ER_CANT_CONVERT_TO_NUMBER: string
                                public static ER_CANT_CONVERT_XPATHRESULTTYPE_TO_NUMBER: string
                                public static ER_CANT_CONVERT_TO_NODELIST: string
                                public static ER_CANT_CONVERT_TO_MUTABLENODELIST: string
                                public static ER_CANT_CONVERT_TO_TYPE: string
                                public static ER_EXPECTED_MATCH_PATTERN: string
                                public static ER_COULDNOT_GET_VAR_NAMED: string
                                public static ER_UNKNOWN_OPCODE: string
                                public static ER_EXTRA_ILLEGAL_TOKENS: string
                                public static ER_EXPECTED_DOUBLE_QUOTE: string
                                public static ER_EXPECTED_SINGLE_QUOTE: string
                                public static ER_EMPTY_EXPRESSION: string
                                public static ER_EXPECTED_BUT_FOUND: string
                                public static ER_INCORRECT_PROGRAMMER_ASSERTION: string
                                public static ER_BOOLEAN_ARG_NO_LONGER_OPTIONAL: string
                                public static ER_FOUND_COMMA_BUT_NO_PRECEDING_ARG: string
                                public static ER_FOUND_COMMA_BUT_NO_FOLLOWING_ARG: string
                                public static ER_PREDICATE_ILLEGAL_SYNTAX: string
                                public static ER_ILLEGAL_AXIS_NAME: string
                                public static ER_UNKNOWN_NODETYPE: string
                                public static ER_PATTERN_LITERAL_NEEDS_BE_QUOTED: string
                                public static ER_COULDNOT_BE_FORMATTED_TO_NUMBER: string
                                public static ER_COULDNOT_CREATE_XMLPROCESSORLIAISON: string
                                public static ER_DIDNOT_FIND_XPATH_SELECT_EXP: string
                                public static ER_COULDNOT_FIND_ENDOP_AFTER_OPLOCATIONPATH: string
                                public static ER_ERROR_OCCURED: string
                                public static ER_ILLEGAL_VARIABLE_REFERENCE: string
                                public static ER_AXES_NOT_ALLOWED: string
                                public static ER_KEY_HAS_TOO_MANY_ARGS: string
                                public static ER_COUNT_TAKES_1_ARG: string
                                public static ER_COULDNOT_FIND_FUNCTION: string
                                public static ER_UNSUPPORTED_ENCODING: string
                                public static ER_PROBLEM_IN_DTM_NEXTSIBLING: string
                                public static ER_CANNOT_WRITE_TO_EMPTYNODELISTIMPL: string
                                public static ER_SETDOMFACTORY_NOT_SUPPORTED: string
                                public static ER_PREFIX_MUST_RESOLVE: string
                                public static ER_PARSE_NOT_SUPPORTED: string
                                public static ER_SAX_API_NOT_HANDLED: string
                                public static ER_IGNORABLE_WHITESPACE_NOT_HANDLED: string
                                public static ER_DTM_CANNOT_HANDLE_NODES: string
                                public static ER_XERCES_CANNOT_HANDLE_NODES: string
                                public static ER_XERCES_PARSE_ERROR_DETAILS: string
                                public static ER_XERCES_PARSE_ERROR: string
                                public static ER_INVALID_UTF16_SURROGATE: string
                                public static ER_OIERROR: string
                                public static ER_CANNOT_CREATE_URL: string
                                public static ER_XPATH_READOBJECT: string
                                public static ER_FUNCTION_TOKEN_NOT_FOUND: string
                                public static ER_CANNOT_DEAL_XPATH_TYPE: string
                                public static ER_NODESET_NOT_MUTABLE: string
                                public static ER_NODESETDTM_NOT_MUTABLE: string
                                public static ER_VAR_NOT_RESOLVABLE: string
                                public static ER_NULL_ERROR_HANDLER: string
                                public static ER_PROG_ASSERT_UNKNOWN_OPCODE: string
                                public static ER_ZERO_OR_ONE: string
                                public static ER_RTF_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_ASNODEITERATOR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_FSB_NOT_SUPPORTED_XSTRINGFORCHARS: string
                                public static ER_COULD_NOT_FIND_VAR: string
                                public static ER_XSTRINGFORCHARS_CANNOT_TAKE_STRING: string
                                public static ER_FASTSTRINGBUFFER_CANNOT_BE_NULL: string
                                public static ER_TWO_OR_THREE: string
                                public static ER_VARIABLE_ACCESSED_BEFORE_BIND: string
                                public static ER_FSB_CANNOT_TAKE_STRING: string
                                public static ER_SETTING_WALKER_ROOT_TO_NULL: string
                                public static ER_NODESETDTM_CANNOT_ITERATE: string
                                public static ER_NODESET_CANNOT_ITERATE: string
                                public static ER_NODESETDTM_CANNOT_INDEX: string
                                public static ER_NODESET_CANNOT_INDEX: string
                                public static ER_CANNOT_CALL_SETSHOULDCACHENODE: string
                                public static ER_ONLY_ALLOWS: string
                                public static ER_UNKNOWN_STEP: string
                                public static ER_EXPECTED_REL_LOC_PATH: string
                                public static ER_EXPECTED_LOC_PATH: string
                                public static ER_EXPECTED_LOC_PATH_AT_END_EXPR: string
                                public static ER_EXPECTED_LOC_STEP: string
                                public static ER_EXPECTED_NODE_TEST: string
                                public static ER_EXPECTED_STEP_PATTERN: string
                                public static ER_EXPECTED_REL_PATH_PATTERN: string
                                public static ER_CANT_CONVERT_TO_BOOLEAN: string
                                public static ER_CANT_CONVERT_TO_SINGLENODE: string
                                public static ER_CANT_GET_SNAPSHOT_LENGTH: string
                                public static ER_NON_ITERATOR_TYPE: string
                                public static ER_DOC_MUTATED: string
                                public static ER_INVALID_XPATH_TYPE: string
                                public static ER_EMPTY_XPATH_RESULT: string
                                public static ER_INCOMPATIBLE_TYPES: string
                                public static ER_NULL_RESOLVER: string
                                public static ER_CANT_CONVERT_TO_STRING: string
                                public static ER_NON_SNAPSHOT_TYPE: string
                                public static ER_WRONG_DOCUMENT: string
                                public static ER_WRONG_NODETYPE: string
                                public static ER_XPATH_ERROR: string
                                public static ER_EXTENSION_FUNCTION_CANNOT_BE_INVOKED: string
                                public static ER_RESOLVE_VARIABLE_RETURNS_NULL: string
                                public static ER_UNSUPPORTED_RETURN_TYPE: string
                                public static ER_SOURCE_RETURN_TYPE_CANNOT_BE_NULL: string
                                public static ER_ARG_CANNOT_BE_NULL: string
                                public static ER_OBJECT_MODEL_NULL: string
                                public static ER_OBJECT_MODEL_EMPTY: string
                                public static ER_FEATURE_NAME_NULL: string
                                public static ER_FEATURE_UNKNOWN: string
                                public static ER_GETTING_NULL_FEATURE: string
                                public static ER_GETTING_UNKNOWN_FEATURE: string
                                public static ER_SECUREPROCESSING_FEATURE: string
                                public static ER_NULL_XPATH_FUNCTION_RESOLVER: string
                                public static ER_NULL_XPATH_VARIABLE_RESOLVER: string
                                public static WG_LOCALE_NAME_NOT_HANDLED: string
                                public static WG_PROPERTY_NOT_SUPPORTED: string
                                public static WG_DONT_DO_ANYTHING_WITH_NS: string
                                public static WG_SECURITY_EXCEPTION: string
                                public static WG_QUO_NO_LONGER_DEFINED: string
                                public static WG_NEED_DERIVED_OBJECT_TO_IMPLEMENT_NODETEST: string
                                public static WG_FUNCTION_TOKEN_NOT_FOUND: string
                                public static WG_COULDNOT_FIND_FUNCTION: string
                                public static WG_CANNOT_MAKE_URL_FROM: string
                                public static WG_EXPAND_ENTITIES_NOT_SUPPORTED: string
                                public static WG_ILLEGAL_VARIABLE_REFERENCE: string
                                public static WG_UNSUPPORTED_ENCODING: string
                                public static ER_DETACH_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_NUM_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_XSTR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_STR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static BAD_CODE: string
                                public static FORMAT_FAILED: string
                                public static ERROR_RESOURCES: string
                                public static ERROR_STRING: string
                                public static ERROR_HEADER: string
                                public static WARNING_HEADER: string
                                public static XSL_HEADER: string
                                public static XML_HEADER: string
                                public static QUERY_HEADER: string
                                public constructor()
                                public getContents(): java.lang.Object[][]
                                public static class: java.lang.Class<any>
                            }
                            class XPATHErrorResources_fr extends java.util.ListResourceBundle {
                                public static ERROR0000: string
                                public static ER_CURRENT_NOT_ALLOWED_IN_MATCH: string
                                public static ER_CURRENT_TAKES_NO_ARGS: string
                                public static ER_DOCUMENT_REPLACED: string
                                public static ER_CONTEXT_HAS_NO_OWNERDOC: string
                                public static ER_LOCALNAME_HAS_TOO_MANY_ARGS: string
                                public static ER_NAMESPACEURI_HAS_TOO_MANY_ARGS: string
                                public static ER_NORMALIZESPACE_HAS_TOO_MANY_ARGS: string
                                public static ER_NUMBER_HAS_TOO_MANY_ARGS: string
                                public static ER_NAME_HAS_TOO_MANY_ARGS: string
                                public static ER_STRING_HAS_TOO_MANY_ARGS: string
                                public static ER_STRINGLENGTH_HAS_TOO_MANY_ARGS: string
                                public static ER_TRANSLATE_TAKES_3_ARGS: string
                                public static ER_UNPARSEDENTITYURI_TAKES_1_ARG: string
                                public static ER_NAMESPACEAXIS_NOT_IMPLEMENTED: string
                                public static ER_UNKNOWN_AXIS: string
                                public static ER_UNKNOWN_MATCH_OPERATION: string
                                public static ER_INCORRECT_ARG_LENGTH: string
                                public static ER_CANT_CONVERT_TO_NUMBER: string
                                public static ER_CANT_CONVERT_XPATHRESULTTYPE_TO_NUMBER: string
                                public static ER_CANT_CONVERT_TO_NODELIST: string
                                public static ER_CANT_CONVERT_TO_MUTABLENODELIST: string
                                public static ER_CANT_CONVERT_TO_TYPE: string
                                public static ER_EXPECTED_MATCH_PATTERN: string
                                public static ER_COULDNOT_GET_VAR_NAMED: string
                                public static ER_UNKNOWN_OPCODE: string
                                public static ER_EXTRA_ILLEGAL_TOKENS: string
                                public static ER_EXPECTED_DOUBLE_QUOTE: string
                                public static ER_EXPECTED_SINGLE_QUOTE: string
                                public static ER_EMPTY_EXPRESSION: string
                                public static ER_EXPECTED_BUT_FOUND: string
                                public static ER_INCORRECT_PROGRAMMER_ASSERTION: string
                                public static ER_BOOLEAN_ARG_NO_LONGER_OPTIONAL: string
                                public static ER_FOUND_COMMA_BUT_NO_PRECEDING_ARG: string
                                public static ER_FOUND_COMMA_BUT_NO_FOLLOWING_ARG: string
                                public static ER_PREDICATE_ILLEGAL_SYNTAX: string
                                public static ER_ILLEGAL_AXIS_NAME: string
                                public static ER_UNKNOWN_NODETYPE: string
                                public static ER_PATTERN_LITERAL_NEEDS_BE_QUOTED: string
                                public static ER_COULDNOT_BE_FORMATTED_TO_NUMBER: string
                                public static ER_COULDNOT_CREATE_XMLPROCESSORLIAISON: string
                                public static ER_DIDNOT_FIND_XPATH_SELECT_EXP: string
                                public static ER_COULDNOT_FIND_ENDOP_AFTER_OPLOCATIONPATH: string
                                public static ER_ERROR_OCCURED: string
                                public static ER_ILLEGAL_VARIABLE_REFERENCE: string
                                public static ER_AXES_NOT_ALLOWED: string
                                public static ER_KEY_HAS_TOO_MANY_ARGS: string
                                public static ER_COUNT_TAKES_1_ARG: string
                                public static ER_COULDNOT_FIND_FUNCTION: string
                                public static ER_UNSUPPORTED_ENCODING: string
                                public static ER_PROBLEM_IN_DTM_NEXTSIBLING: string
                                public static ER_CANNOT_WRITE_TO_EMPTYNODELISTIMPL: string
                                public static ER_SETDOMFACTORY_NOT_SUPPORTED: string
                                public static ER_PREFIX_MUST_RESOLVE: string
                                public static ER_PARSE_NOT_SUPPORTED: string
                                public static ER_SAX_API_NOT_HANDLED: string
                                public static ER_IGNORABLE_WHITESPACE_NOT_HANDLED: string
                                public static ER_DTM_CANNOT_HANDLE_NODES: string
                                public static ER_XERCES_CANNOT_HANDLE_NODES: string
                                public static ER_XERCES_PARSE_ERROR_DETAILS: string
                                public static ER_XERCES_PARSE_ERROR: string
                                public static ER_INVALID_UTF16_SURROGATE: string
                                public static ER_OIERROR: string
                                public static ER_CANNOT_CREATE_URL: string
                                public static ER_XPATH_READOBJECT: string
                                public static ER_FUNCTION_TOKEN_NOT_FOUND: string
                                public static ER_CANNOT_DEAL_XPATH_TYPE: string
                                public static ER_NODESET_NOT_MUTABLE: string
                                public static ER_NODESETDTM_NOT_MUTABLE: string
                                public static ER_VAR_NOT_RESOLVABLE: string
                                public static ER_NULL_ERROR_HANDLER: string
                                public static ER_PROG_ASSERT_UNKNOWN_OPCODE: string
                                public static ER_ZERO_OR_ONE: string
                                public static ER_RTF_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_ASNODEITERATOR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_FSB_NOT_SUPPORTED_XSTRINGFORCHARS: string
                                public static ER_COULD_NOT_FIND_VAR: string
                                public static ER_XSTRINGFORCHARS_CANNOT_TAKE_STRING: string
                                public static ER_FASTSTRINGBUFFER_CANNOT_BE_NULL: string
                                public static ER_TWO_OR_THREE: string
                                public static ER_VARIABLE_ACCESSED_BEFORE_BIND: string
                                public static ER_FSB_CANNOT_TAKE_STRING: string
                                public static ER_SETTING_WALKER_ROOT_TO_NULL: string
                                public static ER_NODESETDTM_CANNOT_ITERATE: string
                                public static ER_NODESET_CANNOT_ITERATE: string
                                public static ER_NODESETDTM_CANNOT_INDEX: string
                                public static ER_NODESET_CANNOT_INDEX: string
                                public static ER_CANNOT_CALL_SETSHOULDCACHENODE: string
                                public static ER_ONLY_ALLOWS: string
                                public static ER_UNKNOWN_STEP: string
                                public static ER_EXPECTED_REL_LOC_PATH: string
                                public static ER_EXPECTED_LOC_PATH: string
                                public static ER_EXPECTED_LOC_PATH_AT_END_EXPR: string
                                public static ER_EXPECTED_LOC_STEP: string
                                public static ER_EXPECTED_NODE_TEST: string
                                public static ER_EXPECTED_STEP_PATTERN: string
                                public static ER_EXPECTED_REL_PATH_PATTERN: string
                                public static ER_CANT_CONVERT_TO_BOOLEAN: string
                                public static ER_CANT_CONVERT_TO_SINGLENODE: string
                                public static ER_CANT_GET_SNAPSHOT_LENGTH: string
                                public static ER_NON_ITERATOR_TYPE: string
                                public static ER_DOC_MUTATED: string
                                public static ER_INVALID_XPATH_TYPE: string
                                public static ER_EMPTY_XPATH_RESULT: string
                                public static ER_INCOMPATIBLE_TYPES: string
                                public static ER_NULL_RESOLVER: string
                                public static ER_CANT_CONVERT_TO_STRING: string
                                public static ER_NON_SNAPSHOT_TYPE: string
                                public static ER_WRONG_DOCUMENT: string
                                public static ER_WRONG_NODETYPE: string
                                public static ER_XPATH_ERROR: string
                                public static ER_EXTENSION_FUNCTION_CANNOT_BE_INVOKED: string
                                public static ER_RESOLVE_VARIABLE_RETURNS_NULL: string
                                public static ER_UNSUPPORTED_RETURN_TYPE: string
                                public static ER_SOURCE_RETURN_TYPE_CANNOT_BE_NULL: string
                                public static ER_ARG_CANNOT_BE_NULL: string
                                public static ER_OBJECT_MODEL_NULL: string
                                public static ER_OBJECT_MODEL_EMPTY: string
                                public static ER_FEATURE_NAME_NULL: string
                                public static ER_FEATURE_UNKNOWN: string
                                public static ER_GETTING_NULL_FEATURE: string
                                public static ER_GETTING_UNKNOWN_FEATURE: string
                                public static ER_SECUREPROCESSING_FEATURE: string
                                public static ER_NULL_XPATH_FUNCTION_RESOLVER: string
                                public static ER_NULL_XPATH_VARIABLE_RESOLVER: string
                                public static WG_LOCALE_NAME_NOT_HANDLED: string
                                public static WG_PROPERTY_NOT_SUPPORTED: string
                                public static WG_DONT_DO_ANYTHING_WITH_NS: string
                                public static WG_SECURITY_EXCEPTION: string
                                public static WG_QUO_NO_LONGER_DEFINED: string
                                public static WG_NEED_DERIVED_OBJECT_TO_IMPLEMENT_NODETEST: string
                                public static WG_FUNCTION_TOKEN_NOT_FOUND: string
                                public static WG_COULDNOT_FIND_FUNCTION: string
                                public static WG_CANNOT_MAKE_URL_FROM: string
                                public static WG_EXPAND_ENTITIES_NOT_SUPPORTED: string
                                public static WG_ILLEGAL_VARIABLE_REFERENCE: string
                                public static WG_UNSUPPORTED_ENCODING: string
                                public static ER_DETACH_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_NUM_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_XSTR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_STR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static BAD_CODE: string
                                public static FORMAT_FAILED: string
                                public static ERROR_RESOURCES: string
                                public static ERROR_STRING: string
                                public static ERROR_HEADER: string
                                public static WARNING_HEADER: string
                                public static XSL_HEADER: string
                                public static XML_HEADER: string
                                public static QUERY_HEADER: string
                                public constructor()
                                public getContents(): java.lang.Object[][]
                                public static class: java.lang.Class<any>
                            }
                            class XPATHErrorResources_it extends java.util.ListResourceBundle {
                                public static ERROR0000: string
                                public static ER_CURRENT_NOT_ALLOWED_IN_MATCH: string
                                public static ER_CURRENT_TAKES_NO_ARGS: string
                                public static ER_DOCUMENT_REPLACED: string
                                public static ER_CONTEXT_HAS_NO_OWNERDOC: string
                                public static ER_LOCALNAME_HAS_TOO_MANY_ARGS: string
                                public static ER_NAMESPACEURI_HAS_TOO_MANY_ARGS: string
                                public static ER_NORMALIZESPACE_HAS_TOO_MANY_ARGS: string
                                public static ER_NUMBER_HAS_TOO_MANY_ARGS: string
                                public static ER_NAME_HAS_TOO_MANY_ARGS: string
                                public static ER_STRING_HAS_TOO_MANY_ARGS: string
                                public static ER_STRINGLENGTH_HAS_TOO_MANY_ARGS: string
                                public static ER_TRANSLATE_TAKES_3_ARGS: string
                                public static ER_UNPARSEDENTITYURI_TAKES_1_ARG: string
                                public static ER_NAMESPACEAXIS_NOT_IMPLEMENTED: string
                                public static ER_UNKNOWN_AXIS: string
                                public static ER_UNKNOWN_MATCH_OPERATION: string
                                public static ER_INCORRECT_ARG_LENGTH: string
                                public static ER_CANT_CONVERT_TO_NUMBER: string
                                public static ER_CANT_CONVERT_XPATHRESULTTYPE_TO_NUMBER: string
                                public static ER_CANT_CONVERT_TO_NODELIST: string
                                public static ER_CANT_CONVERT_TO_MUTABLENODELIST: string
                                public static ER_CANT_CONVERT_TO_TYPE: string
                                public static ER_EXPECTED_MATCH_PATTERN: string
                                public static ER_COULDNOT_GET_VAR_NAMED: string
                                public static ER_UNKNOWN_OPCODE: string
                                public static ER_EXTRA_ILLEGAL_TOKENS: string
                                public static ER_EXPECTED_DOUBLE_QUOTE: string
                                public static ER_EXPECTED_SINGLE_QUOTE: string
                                public static ER_EMPTY_EXPRESSION: string
                                public static ER_EXPECTED_BUT_FOUND: string
                                public static ER_INCORRECT_PROGRAMMER_ASSERTION: string
                                public static ER_BOOLEAN_ARG_NO_LONGER_OPTIONAL: string
                                public static ER_FOUND_COMMA_BUT_NO_PRECEDING_ARG: string
                                public static ER_FOUND_COMMA_BUT_NO_FOLLOWING_ARG: string
                                public static ER_PREDICATE_ILLEGAL_SYNTAX: string
                                public static ER_ILLEGAL_AXIS_NAME: string
                                public static ER_UNKNOWN_NODETYPE: string
                                public static ER_PATTERN_LITERAL_NEEDS_BE_QUOTED: string
                                public static ER_COULDNOT_BE_FORMATTED_TO_NUMBER: string
                                public static ER_COULDNOT_CREATE_XMLPROCESSORLIAISON: string
                                public static ER_DIDNOT_FIND_XPATH_SELECT_EXP: string
                                public static ER_COULDNOT_FIND_ENDOP_AFTER_OPLOCATIONPATH: string
                                public static ER_ERROR_OCCURED: string
                                public static ER_ILLEGAL_VARIABLE_REFERENCE: string
                                public static ER_AXES_NOT_ALLOWED: string
                                public static ER_KEY_HAS_TOO_MANY_ARGS: string
                                public static ER_COUNT_TAKES_1_ARG: string
                                public static ER_COULDNOT_FIND_FUNCTION: string
                                public static ER_UNSUPPORTED_ENCODING: string
                                public static ER_PROBLEM_IN_DTM_NEXTSIBLING: string
                                public static ER_CANNOT_WRITE_TO_EMPTYNODELISTIMPL: string
                                public static ER_SETDOMFACTORY_NOT_SUPPORTED: string
                                public static ER_PREFIX_MUST_RESOLVE: string
                                public static ER_PARSE_NOT_SUPPORTED: string
                                public static ER_SAX_API_NOT_HANDLED: string
                                public static ER_IGNORABLE_WHITESPACE_NOT_HANDLED: string
                                public static ER_DTM_CANNOT_HANDLE_NODES: string
                                public static ER_XERCES_CANNOT_HANDLE_NODES: string
                                public static ER_XERCES_PARSE_ERROR_DETAILS: string
                                public static ER_XERCES_PARSE_ERROR: string
                                public static ER_INVALID_UTF16_SURROGATE: string
                                public static ER_OIERROR: string
                                public static ER_CANNOT_CREATE_URL: string
                                public static ER_XPATH_READOBJECT: string
                                public static ER_FUNCTION_TOKEN_NOT_FOUND: string
                                public static ER_CANNOT_DEAL_XPATH_TYPE: string
                                public static ER_NODESET_NOT_MUTABLE: string
                                public static ER_NODESETDTM_NOT_MUTABLE: string
                                public static ER_VAR_NOT_RESOLVABLE: string
                                public static ER_NULL_ERROR_HANDLER: string
                                public static ER_PROG_ASSERT_UNKNOWN_OPCODE: string
                                public static ER_ZERO_OR_ONE: string
                                public static ER_RTF_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_ASNODEITERATOR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_FSB_NOT_SUPPORTED_XSTRINGFORCHARS: string
                                public static ER_COULD_NOT_FIND_VAR: string
                                public static ER_XSTRINGFORCHARS_CANNOT_TAKE_STRING: string
                                public static ER_FASTSTRINGBUFFER_CANNOT_BE_NULL: string
                                public static ER_TWO_OR_THREE: string
                                public static ER_VARIABLE_ACCESSED_BEFORE_BIND: string
                                public static ER_FSB_CANNOT_TAKE_STRING: string
                                public static ER_SETTING_WALKER_ROOT_TO_NULL: string
                                public static ER_NODESETDTM_CANNOT_ITERATE: string
                                public static ER_NODESET_CANNOT_ITERATE: string
                                public static ER_NODESETDTM_CANNOT_INDEX: string
                                public static ER_NODESET_CANNOT_INDEX: string
                                public static ER_CANNOT_CALL_SETSHOULDCACHENODE: string
                                public static ER_ONLY_ALLOWS: string
                                public static ER_UNKNOWN_STEP: string
                                public static ER_EXPECTED_REL_LOC_PATH: string
                                public static ER_EXPECTED_LOC_PATH: string
                                public static ER_EXPECTED_LOC_PATH_AT_END_EXPR: string
                                public static ER_EXPECTED_LOC_STEP: string
                                public static ER_EXPECTED_NODE_TEST: string
                                public static ER_EXPECTED_STEP_PATTERN: string
                                public static ER_EXPECTED_REL_PATH_PATTERN: string
                                public static ER_CANT_CONVERT_TO_BOOLEAN: string
                                public static ER_CANT_CONVERT_TO_SINGLENODE: string
                                public static ER_CANT_GET_SNAPSHOT_LENGTH: string
                                public static ER_NON_ITERATOR_TYPE: string
                                public static ER_DOC_MUTATED: string
                                public static ER_INVALID_XPATH_TYPE: string
                                public static ER_EMPTY_XPATH_RESULT: string
                                public static ER_INCOMPATIBLE_TYPES: string
                                public static ER_NULL_RESOLVER: string
                                public static ER_CANT_CONVERT_TO_STRING: string
                                public static ER_NON_SNAPSHOT_TYPE: string
                                public static ER_WRONG_DOCUMENT: string
                                public static ER_WRONG_NODETYPE: string
                                public static ER_XPATH_ERROR: string
                                public static ER_EXTENSION_FUNCTION_CANNOT_BE_INVOKED: string
                                public static ER_RESOLVE_VARIABLE_RETURNS_NULL: string
                                public static ER_UNSUPPORTED_RETURN_TYPE: string
                                public static ER_SOURCE_RETURN_TYPE_CANNOT_BE_NULL: string
                                public static ER_ARG_CANNOT_BE_NULL: string
                                public static ER_OBJECT_MODEL_NULL: string
                                public static ER_OBJECT_MODEL_EMPTY: string
                                public static ER_FEATURE_NAME_NULL: string
                                public static ER_FEATURE_UNKNOWN: string
                                public static ER_GETTING_NULL_FEATURE: string
                                public static ER_GETTING_UNKNOWN_FEATURE: string
                                public static ER_SECUREPROCESSING_FEATURE: string
                                public static ER_NULL_XPATH_FUNCTION_RESOLVER: string
                                public static ER_NULL_XPATH_VARIABLE_RESOLVER: string
                                public static WG_LOCALE_NAME_NOT_HANDLED: string
                                public static WG_PROPERTY_NOT_SUPPORTED: string
                                public static WG_DONT_DO_ANYTHING_WITH_NS: string
                                public static WG_SECURITY_EXCEPTION: string
                                public static WG_QUO_NO_LONGER_DEFINED: string
                                public static WG_NEED_DERIVED_OBJECT_TO_IMPLEMENT_NODETEST: string
                                public static WG_FUNCTION_TOKEN_NOT_FOUND: string
                                public static WG_COULDNOT_FIND_FUNCTION: string
                                public static WG_CANNOT_MAKE_URL_FROM: string
                                public static WG_EXPAND_ENTITIES_NOT_SUPPORTED: string
                                public static WG_ILLEGAL_VARIABLE_REFERENCE: string
                                public static WG_UNSUPPORTED_ENCODING: string
                                public static ER_DETACH_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_NUM_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_XSTR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_STR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static BAD_CODE: string
                                public static FORMAT_FAILED: string
                                public static ERROR_RESOURCES: string
                                public static ERROR_STRING: string
                                public static ERROR_HEADER: string
                                public static WARNING_HEADER: string
                                public static XSL_HEADER: string
                                public static XML_HEADER: string
                                public static QUERY_HEADER: string
                                public constructor()
                                public getContents(): java.lang.Object[][]
                                public static class: java.lang.Class<any>
                            }
                            class XPATHErrorResources_ja extends java.util.ListResourceBundle {
                                public static ERROR0000: string
                                public static ER_CURRENT_NOT_ALLOWED_IN_MATCH: string
                                public static ER_CURRENT_TAKES_NO_ARGS: string
                                public static ER_DOCUMENT_REPLACED: string
                                public static ER_CONTEXT_HAS_NO_OWNERDOC: string
                                public static ER_LOCALNAME_HAS_TOO_MANY_ARGS: string
                                public static ER_NAMESPACEURI_HAS_TOO_MANY_ARGS: string
                                public static ER_NORMALIZESPACE_HAS_TOO_MANY_ARGS: string
                                public static ER_NUMBER_HAS_TOO_MANY_ARGS: string
                                public static ER_NAME_HAS_TOO_MANY_ARGS: string
                                public static ER_STRING_HAS_TOO_MANY_ARGS: string
                                public static ER_STRINGLENGTH_HAS_TOO_MANY_ARGS: string
                                public static ER_TRANSLATE_TAKES_3_ARGS: string
                                public static ER_UNPARSEDENTITYURI_TAKES_1_ARG: string
                                public static ER_NAMESPACEAXIS_NOT_IMPLEMENTED: string
                                public static ER_UNKNOWN_AXIS: string
                                public static ER_UNKNOWN_MATCH_OPERATION: string
                                public static ER_INCORRECT_ARG_LENGTH: string
                                public static ER_CANT_CONVERT_TO_NUMBER: string
                                public static ER_CANT_CONVERT_XPATHRESULTTYPE_TO_NUMBER: string
                                public static ER_CANT_CONVERT_TO_NODELIST: string
                                public static ER_CANT_CONVERT_TO_MUTABLENODELIST: string
                                public static ER_CANT_CONVERT_TO_TYPE: string
                                public static ER_EXPECTED_MATCH_PATTERN: string
                                public static ER_COULDNOT_GET_VAR_NAMED: string
                                public static ER_UNKNOWN_OPCODE: string
                                public static ER_EXTRA_ILLEGAL_TOKENS: string
                                public static ER_EXPECTED_DOUBLE_QUOTE: string
                                public static ER_EXPECTED_SINGLE_QUOTE: string
                                public static ER_EMPTY_EXPRESSION: string
                                public static ER_EXPECTED_BUT_FOUND: string
                                public static ER_INCORRECT_PROGRAMMER_ASSERTION: string
                                public static ER_BOOLEAN_ARG_NO_LONGER_OPTIONAL: string
                                public static ER_FOUND_COMMA_BUT_NO_PRECEDING_ARG: string
                                public static ER_FOUND_COMMA_BUT_NO_FOLLOWING_ARG: string
                                public static ER_PREDICATE_ILLEGAL_SYNTAX: string
                                public static ER_ILLEGAL_AXIS_NAME: string
                                public static ER_UNKNOWN_NODETYPE: string
                                public static ER_PATTERN_LITERAL_NEEDS_BE_QUOTED: string
                                public static ER_COULDNOT_BE_FORMATTED_TO_NUMBER: string
                                public static ER_COULDNOT_CREATE_XMLPROCESSORLIAISON: string
                                public static ER_DIDNOT_FIND_XPATH_SELECT_EXP: string
                                public static ER_COULDNOT_FIND_ENDOP_AFTER_OPLOCATIONPATH: string
                                public static ER_ERROR_OCCURED: string
                                public static ER_ILLEGAL_VARIABLE_REFERENCE: string
                                public static ER_AXES_NOT_ALLOWED: string
                                public static ER_KEY_HAS_TOO_MANY_ARGS: string
                                public static ER_COUNT_TAKES_1_ARG: string
                                public static ER_COULDNOT_FIND_FUNCTION: string
                                public static ER_UNSUPPORTED_ENCODING: string
                                public static ER_PROBLEM_IN_DTM_NEXTSIBLING: string
                                public static ER_CANNOT_WRITE_TO_EMPTYNODELISTIMPL: string
                                public static ER_SETDOMFACTORY_NOT_SUPPORTED: string
                                public static ER_PREFIX_MUST_RESOLVE: string
                                public static ER_PARSE_NOT_SUPPORTED: string
                                public static ER_SAX_API_NOT_HANDLED: string
                                public static ER_IGNORABLE_WHITESPACE_NOT_HANDLED: string
                                public static ER_DTM_CANNOT_HANDLE_NODES: string
                                public static ER_XERCES_CANNOT_HANDLE_NODES: string
                                public static ER_XERCES_PARSE_ERROR_DETAILS: string
                                public static ER_XERCES_PARSE_ERROR: string
                                public static ER_INVALID_UTF16_SURROGATE: string
                                public static ER_OIERROR: string
                                public static ER_CANNOT_CREATE_URL: string
                                public static ER_XPATH_READOBJECT: string
                                public static ER_FUNCTION_TOKEN_NOT_FOUND: string
                                public static ER_CANNOT_DEAL_XPATH_TYPE: string
                                public static ER_NODESET_NOT_MUTABLE: string
                                public static ER_NODESETDTM_NOT_MUTABLE: string
                                public static ER_VAR_NOT_RESOLVABLE: string
                                public static ER_NULL_ERROR_HANDLER: string
                                public static ER_PROG_ASSERT_UNKNOWN_OPCODE: string
                                public static ER_ZERO_OR_ONE: string
                                public static ER_RTF_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_ASNODEITERATOR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_FSB_NOT_SUPPORTED_XSTRINGFORCHARS: string
                                public static ER_COULD_NOT_FIND_VAR: string
                                public static ER_XSTRINGFORCHARS_CANNOT_TAKE_STRING: string
                                public static ER_FASTSTRINGBUFFER_CANNOT_BE_NULL: string
                                public static ER_TWO_OR_THREE: string
                                public static ER_VARIABLE_ACCESSED_BEFORE_BIND: string
                                public static ER_FSB_CANNOT_TAKE_STRING: string
                                public static ER_SETTING_WALKER_ROOT_TO_NULL: string
                                public static ER_NODESETDTM_CANNOT_ITERATE: string
                                public static ER_NODESET_CANNOT_ITERATE: string
                                public static ER_NODESETDTM_CANNOT_INDEX: string
                                public static ER_NODESET_CANNOT_INDEX: string
                                public static ER_CANNOT_CALL_SETSHOULDCACHENODE: string
                                public static ER_ONLY_ALLOWS: string
                                public static ER_UNKNOWN_STEP: string
                                public static ER_EXPECTED_REL_LOC_PATH: string
                                public static ER_EXPECTED_LOC_PATH: string
                                public static ER_EXPECTED_LOC_PATH_AT_END_EXPR: string
                                public static ER_EXPECTED_LOC_STEP: string
                                public static ER_EXPECTED_NODE_TEST: string
                                public static ER_EXPECTED_STEP_PATTERN: string
                                public static ER_EXPECTED_REL_PATH_PATTERN: string
                                public static ER_CANT_CONVERT_TO_BOOLEAN: string
                                public static ER_CANT_CONVERT_TO_SINGLENODE: string
                                public static ER_CANT_GET_SNAPSHOT_LENGTH: string
                                public static ER_NON_ITERATOR_TYPE: string
                                public static ER_DOC_MUTATED: string
                                public static ER_INVALID_XPATH_TYPE: string
                                public static ER_EMPTY_XPATH_RESULT: string
                                public static ER_INCOMPATIBLE_TYPES: string
                                public static ER_NULL_RESOLVER: string
                                public static ER_CANT_CONVERT_TO_STRING: string
                                public static ER_NON_SNAPSHOT_TYPE: string
                                public static ER_WRONG_DOCUMENT: string
                                public static ER_WRONG_NODETYPE: string
                                public static ER_XPATH_ERROR: string
                                public static ER_EXTENSION_FUNCTION_CANNOT_BE_INVOKED: string
                                public static ER_RESOLVE_VARIABLE_RETURNS_NULL: string
                                public static ER_UNSUPPORTED_RETURN_TYPE: string
                                public static ER_SOURCE_RETURN_TYPE_CANNOT_BE_NULL: string
                                public static ER_ARG_CANNOT_BE_NULL: string
                                public static ER_OBJECT_MODEL_NULL: string
                                public static ER_OBJECT_MODEL_EMPTY: string
                                public static ER_FEATURE_NAME_NULL: string
                                public static ER_FEATURE_UNKNOWN: string
                                public static ER_GETTING_NULL_FEATURE: string
                                public static ER_GETTING_UNKNOWN_FEATURE: string
                                public static ER_SECUREPROCESSING_FEATURE: string
                                public static ER_NULL_XPATH_FUNCTION_RESOLVER: string
                                public static ER_NULL_XPATH_VARIABLE_RESOLVER: string
                                public static WG_LOCALE_NAME_NOT_HANDLED: string
                                public static WG_PROPERTY_NOT_SUPPORTED: string
                                public static WG_DONT_DO_ANYTHING_WITH_NS: string
                                public static WG_SECURITY_EXCEPTION: string
                                public static WG_QUO_NO_LONGER_DEFINED: string
                                public static WG_NEED_DERIVED_OBJECT_TO_IMPLEMENT_NODETEST: string
                                public static WG_FUNCTION_TOKEN_NOT_FOUND: string
                                public static WG_COULDNOT_FIND_FUNCTION: string
                                public static WG_CANNOT_MAKE_URL_FROM: string
                                public static WG_EXPAND_ENTITIES_NOT_SUPPORTED: string
                                public static WG_ILLEGAL_VARIABLE_REFERENCE: string
                                public static WG_UNSUPPORTED_ENCODING: string
                                public static ER_DETACH_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_NUM_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_XSTR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_STR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static BAD_CODE: string
                                public static FORMAT_FAILED: string
                                public static ERROR_RESOURCES: string
                                public static ERROR_STRING: string
                                public static ERROR_HEADER: string
                                public static WARNING_HEADER: string
                                public static XSL_HEADER: string
                                public static XML_HEADER: string
                                public static QUERY_HEADER: string
                                public constructor()
                                public getContents(): java.lang.Object[][]
                                public static class: java.lang.Class<any>
                            }
                            class XPATHErrorResources_ko extends java.util.ListResourceBundle {
                                public static ERROR0000: string
                                public static ER_CURRENT_NOT_ALLOWED_IN_MATCH: string
                                public static ER_CURRENT_TAKES_NO_ARGS: string
                                public static ER_DOCUMENT_REPLACED: string
                                public static ER_CONTEXT_HAS_NO_OWNERDOC: string
                                public static ER_LOCALNAME_HAS_TOO_MANY_ARGS: string
                                public static ER_NAMESPACEURI_HAS_TOO_MANY_ARGS: string
                                public static ER_NORMALIZESPACE_HAS_TOO_MANY_ARGS: string
                                public static ER_NUMBER_HAS_TOO_MANY_ARGS: string
                                public static ER_NAME_HAS_TOO_MANY_ARGS: string
                                public static ER_STRING_HAS_TOO_MANY_ARGS: string
                                public static ER_STRINGLENGTH_HAS_TOO_MANY_ARGS: string
                                public static ER_TRANSLATE_TAKES_3_ARGS: string
                                public static ER_UNPARSEDENTITYURI_TAKES_1_ARG: string
                                public static ER_NAMESPACEAXIS_NOT_IMPLEMENTED: string
                                public static ER_UNKNOWN_AXIS: string
                                public static ER_UNKNOWN_MATCH_OPERATION: string
                                public static ER_INCORRECT_ARG_LENGTH: string
                                public static ER_CANT_CONVERT_TO_NUMBER: string
                                public static ER_CANT_CONVERT_XPATHRESULTTYPE_TO_NUMBER: string
                                public static ER_CANT_CONVERT_TO_NODELIST: string
                                public static ER_CANT_CONVERT_TO_MUTABLENODELIST: string
                                public static ER_CANT_CONVERT_TO_TYPE: string
                                public static ER_EXPECTED_MATCH_PATTERN: string
                                public static ER_COULDNOT_GET_VAR_NAMED: string
                                public static ER_UNKNOWN_OPCODE: string
                                public static ER_EXTRA_ILLEGAL_TOKENS: string
                                public static ER_EXPECTED_DOUBLE_QUOTE: string
                                public static ER_EXPECTED_SINGLE_QUOTE: string
                                public static ER_EMPTY_EXPRESSION: string
                                public static ER_EXPECTED_BUT_FOUND: string
                                public static ER_INCORRECT_PROGRAMMER_ASSERTION: string
                                public static ER_BOOLEAN_ARG_NO_LONGER_OPTIONAL: string
                                public static ER_FOUND_COMMA_BUT_NO_PRECEDING_ARG: string
                                public static ER_FOUND_COMMA_BUT_NO_FOLLOWING_ARG: string
                                public static ER_PREDICATE_ILLEGAL_SYNTAX: string
                                public static ER_ILLEGAL_AXIS_NAME: string
                                public static ER_UNKNOWN_NODETYPE: string
                                public static ER_PATTERN_LITERAL_NEEDS_BE_QUOTED: string
                                public static ER_COULDNOT_BE_FORMATTED_TO_NUMBER: string
                                public static ER_COULDNOT_CREATE_XMLPROCESSORLIAISON: string
                                public static ER_DIDNOT_FIND_XPATH_SELECT_EXP: string
                                public static ER_COULDNOT_FIND_ENDOP_AFTER_OPLOCATIONPATH: string
                                public static ER_ERROR_OCCURED: string
                                public static ER_ILLEGAL_VARIABLE_REFERENCE: string
                                public static ER_AXES_NOT_ALLOWED: string
                                public static ER_KEY_HAS_TOO_MANY_ARGS: string
                                public static ER_COUNT_TAKES_1_ARG: string
                                public static ER_COULDNOT_FIND_FUNCTION: string
                                public static ER_UNSUPPORTED_ENCODING: string
                                public static ER_PROBLEM_IN_DTM_NEXTSIBLING: string
                                public static ER_CANNOT_WRITE_TO_EMPTYNODELISTIMPL: string
                                public static ER_SETDOMFACTORY_NOT_SUPPORTED: string
                                public static ER_PREFIX_MUST_RESOLVE: string
                                public static ER_PARSE_NOT_SUPPORTED: string
                                public static ER_SAX_API_NOT_HANDLED: string
                                public static ER_IGNORABLE_WHITESPACE_NOT_HANDLED: string
                                public static ER_DTM_CANNOT_HANDLE_NODES: string
                                public static ER_XERCES_CANNOT_HANDLE_NODES: string
                                public static ER_XERCES_PARSE_ERROR_DETAILS: string
                                public static ER_XERCES_PARSE_ERROR: string
                                public static ER_INVALID_UTF16_SURROGATE: string
                                public static ER_OIERROR: string
                                public static ER_CANNOT_CREATE_URL: string
                                public static ER_XPATH_READOBJECT: string
                                public static ER_FUNCTION_TOKEN_NOT_FOUND: string
                                public static ER_CANNOT_DEAL_XPATH_TYPE: string
                                public static ER_NODESET_NOT_MUTABLE: string
                                public static ER_NODESETDTM_NOT_MUTABLE: string
                                public static ER_VAR_NOT_RESOLVABLE: string
                                public static ER_NULL_ERROR_HANDLER: string
                                public static ER_PROG_ASSERT_UNKNOWN_OPCODE: string
                                public static ER_ZERO_OR_ONE: string
                                public static ER_RTF_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_ASNODEITERATOR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_FSB_NOT_SUPPORTED_XSTRINGFORCHARS: string
                                public static ER_COULD_NOT_FIND_VAR: string
                                public static ER_XSTRINGFORCHARS_CANNOT_TAKE_STRING: string
                                public static ER_FASTSTRINGBUFFER_CANNOT_BE_NULL: string
                                public static ER_TWO_OR_THREE: string
                                public static ER_VARIABLE_ACCESSED_BEFORE_BIND: string
                                public static ER_FSB_CANNOT_TAKE_STRING: string
                                public static ER_SETTING_WALKER_ROOT_TO_NULL: string
                                public static ER_NODESETDTM_CANNOT_ITERATE: string
                                public static ER_NODESET_CANNOT_ITERATE: string
                                public static ER_NODESETDTM_CANNOT_INDEX: string
                                public static ER_NODESET_CANNOT_INDEX: string
                                public static ER_CANNOT_CALL_SETSHOULDCACHENODE: string
                                public static ER_ONLY_ALLOWS: string
                                public static ER_UNKNOWN_STEP: string
                                public static ER_EXPECTED_REL_LOC_PATH: string
                                public static ER_EXPECTED_LOC_PATH: string
                                public static ER_EXPECTED_LOC_PATH_AT_END_EXPR: string
                                public static ER_EXPECTED_LOC_STEP: string
                                public static ER_EXPECTED_NODE_TEST: string
                                public static ER_EXPECTED_STEP_PATTERN: string
                                public static ER_EXPECTED_REL_PATH_PATTERN: string
                                public static ER_CANT_CONVERT_TO_BOOLEAN: string
                                public static ER_CANT_CONVERT_TO_SINGLENODE: string
                                public static ER_CANT_GET_SNAPSHOT_LENGTH: string
                                public static ER_NON_ITERATOR_TYPE: string
                                public static ER_DOC_MUTATED: string
                                public static ER_INVALID_XPATH_TYPE: string
                                public static ER_EMPTY_XPATH_RESULT: string
                                public static ER_INCOMPATIBLE_TYPES: string
                                public static ER_NULL_RESOLVER: string
                                public static ER_CANT_CONVERT_TO_STRING: string
                                public static ER_NON_SNAPSHOT_TYPE: string
                                public static ER_WRONG_DOCUMENT: string
                                public static ER_WRONG_NODETYPE: string
                                public static ER_XPATH_ERROR: string
                                public static ER_EXTENSION_FUNCTION_CANNOT_BE_INVOKED: string
                                public static ER_RESOLVE_VARIABLE_RETURNS_NULL: string
                                public static ER_UNSUPPORTED_RETURN_TYPE: string
                                public static ER_SOURCE_RETURN_TYPE_CANNOT_BE_NULL: string
                                public static ER_ARG_CANNOT_BE_NULL: string
                                public static ER_OBJECT_MODEL_NULL: string
                                public static ER_OBJECT_MODEL_EMPTY: string
                                public static ER_FEATURE_NAME_NULL: string
                                public static ER_FEATURE_UNKNOWN: string
                                public static ER_GETTING_NULL_FEATURE: string
                                public static ER_GETTING_UNKNOWN_FEATURE: string
                                public static ER_SECUREPROCESSING_FEATURE: string
                                public static ER_NULL_XPATH_FUNCTION_RESOLVER: string
                                public static ER_NULL_XPATH_VARIABLE_RESOLVER: string
                                public static WG_LOCALE_NAME_NOT_HANDLED: string
                                public static WG_PROPERTY_NOT_SUPPORTED: string
                                public static WG_DONT_DO_ANYTHING_WITH_NS: string
                                public static WG_SECURITY_EXCEPTION: string
                                public static WG_QUO_NO_LONGER_DEFINED: string
                                public static WG_NEED_DERIVED_OBJECT_TO_IMPLEMENT_NODETEST: string
                                public static WG_FUNCTION_TOKEN_NOT_FOUND: string
                                public static WG_COULDNOT_FIND_FUNCTION: string
                                public static WG_CANNOT_MAKE_URL_FROM: string
                                public static WG_EXPAND_ENTITIES_NOT_SUPPORTED: string
                                public static WG_ILLEGAL_VARIABLE_REFERENCE: string
                                public static WG_UNSUPPORTED_ENCODING: string
                                public static ER_DETACH_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_NUM_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_XSTR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_STR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static BAD_CODE: string
                                public static FORMAT_FAILED: string
                                public static ERROR_RESOURCES: string
                                public static ERROR_STRING: string
                                public static ERROR_HEADER: string
                                public static WARNING_HEADER: string
                                public static XSL_HEADER: string
                                public static XML_HEADER: string
                                public static QUERY_HEADER: string
                                public constructor()
                                public getContents(): java.lang.Object[][]
                                public static class: java.lang.Class<any>
                            }
                            class XPATHErrorResources_pt_BR extends java.util.ListResourceBundle {
                                public static ERROR0000: string
                                public static ER_CURRENT_NOT_ALLOWED_IN_MATCH: string
                                public static ER_CURRENT_TAKES_NO_ARGS: string
                                public static ER_DOCUMENT_REPLACED: string
                                public static ER_CONTEXT_HAS_NO_OWNERDOC: string
                                public static ER_LOCALNAME_HAS_TOO_MANY_ARGS: string
                                public static ER_NAMESPACEURI_HAS_TOO_MANY_ARGS: string
                                public static ER_NORMALIZESPACE_HAS_TOO_MANY_ARGS: string
                                public static ER_NUMBER_HAS_TOO_MANY_ARGS: string
                                public static ER_NAME_HAS_TOO_MANY_ARGS: string
                                public static ER_STRING_HAS_TOO_MANY_ARGS: string
                                public static ER_STRINGLENGTH_HAS_TOO_MANY_ARGS: string
                                public static ER_TRANSLATE_TAKES_3_ARGS: string
                                public static ER_UNPARSEDENTITYURI_TAKES_1_ARG: string
                                public static ER_NAMESPACEAXIS_NOT_IMPLEMENTED: string
                                public static ER_UNKNOWN_AXIS: string
                                public static ER_UNKNOWN_MATCH_OPERATION: string
                                public static ER_INCORRECT_ARG_LENGTH: string
                                public static ER_CANT_CONVERT_TO_NUMBER: string
                                public static ER_CANT_CONVERT_XPATHRESULTTYPE_TO_NUMBER: string
                                public static ER_CANT_CONVERT_TO_NODELIST: string
                                public static ER_CANT_CONVERT_TO_MUTABLENODELIST: string
                                public static ER_CANT_CONVERT_TO_TYPE: string
                                public static ER_EXPECTED_MATCH_PATTERN: string
                                public static ER_COULDNOT_GET_VAR_NAMED: string
                                public static ER_UNKNOWN_OPCODE: string
                                public static ER_EXTRA_ILLEGAL_TOKENS: string
                                public static ER_EXPECTED_DOUBLE_QUOTE: string
                                public static ER_EXPECTED_SINGLE_QUOTE: string
                                public static ER_EMPTY_EXPRESSION: string
                                public static ER_EXPECTED_BUT_FOUND: string
                                public static ER_INCORRECT_PROGRAMMER_ASSERTION: string
                                public static ER_BOOLEAN_ARG_NO_LONGER_OPTIONAL: string
                                public static ER_FOUND_COMMA_BUT_NO_PRECEDING_ARG: string
                                public static ER_FOUND_COMMA_BUT_NO_FOLLOWING_ARG: string
                                public static ER_PREDICATE_ILLEGAL_SYNTAX: string
                                public static ER_ILLEGAL_AXIS_NAME: string
                                public static ER_UNKNOWN_NODETYPE: string
                                public static ER_PATTERN_LITERAL_NEEDS_BE_QUOTED: string
                                public static ER_COULDNOT_BE_FORMATTED_TO_NUMBER: string
                                public static ER_COULDNOT_CREATE_XMLPROCESSORLIAISON: string
                                public static ER_DIDNOT_FIND_XPATH_SELECT_EXP: string
                                public static ER_COULDNOT_FIND_ENDOP_AFTER_OPLOCATIONPATH: string
                                public static ER_ERROR_OCCURED: string
                                public static ER_ILLEGAL_VARIABLE_REFERENCE: string
                                public static ER_AXES_NOT_ALLOWED: string
                                public static ER_KEY_HAS_TOO_MANY_ARGS: string
                                public static ER_COUNT_TAKES_1_ARG: string
                                public static ER_COULDNOT_FIND_FUNCTION: string
                                public static ER_UNSUPPORTED_ENCODING: string
                                public static ER_PROBLEM_IN_DTM_NEXTSIBLING: string
                                public static ER_CANNOT_WRITE_TO_EMPTYNODELISTIMPL: string
                                public static ER_SETDOMFACTORY_NOT_SUPPORTED: string
                                public static ER_PREFIX_MUST_RESOLVE: string
                                public static ER_PARSE_NOT_SUPPORTED: string
                                public static ER_SAX_API_NOT_HANDLED: string
                                public static ER_IGNORABLE_WHITESPACE_NOT_HANDLED: string
                                public static ER_DTM_CANNOT_HANDLE_NODES: string
                                public static ER_XERCES_CANNOT_HANDLE_NODES: string
                                public static ER_XERCES_PARSE_ERROR_DETAILS: string
                                public static ER_XERCES_PARSE_ERROR: string
                                public static ER_INVALID_UTF16_SURROGATE: string
                                public static ER_OIERROR: string
                                public static ER_CANNOT_CREATE_URL: string
                                public static ER_XPATH_READOBJECT: string
                                public static ER_FUNCTION_TOKEN_NOT_FOUND: string
                                public static ER_CANNOT_DEAL_XPATH_TYPE: string
                                public static ER_NODESET_NOT_MUTABLE: string
                                public static ER_NODESETDTM_NOT_MUTABLE: string
                                public static ER_VAR_NOT_RESOLVABLE: string
                                public static ER_NULL_ERROR_HANDLER: string
                                public static ER_PROG_ASSERT_UNKNOWN_OPCODE: string
                                public static ER_ZERO_OR_ONE: string
                                public static ER_RTF_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_ASNODEITERATOR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_FSB_NOT_SUPPORTED_XSTRINGFORCHARS: string
                                public static ER_COULD_NOT_FIND_VAR: string
                                public static ER_XSTRINGFORCHARS_CANNOT_TAKE_STRING: string
                                public static ER_FASTSTRINGBUFFER_CANNOT_BE_NULL: string
                                public static ER_TWO_OR_THREE: string
                                public static ER_VARIABLE_ACCESSED_BEFORE_BIND: string
                                public static ER_FSB_CANNOT_TAKE_STRING: string
                                public static ER_SETTING_WALKER_ROOT_TO_NULL: string
                                public static ER_NODESETDTM_CANNOT_ITERATE: string
                                public static ER_NODESET_CANNOT_ITERATE: string
                                public static ER_NODESETDTM_CANNOT_INDEX: string
                                public static ER_NODESET_CANNOT_INDEX: string
                                public static ER_CANNOT_CALL_SETSHOULDCACHENODE: string
                                public static ER_ONLY_ALLOWS: string
                                public static ER_UNKNOWN_STEP: string
                                public static ER_EXPECTED_REL_LOC_PATH: string
                                public static ER_EXPECTED_LOC_PATH: string
                                public static ER_EXPECTED_LOC_PATH_AT_END_EXPR: string
                                public static ER_EXPECTED_LOC_STEP: string
                                public static ER_EXPECTED_NODE_TEST: string
                                public static ER_EXPECTED_STEP_PATTERN: string
                                public static ER_EXPECTED_REL_PATH_PATTERN: string
                                public static ER_CANT_CONVERT_TO_BOOLEAN: string
                                public static ER_CANT_CONVERT_TO_SINGLENODE: string
                                public static ER_CANT_GET_SNAPSHOT_LENGTH: string
                                public static ER_NON_ITERATOR_TYPE: string
                                public static ER_DOC_MUTATED: string
                                public static ER_INVALID_XPATH_TYPE: string
                                public static ER_EMPTY_XPATH_RESULT: string
                                public static ER_INCOMPATIBLE_TYPES: string
                                public static ER_NULL_RESOLVER: string
                                public static ER_CANT_CONVERT_TO_STRING: string
                                public static ER_NON_SNAPSHOT_TYPE: string
                                public static ER_WRONG_DOCUMENT: string
                                public static ER_WRONG_NODETYPE: string
                                public static ER_XPATH_ERROR: string
                                public static ER_EXTENSION_FUNCTION_CANNOT_BE_INVOKED: string
                                public static ER_RESOLVE_VARIABLE_RETURNS_NULL: string
                                public static ER_UNSUPPORTED_RETURN_TYPE: string
                                public static ER_SOURCE_RETURN_TYPE_CANNOT_BE_NULL: string
                                public static ER_ARG_CANNOT_BE_NULL: string
                                public static ER_OBJECT_MODEL_NULL: string
                                public static ER_OBJECT_MODEL_EMPTY: string
                                public static ER_FEATURE_NAME_NULL: string
                                public static ER_FEATURE_UNKNOWN: string
                                public static ER_GETTING_NULL_FEATURE: string
                                public static ER_GETTING_UNKNOWN_FEATURE: string
                                public static ER_SECUREPROCESSING_FEATURE: string
                                public static ER_NULL_XPATH_FUNCTION_RESOLVER: string
                                public static ER_NULL_XPATH_VARIABLE_RESOLVER: string
                                public static WG_LOCALE_NAME_NOT_HANDLED: string
                                public static WG_PROPERTY_NOT_SUPPORTED: string
                                public static WG_DONT_DO_ANYTHING_WITH_NS: string
                                public static WG_SECURITY_EXCEPTION: string
                                public static WG_QUO_NO_LONGER_DEFINED: string
                                public static WG_NEED_DERIVED_OBJECT_TO_IMPLEMENT_NODETEST: string
                                public static WG_FUNCTION_TOKEN_NOT_FOUND: string
                                public static WG_COULDNOT_FIND_FUNCTION: string
                                public static WG_CANNOT_MAKE_URL_FROM: string
                                public static WG_EXPAND_ENTITIES_NOT_SUPPORTED: string
                                public static WG_ILLEGAL_VARIABLE_REFERENCE: string
                                public static WG_UNSUPPORTED_ENCODING: string
                                public static ER_DETACH_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_NUM_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_XSTR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_STR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static BAD_CODE: string
                                public static FORMAT_FAILED: string
                                public static ERROR_RESOURCES: string
                                public static ERROR_STRING: string
                                public static ERROR_HEADER: string
                                public static WARNING_HEADER: string
                                public static XSL_HEADER: string
                                public static XML_HEADER: string
                                public static QUERY_HEADER: string
                                public constructor()
                                public getContents(): java.lang.Object[][]
                                public static class: java.lang.Class<any>
                            }
                            class XPATHErrorResources_sv extends java.util.ListResourceBundle {
                                public static ERROR0000: string
                                public static ER_CURRENT_NOT_ALLOWED_IN_MATCH: string
                                public static ER_CURRENT_TAKES_NO_ARGS: string
                                public static ER_DOCUMENT_REPLACED: string
                                public static ER_CONTEXT_HAS_NO_OWNERDOC: string
                                public static ER_LOCALNAME_HAS_TOO_MANY_ARGS: string
                                public static ER_NAMESPACEURI_HAS_TOO_MANY_ARGS: string
                                public static ER_NORMALIZESPACE_HAS_TOO_MANY_ARGS: string
                                public static ER_NUMBER_HAS_TOO_MANY_ARGS: string
                                public static ER_NAME_HAS_TOO_MANY_ARGS: string
                                public static ER_STRING_HAS_TOO_MANY_ARGS: string
                                public static ER_STRINGLENGTH_HAS_TOO_MANY_ARGS: string
                                public static ER_TRANSLATE_TAKES_3_ARGS: string
                                public static ER_UNPARSEDENTITYURI_TAKES_1_ARG: string
                                public static ER_NAMESPACEAXIS_NOT_IMPLEMENTED: string
                                public static ER_UNKNOWN_AXIS: string
                                public static ER_UNKNOWN_MATCH_OPERATION: string
                                public static ER_INCORRECT_ARG_LENGTH: string
                                public static ER_CANT_CONVERT_TO_NUMBER: string
                                public static ER_CANT_CONVERT_XPATHRESULTTYPE_TO_NUMBER: string
                                public static ER_CANT_CONVERT_TO_NODELIST: string
                                public static ER_CANT_CONVERT_TO_MUTABLENODELIST: string
                                public static ER_CANT_CONVERT_TO_TYPE: string
                                public static ER_EXPECTED_MATCH_PATTERN: string
                                public static ER_COULDNOT_GET_VAR_NAMED: string
                                public static ER_UNKNOWN_OPCODE: string
                                public static ER_EXTRA_ILLEGAL_TOKENS: string
                                public static ER_EXPECTED_DOUBLE_QUOTE: string
                                public static ER_EXPECTED_SINGLE_QUOTE: string
                                public static ER_EMPTY_EXPRESSION: string
                                public static ER_EXPECTED_BUT_FOUND: string
                                public static ER_INCORRECT_PROGRAMMER_ASSERTION: string
                                public static ER_BOOLEAN_ARG_NO_LONGER_OPTIONAL: string
                                public static ER_FOUND_COMMA_BUT_NO_PRECEDING_ARG: string
                                public static ER_FOUND_COMMA_BUT_NO_FOLLOWING_ARG: string
                                public static ER_PREDICATE_ILLEGAL_SYNTAX: string
                                public static ER_ILLEGAL_AXIS_NAME: string
                                public static ER_UNKNOWN_NODETYPE: string
                                public static ER_PATTERN_LITERAL_NEEDS_BE_QUOTED: string
                                public static ER_COULDNOT_BE_FORMATTED_TO_NUMBER: string
                                public static ER_COULDNOT_CREATE_XMLPROCESSORLIAISON: string
                                public static ER_DIDNOT_FIND_XPATH_SELECT_EXP: string
                                public static ER_COULDNOT_FIND_ENDOP_AFTER_OPLOCATIONPATH: string
                                public static ER_ERROR_OCCURED: string
                                public static ER_ILLEGAL_VARIABLE_REFERENCE: string
                                public static ER_AXES_NOT_ALLOWED: string
                                public static ER_KEY_HAS_TOO_MANY_ARGS: string
                                public static ER_COUNT_TAKES_1_ARG: string
                                public static ER_COULDNOT_FIND_FUNCTION: string
                                public static ER_UNSUPPORTED_ENCODING: string
                                public static ER_PROBLEM_IN_DTM_NEXTSIBLING: string
                                public static ER_CANNOT_WRITE_TO_EMPTYNODELISTIMPL: string
                                public static ER_SETDOMFACTORY_NOT_SUPPORTED: string
                                public static ER_PREFIX_MUST_RESOLVE: string
                                public static ER_PARSE_NOT_SUPPORTED: string
                                public static ER_SAX_API_NOT_HANDLED: string
                                public static ER_IGNORABLE_WHITESPACE_NOT_HANDLED: string
                                public static ER_DTM_CANNOT_HANDLE_NODES: string
                                public static ER_XERCES_CANNOT_HANDLE_NODES: string
                                public static ER_XERCES_PARSE_ERROR_DETAILS: string
                                public static ER_XERCES_PARSE_ERROR: string
                                public static ER_INVALID_UTF16_SURROGATE: string
                                public static ER_OIERROR: string
                                public static ER_CANNOT_CREATE_URL: string
                                public static ER_XPATH_READOBJECT: string
                                public static ER_FUNCTION_TOKEN_NOT_FOUND: string
                                public static ER_CANNOT_DEAL_XPATH_TYPE: string
                                public static ER_NODESET_NOT_MUTABLE: string
                                public static ER_NODESETDTM_NOT_MUTABLE: string
                                public static ER_VAR_NOT_RESOLVABLE: string
                                public static ER_NULL_ERROR_HANDLER: string
                                public static ER_PROG_ASSERT_UNKNOWN_OPCODE: string
                                public static ER_ZERO_OR_ONE: string
                                public static ER_RTF_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_ASNODEITERATOR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_FSB_NOT_SUPPORTED_XSTRINGFORCHARS: string
                                public static ER_COULD_NOT_FIND_VAR: string
                                public static ER_XSTRINGFORCHARS_CANNOT_TAKE_STRING: string
                                public static ER_FASTSTRINGBUFFER_CANNOT_BE_NULL: string
                                public static ER_TWO_OR_THREE: string
                                public static ER_VARIABLE_ACCESSED_BEFORE_BIND: string
                                public static ER_FSB_CANNOT_TAKE_STRING: string
                                public static ER_SETTING_WALKER_ROOT_TO_NULL: string
                                public static ER_NODESETDTM_CANNOT_ITERATE: string
                                public static ER_NODESET_CANNOT_ITERATE: string
                                public static ER_NODESETDTM_CANNOT_INDEX: string
                                public static ER_NODESET_CANNOT_INDEX: string
                                public static ER_CANNOT_CALL_SETSHOULDCACHENODE: string
                                public static ER_ONLY_ALLOWS: string
                                public static ER_UNKNOWN_STEP: string
                                public static ER_EXPECTED_REL_LOC_PATH: string
                                public static ER_EXPECTED_LOC_PATH: string
                                public static ER_EXPECTED_LOC_PATH_AT_END_EXPR: string
                                public static ER_EXPECTED_LOC_STEP: string
                                public static ER_EXPECTED_NODE_TEST: string
                                public static ER_EXPECTED_STEP_PATTERN: string
                                public static ER_EXPECTED_REL_PATH_PATTERN: string
                                public static ER_CANT_CONVERT_TO_BOOLEAN: string
                                public static ER_CANT_CONVERT_TO_SINGLENODE: string
                                public static ER_CANT_GET_SNAPSHOT_LENGTH: string
                                public static ER_NON_ITERATOR_TYPE: string
                                public static ER_DOC_MUTATED: string
                                public static ER_INVALID_XPATH_TYPE: string
                                public static ER_EMPTY_XPATH_RESULT: string
                                public static ER_INCOMPATIBLE_TYPES: string
                                public static ER_NULL_RESOLVER: string
                                public static ER_CANT_CONVERT_TO_STRING: string
                                public static ER_NON_SNAPSHOT_TYPE: string
                                public static ER_WRONG_DOCUMENT: string
                                public static ER_WRONG_NODETYPE: string
                                public static ER_XPATH_ERROR: string
                                public static ER_EXTENSION_FUNCTION_CANNOT_BE_INVOKED: string
                                public static ER_RESOLVE_VARIABLE_RETURNS_NULL: string
                                public static ER_UNSUPPORTED_RETURN_TYPE: string
                                public static ER_SOURCE_RETURN_TYPE_CANNOT_BE_NULL: string
                                public static ER_ARG_CANNOT_BE_NULL: string
                                public static ER_OBJECT_MODEL_NULL: string
                                public static ER_OBJECT_MODEL_EMPTY: string
                                public static ER_FEATURE_NAME_NULL: string
                                public static ER_FEATURE_UNKNOWN: string
                                public static ER_GETTING_NULL_FEATURE: string
                                public static ER_GETTING_UNKNOWN_FEATURE: string
                                public static ER_SECUREPROCESSING_FEATURE: string
                                public static ER_NULL_XPATH_FUNCTION_RESOLVER: string
                                public static ER_NULL_XPATH_VARIABLE_RESOLVER: string
                                public static WG_LOCALE_NAME_NOT_HANDLED: string
                                public static WG_PROPERTY_NOT_SUPPORTED: string
                                public static WG_DONT_DO_ANYTHING_WITH_NS: string
                                public static WG_SECURITY_EXCEPTION: string
                                public static WG_QUO_NO_LONGER_DEFINED: string
                                public static WG_NEED_DERIVED_OBJECT_TO_IMPLEMENT_NODETEST: string
                                public static WG_FUNCTION_TOKEN_NOT_FOUND: string
                                public static WG_COULDNOT_FIND_FUNCTION: string
                                public static WG_CANNOT_MAKE_URL_FROM: string
                                public static WG_EXPAND_ENTITIES_NOT_SUPPORTED: string
                                public static WG_ILLEGAL_VARIABLE_REFERENCE: string
                                public static WG_UNSUPPORTED_ENCODING: string
                                public static ER_DETACH_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_NUM_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_XSTR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_STR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static BAD_CODE: string
                                public static FORMAT_FAILED: string
                                public static ERROR_RESOURCES: string
                                public static ERROR_STRING: string
                                public static ERROR_HEADER: string
                                public static WARNING_HEADER: string
                                public static XSL_HEADER: string
                                public static XML_HEADER: string
                                public static QUERY_HEADER: string
                                public constructor()
                                public getContents(): java.lang.Object[][]
                                public static class: java.lang.Class<any>
                            }
                            class XPATHErrorResources_zh_CN extends java.util.ListResourceBundle {
                                public static ERROR0000: string
                                public static ER_CURRENT_NOT_ALLOWED_IN_MATCH: string
                                public static ER_CURRENT_TAKES_NO_ARGS: string
                                public static ER_DOCUMENT_REPLACED: string
                                public static ER_CONTEXT_HAS_NO_OWNERDOC: string
                                public static ER_LOCALNAME_HAS_TOO_MANY_ARGS: string
                                public static ER_NAMESPACEURI_HAS_TOO_MANY_ARGS: string
                                public static ER_NORMALIZESPACE_HAS_TOO_MANY_ARGS: string
                                public static ER_NUMBER_HAS_TOO_MANY_ARGS: string
                                public static ER_NAME_HAS_TOO_MANY_ARGS: string
                                public static ER_STRING_HAS_TOO_MANY_ARGS: string
                                public static ER_STRINGLENGTH_HAS_TOO_MANY_ARGS: string
                                public static ER_TRANSLATE_TAKES_3_ARGS: string
                                public static ER_UNPARSEDENTITYURI_TAKES_1_ARG: string
                                public static ER_NAMESPACEAXIS_NOT_IMPLEMENTED: string
                                public static ER_UNKNOWN_AXIS: string
                                public static ER_UNKNOWN_MATCH_OPERATION: string
                                public static ER_INCORRECT_ARG_LENGTH: string
                                public static ER_CANT_CONVERT_TO_NUMBER: string
                                public static ER_CANT_CONVERT_XPATHRESULTTYPE_TO_NUMBER: string
                                public static ER_CANT_CONVERT_TO_NODELIST: string
                                public static ER_CANT_CONVERT_TO_MUTABLENODELIST: string
                                public static ER_CANT_CONVERT_TO_TYPE: string
                                public static ER_EXPECTED_MATCH_PATTERN: string
                                public static ER_COULDNOT_GET_VAR_NAMED: string
                                public static ER_UNKNOWN_OPCODE: string
                                public static ER_EXTRA_ILLEGAL_TOKENS: string
                                public static ER_EXPECTED_DOUBLE_QUOTE: string
                                public static ER_EXPECTED_SINGLE_QUOTE: string
                                public static ER_EMPTY_EXPRESSION: string
                                public static ER_EXPECTED_BUT_FOUND: string
                                public static ER_INCORRECT_PROGRAMMER_ASSERTION: string
                                public static ER_BOOLEAN_ARG_NO_LONGER_OPTIONAL: string
                                public static ER_FOUND_COMMA_BUT_NO_PRECEDING_ARG: string
                                public static ER_FOUND_COMMA_BUT_NO_FOLLOWING_ARG: string
                                public static ER_PREDICATE_ILLEGAL_SYNTAX: string
                                public static ER_ILLEGAL_AXIS_NAME: string
                                public static ER_UNKNOWN_NODETYPE: string
                                public static ER_PATTERN_LITERAL_NEEDS_BE_QUOTED: string
                                public static ER_COULDNOT_BE_FORMATTED_TO_NUMBER: string
                                public static ER_COULDNOT_CREATE_XMLPROCESSORLIAISON: string
                                public static ER_DIDNOT_FIND_XPATH_SELECT_EXP: string
                                public static ER_COULDNOT_FIND_ENDOP_AFTER_OPLOCATIONPATH: string
                                public static ER_ERROR_OCCURED: string
                                public static ER_ILLEGAL_VARIABLE_REFERENCE: string
                                public static ER_AXES_NOT_ALLOWED: string
                                public static ER_KEY_HAS_TOO_MANY_ARGS: string
                                public static ER_COUNT_TAKES_1_ARG: string
                                public static ER_COULDNOT_FIND_FUNCTION: string
                                public static ER_UNSUPPORTED_ENCODING: string
                                public static ER_PROBLEM_IN_DTM_NEXTSIBLING: string
                                public static ER_CANNOT_WRITE_TO_EMPTYNODELISTIMPL: string
                                public static ER_SETDOMFACTORY_NOT_SUPPORTED: string
                                public static ER_PREFIX_MUST_RESOLVE: string
                                public static ER_PARSE_NOT_SUPPORTED: string
                                public static ER_SAX_API_NOT_HANDLED: string
                                public static ER_IGNORABLE_WHITESPACE_NOT_HANDLED: string
                                public static ER_DTM_CANNOT_HANDLE_NODES: string
                                public static ER_XERCES_CANNOT_HANDLE_NODES: string
                                public static ER_XERCES_PARSE_ERROR_DETAILS: string
                                public static ER_XERCES_PARSE_ERROR: string
                                public static ER_INVALID_UTF16_SURROGATE: string
                                public static ER_OIERROR: string
                                public static ER_CANNOT_CREATE_URL: string
                                public static ER_XPATH_READOBJECT: string
                                public static ER_FUNCTION_TOKEN_NOT_FOUND: string
                                public static ER_CANNOT_DEAL_XPATH_TYPE: string
                                public static ER_NODESET_NOT_MUTABLE: string
                                public static ER_NODESETDTM_NOT_MUTABLE: string
                                public static ER_VAR_NOT_RESOLVABLE: string
                                public static ER_NULL_ERROR_HANDLER: string
                                public static ER_PROG_ASSERT_UNKNOWN_OPCODE: string
                                public static ER_ZERO_OR_ONE: string
                                public static ER_RTF_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_ASNODEITERATOR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_FSB_NOT_SUPPORTED_XSTRINGFORCHARS: string
                                public static ER_COULD_NOT_FIND_VAR: string
                                public static ER_XSTRINGFORCHARS_CANNOT_TAKE_STRING: string
                                public static ER_FASTSTRINGBUFFER_CANNOT_BE_NULL: string
                                public static ER_TWO_OR_THREE: string
                                public static ER_VARIABLE_ACCESSED_BEFORE_BIND: string
                                public static ER_FSB_CANNOT_TAKE_STRING: string
                                public static ER_SETTING_WALKER_ROOT_TO_NULL: string
                                public static ER_NODESETDTM_CANNOT_ITERATE: string
                                public static ER_NODESET_CANNOT_ITERATE: string
                                public static ER_NODESETDTM_CANNOT_INDEX: string
                                public static ER_NODESET_CANNOT_INDEX: string
                                public static ER_CANNOT_CALL_SETSHOULDCACHENODE: string
                                public static ER_ONLY_ALLOWS: string
                                public static ER_UNKNOWN_STEP: string
                                public static ER_EXPECTED_REL_LOC_PATH: string
                                public static ER_EXPECTED_LOC_PATH: string
                                public static ER_EXPECTED_LOC_PATH_AT_END_EXPR: string
                                public static ER_EXPECTED_LOC_STEP: string
                                public static ER_EXPECTED_NODE_TEST: string
                                public static ER_EXPECTED_STEP_PATTERN: string
                                public static ER_EXPECTED_REL_PATH_PATTERN: string
                                public static ER_CANT_CONVERT_TO_BOOLEAN: string
                                public static ER_CANT_CONVERT_TO_SINGLENODE: string
                                public static ER_CANT_GET_SNAPSHOT_LENGTH: string
                                public static ER_NON_ITERATOR_TYPE: string
                                public static ER_DOC_MUTATED: string
                                public static ER_INVALID_XPATH_TYPE: string
                                public static ER_EMPTY_XPATH_RESULT: string
                                public static ER_INCOMPATIBLE_TYPES: string
                                public static ER_NULL_RESOLVER: string
                                public static ER_CANT_CONVERT_TO_STRING: string
                                public static ER_NON_SNAPSHOT_TYPE: string
                                public static ER_WRONG_DOCUMENT: string
                                public static ER_WRONG_NODETYPE: string
                                public static ER_XPATH_ERROR: string
                                public static ER_EXTENSION_FUNCTION_CANNOT_BE_INVOKED: string
                                public static ER_RESOLVE_VARIABLE_RETURNS_NULL: string
                                public static ER_UNSUPPORTED_RETURN_TYPE: string
                                public static ER_SOURCE_RETURN_TYPE_CANNOT_BE_NULL: string
                                public static ER_ARG_CANNOT_BE_NULL: string
                                public static ER_OBJECT_MODEL_NULL: string
                                public static ER_OBJECT_MODEL_EMPTY: string
                                public static ER_FEATURE_NAME_NULL: string
                                public static ER_FEATURE_UNKNOWN: string
                                public static ER_GETTING_NULL_FEATURE: string
                                public static ER_GETTING_UNKNOWN_FEATURE: string
                                public static ER_SECUREPROCESSING_FEATURE: string
                                public static ER_NULL_XPATH_FUNCTION_RESOLVER: string
                                public static ER_NULL_XPATH_VARIABLE_RESOLVER: string
                                public static WG_LOCALE_NAME_NOT_HANDLED: string
                                public static WG_PROPERTY_NOT_SUPPORTED: string
                                public static WG_DONT_DO_ANYTHING_WITH_NS: string
                                public static WG_SECURITY_EXCEPTION: string
                                public static WG_QUO_NO_LONGER_DEFINED: string
                                public static WG_NEED_DERIVED_OBJECT_TO_IMPLEMENT_NODETEST: string
                                public static WG_FUNCTION_TOKEN_NOT_FOUND: string
                                public static WG_COULDNOT_FIND_FUNCTION: string
                                public static WG_CANNOT_MAKE_URL_FROM: string
                                public static WG_EXPAND_ENTITIES_NOT_SUPPORTED: string
                                public static WG_ILLEGAL_VARIABLE_REFERENCE: string
                                public static WG_UNSUPPORTED_ENCODING: string
                                public static ER_DETACH_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_NUM_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_XSTR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_STR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static BAD_CODE: string
                                public static FORMAT_FAILED: string
                                public static ERROR_RESOURCES: string
                                public static ERROR_STRING: string
                                public static ERROR_HEADER: string
                                public static WARNING_HEADER: string
                                public static XSL_HEADER: string
                                public static XML_HEADER: string
                                public static QUERY_HEADER: string
                                public constructor()
                                public getContents(): java.lang.Object[][]
                                public static class: java.lang.Class<any>
                            }
                            class XPATHErrorResources_zh_TW extends java.util.ListResourceBundle {
                                public static ERROR0000: string
                                public static ER_CURRENT_NOT_ALLOWED_IN_MATCH: string
                                public static ER_CURRENT_TAKES_NO_ARGS: string
                                public static ER_DOCUMENT_REPLACED: string
                                public static ER_CONTEXT_HAS_NO_OWNERDOC: string
                                public static ER_LOCALNAME_HAS_TOO_MANY_ARGS: string
                                public static ER_NAMESPACEURI_HAS_TOO_MANY_ARGS: string
                                public static ER_NORMALIZESPACE_HAS_TOO_MANY_ARGS: string
                                public static ER_NUMBER_HAS_TOO_MANY_ARGS: string
                                public static ER_NAME_HAS_TOO_MANY_ARGS: string
                                public static ER_STRING_HAS_TOO_MANY_ARGS: string
                                public static ER_STRINGLENGTH_HAS_TOO_MANY_ARGS: string
                                public static ER_TRANSLATE_TAKES_3_ARGS: string
                                public static ER_UNPARSEDENTITYURI_TAKES_1_ARG: string
                                public static ER_NAMESPACEAXIS_NOT_IMPLEMENTED: string
                                public static ER_UNKNOWN_AXIS: string
                                public static ER_UNKNOWN_MATCH_OPERATION: string
                                public static ER_INCORRECT_ARG_LENGTH: string
                                public static ER_CANT_CONVERT_TO_NUMBER: string
                                public static ER_CANT_CONVERT_XPATHRESULTTYPE_TO_NUMBER: string
                                public static ER_CANT_CONVERT_TO_NODELIST: string
                                public static ER_CANT_CONVERT_TO_MUTABLENODELIST: string
                                public static ER_CANT_CONVERT_TO_TYPE: string
                                public static ER_EXPECTED_MATCH_PATTERN: string
                                public static ER_COULDNOT_GET_VAR_NAMED: string
                                public static ER_UNKNOWN_OPCODE: string
                                public static ER_EXTRA_ILLEGAL_TOKENS: string
                                public static ER_EXPECTED_DOUBLE_QUOTE: string
                                public static ER_EXPECTED_SINGLE_QUOTE: string
                                public static ER_EMPTY_EXPRESSION: string
                                public static ER_EXPECTED_BUT_FOUND: string
                                public static ER_INCORRECT_PROGRAMMER_ASSERTION: string
                                public static ER_BOOLEAN_ARG_NO_LONGER_OPTIONAL: string
                                public static ER_FOUND_COMMA_BUT_NO_PRECEDING_ARG: string
                                public static ER_FOUND_COMMA_BUT_NO_FOLLOWING_ARG: string
                                public static ER_PREDICATE_ILLEGAL_SYNTAX: string
                                public static ER_ILLEGAL_AXIS_NAME: string
                                public static ER_UNKNOWN_NODETYPE: string
                                public static ER_PATTERN_LITERAL_NEEDS_BE_QUOTED: string
                                public static ER_COULDNOT_BE_FORMATTED_TO_NUMBER: string
                                public static ER_COULDNOT_CREATE_XMLPROCESSORLIAISON: string
                                public static ER_DIDNOT_FIND_XPATH_SELECT_EXP: string
                                public static ER_COULDNOT_FIND_ENDOP_AFTER_OPLOCATIONPATH: string
                                public static ER_ERROR_OCCURED: string
                                public static ER_ILLEGAL_VARIABLE_REFERENCE: string
                                public static ER_AXES_NOT_ALLOWED: string
                                public static ER_KEY_HAS_TOO_MANY_ARGS: string
                                public static ER_COUNT_TAKES_1_ARG: string
                                public static ER_COULDNOT_FIND_FUNCTION: string
                                public static ER_UNSUPPORTED_ENCODING: string
                                public static ER_PROBLEM_IN_DTM_NEXTSIBLING: string
                                public static ER_CANNOT_WRITE_TO_EMPTYNODELISTIMPL: string
                                public static ER_SETDOMFACTORY_NOT_SUPPORTED: string
                                public static ER_PREFIX_MUST_RESOLVE: string
                                public static ER_PARSE_NOT_SUPPORTED: string
                                public static ER_SAX_API_NOT_HANDLED: string
                                public static ER_IGNORABLE_WHITESPACE_NOT_HANDLED: string
                                public static ER_DTM_CANNOT_HANDLE_NODES: string
                                public static ER_XERCES_CANNOT_HANDLE_NODES: string
                                public static ER_XERCES_PARSE_ERROR_DETAILS: string
                                public static ER_XERCES_PARSE_ERROR: string
                                public static ER_INVALID_UTF16_SURROGATE: string
                                public static ER_OIERROR: string
                                public static ER_CANNOT_CREATE_URL: string
                                public static ER_XPATH_READOBJECT: string
                                public static ER_FUNCTION_TOKEN_NOT_FOUND: string
                                public static ER_CANNOT_DEAL_XPATH_TYPE: string
                                public static ER_NODESET_NOT_MUTABLE: string
                                public static ER_NODESETDTM_NOT_MUTABLE: string
                                public static ER_VAR_NOT_RESOLVABLE: string
                                public static ER_NULL_ERROR_HANDLER: string
                                public static ER_PROG_ASSERT_UNKNOWN_OPCODE: string
                                public static ER_ZERO_OR_ONE: string
                                public static ER_RTF_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_ASNODEITERATOR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_FSB_NOT_SUPPORTED_XSTRINGFORCHARS: string
                                public static ER_COULD_NOT_FIND_VAR: string
                                public static ER_XSTRINGFORCHARS_CANNOT_TAKE_STRING: string
                                public static ER_FASTSTRINGBUFFER_CANNOT_BE_NULL: string
                                public static ER_TWO_OR_THREE: string
                                public static ER_VARIABLE_ACCESSED_BEFORE_BIND: string
                                public static ER_FSB_CANNOT_TAKE_STRING: string
                                public static ER_SETTING_WALKER_ROOT_TO_NULL: string
                                public static ER_NODESETDTM_CANNOT_ITERATE: string
                                public static ER_NODESET_CANNOT_ITERATE: string
                                public static ER_NODESETDTM_CANNOT_INDEX: string
                                public static ER_NODESET_CANNOT_INDEX: string
                                public static ER_CANNOT_CALL_SETSHOULDCACHENODE: string
                                public static ER_ONLY_ALLOWS: string
                                public static ER_UNKNOWN_STEP: string
                                public static ER_EXPECTED_REL_LOC_PATH: string
                                public static ER_EXPECTED_LOC_PATH: string
                                public static ER_EXPECTED_LOC_PATH_AT_END_EXPR: string
                                public static ER_EXPECTED_LOC_STEP: string
                                public static ER_EXPECTED_NODE_TEST: string
                                public static ER_EXPECTED_STEP_PATTERN: string
                                public static ER_EXPECTED_REL_PATH_PATTERN: string
                                public static ER_CANT_CONVERT_TO_BOOLEAN: string
                                public static ER_CANT_CONVERT_TO_SINGLENODE: string
                                public static ER_CANT_GET_SNAPSHOT_LENGTH: string
                                public static ER_NON_ITERATOR_TYPE: string
                                public static ER_DOC_MUTATED: string
                                public static ER_INVALID_XPATH_TYPE: string
                                public static ER_EMPTY_XPATH_RESULT: string
                                public static ER_INCOMPATIBLE_TYPES: string
                                public static ER_NULL_RESOLVER: string
                                public static ER_CANT_CONVERT_TO_STRING: string
                                public static ER_NON_SNAPSHOT_TYPE: string
                                public static ER_WRONG_DOCUMENT: string
                                public static ER_WRONG_NODETYPE: string
                                public static ER_XPATH_ERROR: string
                                public static ER_EXTENSION_FUNCTION_CANNOT_BE_INVOKED: string
                                public static ER_RESOLVE_VARIABLE_RETURNS_NULL: string
                                public static ER_UNSUPPORTED_RETURN_TYPE: string
                                public static ER_SOURCE_RETURN_TYPE_CANNOT_BE_NULL: string
                                public static ER_ARG_CANNOT_BE_NULL: string
                                public static ER_OBJECT_MODEL_NULL: string
                                public static ER_OBJECT_MODEL_EMPTY: string
                                public static ER_FEATURE_NAME_NULL: string
                                public static ER_FEATURE_UNKNOWN: string
                                public static ER_GETTING_NULL_FEATURE: string
                                public static ER_GETTING_UNKNOWN_FEATURE: string
                                public static ER_SECUREPROCESSING_FEATURE: string
                                public static ER_NULL_XPATH_FUNCTION_RESOLVER: string
                                public static ER_NULL_XPATH_VARIABLE_RESOLVER: string
                                public static WG_LOCALE_NAME_NOT_HANDLED: string
                                public static WG_PROPERTY_NOT_SUPPORTED: string
                                public static WG_DONT_DO_ANYTHING_WITH_NS: string
                                public static WG_SECURITY_EXCEPTION: string
                                public static WG_QUO_NO_LONGER_DEFINED: string
                                public static WG_NEED_DERIVED_OBJECT_TO_IMPLEMENT_NODETEST: string
                                public static WG_FUNCTION_TOKEN_NOT_FOUND: string
                                public static WG_COULDNOT_FIND_FUNCTION: string
                                public static WG_CANNOT_MAKE_URL_FROM: string
                                public static WG_EXPAND_ENTITIES_NOT_SUPPORTED: string
                                public static WG_ILLEGAL_VARIABLE_REFERENCE: string
                                public static WG_UNSUPPORTED_ENCODING: string
                                public static ER_DETACH_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_NUM_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_XSTR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static ER_STR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER: string
                                public static BAD_CODE: string
                                public static FORMAT_FAILED: string
                                public static ERROR_RESOURCES: string
                                public static ERROR_STRING: string
                                public static ERROR_HEADER: string
                                public static WARNING_HEADER: string
                                public static XSL_HEADER: string
                                public static XML_HEADER: string
                                public static QUERY_HEADER: string
                                public constructor()
                                public getContents(): java.lang.Object[][]
                                public static class: java.lang.Class<any>
                            }
                            class XPATHMessages extends com.sun.org.apache.xml.internal.res.XMLMessages {
                                public constructor()
                                public static createXPATHMessage(arg0: java.lang.String | string, arg1: java.lang.Object[]): string
                                public static createXPATHWarning(arg0: java.lang.String | string, arg1: java.lang.Object[]): string
                                public static createXPATHMsg(arg0: java.util.ListResourceBundle, arg1: java.lang.String | string, arg2: java.lang.Object[]): string
                                public static class: java.lang.Class<any>
                            }
                        }
                        class Arg {
                            public getQName(): com.sun.org.apache.xml.internal.utils.QName
                            public setQName(arg0: com.sun.org.apache.xml.internal.utils.QName): void
                            public getVal(): com.sun.org.apache.xpath.internal.objects.XObject
                            public setVal(arg0: com.sun.org.apache.xpath.internal.objects.XObject): void
                            public detach(): void
                            public getExpression(): string
                            public setExpression(arg0: java.lang.String | string): void
                            public isFromWithParam(): boolean
                            public isVisible(): boolean
                            public setIsVisible(arg0: boolean): void
                            public constructor()
                            public constructor(arg0: com.sun.org.apache.xml.internal.utils.QName, arg1: java.lang.String | string, arg2: boolean)
                            public constructor(arg0: com.sun.org.apache.xml.internal.utils.QName, arg1: com.sun.org.apache.xpath.internal.objects.XObject)
                            public hashCode(): int
                            public equals(arg0: java.lang.Object): boolean
                            public constructor(arg0: com.sun.org.apache.xml.internal.utils.QName, arg1: com.sun.org.apache.xpath.internal.objects.XObject, arg2: boolean)
                            public static class: java.lang.Class<any>
                        }
                        class CachedXPathAPI {
                            protected xpathSupport: com.sun.org.apache.xpath.internal.XPathContext
                            public constructor()
                            public constructor(arg0: com.sun.org.apache.xpath.internal.CachedXPathAPI)
                            public getXPathContext(): com.sun.org.apache.xpath.internal.XPathContext
                            public selectSingleNode(arg0: org.w3c.dom.Node, arg1: java.lang.String | string): org.w3c.dom.Node
                            public selectSingleNode(arg0: org.w3c.dom.Node, arg1: java.lang.String | string, arg2: org.w3c.dom.Node): org.w3c.dom.Node
                            public selectNodeIterator(arg0: org.w3c.dom.Node, arg1: java.lang.String | string): org.w3c.dom.traversal.NodeIterator
                            public selectNodeIterator(arg0: org.w3c.dom.Node, arg1: java.lang.String | string, arg2: org.w3c.dom.Node): org.w3c.dom.traversal.NodeIterator
                            public selectNodeList(arg0: org.w3c.dom.Node, arg1: java.lang.String | string): org.w3c.dom.NodeList
                            public selectNodeList(arg0: org.w3c.dom.Node, arg1: java.lang.String | string, arg2: org.w3c.dom.Node): org.w3c.dom.NodeList
                            public eval(arg0: org.w3c.dom.Node, arg1: java.lang.String | string): com.sun.org.apache.xpath.internal.objects.XObject
                            public eval(arg0: org.w3c.dom.Node, arg1: java.lang.String | string, arg2: org.w3c.dom.Node): com.sun.org.apache.xpath.internal.objects.XObject
                            public eval(arg0: org.w3c.dom.Node, arg1: java.lang.String | string, arg2: com.sun.org.apache.xml.internal.utils.PrefixResolver): com.sun.org.apache.xpath.internal.objects.XObject
                            public static class: java.lang.Class<any>
                        }
                        abstract class Expression implements java.io.Serializable , com.sun.org.apache.xpath.internal.ExpressionNode , com.sun.org.apache.xpath.internal.XPathVisitable {
                            public constructor()
                            public canTraverseOutsideSubtree(): boolean
                            public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext, arg1: int): com.sun.org.apache.xpath.internal.objects.XObject
                            public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext, arg1: int, arg2: com.sun.org.apache.xml.internal.dtm.DTM, arg3: int): com.sun.org.apache.xpath.internal.objects.XObject
                            public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xpath.internal.objects.XObject
                            public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext, arg1: boolean): com.sun.org.apache.xpath.internal.objects.XObject
                            public num(arg0: com.sun.org.apache.xpath.internal.XPathContext): double
                            public bool(arg0: com.sun.org.apache.xpath.internal.XPathContext): boolean
                            public xstr(arg0: com.sun.org.apache.xpath.internal.XPathContext): com.sun.org.apache.xml.internal.utils.XMLString
                            public isNodesetExpr(): boolean
                            public asNode(arg0: com.sun.org.apache.xpath.internal.XPathContext): int
                            public asIterator(arg0: com.sun.org.apache.xpath.internal.XPathContext, arg1: int): com.sun.org.apache.xml.internal.dtm.DTMIterator
                            public asIteratorRaw(arg0: com.sun.org.apache.xpath.internal.XPathContext, arg1: int): com.sun.org.apache.xml.internal.dtm.DTMIterator
                            public executeCharsToContentHandler(arg0: com.sun.org.apache.xpath.internal.XPathContext, arg1: org.xml.sax.ContentHandler): void
                            public isStableNumber(): boolean
                            public fixupVariables(arg0: java.util.Vector, arg1: int): void
                            public deepEquals(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): boolean
                            protected isSameClass(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): boolean
                            public warn(arg0: com.sun.org.apache.xpath.internal.XPathContext, arg1: java.lang.String | string, arg2: java.lang.Object[]): void
                            public assertion(arg0: boolean, arg1: java.lang.String | string): void
                            public error(arg0: com.sun.org.apache.xpath.internal.XPathContext, arg1: java.lang.String | string, arg2: java.lang.Object[]): void
                            public getExpressionOwner(): com.sun.org.apache.xpath.internal.ExpressionNode
                            public exprSetParent(arg0: com.sun.org.apache.xpath.internal.ExpressionNode): void
                            public exprGetParent(): com.sun.org.apache.xpath.internal.ExpressionNode
                            public exprAddChild(arg0: com.sun.org.apache.xpath.internal.ExpressionNode, arg1: int): void
                            public exprGetChild(arg0: int): com.sun.org.apache.xpath.internal.ExpressionNode
                            public exprGetNumChildren(): int
                            public getPublicId(): string
                            public getSystemId(): string
                            public getLineNumber(): int
                            public getColumnNumber(): int
                            public static class: java.lang.Class<any>
                        }
                        abstract class Expression$$Lambda implements java.io.Serializable , com.sun.org.apache.xpath.internal.ExpressionNode , com.sun.org.apache.xpath.internal.XPathVisitable {
                            public constructor()
                        }
                        interface ExpressionNode extends javax.xml.transform.SourceLocator {
                            exprSetParent(arg0: com.sun.org.apache.xpath.internal.ExpressionNode): void
                            exprGetParent(): com.sun.org.apache.xpath.internal.ExpressionNode
                            exprAddChild(arg0: com.sun.org.apache.xpath.internal.ExpressionNode, arg1: int): void
                            exprGetChild(arg0: int): com.sun.org.apache.xpath.internal.ExpressionNode
                            exprGetNumChildren(): int
                        }
                        interface ExpressionOwner {
                            getExpression(): com.sun.org.apache.xpath.internal.Expression
                            setExpression(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): void
                        }
                        interface ExtensionsProvider {
                            functionAvailable(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                            elementAvailable(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                            extFunction(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.util.Vector, arg3: java.lang.Object): java.lang.Object
                            extFunction(arg0: com.sun.org.apache.xpath.internal.functions.FuncExtFunction, arg1: java.util.Vector): java.lang.Object
                        }
                        class FoundIndex extends java.lang.RuntimeException {
                            public constructor()
                            public static class: java.lang.Class<any>
                        }
                        class NodeSet implements org.w3c.dom.NodeList , org.w3c.dom.traversal.NodeIterator , java.lang.Cloneable , com.sun.org.apache.xpath.internal.axes.ContextNodeList {
                            protected m_next: int
                            protected m_mutable: boolean
                            protected m_cacheNodes: boolean
                            protected m_firstFree: int
                            public constructor()
                            public constructor(arg0: int)
                            public constructor(arg0: org.w3c.dom.NodeList)
                            public constructor(arg0: com.sun.org.apache.xpath.internal.NodeSet)
                            public constructor(arg0: org.w3c.dom.traversal.NodeIterator)
                            public constructor(arg0: org.w3c.dom.Node)
                            public getRoot(): org.w3c.dom.Node
                            public cloneWithReset(): org.w3c.dom.traversal.NodeIterator
                            public reset(): void
                            public getWhatToShow(): int
                            public getFilter(): org.w3c.dom.traversal.NodeFilter
                            public getExpandEntityReferences(): boolean
                            public nextNode(): org.w3c.dom.Node
                            public previousNode(): org.w3c.dom.Node
                            public detach(): void
                            public isFresh(): boolean
                            public runTo(arg0: int): void
                            public item(arg0: int): org.w3c.dom.Node
                            public getLength(): int
                            public addNode(arg0: org.w3c.dom.Node): void
                            public insertNode(arg0: org.w3c.dom.Node, arg1: int): void
                            public removeNode(arg0: org.w3c.dom.Node): void
                            public addNodes(arg0: org.w3c.dom.NodeList): void
                            public addNodes(arg0: com.sun.org.apache.xpath.internal.NodeSet): void
                            public addNodes(arg0: org.w3c.dom.traversal.NodeIterator): void
                            public addNodesInDocOrder(arg0: org.w3c.dom.NodeList, arg1: com.sun.org.apache.xpath.internal.XPathContext): void
                            public addNodesInDocOrder(arg0: org.w3c.dom.traversal.NodeIterator, arg1: com.sun.org.apache.xpath.internal.XPathContext): void
                            public addNodeInDocOrder(arg0: org.w3c.dom.Node, arg1: boolean, arg2: com.sun.org.apache.xpath.internal.XPathContext): int
                            public addNodeInDocOrder(arg0: org.w3c.dom.Node, arg1: com.sun.org.apache.xpath.internal.XPathContext): int
                            public getCurrentPos(): int
                            public setCurrentPos(arg0: int): void
                            public getCurrentNode(): org.w3c.dom.Node
                            public getShouldCacheNodes(): boolean
                            public setShouldCacheNodes(arg0: boolean): void
                            public getLast(): int
                            public setLast(arg0: int): void
                            public clone(): java.lang.Object
                            public size(): int
                            public addElement(arg0: org.w3c.dom.Node): void
                            public push(arg0: org.w3c.dom.Node): void
                            public pop(): org.w3c.dom.Node
                            public popAndTop(): org.w3c.dom.Node
                            public popQuick(): void
                            public peepOrNull(): org.w3c.dom.Node
                            public pushPair(arg0: org.w3c.dom.Node, arg1: org.w3c.dom.Node): void
                            public popPair(): void
                            public setTail(arg0: org.w3c.dom.Node): void
                            public setTailSub1(arg0: org.w3c.dom.Node): void
                            public peepTail(): org.w3c.dom.Node
                            public peepTailSub1(): org.w3c.dom.Node
                            public insertElementAt(arg0: org.w3c.dom.Node, arg1: int): void
                            public appendNodes(arg0: com.sun.org.apache.xpath.internal.NodeSet): void
                            public removeAllElements(): void
                            public removeElement(arg0: org.w3c.dom.Node): boolean
                            public removeElementAt(arg0: int): void
                            public setElementAt(arg0: org.w3c.dom.Node, arg1: int): void
                            public elementAt(arg0: int): org.w3c.dom.Node
                            public contains(arg0: org.w3c.dom.Node): boolean
                            public indexOf(arg0: org.w3c.dom.Node, arg1: int): int
                            public indexOf(arg0: org.w3c.dom.Node): int
                            public static class: java.lang.Class<any>
                        }
                        class NodeSetDTM extends com.sun.org.apache.xml.internal.utils.NodeVector implements com.sun.org.apache.xml.internal.dtm.DTMIterator , java.lang.Cloneable {
                            protected m_next: int
                            protected m_mutable: boolean
                            protected m_cacheNodes: boolean
                            protected m_root: int
                            public constructor(arg0: com.sun.org.apache.xml.internal.dtm.DTMManager)
                            public constructor(arg0: int, arg1: int, arg2: com.sun.org.apache.xml.internal.dtm.DTMManager)
                            public constructor(arg0: com.sun.org.apache.xpath.internal.NodeSetDTM)
                            public constructor(arg0: com.sun.org.apache.xml.internal.dtm.DTMIterator)
                            public constructor(arg0: org.w3c.dom.traversal.NodeIterator, arg1: com.sun.org.apache.xpath.internal.XPathContext)
                            public constructor(arg0: org.w3c.dom.NodeList, arg1: com.sun.org.apache.xpath.internal.XPathContext)
                            public constructor(arg0: int, arg1: com.sun.org.apache.xml.internal.dtm.DTMManager)
                            public setEnvironment(arg0: java.lang.Object): void
                            public getRoot(): int
                            public setRoot(arg0: int, arg1: java.lang.Object): void
                            public clone(): java.lang.Object
                            public cloneWithReset(): com.sun.org.apache.xml.internal.dtm.DTMIterator
                            public reset(): void
                            public getWhatToShow(): int
                            public getFilter(): com.sun.org.apache.xml.internal.dtm.DTMFilter
                            public getExpandEntityReferences(): boolean
                            public getDTM(arg0: int): com.sun.org.apache.xml.internal.dtm.DTM
                            public getDTMManager(): com.sun.org.apache.xml.internal.dtm.DTMManager
                            public nextNode(): int
                            public previousNode(): int
                            public detach(): void
                            public allowDetachToRelease(arg0: boolean): void
                            public isFresh(): boolean
                            public runTo(arg0: int): void
                            public item(arg0: int): int
                            public getLength(): int
                            public addNode(arg0: int): void
                            public insertNode(arg0: int, arg1: int): void
                            public removeNode(arg0: int): void
                            public addNodes(arg0: com.sun.org.apache.xml.internal.dtm.DTMIterator): void
                            public addNodesInDocOrder(arg0: com.sun.org.apache.xml.internal.dtm.DTMIterator, arg1: com.sun.org.apache.xpath.internal.XPathContext): void
                            public addNodeInDocOrder(arg0: int, arg1: boolean, arg2: com.sun.org.apache.xpath.internal.XPathContext): int
                            public addNodeInDocOrder(arg0: int, arg1: com.sun.org.apache.xpath.internal.XPathContext): int
                            public size(): int
                            public addElement(arg0: int): void
                            public insertElementAt(arg0: int, arg1: int): void
                            public appendNodes(arg0: com.sun.org.apache.xml.internal.utils.NodeVector): void
                            public removeAllElements(): void
                            public removeElement(arg0: int): boolean
                            public removeElementAt(arg0: int): void
                            public setElementAt(arg0: int, arg1: int): void
                            public setItem(arg0: int, arg1: int): void
                            public elementAt(arg0: int): int
                            public contains(arg0: int): boolean
                            public indexOf(arg0: int, arg1: int): int
                            public indexOf(arg0: int): int
                            public getCurrentPos(): int
                            public setCurrentPos(arg0: int): void
                            public getCurrentNode(): int
                            public getShouldCacheNodes(): boolean
                            public setShouldCacheNodes(arg0: boolean): void
                            public isMutable(): boolean
                            public getLast(): int
                            public setLast(arg0: int): void
                            public isDocOrdered(): boolean
                            public getAxis(): int
                            public static class: java.lang.Class<any>
                        }
                        class SourceTree {
                            public m_url: string
                            public m_root: int
                            public constructor(arg0: int, arg1: java.lang.String | string)
                            public static class: java.lang.Class<any>
                        }
                        class SourceTreeManager {
                            public constructor()
                            public reset(): void
                            public setURIResolver(arg0: javax.xml.transform.URIResolver | javax.xml.transform.URIResolver$$Lambda): void
                            public getURIResolver(): javax.xml.transform.URIResolver
                            public findURIFromDoc(arg0: int): string
                            public resolveURI(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: javax.xml.transform.SourceLocator): javax.xml.transform.Source
                            public removeDocumentFromCache(arg0: int): void
                            public putDocumentInCache(arg0: int, arg1: javax.xml.transform.Source): void
                            public getNode(arg0: javax.xml.transform.Source): int
                            public getSourceTree(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: javax.xml.transform.SourceLocator, arg3: com.sun.org.apache.xpath.internal.XPathContext): int
                            public getSourceTree(arg0: javax.xml.transform.Source, arg1: javax.xml.transform.SourceLocator, arg2: com.sun.org.apache.xpath.internal.XPathContext): int
                            public parseToNode(arg0: javax.xml.transform.Source, arg1: javax.xml.transform.SourceLocator, arg2: com.sun.org.apache.xpath.internal.XPathContext): int
                            public static getXMLReader(arg0: javax.xml.transform.Source, arg1: javax.xml.transform.SourceLocator): org.xml.sax.XMLReader
                            public static class: java.lang.Class<any>
                        }
                        class VariableStack implements java.lang.Cloneable {
                            public static CLEARLIMITATION: int
                            public constructor()
                            public clone(): java.lang.Object
                            public elementAt(arg0: int): com.sun.org.apache.xpath.internal.objects.XObject
                            public size(): int
                            public reset(): void
                            public setStackFrame(arg0: int): void
                            public getStackFrame(): int
                            public link(arg0: int): int
                            public unlink(): void
                            public unlink(arg0: int): void
                            public setLocalVariable(arg0: int, arg1: com.sun.org.apache.xpath.internal.objects.XObject): void
                            public setLocalVariable(arg0: int, arg1: com.sun.org.apache.xpath.internal.objects.XObject, arg2: int): void
                            public getLocalVariable(arg0: com.sun.org.apache.xpath.internal.XPathContext, arg1: int): com.sun.org.apache.xpath.internal.objects.XObject
                            public getLocalVariable(arg0: int, arg1: int): com.sun.org.apache.xpath.internal.objects.XObject
                            public getLocalVariable(arg0: com.sun.org.apache.xpath.internal.XPathContext, arg1: int, arg2: boolean): com.sun.org.apache.xpath.internal.objects.XObject
                            public isLocalSet(arg0: int): boolean
                            public clearLocalSlots(arg0: int, arg1: int): void
                            public setGlobalVariable(arg0: int, arg1: com.sun.org.apache.xpath.internal.objects.XObject): void
                            public getGlobalVariable(arg0: com.sun.org.apache.xpath.internal.XPathContext, arg1: int): com.sun.org.apache.xpath.internal.objects.XObject
                            public getGlobalVariable(arg0: com.sun.org.apache.xpath.internal.XPathContext, arg1: int, arg2: boolean): com.sun.org.apache.xpath.internal.objects.XObject
                            public getVariableOrParam(arg0: com.sun.org.apache.xpath.internal.XPathContext, arg1: com.sun.org.apache.xml.internal.utils.QName): com.sun.org.apache.xpath.internal.objects.XObject
                            public static class: java.lang.Class<any>
                        }
                        interface WhitespaceStrippingElementMatcher {
                            shouldStripWhiteSpace(arg0: com.sun.org.apache.xpath.internal.XPathContext, arg1: org.w3c.dom.Element): boolean
                            canStripWhiteSpace(): boolean
                        }
                        class XPath implements java.io.Serializable , com.sun.org.apache.xpath.internal.ExpressionOwner {
                            public static SELECT: int
                            public static MATCH: int
                            public static MATCH_SCORE_NONE: double
                            public static MATCH_SCORE_QNAME: double
                            public static MATCH_SCORE_NSWILD: double
                            public static MATCH_SCORE_NODETEST: double
                            public static MATCH_SCORE_OTHER: double
                            public getExpression(): com.sun.org.apache.xpath.internal.Expression
                            public fixupVariables(arg0: java.util.Vector, arg1: int): void
                            public setExpression(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): void
                            public getLocator(): javax.xml.transform.SourceLocator
                            public getPatternString(): string
                            public constructor(arg0: java.lang.String | string, arg1: javax.xml.transform.SourceLocator, arg2: com.sun.org.apache.xml.internal.utils.PrefixResolver, arg3: int, arg4: javax.xml.transform.ErrorListener)
                            public constructor(arg0: java.lang.String | string, arg1: javax.xml.transform.SourceLocator, arg2: com.sun.org.apache.xml.internal.utils.PrefixResolver, arg3: int, arg4: javax.xml.transform.ErrorListener, arg5: com.sun.org.apache.xpath.internal.compiler.FunctionTable)
                            public constructor(arg0: java.lang.String | string, arg1: javax.xml.transform.SourceLocator, arg2: com.sun.org.apache.xml.internal.utils.PrefixResolver, arg3: int)
                            public constructor(arg0: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda)
                            public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext, arg1: org.w3c.dom.Node, arg2: com.sun.org.apache.xml.internal.utils.PrefixResolver): com.sun.org.apache.xpath.internal.objects.XObject
                            public execute(arg0: com.sun.org.apache.xpath.internal.XPathContext, arg1: int, arg2: com.sun.org.apache.xml.internal.utils.PrefixResolver): com.sun.org.apache.xpath.internal.objects.XObject
                            public bool(arg0: com.sun.org.apache.xpath.internal.XPathContext, arg1: int, arg2: com.sun.org.apache.xml.internal.utils.PrefixResolver): boolean
                            public getMatchScore(arg0: com.sun.org.apache.xpath.internal.XPathContext, arg1: int): double
                            public warn(arg0: com.sun.org.apache.xpath.internal.XPathContext, arg1: int, arg2: java.lang.String | string, arg3: java.lang.Object[]): void
                            public assertion(arg0: boolean, arg1: java.lang.String | string): void
                            public error(arg0: com.sun.org.apache.xpath.internal.XPathContext, arg1: int, arg2: java.lang.String | string, arg3: java.lang.Object[]): void
                            public callVisitors(arg0: com.sun.org.apache.xpath.internal.ExpressionOwner, arg1: com.sun.org.apache.xpath.internal.XPathVisitor): void
                            public static class: java.lang.Class<any>
                        }
                        class XPathAPI {
                            public constructor()
                            public static selectSingleNode(arg0: org.w3c.dom.Node, arg1: java.lang.String | string): org.w3c.dom.Node
                            public static selectSingleNode(arg0: org.w3c.dom.Node, arg1: java.lang.String | string, arg2: org.w3c.dom.Node): org.w3c.dom.Node
                            public static selectNodeIterator(arg0: org.w3c.dom.Node, arg1: java.lang.String | string): org.w3c.dom.traversal.NodeIterator
                            public static selectNodeIterator(arg0: org.w3c.dom.Node, arg1: java.lang.String | string, arg2: org.w3c.dom.Node): org.w3c.dom.traversal.NodeIterator
                            public static selectNodeList(arg0: org.w3c.dom.Node, arg1: java.lang.String | string): org.w3c.dom.NodeList
                            public static selectNodeList(arg0: org.w3c.dom.Node, arg1: java.lang.String | string, arg2: org.w3c.dom.Node): org.w3c.dom.NodeList
                            public static eval(arg0: org.w3c.dom.Node, arg1: java.lang.String | string): com.sun.org.apache.xpath.internal.objects.XObject
                            public static eval(arg0: org.w3c.dom.Node, arg1: java.lang.String | string, arg2: org.w3c.dom.Node): com.sun.org.apache.xpath.internal.objects.XObject
                            public static eval(arg0: org.w3c.dom.Node, arg1: java.lang.String | string, arg2: com.sun.org.apache.xml.internal.utils.PrefixResolver): com.sun.org.apache.xpath.internal.objects.XObject
                            public static class: java.lang.Class<any>
                        }
                        class XPathContext extends com.sun.org.apache.xml.internal.dtm.DTMManager {
                            protected m_dtmManager: com.sun.org.apache.xml.internal.dtm.DTMManager
                            public m_primaryReader: org.xml.sax.XMLReader
                            public static RECURSIONLIMIT: int
                            public getDTMManager(): com.sun.org.apache.xml.internal.dtm.DTMManager
                            public setSecureProcessing(arg0: boolean): void
                            public isSecureProcessing(): boolean
                            public getDTM(arg0: javax.xml.transform.Source, arg1: boolean, arg2: com.sun.org.apache.xml.internal.dtm.DTMWSFilter, arg3: boolean, arg4: boolean): com.sun.org.apache.xml.internal.dtm.DTM
                            public getDTM(arg0: int): com.sun.org.apache.xml.internal.dtm.DTM
                            public getDTMHandleFromNode(arg0: org.w3c.dom.Node): int
                            public getDTMIdentity(arg0: com.sun.org.apache.xml.internal.dtm.DTM): int
                            public createDocumentFragment(): com.sun.org.apache.xml.internal.dtm.DTM
                            public release(arg0: com.sun.org.apache.xml.internal.dtm.DTM, arg1: boolean): boolean
                            public createDTMIterator(arg0: java.lang.Object, arg1: int): com.sun.org.apache.xml.internal.dtm.DTMIterator
                            public createDTMIterator(arg0: java.lang.String | string, arg1: com.sun.org.apache.xml.internal.utils.PrefixResolver): com.sun.org.apache.xml.internal.dtm.DTMIterator
                            public createDTMIterator(arg0: int, arg1: com.sun.org.apache.xml.internal.dtm.DTMFilter, arg2: boolean): com.sun.org.apache.xml.internal.dtm.DTMIterator
                            public createDTMIterator(arg0: int): com.sun.org.apache.xml.internal.dtm.DTMIterator
                            public constructor()
                            public constructor(arg0: boolean)
                            public constructor(arg0: java.lang.Object)
                            public reset(): void
                            public setSAXLocator(arg0: javax.xml.transform.SourceLocator): void
                            public pushSAXLocator(arg0: javax.xml.transform.SourceLocator): void
                            public pushSAXLocatorNull(): void
                            public popSAXLocator(): void
                            public getSAXLocator(): javax.xml.transform.SourceLocator
                            public getOwnerObject(): java.lang.Object
                            public getVarStack(): com.sun.org.apache.xpath.internal.VariableStack
                            public setVarStack(arg0: com.sun.org.apache.xpath.internal.VariableStack): void
                            public getSourceTreeManager(): com.sun.org.apache.xpath.internal.SourceTreeManager
                            public setSourceTreeManager(arg0: com.sun.org.apache.xpath.internal.SourceTreeManager): void
                            public getErrorListener(): javax.xml.transform.ErrorListener
                            public setErrorListener(arg0: javax.xml.transform.ErrorListener): void
                            public getURIResolver(): javax.xml.transform.URIResolver
                            public setURIResolver(arg0: javax.xml.transform.URIResolver | javax.xml.transform.URIResolver$$Lambda): void
                            public getPrimaryReader(): org.xml.sax.XMLReader
                            public setPrimaryReader(arg0: org.xml.sax.XMLReader): void
                            public getContextNodeListsStack(): java.util.Stack
                            public setContextNodeListsStack(arg0: java.util.Stack): void
                            public getContextNodeList(): com.sun.org.apache.xml.internal.dtm.DTMIterator
                            public pushContextNodeList(arg0: com.sun.org.apache.xml.internal.dtm.DTMIterator): void
                            public popContextNodeList(): void
                            public getCurrentNodeStack(): com.sun.org.apache.xml.internal.utils.IntStack
                            public setCurrentNodeStack(arg0: com.sun.org.apache.xml.internal.utils.IntStack): void
                            public getCurrentNode(): int
                            public pushCurrentNodeAndExpression(arg0: int, arg1: int): void
                            public popCurrentNodeAndExpression(): void
                            public pushExpressionState(arg0: int, arg1: int, arg2: com.sun.org.apache.xml.internal.utils.PrefixResolver): void
                            public popExpressionState(): void
                            public pushCurrentNode(arg0: int): void
                            public popCurrentNode(): void
                            public pushPredicateRoot(arg0: int): void
                            public popPredicateRoot(): void
                            public getPredicateRoot(): int
                            public pushIteratorRoot(arg0: int): void
                            public popIteratorRoot(): void
                            public getIteratorRoot(): int
                            public getCurrentExpressionNodeStack(): com.sun.org.apache.xml.internal.utils.IntStack
                            public setCurrentExpressionNodeStack(arg0: com.sun.org.apache.xml.internal.utils.IntStack): void
                            public getPredicatePos(): int
                            public pushPredicatePos(arg0: int): void
                            public popPredicatePos(): void
                            public getCurrentExpressionNode(): int
                            public pushCurrentExpressionNode(arg0: int): void
                            public popCurrentExpressionNode(): void
                            public getNamespaceContext(): com.sun.org.apache.xml.internal.utils.PrefixResolver
                            public setNamespaceContext(arg0: com.sun.org.apache.xml.internal.utils.PrefixResolver): void
                            public pushNamespaceContext(arg0: com.sun.org.apache.xml.internal.utils.PrefixResolver): void
                            public pushNamespaceContextNull(): void
                            public popNamespaceContext(): void
                            public getAxesIteratorStackStacks(): java.util.Stack
                            public setAxesIteratorStackStacks(arg0: java.util.Stack): void
                            public pushSubContextList(arg0: com.sun.org.apache.xpath.internal.axes.SubContextList): void
                            public popSubContextList(): void
                            public getSubContextList(): com.sun.org.apache.xpath.internal.axes.SubContextList
                            public getCurrentNodeList(): com.sun.org.apache.xpath.internal.axes.SubContextList
                            public getContextNode(): int
                            public getContextNodes(): com.sun.org.apache.xml.internal.dtm.DTMIterator
                            public getExpressionContext(): com.sun.org.apache.xalan.internal.extensions.ExpressionContext
                            public getGlobalRTFDTM(): com.sun.org.apache.xml.internal.dtm.DTM
                            public getRTFDTM(): com.sun.org.apache.xml.internal.dtm.DTM
                            public pushRTFContext(): void
                            public popRTFContext(): void
                            public getDTMXRTreeFrag(arg0: int): com.sun.org.apache.xpath.internal.objects.DTMXRTreeFrag
                            public static class: java.lang.Class<any>
                        }
                        class XPathException extends javax.xml.transform.TransformerException {
                            protected m_exception: java.lang.Exception
                            public getStylesheetNode(): java.lang.Object
                            public setStylesheetNode(arg0: java.lang.Object): void
                            public constructor(arg0: java.lang.String | string, arg1: com.sun.org.apache.xpath.internal.ExpressionNode)
                            public constructor(arg0: java.lang.String | string)
                            public getStylesheetNode(arg0: com.sun.org.apache.xpath.internal.ExpressionNode): org.w3c.dom.Node
                            protected getExpressionOwner(arg0: com.sun.org.apache.xpath.internal.ExpressionNode): com.sun.org.apache.xpath.internal.ExpressionNode
                            public constructor(arg0: java.lang.String | string, arg1: java.lang.Object)
                            public constructor(arg0: java.lang.String | string, arg1: org.w3c.dom.Node, arg2: java.lang.Exception)
                            public constructor(arg0: java.lang.String | string, arg1: java.lang.Exception)
                            public printStackTrace(arg0: java.io.PrintStream): void
                            public getMessage(): string
                            public printStackTrace(arg0: java.io.PrintWriter): void
                            public getException(): java.lang.Throwable
                            public static class: java.lang.Class<any>
                        }
                        interface XPathFactory {
                            create(arg0: java.lang.String | string, arg1: javax.xml.transform.SourceLocator, arg2: com.sun.org.apache.xml.internal.utils.PrefixResolver, arg3: int): com.sun.org.apache.xpath.internal.XPath
                        }
                        interface XPathFactory$$Lambda {
                            (arg0: java.lang.String | string, arg1: javax.xml.transform.SourceLocator, arg2: com.sun.org.apache.xml.internal.utils.PrefixResolver, arg3: int): com.sun.org.apache.xpath.internal.XPath
                        }
                        class XPathProcessorException extends com.sun.org.apache.xpath.internal.XPathException {
                            public constructor(arg0: java.lang.String | string)
                            public constructor(arg0: java.lang.String | string, arg1: java.lang.Exception)
                            public static class: java.lang.Class<any>
                        }
                        interface XPathVisitable {
                            callVisitors(arg0: com.sun.org.apache.xpath.internal.ExpressionOwner, arg1: com.sun.org.apache.xpath.internal.XPathVisitor): void
                        }
                        interface XPathVisitable$$Lambda {
                            (arg0: com.sun.org.apache.xpath.internal.ExpressionOwner, arg1: com.sun.org.apache.xpath.internal.XPathVisitor): void
                        }
                        class XPathVisitor {
                            public constructor()
                            public visitLocationPath(arg0: com.sun.org.apache.xpath.internal.ExpressionOwner, arg1: com.sun.org.apache.xpath.internal.axes.LocPathIterator | com.sun.org.apache.xpath.internal.axes.LocPathIterator$$Lambda): boolean
                            public visitUnionPath(arg0: com.sun.org.apache.xpath.internal.ExpressionOwner, arg1: com.sun.org.apache.xpath.internal.axes.UnionPathIterator | com.sun.org.apache.xpath.internal.axes.UnionPathIterator$$Lambda): boolean
                            public visitStep(arg0: com.sun.org.apache.xpath.internal.ExpressionOwner, arg1: com.sun.org.apache.xpath.internal.patterns.NodeTest): boolean
                            public visitPredicate(arg0: com.sun.org.apache.xpath.internal.ExpressionOwner, arg1: com.sun.org.apache.xpath.internal.Expression | com.sun.org.apache.xpath.internal.Expression$$Lambda): boolean
                            public visitBinaryOperation(arg0: com.sun.org.apache.xpath.internal.ExpressionOwner, arg1: com.sun.org.apache.xpath.internal.operations.Operation): boolean
                            public visitUnaryOperation(arg0: com.sun.org.apache.xpath.internal.ExpressionOwner, arg1: com.sun.org.apache.xpath.internal.operations.UnaryOperation): boolean
                            public visitVariableRef(arg0: com.sun.org.apache.xpath.internal.ExpressionOwner, arg1: com.sun.org.apache.xpath.internal.operations.Variable | com.sun.org.apache.xpath.internal.operations.Variable$$Lambda): boolean
                            public visitFunction(arg0: com.sun.org.apache.xpath.internal.ExpressionOwner, arg1: com.sun.org.apache.xpath.internal.functions.Function): boolean
                            public visitMatchPattern(arg0: com.sun.org.apache.xpath.internal.ExpressionOwner, arg1: com.sun.org.apache.xpath.internal.patterns.StepPattern): boolean
                            public visitUnionPattern(arg0: com.sun.org.apache.xpath.internal.ExpressionOwner, arg1: com.sun.org.apache.xpath.internal.patterns.UnionPattern): boolean
                            public visitStringLiteral(arg0: com.sun.org.apache.xpath.internal.ExpressionOwner, arg1: com.sun.org.apache.xpath.internal.objects.XString): boolean
                            public visitNumberLiteral(arg0: com.sun.org.apache.xpath.internal.ExpressionOwner, arg1: com.sun.org.apache.xpath.internal.objects.XNumber): boolean
                            public static class: java.lang.Class<any>
                        }
                    }
                }
            }
        }
        namespace xml {
            namespace internal {
                namespace stream {
                    namespace dtd {
                        namespace nonvalidating {
                            class DTDGrammar {
                                public static TOP_LEVEL_SCOPE: int
                                protected fDTDSource: com.sun.org.apache.xerces.internal.xni.parser.XMLDTDSource
                                protected fDTDContentModelSource: com.sun.org.apache.xerces.internal.xni.parser.XMLDTDContentModelSource
                                protected fCurrentElementIndex: int
                                protected fCurrentAttributeIndex: int
                                protected fReadingExternalDTD: boolean
                                protected fAttributeDecl: com.sun.xml.internal.stream.dtd.nonvalidating.XMLAttributeDecl
                                public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable)
                                public getAttributeDeclIndex(arg0: int, arg1: java.lang.String | string): int
                                public startDTD(arg0: com.sun.org.apache.xerces.internal.xni.XMLLocator, arg1: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public elementDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public attributeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String[], arg4: java.lang.String | string, arg5: com.sun.org.apache.xerces.internal.xni.XMLString, arg6: com.sun.org.apache.xerces.internal.xni.XMLString, arg7: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public getSymbolTable(): com.sun.org.apache.xerces.internal.util.SymbolTable
                                public getFirstElementDeclIndex(): int
                                public getNextElementDeclIndex(arg0: int): int
                                public getElementDeclIndex(arg0: java.lang.String | string): int
                                public getElementDeclIndex(arg0: com.sun.org.apache.xerces.internal.xni.QName): int
                                public getContentSpecType(arg0: int): short
                                public getElementDecl(arg0: int, arg1: com.sun.xml.internal.stream.dtd.nonvalidating.XMLElementDecl): boolean
                                public getFirstAttributeDeclIndex(arg0: int): int
                                public getNextAttributeDeclIndex(arg0: int): int
                                public getAttributeDecl(arg0: int, arg1: com.sun.xml.internal.stream.dtd.nonvalidating.XMLAttributeDecl): boolean
                                public isCDATAAttribute(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.QName): boolean
                                public printElements(): void
                                public printAttributes(arg0: int): void
                                protected createElementDecl(): int
                                protected setElementDecl(arg0: int, arg1: com.sun.xml.internal.stream.dtd.nonvalidating.XMLElementDecl): void
                                protected setFirstAttributeDeclIndex(arg0: int, arg1: int): void
                                protected createAttributeDecl(): int
                                protected setAttributeDecl(arg0: int, arg1: int, arg2: com.sun.xml.internal.stream.dtd.nonvalidating.XMLAttributeDecl): void
                                public notationDecl(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, arg2: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public getNotationDecls(): java.util.List
                                public endDTD(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                                public static class: java.lang.Class<any>
                            }
                            class XMLAttributeDecl {
                                public name: com.sun.org.apache.xerces.internal.xni.QName
                                public simpleType: com.sun.xml.internal.stream.dtd.nonvalidating.XMLSimpleType
                                public optional: boolean
                                public constructor()
                                public setValues(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.xml.internal.stream.dtd.nonvalidating.XMLSimpleType, arg2: boolean): void
                                public clear(): void
                                public static class: java.lang.Class<any>
                            }
                            class XMLElementDecl {
                                public static TYPE_ANY: short
                                public static TYPE_EMPTY: short
                                public static TYPE_MIXED: short
                                public static TYPE_CHILDREN: short
                                public static TYPE_SIMPLE: short
                                public name: com.sun.org.apache.xerces.internal.xni.QName
                                public scope: int
                                public type: short
                                public simpleType: com.sun.xml.internal.stream.dtd.nonvalidating.XMLSimpleType
                                public constructor()
                                public setValues(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: int, arg2: short, arg3: com.sun.xml.internal.stream.dtd.nonvalidating.XMLSimpleType): void
                                public clear(): void
                                public static class: java.lang.Class<any>
                            }
                            class XMLNotationDecl {
                                public name: string
                                public publicId: string
                                public systemId: string
                                public baseSystemId: string
                                public constructor()
                                public setValues(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string): void
                                public clear(): void
                                public static class: java.lang.Class<any>
                            }
                            class XMLSimpleType {
                                public static TYPE_CDATA: short
                                public static TYPE_ENTITY: short
                                public static TYPE_ENUMERATION: short
                                public static TYPE_ID: short
                                public static TYPE_IDREF: short
                                public static TYPE_NMTOKEN: short
                                public static TYPE_NOTATION: short
                                public static TYPE_NAMED: short
                                public static DEFAULT_TYPE_DEFAULT: short
                                public static DEFAULT_TYPE_FIXED: short
                                public static DEFAULT_TYPE_IMPLIED: short
                                public static DEFAULT_TYPE_REQUIRED: short
                                public type: short
                                public name: string
                                public enumeration: java.lang.String[]
                                public list: boolean
                                public defaultType: short
                                public defaultValue: string
                                public nonNormalizedDefaultValue: string
                                public constructor()
                                public setValues(arg0: short, arg1: java.lang.String | string, arg2: java.lang.String[], arg3: boolean, arg4: short, arg5: java.lang.String | string, arg6: java.lang.String | string): void
                                public setValues(arg0: com.sun.xml.internal.stream.dtd.nonvalidating.XMLSimpleType): void
                                public clear(): void
                                public static class: java.lang.Class<any>
                            }
                        }
                        class DTDGrammarUtil {
                            protected static SYMBOL_TABLE: string
                            protected static NAMESPACES: string
                            protected fDTDGrammar: com.sun.xml.internal.stream.dtd.nonvalidating.DTDGrammar
                            protected fNamespaces: boolean
                            protected fSymbolTable: com.sun.org.apache.xerces.internal.util.SymbolTable
                            public constructor(arg0: com.sun.org.apache.xerces.internal.util.SymbolTable)
                            public constructor(arg0: com.sun.xml.internal.stream.dtd.nonvalidating.DTDGrammar, arg1: com.sun.org.apache.xerces.internal.util.SymbolTable)
                            public constructor(arg0: com.sun.xml.internal.stream.dtd.nonvalidating.DTDGrammar, arg1: com.sun.org.apache.xerces.internal.util.SymbolTable, arg2: com.sun.org.apache.xerces.internal.xni.NamespaceContext)
                            public reset(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager): void
                            public startElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes): void
                            public endElement(arg0: com.sun.org.apache.xerces.internal.xni.QName): void
                            public startCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                            public endCDATA(arg0: com.sun.org.apache.xerces.internal.xni.Augmentations): void
                            public addDTDDefaultAttrs(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes): void
                            protected handleStartElement(arg0: com.sun.org.apache.xerces.internal.xni.QName, arg1: com.sun.org.apache.xerces.internal.xni.XMLAttributes): void
                            protected handleEndElement(arg0: com.sun.org.apache.xerces.internal.xni.QName): void
                            public isInElementContent(): boolean
                            public isIgnorableWhiteSpace(arg0: com.sun.org.apache.xerces.internal.xni.XMLString): boolean
                            public static class: java.lang.Class<any>
                        }
                    }
                    namespace events {
                        class AttributeImpl extends com.sun.xml.internal.stream.events.DummyEvent implements javax.xml.stream.events.Attribute {
                            public constructor()
                            public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string)
                            public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string)
                            public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string)
                            public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string, arg5: java.lang.String | string, arg6: boolean)
                            public constructor(arg0: javax.xml.namespace.QName, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: boolean)
                            public toString(): string
                            public setName(arg0: javax.xml.namespace.QName): void
                            public getName(): javax.xml.namespace.QName
                            public setValue(arg0: java.lang.String | string): void
                            public getValue(): string
                            public setNonNormalizedValue(arg0: java.lang.String | string): void
                            public getNonNormalizedValue(): string
                            public setAttributeType(arg0: java.lang.String | string): void
                            public getDTDType(): string
                            public setSpecified(arg0: boolean): void
                            public isSpecified(): boolean
                            protected writeAsEncodedUnicodeEx(arg0: java.io.Writer | java.io.Writer$$Lambda): void
                            protected init(): void
                            public static class: java.lang.Class<any>
                        }
                        class CharacterEvent extends com.sun.xml.internal.stream.events.DummyEvent implements javax.xml.stream.events.Characters {
                            public constructor()
                            public constructor(arg0: java.lang.String | string)
                            public constructor(arg0: java.lang.String | string, arg1: boolean)
                            public constructor(arg0: java.lang.String | string, arg1: boolean, arg2: boolean)
                            protected init(): void
                            public getData(): string
                            public setData(arg0: java.lang.String | string): void
                            public isCData(): boolean
                            public toString(): string
                            protected writeAsEncodedUnicodeEx(arg0: java.io.Writer | java.io.Writer$$Lambda): void
                            public isIgnorableWhiteSpace(): boolean
                            public isWhiteSpace(): boolean
                            public static class: java.lang.Class<any>
                        }
                        class CommentEvent extends com.sun.xml.internal.stream.events.DummyEvent implements javax.xml.stream.events.Comment {
                            public constructor()
                            public constructor(arg0: java.lang.String | string)
                            protected init(): void
                            public toString(): string
                            public getText(): string
                            protected writeAsEncodedUnicodeEx(arg0: java.io.Writer | java.io.Writer$$Lambda): void
                            public static class: java.lang.Class<any>
                        }
                        class DTDEvent extends com.sun.xml.internal.stream.events.DummyEvent implements javax.xml.stream.events.DTD {
                            public constructor()
                            public constructor(arg0: java.lang.String | string)
                            public setDocumentTypeDeclaration(arg0: java.lang.String | string): void
                            public getDocumentTypeDeclaration(): string
                            public setEntities(arg0: java.util.List): void
                            public getEntities(): java.util.List
                            public setNotations(arg0: java.util.List): void
                            public getNotations(): java.util.List
                            public getProcessedDTD(): java.lang.Object
                            protected init(): void
                            public toString(): string
                            protected writeAsEncodedUnicodeEx(arg0: java.io.Writer | java.io.Writer$$Lambda): void
                            public static class: java.lang.Class<any>
                        }
                        abstract class DummyEvent implements javax.xml.stream.events.XMLEvent {
                            protected fLocation: javax.xml.stream.Location
                            public constructor()
                            public constructor(arg0: int)
                            public getEventType(): int
                            protected setEventType(arg0: int): void
                            public isStartElement(): boolean
                            public isEndElement(): boolean
                            public isEntityReference(): boolean
                            public isProcessingInstruction(): boolean
                            public isCharacterData(): boolean
                            public isStartDocument(): boolean
                            public isEndDocument(): boolean
                            public getLocation(): javax.xml.stream.Location
                            public asCharacters(): javax.xml.stream.events.Characters
                            public asEndElement(): javax.xml.stream.events.EndElement
                            public asStartElement(): javax.xml.stream.events.StartElement
                            public getSchemaType(): javax.xml.namespace.QName
                            public isAttribute(): boolean
                            public isCharacters(): boolean
                            public isNamespace(): boolean
                            public writeAsEncodedUnicode(arg0: java.io.Writer | java.io.Writer$$Lambda): void
                            protected writeAsEncodedUnicodeEx(arg0: java.io.Writer | java.io.Writer$$Lambda): void
                            protected charEncode(arg0: java.io.Writer | java.io.Writer$$Lambda, arg1: java.lang.String | string): void
                            public static class: java.lang.Class<any>
                        }
                        class EndDocumentEvent extends com.sun.xml.internal.stream.events.DummyEvent implements javax.xml.stream.events.EndDocument {
                            public constructor()
                            protected init(): void
                            public toString(): string
                            protected writeAsEncodedUnicodeEx(arg0: java.io.Writer | java.io.Writer$$Lambda): void
                            public static class: java.lang.Class<any>
                        }
                        class EndElementEvent extends com.sun.xml.internal.stream.events.DummyEvent implements javax.xml.stream.events.EndElement {
                            public constructor()
                            protected init(): void
                            public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string)
                            public constructor(arg0: javax.xml.namespace.QName)
                            public getName(): javax.xml.namespace.QName
                            public setName(arg0: javax.xml.namespace.QName): void
                            protected writeAsEncodedUnicodeEx(arg0: java.io.Writer | java.io.Writer$$Lambda): void
                            public getNamespaces(): java.util.Iterator
                            public toString(): string
                            public nameAsString(): string
                            public static class: java.lang.Class<any>
                        }
                        class EntityDeclarationImpl extends com.sun.xml.internal.stream.events.DummyEvent implements javax.xml.stream.events.EntityDeclaration {
                            public constructor()
                            public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string)
                            public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier)
                            public setEntityName(arg0: java.lang.String | string): void
                            public getEntityName(): string
                            public setEntityReplacementText(arg0: java.lang.String | string): void
                            public setXMLResourceIdentifier(arg0: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier): void
                            public getXMLResourceIdentifier(): com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier
                            public getSystemId(): string
                            public getPublicId(): string
                            public getBaseURI(): string
                            public getName(): string
                            public getNotationName(): string
                            public setNotationName(arg0: java.lang.String | string): void
                            public getReplacementText(): string
                            protected init(): void
                            protected writeAsEncodedUnicodeEx(arg0: java.io.Writer | java.io.Writer$$Lambda): void
                            public static class: java.lang.Class<any>
                        }
                        class EntityReferenceEvent extends com.sun.xml.internal.stream.events.DummyEvent implements javax.xml.stream.events.EntityReference {
                            public constructor()
                            public constructor(arg0: java.lang.String | string, arg1: javax.xml.stream.events.EntityDeclaration)
                            public getName(): string
                            public toString(): string
                            protected writeAsEncodedUnicodeEx(arg0: java.io.Writer | java.io.Writer$$Lambda): void
                            public getDeclaration(): javax.xml.stream.events.EntityDeclaration
                            protected init(): void
                            public static class: java.lang.Class<any>
                        }
                        class LocationImpl implements javax.xml.stream.Location {
                            public getCharacterOffset(): int
                            public getColumnNumber(): int
                            public getLineNumber(): int
                            public getPublicId(): string
                            public getSystemId(): string
                            public toString(): string
                            public static class: java.lang.Class<any>
                        }
                        class NamedEvent extends com.sun.xml.internal.stream.events.DummyEvent {
                            public constructor()
                            public constructor(arg0: javax.xml.namespace.QName)
                            public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string)
                            public getPrefix(): string
                            public getName(): javax.xml.namespace.QName
                            public setName(arg0: javax.xml.namespace.QName): void
                            public nameAsString(): string
                            public getNamespace(): string
                            protected writeAsEncodedUnicodeEx(arg0: java.io.Writer | java.io.Writer$$Lambda): void
                            public static class: java.lang.Class<any>
                        }
                        class NamespaceImpl extends com.sun.xml.internal.stream.events.AttributeImpl implements javax.xml.stream.events.Namespace {
                            public constructor()
                            public constructor(arg0: java.lang.String | string)
                            public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string)
                            public isDefaultNamespaceDeclaration(): boolean
                            public getPrefix(): string
                            public getNamespaceURI(): string
                            protected init(): void
                            public getEventType(): int
                            public isNamespace(): boolean
                            public static class: java.lang.Class<any>
                        }
                        class NotationDeclarationImpl extends com.sun.xml.internal.stream.events.DummyEvent implements javax.xml.stream.events.NotationDeclaration {
                            public constructor()
                            public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string)
                            public constructor(arg0: com.sun.xml.internal.stream.dtd.nonvalidating.XMLNotationDecl)
                            public getName(): string
                            public getPublicId(): string
                            public getSystemId(): string
                            protected writeAsEncodedUnicodeEx(arg0: java.io.Writer | java.io.Writer$$Lambda): void
                            public static class: java.lang.Class<any>
                        }
                        class ProcessingInstructionEvent extends com.sun.xml.internal.stream.events.DummyEvent implements javax.xml.stream.events.ProcessingInstruction {
                            public constructor()
                            public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string)
                            public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: javax.xml.stream.Location)
                            protected init(): void
                            public getTarget(): string
                            public setTarget(arg0: java.lang.String | string): void
                            public setData(arg0: java.lang.String | string): void
                            public getData(): string
                            public toString(): string
                            protected writeAsEncodedUnicodeEx(arg0: java.io.Writer | java.io.Writer$$Lambda): void
                            public static class: java.lang.Class<any>
                        }
                        class StartDocumentEvent extends com.sun.xml.internal.stream.events.DummyEvent implements javax.xml.stream.events.StartDocument {
                            protected fSystemId: string
                            protected fEncodingScheam: string
                            protected fStandalone: boolean
                            protected fVersion: string
                            public constructor()
                            public constructor(arg0: java.lang.String | string)
                            public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string)
                            public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: boolean)
                            public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: boolean, arg3: javax.xml.stream.Location)
                            protected init(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: boolean, arg3: javax.xml.stream.Location): void
                            public getSystemId(): string
                            public getCharacterEncodingScheme(): string
                            public isStandalone(): boolean
                            public getVersion(): string
                            public setStandalone(arg0: boolean): void
                            public setStandalone(arg0: java.lang.String | string): void
                            public encodingSet(): boolean
                            public standaloneSet(): boolean
                            public setEncoding(arg0: java.lang.String | string): void
                            public setVersion(arg0: java.lang.String | string): void
                            public toString(): string
                            public isStartDocument(): boolean
                            protected writeAsEncodedUnicodeEx(arg0: java.io.Writer | java.io.Writer$$Lambda): void
                            public static class: java.lang.Class<any>
                        }
                        class StartElementEvent extends com.sun.xml.internal.stream.events.DummyEvent implements javax.xml.stream.events.StartElement {
                            public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string)
                            public constructor(arg0: javax.xml.namespace.QName)
                            public constructor(arg0: javax.xml.stream.events.StartElement)
                            protected init(): void
                            public getName(): javax.xml.namespace.QName
                            public setName(arg0: javax.xml.namespace.QName): void
                            public getAttributes(): java.util.Iterator
                            public getNamespaces(): java.util.Iterator
                            public getAttributeByName(arg0: javax.xml.namespace.QName): javax.xml.stream.events.Attribute
                            public getNamespace(): string
                            public getNamespaceURI(arg0: java.lang.String | string): string
                            public toString(): string
                            public nameAsString(): string
                            public getNamespaceContext(): javax.xml.namespace.NamespaceContext
                            public setNamespaceContext(arg0: javax.xml.namespace.NamespaceContext): void
                            protected writeAsEncodedUnicodeEx(arg0: java.io.Writer | java.io.Writer$$Lambda): void
                            public static class: java.lang.Class<any>
                        }
                        class XMLEventAllocatorImpl implements javax.xml.stream.util.XMLEventAllocator {
                            public constructor()
                            public allocate(arg0: javax.xml.stream.XMLStreamReader): javax.xml.stream.events.XMLEvent
                            public allocate(arg0: javax.xml.stream.XMLStreamReader, arg1: javax.xml.stream.util.XMLEventConsumer | javax.xml.stream.util.XMLEventConsumer$$Lambda): void
                            public newInstance(): javax.xml.stream.util.XMLEventAllocator
                            protected getNextEvent(arg0: javax.xml.stream.XMLStreamReader): javax.xml.stream.events.XMLEvent
                            protected fillAttributes(arg0: com.sun.xml.internal.stream.events.StartElementEvent, arg1: javax.xml.stream.XMLStreamReader): void
                            protected fillNamespaceAttributes(arg0: com.sun.xml.internal.stream.events.StartElementEvent, arg1: javax.xml.stream.XMLStreamReader): void
                            protected fillNamespaceAttributes(arg0: com.sun.xml.internal.stream.events.EndElementEvent, arg1: javax.xml.stream.XMLStreamReader): void
                            public static class: java.lang.Class<any>
                        }
                        class XMLEventFactoryImpl extends javax.xml.stream.XMLEventFactory {
                            public constructor()
                            public createAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string): javax.xml.stream.events.Attribute
                            public createAttribute(arg0: javax.xml.namespace.QName, arg1: java.lang.String | string): javax.xml.stream.events.Attribute
                            public createAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string): javax.xml.stream.events.Attribute
                            public createCData(arg0: java.lang.String | string): javax.xml.stream.events.Characters
                            public createCharacters(arg0: java.lang.String | string): javax.xml.stream.events.Characters
                            public createComment(arg0: java.lang.String | string): javax.xml.stream.events.Comment
                            public createDTD(arg0: java.lang.String | string): javax.xml.stream.events.DTD
                            public createEndDocument(): javax.xml.stream.events.EndDocument
                            public createEndElement(arg0: javax.xml.namespace.QName, arg1: java.util.Iterator): javax.xml.stream.events.EndElement
                            public createEndElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): javax.xml.stream.events.EndElement
                            public createEndElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.util.Iterator): javax.xml.stream.events.EndElement
                            public createEntityReference(arg0: java.lang.String | string, arg1: javax.xml.stream.events.EntityDeclaration): javax.xml.stream.events.EntityReference
                            public createIgnorableSpace(arg0: java.lang.String | string): javax.xml.stream.events.Characters
                            public createNamespace(arg0: java.lang.String | string): javax.xml.stream.events.Namespace
                            public createNamespace(arg0: java.lang.String | string, arg1: java.lang.String | string): javax.xml.stream.events.Namespace
                            public createProcessingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): javax.xml.stream.events.ProcessingInstruction
                            public createSpace(arg0: java.lang.String | string): javax.xml.stream.events.Characters
                            public createStartDocument(): javax.xml.stream.events.StartDocument
                            public createStartDocument(arg0: java.lang.String | string): javax.xml.stream.events.StartDocument
                            public createStartDocument(arg0: java.lang.String | string, arg1: java.lang.String | string): javax.xml.stream.events.StartDocument
                            public createStartDocument(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: boolean): javax.xml.stream.events.StartDocument
                            public createStartElement(arg0: javax.xml.namespace.QName, arg1: java.util.Iterator, arg2: java.util.Iterator): javax.xml.stream.events.StartElement
                            public createStartElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): javax.xml.stream.events.StartElement
                            public createStartElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.util.Iterator, arg4: java.util.Iterator): javax.xml.stream.events.StartElement
                            public createStartElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.util.Iterator, arg4: java.util.Iterator, arg5: javax.xml.namespace.NamespaceContext): javax.xml.stream.events.StartElement
                            public setLocation(arg0: javax.xml.stream.Location): void
                            public static class: java.lang.Class<any>
                        }
                    }
                    namespace util {
                        class BufferAllocator {
                            public static SMALL_SIZE_LIMIT: int
                            public static MEDIUM_SIZE_LIMIT: int
                            public static LARGE_SIZE_LIMIT: int
                            public constructor()
                            public getCharBuffer(arg0: int): char[]
                            public returnCharBuffer(arg0: char[]): void
                            public getByteBuffer(arg0: int): byte[]
                            public returnByteBuffer(arg0: byte[]): void
                            public static class: java.lang.Class<any>
                        }
                        class ReadOnlyIterator implements java.util.Iterator {
                            public constructor()
                            public constructor(arg0: java.util.Iterator)
                            public hasNext(): boolean
                            public next(): java.lang.Object
                            public remove(): void
                            public static class: java.lang.Class<any>
                        }
                        class ThreadLocalBufferAllocator {
                            public constructor()
                            public static getBufferAllocator(): com.sun.xml.internal.stream.util.BufferAllocator
                            public static class: java.lang.Class<any>
                        }
                    }
                    namespace writers {
                        class UTF8OutputStreamWriter extends java.io.Writer {
                            public constructor(arg0: java.io.OutputStream | java.io.OutputStream$$Lambda)
                            public getEncoding(): string
                            public write(arg0: int): void
                            public write(arg0: char[]): void
                            public write(arg0: char[], arg1: int, arg2: int): void
                            public write(arg0: java.lang.String | string): void
                            public write(arg0: java.lang.String | string, arg1: int, arg2: int): void
                            public flush(): void
                            public close(): void
                            public static class: java.lang.Class<any>
                        }
                        class WriterUtility {
                            public static START_COMMENT: string
                            public static END_COMMENT: string
                            public static DEFAULT_ENCODING: string
                            public static DEFAULT_XMLDECL: string
                            public static DEFAULT_XML_VERSION: string
                            public static CLOSE_START_TAG: char
                            public static OPEN_START_TAG: char
                            public static OPEN_END_TAG: string
                            public static CLOSE_END_TAG: char
                            public static START_CDATA: string
                            public static END_CDATA: string
                            public static CLOSE_EMPTY_ELEMENT: string
                            public static SPACE: string
                            public static UTF_8: string
                            public constructor()
                            public constructor(arg0: java.io.Writer | java.io.Writer$$Lambda)
                            public setWriter(arg0: java.io.Writer | java.io.Writer$$Lambda): void
                            public setEscapeCharacters(arg0: boolean): void
                            public getEscapeCharacters(): boolean
                            public writeXMLContent(arg0: char[], arg1: int, arg2: int): void
                            public writeXMLContent(arg0: java.lang.String | string): void
                            public writeXMLAttributeValue(arg0: java.lang.String | string): void
                            public static class: java.lang.Class<any>
                        }
                        class XMLDOMWriterImpl implements javax.xml.stream.XMLStreamWriter {
                            public constructor(arg0: javax.xml.transform.dom.DOMResult)
                            public close(): void
                            public flush(): void
                            public getNamespaceContext(): javax.xml.namespace.NamespaceContext
                            public getPrefix(arg0: java.lang.String | string): string
                            public getProperty(arg0: java.lang.String | string): java.lang.Object
                            public setDefaultNamespace(arg0: java.lang.String | string): void
                            public setNamespaceContext(arg0: javax.xml.namespace.NamespaceContext): void
                            public setPrefix(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                            public writeAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                            public writeAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                            public writeAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string): void
                            public writeCData(arg0: java.lang.String | string): void
                            public writeCharacters(arg0: java.lang.String | string): void
                            public writeCharacters(arg0: char[], arg1: int, arg2: int): void
                            public writeComment(arg0: java.lang.String | string): void
                            public writeDTD(arg0: java.lang.String | string): void
                            public writeDefaultNamespace(arg0: java.lang.String | string): void
                            public writeEmptyElement(arg0: java.lang.String | string): void
                            public writeEmptyElement(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                            public writeEmptyElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                            public writeEndDocument(): void
                            public writeEndElement(): void
                            public writeEntityRef(arg0: java.lang.String | string): void
                            public writeNamespace(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                            public writeProcessingInstruction(arg0: java.lang.String | string): void
                            public writeProcessingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                            public writeStartDocument(): void
                            public writeStartDocument(arg0: java.lang.String | string): void
                            public writeStartDocument(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                            public writeStartElement(arg0: java.lang.String | string): void
                            public writeStartElement(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                            public writeStartElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                            public static class: java.lang.Class<any>
                        }
                        class XMLEventWriterImpl implements javax.xml.stream.XMLEventWriter {
                            public constructor(arg0: javax.xml.stream.XMLStreamWriter)
                            public add(arg0: javax.xml.stream.XMLEventReader): void
                            public add(arg0: javax.xml.stream.events.XMLEvent): void
                            public close(): void
                            public flush(): void
                            public getNamespaceContext(): javax.xml.namespace.NamespaceContext
                            public getPrefix(arg0: java.lang.String | string): string
                            public setDefaultNamespace(arg0: java.lang.String | string): void
                            public setNamespaceContext(arg0: javax.xml.namespace.NamespaceContext): void
                            public setPrefix(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                            public static class: java.lang.Class<any>
                        }
                        class XMLOutputSource {
                            public constructor()
                            public static class: java.lang.Class<any>
                        }
                        class XMLStreamWriterImpl extends java.util.AbstractMap implements javax.xml.stream.XMLStreamWriter {
                            public static START_COMMENT: string
                            public static END_COMMENT: string
                            public static DEFAULT_ENCODING: string
                            public static DEFAULT_XMLDECL: string
                            public static DEFAULT_XML_VERSION: string
                            public static CLOSE_START_TAG: char
                            public static OPEN_START_TAG: char
                            public static OPEN_END_TAG: string
                            public static CLOSE_END_TAG: char
                            public static START_CDATA: string
                            public static END_CDATA: string
                            public static CLOSE_EMPTY_ELEMENT: string
                            public static SPACE: string
                            public static UTF_8: string
                            public static OUTPUTSTREAM_PROPERTY: string
                            public constructor(arg0: java.io.OutputStream | java.io.OutputStream$$Lambda, arg1: com.sun.org.apache.xerces.internal.impl.PropertyManager)
                            public constructor(arg0: java.io.OutputStream | java.io.OutputStream$$Lambda, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.impl.PropertyManager)
                            public constructor(arg0: java.io.Writer | java.io.Writer$$Lambda, arg1: com.sun.org.apache.xerces.internal.impl.PropertyManager)
                            public constructor(arg0: javax.xml.transform.stream.StreamResult, arg1: java.lang.String | string, arg2: com.sun.org.apache.xerces.internal.impl.PropertyManager)
                            public reset(): void
                            public setOutput(arg0: javax.xml.transform.stream.StreamResult, arg1: java.lang.String | string): void
                            public canReuse(): boolean
                            public setEscapeCharacters(arg0: boolean): void
                            public getEscapeCharacters(): boolean
                            public close(): void
                            public flush(): void
                            public getNamespaceContext(): javax.xml.namespace.NamespaceContext
                            public getPrefix(arg0: java.lang.String | string): string
                            public getProperty(arg0: java.lang.String | string): java.lang.Object
                            public setDefaultNamespace(arg0: java.lang.String | string): void
                            public setNamespaceContext(arg0: javax.xml.namespace.NamespaceContext): void
                            public setPrefix(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                            public writeAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                            public writeAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                            public writeAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string): void
                            public writeCData(arg0: java.lang.String | string): void
                            public writeCharacters(arg0: java.lang.String | string): void
                            public writeCharacters(arg0: char[], arg1: int, arg2: int): void
                            public writeComment(arg0: java.lang.String | string): void
                            public writeDTD(arg0: java.lang.String | string): void
                            public writeDefaultNamespace(arg0: java.lang.String | string): void
                            public writeEmptyElement(arg0: java.lang.String | string): void
                            public writeEmptyElement(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                            public writeEmptyElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                            public writeEndDocument(): void
                            public writeEndElement(): void
                            public writeEntityRef(arg0: java.lang.String | string): void
                            public writeNamespace(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                            public writeProcessingInstruction(arg0: java.lang.String | string): void
                            public writeProcessingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                            public writeStartDocument(): void
                            public writeStartDocument(arg0: java.lang.String | string): void
                            public writeStartDocument(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                            public writeStartElement(arg0: java.lang.String | string): void
                            public writeStartElement(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                            public writeStartElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                            protected repair(): void
                            public size(): int
                            public isEmpty(): boolean
                            public containsKey(arg0: java.lang.Object): boolean
                            public get(arg0: java.lang.Object): java.lang.Object
                            public entrySet(): java.util.Set
                            public toString(): string
                            public hashCode(): int
                            public equals(arg0: java.lang.Object): boolean
                            public static class: java.lang.Class<any>
                        }
                        class XMLWriter extends java.io.Writer {
                            public constructor(arg0: java.io.Writer | java.io.Writer$$Lambda)
                            public constructor(arg0: java.io.Writer | java.io.Writer$$Lambda, arg1: int)
                            public write(arg0: int): void
                            public write(arg0: char[]): void
                            public write(arg0: char[], arg1: int, arg2: int): void
                            public write(arg0: java.lang.String | string, arg1: int, arg2: int): void
                            public write(arg0: java.lang.String | string): void
                            public close(): void
                            public flush(): void
                            public reset(): void
                            public setWriter(arg0: java.io.Writer | java.io.Writer$$Lambda): void
                            public setWriter(arg0: java.io.Writer | java.io.Writer$$Lambda, arg1: int): void
                            protected getWriter(): java.io.Writer
                            public static class: java.lang.Class<any>
                        }
                    }
                    abstract class Entity {
                        public name: string
                        public inExternalSubset: boolean
                        public constructor()
                        public constructor(arg0: java.lang.String | string, arg1: boolean)
                        public isEntityDeclInExternalSubset(): boolean
                        public isExternal(): boolean
                        public isUnparsed(): boolean
                        public clear(): void
                        public setValues(arg0: com.sun.xml.internal.stream.Entity): void
                        public static class: java.lang.Class<any>
                    }
                    class EventFilterSupport extends javax.xml.stream.util.EventReaderDelegate {
                        public constructor(arg0: javax.xml.stream.XMLEventReader, arg1: javax.xml.stream.EventFilter | javax.xml.stream.EventFilter$$Lambda)
                        public next(): java.lang.Object
                        public hasNext(): boolean
                        public nextEvent(): javax.xml.stream.events.XMLEvent
                        public nextTag(): javax.xml.stream.events.XMLEvent
                        public peek(): javax.xml.stream.events.XMLEvent
                        public static class: java.lang.Class<any>
                    }
                    class StaxEntityResolverWrapper {
                        public constructor(arg0: javax.xml.stream.XMLResolver | javax.xml.stream.XMLResolver$$Lambda)
                        public setStaxEntityResolver(arg0: javax.xml.stream.XMLResolver | javax.xml.stream.XMLResolver$$Lambda): void
                        public getStaxEntityResolver(): javax.xml.stream.XMLResolver
                        public resolveEntity(arg0: com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier): com.sun.xml.internal.stream.StaxXMLInputSource
                        public static class: java.lang.Class<any>
                    }
                    class StaxErrorReporter extends com.sun.org.apache.xerces.internal.impl.XMLErrorReporter {
                        protected fXMLReporter: javax.xml.stream.XMLReporter
                        public constructor(arg0: com.sun.org.apache.xerces.internal.impl.PropertyManager)
                        public constructor()
                        public reset(arg0: com.sun.org.apache.xerces.internal.impl.PropertyManager): void
                        public reportError(arg0: com.sun.org.apache.xerces.internal.xni.XMLLocator, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.Object[], arg4: short): string
                        public static class: java.lang.Class<any>
                    }
                    class StaxXMLInputSource {
                        public constructor(arg0: javax.xml.stream.XMLStreamReader)
                        public constructor(arg0: javax.xml.stream.XMLEventReader)
                        public constructor(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource)
                        public constructor(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource, arg1: boolean)
                        public getXMLStreamReader(): javax.xml.stream.XMLStreamReader
                        public getXMLEventReader(): javax.xml.stream.XMLEventReader
                        public getXMLInputSource(): com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource
                        public hasXMLStreamOrXMLEventReader(): boolean
                        public hasResolver(): boolean
                        public static class: java.lang.Class<any>
                    }
                    interface XMLBufferListener {
                        refresh(): void
                        refresh(arg0: int): void
                    }
                    abstract class XMLEntityReader implements com.sun.org.apache.xerces.internal.xni.XMLLocator {
                        public constructor()
                        public setEncoding(arg0: java.lang.String | string): void
                        public getEncoding(): string
                        public getCharacterOffset(): int
                        public setVersion(arg0: java.lang.String | string): void
                        public getVersion(): string
                        public isExternal(): boolean
                        public peekChar(): int
                        public scanChar(): int
                        public scanNmtoken(): string
                        public scanName(): string
                        public scanQName(arg0: com.sun.org.apache.xerces.internal.xni.QName): boolean
                        public scanContent(arg0: com.sun.org.apache.xerces.internal.xni.XMLString): int
                        public scanLiteral(arg0: int, arg1: com.sun.org.apache.xerces.internal.xni.XMLString): int
                        public scanData(arg0: java.lang.String | string, arg1: com.sun.org.apache.xerces.internal.util.XMLStringBuffer): boolean
                        public skipChar(arg0: int): boolean
                        public skipSpaces(): boolean
                        public skipString(arg0: java.lang.String | string): boolean
                        public registerListener(arg0: com.sun.xml.internal.stream.XMLBufferListener): void
                        public static class: java.lang.Class<any>
                    }
                    class XMLEntityStorage {
                        protected static ERROR_REPORTER: string
                        protected static WARN_ON_DUPLICATE_ENTITYDEF: string
                        protected fWarnDuplicateEntityDef: boolean
                        protected fEntities: java.util.Map<java.lang.String, com.sun.xml.internal.stream.Entity>
                        protected fCurrentEntity: com.sun.xml.internal.stream.Entity$ScannedEntity
                        protected fErrorReporter: com.sun.org.apache.xerces.internal.impl.XMLErrorReporter
                        protected fPropertyManager: com.sun.org.apache.xerces.internal.impl.PropertyManager
                        protected fInExternalSubset: boolean
                        public constructor(arg0: com.sun.org.apache.xerces.internal.impl.PropertyManager)
                        public constructor(arg0: com.sun.org.apache.xerces.internal.impl.XMLEntityManager | com.sun.org.apache.xerces.internal.impl.XMLEntityManager$$Lambda)
                        public reset(arg0: com.sun.org.apache.xerces.internal.impl.PropertyManager): void
                        public reset(): void
                        public reset(arg0: com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager): void
                        public getEntity(arg0: java.lang.String | string): com.sun.xml.internal.stream.Entity
                        public hasEntities(): boolean
                        public getEntitySize(): int
                        public getEntityKeys(): java.util.Enumeration
                        public addInternalEntity(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                        public addExternalEntity(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string): void
                        public isExternalEntity(arg0: java.lang.String | string): boolean
                        public isEntityDeclInExternalSubset(arg0: java.lang.String | string): boolean
                        public addUnparsedEntity(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string): void
                        public isUnparsedEntity(arg0: java.lang.String | string): boolean
                        public isDeclaredEntity(arg0: java.lang.String | string): boolean
                        public static expandSystemId(arg0: java.lang.String | string): string
                        public static expandSystemId(arg0: java.lang.String | string, arg1: java.lang.String | string): string
                        protected static fixURI(arg0: java.lang.String | string): string
                        public startExternalSubset(): void
                        public endExternalSubset(): void
                        public static class: java.lang.Class<any>
                    }
                    class XMLEventReaderImpl implements javax.xml.stream.XMLEventReader {
                        protected fXMLReader: javax.xml.stream.XMLStreamReader
                        protected fXMLEventAllocator: javax.xml.stream.util.XMLEventAllocator
                        public constructor(arg0: javax.xml.stream.XMLStreamReader)
                        public hasNext(): boolean
                        public nextEvent(): javax.xml.stream.events.XMLEvent
                        public remove(): void
                        public close(): void
                        public getElementText(): string
                        public getProperty(arg0: java.lang.String | string): java.lang.Object
                        public nextTag(): javax.xml.stream.events.XMLEvent
                        public next(): java.lang.Object
                        public peek(): javax.xml.stream.events.XMLEvent
                        public static class: java.lang.Class<any>
                    }
                    class XMLInputFactoryImpl extends javax.xml.stream.XMLInputFactory {
                        public constructor()
                        public createXMLEventReader(arg0: java.io.InputStream): javax.xml.stream.XMLEventReader
                        public createXMLEventReader(arg0: java.io.Reader): javax.xml.stream.XMLEventReader
                        public createXMLEventReader(arg0: javax.xml.transform.Source): javax.xml.stream.XMLEventReader
                        public createXMLEventReader(arg0: java.lang.String | string, arg1: java.io.InputStream): javax.xml.stream.XMLEventReader
                        public createXMLEventReader(arg0: java.io.InputStream, arg1: java.lang.String | string): javax.xml.stream.XMLEventReader
                        public createXMLEventReader(arg0: java.lang.String | string, arg1: java.io.Reader): javax.xml.stream.XMLEventReader
                        public createXMLEventReader(arg0: javax.xml.stream.XMLStreamReader): javax.xml.stream.XMLEventReader
                        public createXMLStreamReader(arg0: java.io.InputStream): javax.xml.stream.XMLStreamReader
                        public createXMLStreamReader(arg0: java.io.Reader): javax.xml.stream.XMLStreamReader
                        public createXMLStreamReader(arg0: java.lang.String | string, arg1: java.io.Reader): javax.xml.stream.XMLStreamReader
                        public createXMLStreamReader(arg0: javax.xml.transform.Source): javax.xml.stream.XMLStreamReader
                        public createXMLStreamReader(arg0: java.lang.String | string, arg1: java.io.InputStream): javax.xml.stream.XMLStreamReader
                        public createXMLStreamReader(arg0: java.io.InputStream, arg1: java.lang.String | string): javax.xml.stream.XMLStreamReader
                        public getEventAllocator(): javax.xml.stream.util.XMLEventAllocator
                        public getXMLReporter(): javax.xml.stream.XMLReporter
                        public getXMLResolver(): javax.xml.stream.XMLResolver
                        public setXMLReporter(arg0: javax.xml.stream.XMLReporter | javax.xml.stream.XMLReporter$$Lambda): void
                        public setXMLResolver(arg0: javax.xml.stream.XMLResolver | javax.xml.stream.XMLResolver$$Lambda): void
                        public createFilteredReader(arg0: javax.xml.stream.XMLEventReader, arg1: javax.xml.stream.EventFilter | javax.xml.stream.EventFilter$$Lambda): javax.xml.stream.XMLEventReader
                        public createFilteredReader(arg0: javax.xml.stream.XMLStreamReader, arg1: javax.xml.stream.StreamFilter | javax.xml.stream.StreamFilter$$Lambda): javax.xml.stream.XMLStreamReader
                        public getProperty(arg0: java.lang.String | string): java.lang.Object
                        public isPropertySupported(arg0: java.lang.String | string): boolean
                        public setEventAllocator(arg0: javax.xml.stream.util.XMLEventAllocator): void
                        public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                        public static class: java.lang.Class<any>
                    }
                    class XMLOutputFactoryImpl extends javax.xml.stream.XMLOutputFactory {
                        public constructor()
                        public createXMLEventWriter(arg0: java.io.OutputStream | java.io.OutputStream$$Lambda): javax.xml.stream.XMLEventWriter
                        public createXMLEventWriter(arg0: java.io.OutputStream | java.io.OutputStream$$Lambda, arg1: java.lang.String | string): javax.xml.stream.XMLEventWriter
                        public createXMLEventWriter(arg0: javax.xml.transform.Result): javax.xml.stream.XMLEventWriter
                        public createXMLEventWriter(arg0: java.io.Writer | java.io.Writer$$Lambda): javax.xml.stream.XMLEventWriter
                        public createXMLStreamWriter(arg0: javax.xml.transform.Result): javax.xml.stream.XMLStreamWriter
                        public createXMLStreamWriter(arg0: java.io.Writer | java.io.Writer$$Lambda): javax.xml.stream.XMLStreamWriter
                        public createXMLStreamWriter(arg0: java.io.OutputStream | java.io.OutputStream$$Lambda): javax.xml.stream.XMLStreamWriter
                        public createXMLStreamWriter(arg0: java.io.OutputStream | java.io.OutputStream$$Lambda, arg1: java.lang.String | string): javax.xml.stream.XMLStreamWriter
                        public getProperty(arg0: java.lang.String | string): java.lang.Object
                        public isPropertySupported(arg0: java.lang.String | string): boolean
                        public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                        public static class: java.lang.Class<any>
                    }
                }
            }
        }
    }
}
declare namespace javax {
    namespace xml {
        namespace datatype {
            class DatatypeConfigurationException extends java.lang.Exception {
                public constructor()
                public constructor(arg0: java.lang.String | string)
                public constructor(arg0: java.lang.String | string, arg1: java.lang.Throwable)
                public constructor(arg0: java.lang.Throwable)
                public static class: java.lang.Class<any>
            }
            class DatatypeConstants {
                public static JANUARY: int
                public static FEBRUARY: int
                public static MARCH: int
                public static APRIL: int
                public static MAY: int
                public static JUNE: int
                public static JULY: int
                public static AUGUST: int
                public static SEPTEMBER: int
                public static OCTOBER: int
                public static NOVEMBER: int
                public static DECEMBER: int
                public static LESSER: int
                public static EQUAL: int
                public static GREATER: int
                public static INDETERMINATE: int
                public static FIELD_UNDEFINED: int
                public static YEARS: javax.xml.datatype.DatatypeConstants$Field
                public static MONTHS: javax.xml.datatype.DatatypeConstants$Field
                public static DAYS: javax.xml.datatype.DatatypeConstants$Field
                public static HOURS: javax.xml.datatype.DatatypeConstants$Field
                public static MINUTES: javax.xml.datatype.DatatypeConstants$Field
                public static SECONDS: javax.xml.datatype.DatatypeConstants$Field
                public static DATETIME: javax.xml.namespace.QName
                public static TIME: javax.xml.namespace.QName
                public static DATE: javax.xml.namespace.QName
                public static GYEARMONTH: javax.xml.namespace.QName
                public static GMONTHDAY: javax.xml.namespace.QName
                public static GYEAR: javax.xml.namespace.QName
                public static GMONTH: javax.xml.namespace.QName
                public static GDAY: javax.xml.namespace.QName
                public static DURATION: javax.xml.namespace.QName
                public static DURATION_DAYTIME: javax.xml.namespace.QName
                public static DURATION_YEARMONTH: javax.xml.namespace.QName
                public static MAX_TIMEZONE_OFFSET: int
                public static MIN_TIMEZONE_OFFSET: int
                public static class: java.lang.Class<any>
            }
            abstract class DatatypeFactory {
                public static DATATYPEFACTORY_PROPERTY: string
                public static DATATYPEFACTORY_IMPLEMENTATION_CLASS: string
                protected constructor()
                public static newInstance(): javax.xml.datatype.DatatypeFactory
                public static newInstance(arg0: java.lang.String | string, arg1: java.lang.ClassLoader): javax.xml.datatype.DatatypeFactory
                public newDuration(arg0: java.lang.String | string): javax.xml.datatype.Duration
                public newDuration(arg0: long): javax.xml.datatype.Duration
                public newDuration(arg0: boolean, arg1: java.math.BigInteger, arg2: java.math.BigInteger, arg3: java.math.BigInteger, arg4: java.math.BigInteger, arg5: java.math.BigInteger, arg6: java.math.BigDecimal): javax.xml.datatype.Duration
                public newDuration(arg0: boolean, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int): javax.xml.datatype.Duration
                public newDurationDayTime(arg0: java.lang.String | string): javax.xml.datatype.Duration
                public newDurationDayTime(arg0: long): javax.xml.datatype.Duration
                public newDurationDayTime(arg0: boolean, arg1: java.math.BigInteger, arg2: java.math.BigInteger, arg3: java.math.BigInteger, arg4: java.math.BigInteger): javax.xml.datatype.Duration
                public newDurationDayTime(arg0: boolean, arg1: int, arg2: int, arg3: int, arg4: int): javax.xml.datatype.Duration
                public newDurationYearMonth(arg0: java.lang.String | string): javax.xml.datatype.Duration
                public newDurationYearMonth(arg0: long): javax.xml.datatype.Duration
                public newDurationYearMonth(arg0: boolean, arg1: java.math.BigInteger, arg2: java.math.BigInteger): javax.xml.datatype.Duration
                public newDurationYearMonth(arg0: boolean, arg1: int, arg2: int): javax.xml.datatype.Duration
                public newXMLGregorianCalendar(): javax.xml.datatype.XMLGregorianCalendar
                public newXMLGregorianCalendar(arg0: java.lang.String | string): javax.xml.datatype.XMLGregorianCalendar
                public newXMLGregorianCalendar(arg0: java.util.GregorianCalendar): javax.xml.datatype.XMLGregorianCalendar
                public newXMLGregorianCalendar(arg0: java.math.BigInteger, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: java.math.BigDecimal, arg7: int): javax.xml.datatype.XMLGregorianCalendar
                public newXMLGregorianCalendar(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int): javax.xml.datatype.XMLGregorianCalendar
                public newXMLGregorianCalendarDate(arg0: int, arg1: int, arg2: int, arg3: int): javax.xml.datatype.XMLGregorianCalendar
                public newXMLGregorianCalendarTime(arg0: int, arg1: int, arg2: int, arg3: int): javax.xml.datatype.XMLGregorianCalendar
                public newXMLGregorianCalendarTime(arg0: int, arg1: int, arg2: int, arg3: java.math.BigDecimal, arg4: int): javax.xml.datatype.XMLGregorianCalendar
                public newXMLGregorianCalendarTime(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int): javax.xml.datatype.XMLGregorianCalendar
                public static class: java.lang.Class<any>
            }
            abstract class Duration {
                public constructor()
                public getXMLSchemaType(): javax.xml.namespace.QName
                public getSign(): int
                public getYears(): int
                public getMonths(): int
                public getDays(): int
                public getHours(): int
                public getMinutes(): int
                public getSeconds(): int
                public getTimeInMillis(arg0: java.util.Calendar): long
                public getTimeInMillis(arg0: java.util.Date): long
                public getField(arg0: javax.xml.datatype.DatatypeConstants$Field): java.lang.Number
                public isSet(arg0: javax.xml.datatype.DatatypeConstants$Field): boolean
                public add(arg0: javax.xml.datatype.Duration): javax.xml.datatype.Duration
                public addTo(arg0: java.util.Calendar): void
                public addTo(arg0: java.util.Date): void
                public subtract(arg0: javax.xml.datatype.Duration): javax.xml.datatype.Duration
                public multiply(arg0: int): javax.xml.datatype.Duration
                public multiply(arg0: java.math.BigDecimal): javax.xml.datatype.Duration
                public negate(): javax.xml.datatype.Duration
                public normalizeWith(arg0: java.util.Calendar): javax.xml.datatype.Duration
                public compare(arg0: javax.xml.datatype.Duration): int
                public isLongerThan(arg0: javax.xml.datatype.Duration): boolean
                public isShorterThan(arg0: javax.xml.datatype.Duration): boolean
                public equals(arg0: java.lang.Object): boolean
                public hashCode(): int
                public toString(): string
                public static class: java.lang.Class<any>
            }
            class FactoryFinder {
                public static class: java.lang.Class<any>
            }
            abstract class XMLGregorianCalendar implements java.lang.Cloneable {
                public constructor()
                public clear(): void
                public reset(): void
                public setYear(arg0: java.math.BigInteger): void
                public setYear(arg0: int): void
                public setMonth(arg0: int): void
                public setDay(arg0: int): void
                public setTimezone(arg0: int): void
                public setTime(arg0: int, arg1: int, arg2: int): void
                public setHour(arg0: int): void
                public setMinute(arg0: int): void
                public setSecond(arg0: int): void
                public setMillisecond(arg0: int): void
                public setFractionalSecond(arg0: java.math.BigDecimal): void
                public setTime(arg0: int, arg1: int, arg2: int, arg3: java.math.BigDecimal): void
                public setTime(arg0: int, arg1: int, arg2: int, arg3: int): void
                public getEon(): java.math.BigInteger
                public getYear(): int
                public getEonAndYear(): java.math.BigInteger
                public getMonth(): int
                public getDay(): int
                public getTimezone(): int
                public getHour(): int
                public getMinute(): int
                public getSecond(): int
                public getMillisecond(): int
                public getFractionalSecond(): java.math.BigDecimal
                public compare(arg0: javax.xml.datatype.XMLGregorianCalendar): int
                public normalize(): javax.xml.datatype.XMLGregorianCalendar
                public equals(arg0: java.lang.Object): boolean
                public hashCode(): int
                public toXMLFormat(): string
                public getXMLSchemaType(): javax.xml.namespace.QName
                public toString(): string
                public isValid(): boolean
                public add(arg0: javax.xml.datatype.Duration): void
                public toGregorianCalendar(): java.util.GregorianCalendar
                public toGregorianCalendar(arg0: java.util.TimeZone, arg1: java.util.Locale, arg2: javax.xml.datatype.XMLGregorianCalendar): java.util.GregorianCalendar
                public getTimeZone(arg0: int): java.util.TimeZone
                public clone(): java.lang.Object
                public static class: java.lang.Class<any>
            }
        }
        namespace namespace {
            interface NamespaceContext {
                getNamespaceURI(arg0: java.lang.String | string): string
                getPrefix(arg0: java.lang.String | string): string
                getPrefixes(arg0: java.lang.String | string): java.util.Iterator
            }
            class QName implements java.io.Serializable {
                public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string)
                public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string)
                public constructor(arg0: java.lang.String | string)
                public getNamespaceURI(): string
                public getLocalPart(): string
                public getPrefix(): string
                public equals(arg0: java.lang.Object): boolean
                public hashCode(): int
                public toString(): string
                public static valueOf(arg0: java.lang.String | string): javax.xml.namespace.QName
                public static class: java.lang.Class<any>
            }
        }
        namespace parsers {
            abstract class DocumentBuilder {
                protected constructor()
                public reset(): void
                public parse(arg0: java.io.InputStream): org.w3c.dom.Document
                public parse(arg0: java.io.InputStream, arg1: java.lang.String | string): org.w3c.dom.Document
                public parse(arg0: java.lang.String | string): org.w3c.dom.Document
                public parse(arg0: java.io.File): org.w3c.dom.Document
                public parse(arg0: org.xml.sax.InputSource): org.w3c.dom.Document
                public isNamespaceAware(): boolean
                public isValidating(): boolean
                public setEntityResolver(arg0: org.xml.sax.EntityResolver | org.xml.sax.EntityResolver$$Lambda): void
                public setErrorHandler(arg0: org.xml.sax.ErrorHandler): void
                public newDocument(): org.w3c.dom.Document
                public getDOMImplementation(): org.w3c.dom.DOMImplementation
                public getSchema(): javax.xml.validation.Schema
                public isXIncludeAware(): boolean
                public static class: java.lang.Class<any>
            }
            abstract class DocumentBuilderFactory {
                protected constructor()
                public static newInstance(): javax.xml.parsers.DocumentBuilderFactory
                public static newInstance(arg0: java.lang.String | string, arg1: java.lang.ClassLoader): javax.xml.parsers.DocumentBuilderFactory
                public newDocumentBuilder(): javax.xml.parsers.DocumentBuilder
                public setNamespaceAware(arg0: boolean): void
                public setValidating(arg0: boolean): void
                public setIgnoringElementContentWhitespace(arg0: boolean): void
                public setExpandEntityReferences(arg0: boolean): void
                public setIgnoringComments(arg0: boolean): void
                public setCoalescing(arg0: boolean): void
                public isNamespaceAware(): boolean
                public isValidating(): boolean
                public isIgnoringElementContentWhitespace(): boolean
                public isExpandEntityReferences(): boolean
                public isIgnoringComments(): boolean
                public isCoalescing(): boolean
                public setAttribute(arg0: java.lang.String | string, arg1: java.lang.Object): void
                public getAttribute(arg0: java.lang.String | string): java.lang.Object
                public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                public getFeature(arg0: java.lang.String | string): boolean
                public getSchema(): javax.xml.validation.Schema
                public setSchema(arg0: javax.xml.validation.Schema): void
                public setXIncludeAware(arg0: boolean): void
                public isXIncludeAware(): boolean
                public static class: java.lang.Class<any>
            }
            class FactoryConfigurationError extends java.lang.Error {
                public constructor()
                public constructor(arg0: java.lang.String | string)
                public constructor(arg0: java.lang.Exception)
                public constructor(arg0: java.lang.Exception, arg1: java.lang.String | string)
                public getMessage(): string
                public getException(): java.lang.Exception
                public getCause(): java.lang.Throwable
                public static class: java.lang.Class<any>
            }
            class FactoryFinder {
                public static class: java.lang.Class<any>
            }
            class ParserConfigurationException extends java.lang.Exception {
                public constructor()
                public constructor(arg0: java.lang.String | string)
                public static class: java.lang.Class<any>
            }
            abstract class SAXParser {
                protected constructor()
                public reset(): void
                public parse(arg0: java.io.InputStream, arg1: org.xml.sax.HandlerBase): void
                public parse(arg0: java.io.InputStream, arg1: org.xml.sax.HandlerBase, arg2: java.lang.String | string): void
                public parse(arg0: java.io.InputStream, arg1: org.xml.sax.helpers.DefaultHandler): void
                public parse(arg0: java.io.InputStream, arg1: org.xml.sax.helpers.DefaultHandler, arg2: java.lang.String | string): void
                public parse(arg0: java.lang.String | string, arg1: org.xml.sax.HandlerBase): void
                public parse(arg0: java.lang.String | string, arg1: org.xml.sax.helpers.DefaultHandler): void
                public parse(arg0: java.io.File, arg1: org.xml.sax.HandlerBase): void
                public parse(arg0: java.io.File, arg1: org.xml.sax.helpers.DefaultHandler): void
                public parse(arg0: org.xml.sax.InputSource, arg1: org.xml.sax.HandlerBase): void
                public parse(arg0: org.xml.sax.InputSource, arg1: org.xml.sax.helpers.DefaultHandler): void
                public getParser(): org.xml.sax.Parser
                public getXMLReader(): org.xml.sax.XMLReader
                public isNamespaceAware(): boolean
                public isValidating(): boolean
                public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                public getProperty(arg0: java.lang.String | string): java.lang.Object
                public getSchema(): javax.xml.validation.Schema
                public isXIncludeAware(): boolean
                public static class: java.lang.Class<any>
            }
            abstract class SAXParserFactory {
                protected constructor()
                public static newInstance(): javax.xml.parsers.SAXParserFactory
                public static newInstance(arg0: java.lang.String | string, arg1: java.lang.ClassLoader): javax.xml.parsers.SAXParserFactory
                public newSAXParser(): javax.xml.parsers.SAXParser
                public setNamespaceAware(arg0: boolean): void
                public setValidating(arg0: boolean): void
                public isNamespaceAware(): boolean
                public isValidating(): boolean
                public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                public getFeature(arg0: java.lang.String | string): boolean
                public getSchema(): javax.xml.validation.Schema
                public setSchema(arg0: javax.xml.validation.Schema): void
                public setXIncludeAware(arg0: boolean): void
                public isXIncludeAware(): boolean
                public static class: java.lang.Class<any>
            }
        }
        namespace stream {
            namespace events {
                interface Attribute extends javax.xml.stream.events.XMLEvent {
                    getName(): javax.xml.namespace.QName
                    getValue(): string
                    getDTDType(): string
                    isSpecified(): boolean
                }
                interface Characters extends javax.xml.stream.events.XMLEvent {
                    getData(): string
                    isWhiteSpace(): boolean
                    isCData(): boolean
                    isIgnorableWhiteSpace(): boolean
                }
                interface Comment extends javax.xml.stream.events.XMLEvent {
                    getText(): string
                }
                interface DTD extends javax.xml.stream.events.XMLEvent {
                    getDocumentTypeDeclaration(): string
                    getProcessedDTD(): java.lang.Object
                    getNotations(): java.util.List
                    getEntities(): java.util.List
                }
                interface EndDocument extends javax.xml.stream.events.XMLEvent {
                }
                interface EndElement extends javax.xml.stream.events.XMLEvent {
                    getName(): javax.xml.namespace.QName
                    getNamespaces(): java.util.Iterator
                }
                interface EntityDeclaration extends javax.xml.stream.events.XMLEvent {
                    getPublicId(): string
                    getSystemId(): string
                    getName(): string
                    getNotationName(): string
                    getReplacementText(): string
                    getBaseURI(): string
                }
                interface EntityReference extends javax.xml.stream.events.XMLEvent {
                    getDeclaration(): javax.xml.stream.events.EntityDeclaration
                    getName(): string
                }
                interface Namespace extends javax.xml.stream.events.Attribute {
                    getPrefix(): string
                    getNamespaceURI(): string
                    isDefaultNamespaceDeclaration(): boolean
                }
                interface NotationDeclaration extends javax.xml.stream.events.XMLEvent {
                    getName(): string
                    getPublicId(): string
                    getSystemId(): string
                }
                interface ProcessingInstruction extends javax.xml.stream.events.XMLEvent {
                    getTarget(): string
                    getData(): string
                }
                interface StartDocument extends javax.xml.stream.events.XMLEvent {
                    getSystemId(): string
                    getCharacterEncodingScheme(): string
                    encodingSet(): boolean
                    isStandalone(): boolean
                    standaloneSet(): boolean
                    getVersion(): string
                }
                interface StartElement extends javax.xml.stream.events.XMLEvent {
                    getName(): javax.xml.namespace.QName
                    getAttributes(): java.util.Iterator
                    getNamespaces(): java.util.Iterator
                    getAttributeByName(arg0: javax.xml.namespace.QName): javax.xml.stream.events.Attribute
                    getNamespaceContext(): javax.xml.namespace.NamespaceContext
                    getNamespaceURI(arg0: java.lang.String | string): string
                }
                interface XMLEvent extends javax.xml.stream.XMLStreamConstants {
                    getEventType(): int
                    getLocation(): javax.xml.stream.Location
                    isStartElement(): boolean
                    isAttribute(): boolean
                    isNamespace(): boolean
                    isEndElement(): boolean
                    isEntityReference(): boolean
                    isProcessingInstruction(): boolean
                    isCharacters(): boolean
                    isStartDocument(): boolean
                    isEndDocument(): boolean
                    asStartElement(): javax.xml.stream.events.StartElement
                    asEndElement(): javax.xml.stream.events.EndElement
                    asCharacters(): javax.xml.stream.events.Characters
                    getSchemaType(): javax.xml.namespace.QName
                    writeAsEncodedUnicode(arg0: java.io.Writer | java.io.Writer$$Lambda): void
                }
            }
            namespace util {
                class EventReaderDelegate implements javax.xml.stream.XMLEventReader {
                    public constructor()
                    public constructor(arg0: javax.xml.stream.XMLEventReader)
                    public setParent(arg0: javax.xml.stream.XMLEventReader): void
                    public getParent(): javax.xml.stream.XMLEventReader
                    public nextEvent(): javax.xml.stream.events.XMLEvent
                    public next(): java.lang.Object
                    public hasNext(): boolean
                    public peek(): javax.xml.stream.events.XMLEvent
                    public close(): void
                    public getElementText(): string
                    public nextTag(): javax.xml.stream.events.XMLEvent
                    public getProperty(arg0: java.lang.String | string): java.lang.Object
                    public remove(): void
                    public static class: java.lang.Class<any>
                }
                class StreamReaderDelegate implements javax.xml.stream.XMLStreamReader {
                    public constructor()
                    public constructor(arg0: javax.xml.stream.XMLStreamReader)
                    public setParent(arg0: javax.xml.stream.XMLStreamReader): void
                    public getParent(): javax.xml.stream.XMLStreamReader
                    public next(): int
                    public nextTag(): int
                    public getElementText(): string
                    public require(arg0: int, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                    public hasNext(): boolean
                    public close(): void
                    public getNamespaceURI(arg0: java.lang.String | string): string
                    public getNamespaceContext(): javax.xml.namespace.NamespaceContext
                    public isStartElement(): boolean
                    public isEndElement(): boolean
                    public isCharacters(): boolean
                    public isWhiteSpace(): boolean
                    public getAttributeValue(arg0: java.lang.String | string, arg1: java.lang.String | string): string
                    public getAttributeCount(): int
                    public getAttributeName(arg0: int): javax.xml.namespace.QName
                    public getAttributePrefix(arg0: int): string
                    public getAttributeNamespace(arg0: int): string
                    public getAttributeLocalName(arg0: int): string
                    public getAttributeType(arg0: int): string
                    public getAttributeValue(arg0: int): string
                    public isAttributeSpecified(arg0: int): boolean
                    public getNamespaceCount(): int
                    public getNamespacePrefix(arg0: int): string
                    public getNamespaceURI(arg0: int): string
                    public getEventType(): int
                    public getText(): string
                    public getTextCharacters(arg0: int, arg1: char[], arg2: int, arg3: int): int
                    public getTextCharacters(): char[]
                    public getTextStart(): int
                    public getTextLength(): int
                    public getEncoding(): string
                    public hasText(): boolean
                    public getLocation(): javax.xml.stream.Location
                    public getName(): javax.xml.namespace.QName
                    public getLocalName(): string
                    public hasName(): boolean
                    public getNamespaceURI(): string
                    public getPrefix(): string
                    public getVersion(): string
                    public isStandalone(): boolean
                    public standaloneSet(): boolean
                    public getCharacterEncodingScheme(): string
                    public getPITarget(): string
                    public getPIData(): string
                    public getProperty(arg0: java.lang.String | string): java.lang.Object
                    public static class: java.lang.Class<any>
                }
                interface XMLEventAllocator {
                    newInstance(): javax.xml.stream.util.XMLEventAllocator
                    allocate(arg0: javax.xml.stream.XMLStreamReader): javax.xml.stream.events.XMLEvent
                    allocate(arg0: javax.xml.stream.XMLStreamReader, arg1: javax.xml.stream.util.XMLEventConsumer | javax.xml.stream.util.XMLEventConsumer$$Lambda): void
                }
                interface XMLEventConsumer {
                    add(arg0: javax.xml.stream.events.XMLEvent): void
                }
                interface XMLEventConsumer$$Lambda {
                    (arg0: javax.xml.stream.events.XMLEvent): void
                }
            }
            interface EventFilter {
                accept(arg0: javax.xml.stream.events.XMLEvent): boolean
            }
            interface EventFilter$$Lambda {
                (arg0: javax.xml.stream.events.XMLEvent): boolean
            }
            class FactoryConfigurationError extends java.lang.Error {
                public constructor()
                public constructor(arg0: java.lang.Exception)
                public constructor(arg0: java.lang.Exception, arg1: java.lang.String | string)
                public constructor(arg0: java.lang.String | string, arg1: java.lang.Exception)
                public constructor(arg0: java.lang.String | string)
                public getException(): java.lang.Exception
                public getCause(): java.lang.Throwable
                public getMessage(): string
                public static class: java.lang.Class<any>
            }
            class FactoryFinder {
                public static class: java.lang.Class<any>
            }
            interface Location {
                getLineNumber(): int
                getColumnNumber(): int
                getCharacterOffset(): int
                getPublicId(): string
                getSystemId(): string
            }
            interface StreamFilter {
                accept(arg0: javax.xml.stream.XMLStreamReader): boolean
            }
            interface StreamFilter$$Lambda {
                (arg0: javax.xml.stream.XMLStreamReader): boolean
            }
            abstract class XMLEventFactory {
                protected constructor()
                public static newInstance(): javax.xml.stream.XMLEventFactory
                public static newFactory(): javax.xml.stream.XMLEventFactory
                public static newInstance(arg0: java.lang.String | string, arg1: java.lang.ClassLoader): javax.xml.stream.XMLEventFactory
                public static newFactory(arg0: java.lang.String | string, arg1: java.lang.ClassLoader): javax.xml.stream.XMLEventFactory
                public setLocation(arg0: javax.xml.stream.Location): void
                public createAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string): javax.xml.stream.events.Attribute
                public createAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string): javax.xml.stream.events.Attribute
                public createAttribute(arg0: javax.xml.namespace.QName, arg1: java.lang.String | string): javax.xml.stream.events.Attribute
                public createNamespace(arg0: java.lang.String | string): javax.xml.stream.events.Namespace
                public createNamespace(arg0: java.lang.String | string, arg1: java.lang.String | string): javax.xml.stream.events.Namespace
                public createStartElement(arg0: javax.xml.namespace.QName, arg1: java.util.Iterator, arg2: java.util.Iterator): javax.xml.stream.events.StartElement
                public createStartElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): javax.xml.stream.events.StartElement
                public createStartElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.util.Iterator, arg4: java.util.Iterator): javax.xml.stream.events.StartElement
                public createStartElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.util.Iterator, arg4: java.util.Iterator, arg5: javax.xml.namespace.NamespaceContext): javax.xml.stream.events.StartElement
                public createEndElement(arg0: javax.xml.namespace.QName, arg1: java.util.Iterator): javax.xml.stream.events.EndElement
                public createEndElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): javax.xml.stream.events.EndElement
                public createEndElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.util.Iterator): javax.xml.stream.events.EndElement
                public createCharacters(arg0: java.lang.String | string): javax.xml.stream.events.Characters
                public createCData(arg0: java.lang.String | string): javax.xml.stream.events.Characters
                public createSpace(arg0: java.lang.String | string): javax.xml.stream.events.Characters
                public createIgnorableSpace(arg0: java.lang.String | string): javax.xml.stream.events.Characters
                public createStartDocument(): javax.xml.stream.events.StartDocument
                public createStartDocument(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: boolean): javax.xml.stream.events.StartDocument
                public createStartDocument(arg0: java.lang.String | string, arg1: java.lang.String | string): javax.xml.stream.events.StartDocument
                public createStartDocument(arg0: java.lang.String | string): javax.xml.stream.events.StartDocument
                public createEndDocument(): javax.xml.stream.events.EndDocument
                public createEntityReference(arg0: java.lang.String | string, arg1: javax.xml.stream.events.EntityDeclaration): javax.xml.stream.events.EntityReference
                public createComment(arg0: java.lang.String | string): javax.xml.stream.events.Comment
                public createProcessingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): javax.xml.stream.events.ProcessingInstruction
                public createDTD(arg0: java.lang.String | string): javax.xml.stream.events.DTD
                public static class: java.lang.Class<any>
            }
            interface XMLEventReader extends java.util.Iterator {
                nextEvent(): javax.xml.stream.events.XMLEvent
                hasNext(): boolean
                peek(): javax.xml.stream.events.XMLEvent
                getElementText(): string
                nextTag(): javax.xml.stream.events.XMLEvent
                getProperty(arg0: java.lang.String | string): java.lang.Object
                close(): void
            }
            interface XMLEventWriter extends javax.xml.stream.util.XMLEventConsumer {
                flush(): void
                close(): void
                add(arg0: javax.xml.stream.events.XMLEvent): void
                add(arg0: javax.xml.stream.XMLEventReader): void
                getPrefix(arg0: java.lang.String | string): string
                setPrefix(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                setDefaultNamespace(arg0: java.lang.String | string): void
                setNamespaceContext(arg0: javax.xml.namespace.NamespaceContext): void
                getNamespaceContext(): javax.xml.namespace.NamespaceContext
            }
            abstract class XMLInputFactory {
                public static IS_NAMESPACE_AWARE: string
                public static IS_VALIDATING: string
                public static IS_COALESCING: string
                public static IS_REPLACING_ENTITY_REFERENCES: string
                public static IS_SUPPORTING_EXTERNAL_ENTITIES: string
                public static SUPPORT_DTD: string
                public static REPORTER: string
                public static RESOLVER: string
                public static ALLOCATOR: string
                protected constructor()
                public static newInstance(): javax.xml.stream.XMLInputFactory
                public static newFactory(): javax.xml.stream.XMLInputFactory
                public static newInstance(arg0: java.lang.String | string, arg1: java.lang.ClassLoader): javax.xml.stream.XMLInputFactory
                public static newFactory(arg0: java.lang.String | string, arg1: java.lang.ClassLoader): javax.xml.stream.XMLInputFactory
                public createXMLStreamReader(arg0: java.io.Reader): javax.xml.stream.XMLStreamReader
                public createXMLStreamReader(arg0: javax.xml.transform.Source): javax.xml.stream.XMLStreamReader
                public createXMLStreamReader(arg0: java.io.InputStream): javax.xml.stream.XMLStreamReader
                public createXMLStreamReader(arg0: java.io.InputStream, arg1: java.lang.String | string): javax.xml.stream.XMLStreamReader
                public createXMLStreamReader(arg0: java.lang.String | string, arg1: java.io.InputStream): javax.xml.stream.XMLStreamReader
                public createXMLStreamReader(arg0: java.lang.String | string, arg1: java.io.Reader): javax.xml.stream.XMLStreamReader
                public createXMLEventReader(arg0: java.io.Reader): javax.xml.stream.XMLEventReader
                public createXMLEventReader(arg0: java.lang.String | string, arg1: java.io.Reader): javax.xml.stream.XMLEventReader
                public createXMLEventReader(arg0: javax.xml.stream.XMLStreamReader): javax.xml.stream.XMLEventReader
                public createXMLEventReader(arg0: javax.xml.transform.Source): javax.xml.stream.XMLEventReader
                public createXMLEventReader(arg0: java.io.InputStream): javax.xml.stream.XMLEventReader
                public createXMLEventReader(arg0: java.io.InputStream, arg1: java.lang.String | string): javax.xml.stream.XMLEventReader
                public createXMLEventReader(arg0: java.lang.String | string, arg1: java.io.InputStream): javax.xml.stream.XMLEventReader
                public createFilteredReader(arg0: javax.xml.stream.XMLStreamReader, arg1: javax.xml.stream.StreamFilter | javax.xml.stream.StreamFilter$$Lambda): javax.xml.stream.XMLStreamReader
                public createFilteredReader(arg0: javax.xml.stream.XMLEventReader, arg1: javax.xml.stream.EventFilter | javax.xml.stream.EventFilter$$Lambda): javax.xml.stream.XMLEventReader
                public getXMLResolver(): javax.xml.stream.XMLResolver
                public setXMLResolver(arg0: javax.xml.stream.XMLResolver | javax.xml.stream.XMLResolver$$Lambda): void
                public getXMLReporter(): javax.xml.stream.XMLReporter
                public setXMLReporter(arg0: javax.xml.stream.XMLReporter | javax.xml.stream.XMLReporter$$Lambda): void
                public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                public getProperty(arg0: java.lang.String | string): java.lang.Object
                public isPropertySupported(arg0: java.lang.String | string): boolean
                public setEventAllocator(arg0: javax.xml.stream.util.XMLEventAllocator): void
                public getEventAllocator(): javax.xml.stream.util.XMLEventAllocator
                public static class: java.lang.Class<any>
            }
            abstract class XMLOutputFactory {
                public static IS_REPAIRING_NAMESPACES: string
                protected constructor()
                public static newInstance(): javax.xml.stream.XMLOutputFactory
                public static newFactory(): javax.xml.stream.XMLOutputFactory
                public static newInstance(arg0: java.lang.String | string, arg1: java.lang.ClassLoader): javax.xml.stream.XMLInputFactory
                public static newFactory(arg0: java.lang.String | string, arg1: java.lang.ClassLoader): javax.xml.stream.XMLOutputFactory
                public createXMLStreamWriter(arg0: java.io.Writer | java.io.Writer$$Lambda): javax.xml.stream.XMLStreamWriter
                public createXMLStreamWriter(arg0: java.io.OutputStream | java.io.OutputStream$$Lambda): javax.xml.stream.XMLStreamWriter
                public createXMLStreamWriter(arg0: java.io.OutputStream | java.io.OutputStream$$Lambda, arg1: java.lang.String | string): javax.xml.stream.XMLStreamWriter
                public createXMLStreamWriter(arg0: javax.xml.transform.Result): javax.xml.stream.XMLStreamWriter
                public createXMLEventWriter(arg0: javax.xml.transform.Result): javax.xml.stream.XMLEventWriter
                public createXMLEventWriter(arg0: java.io.OutputStream | java.io.OutputStream$$Lambda): javax.xml.stream.XMLEventWriter
                public createXMLEventWriter(arg0: java.io.OutputStream | java.io.OutputStream$$Lambda, arg1: java.lang.String | string): javax.xml.stream.XMLEventWriter
                public createXMLEventWriter(arg0: java.io.Writer | java.io.Writer$$Lambda): javax.xml.stream.XMLEventWriter
                public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                public getProperty(arg0: java.lang.String | string): java.lang.Object
                public isPropertySupported(arg0: java.lang.String | string): boolean
                public static class: java.lang.Class<any>
            }
            interface XMLReporter {
                report(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.Object, arg3: javax.xml.stream.Location): void
            }
            interface XMLReporter$$Lambda {
                (arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.Object, arg3: javax.xml.stream.Location): void
            }
            interface XMLResolver {
                resolveEntity(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string): java.lang.Object
            }
            interface XMLResolver$$Lambda {
                (arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string): java.lang.Object
            }
            interface XMLStreamConstants {
                START_ELEMENT: int
                END_ELEMENT: int
                PROCESSING_INSTRUCTION: int
                CHARACTERS: int
                COMMENT: int
                SPACE: int
                START_DOCUMENT: int
                END_DOCUMENT: int
                ENTITY_REFERENCE: int
                ATTRIBUTE: int
                DTD: int
                CDATA: int
                NAMESPACE: int
                NOTATION_DECLARATION: int
                ENTITY_DECLARATION: int
            }
            class XMLStreamException extends java.lang.Exception {
                protected nested: java.lang.Throwable
                protected location: javax.xml.stream.Location
                public constructor()
                public constructor(arg0: java.lang.String | string)
                public constructor(arg0: java.lang.Throwable)
                public constructor(arg0: java.lang.String | string, arg1: java.lang.Throwable)
                public constructor(arg0: java.lang.String | string, arg1: javax.xml.stream.Location, arg2: java.lang.Throwable)
                public constructor(arg0: java.lang.String | string, arg1: javax.xml.stream.Location)
                public getNestedException(): java.lang.Throwable
                public getLocation(): javax.xml.stream.Location
                public static class: java.lang.Class<any>
            }
            interface XMLStreamReader extends javax.xml.stream.XMLStreamConstants {
                getProperty(arg0: java.lang.String | string): java.lang.Object
                next(): int
                require(arg0: int, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                getElementText(): string
                nextTag(): int
                hasNext(): boolean
                close(): void
                getNamespaceURI(arg0: java.lang.String | string): string
                isStartElement(): boolean
                isEndElement(): boolean
                isCharacters(): boolean
                isWhiteSpace(): boolean
                getAttributeValue(arg0: java.lang.String | string, arg1: java.lang.String | string): string
                getAttributeCount(): int
                getAttributeName(arg0: int): javax.xml.namespace.QName
                getAttributeNamespace(arg0: int): string
                getAttributeLocalName(arg0: int): string
                getAttributePrefix(arg0: int): string
                getAttributeType(arg0: int): string
                getAttributeValue(arg0: int): string
                isAttributeSpecified(arg0: int): boolean
                getNamespaceCount(): int
                getNamespacePrefix(arg0: int): string
                getNamespaceURI(arg0: int): string
                getNamespaceContext(): javax.xml.namespace.NamespaceContext
                getEventType(): int
                getText(): string
                getTextCharacters(): char[]
                getTextCharacters(arg0: int, arg1: char[], arg2: int, arg3: int): int
                getTextStart(): int
                getTextLength(): int
                getEncoding(): string
                hasText(): boolean
                getLocation(): javax.xml.stream.Location
                getName(): javax.xml.namespace.QName
                getLocalName(): string
                hasName(): boolean
                getNamespaceURI(): string
                getPrefix(): string
                getVersion(): string
                isStandalone(): boolean
                standaloneSet(): boolean
                getCharacterEncodingScheme(): string
                getPITarget(): string
                getPIData(): string
            }
            interface XMLStreamWriter {
                writeStartElement(arg0: java.lang.String | string): void
                writeStartElement(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                writeStartElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                writeEmptyElement(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                writeEmptyElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                writeEmptyElement(arg0: java.lang.String | string): void
                writeEndElement(): void
                writeEndDocument(): void
                close(): void
                flush(): void
                writeAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                writeAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string): void
                writeAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                writeNamespace(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                writeDefaultNamespace(arg0: java.lang.String | string): void
                writeComment(arg0: java.lang.String | string): void
                writeProcessingInstruction(arg0: java.lang.String | string): void
                writeProcessingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                writeCData(arg0: java.lang.String | string): void
                writeDTD(arg0: java.lang.String | string): void
                writeEntityRef(arg0: java.lang.String | string): void
                writeStartDocument(): void
                writeStartDocument(arg0: java.lang.String | string): void
                writeStartDocument(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                writeCharacters(arg0: java.lang.String | string): void
                writeCharacters(arg0: char[], arg1: int, arg2: int): void
                getPrefix(arg0: java.lang.String | string): string
                setPrefix(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                setDefaultNamespace(arg0: java.lang.String | string): void
                setNamespaceContext(arg0: javax.xml.namespace.NamespaceContext): void
                getNamespaceContext(): javax.xml.namespace.NamespaceContext
                getProperty(arg0: java.lang.String | string): java.lang.Object
            }
        }
        namespace transform {
            namespace dom {
                interface DOMLocator extends javax.xml.transform.SourceLocator {
                    getOriginatingNode(): org.w3c.dom.Node
                }
                class DOMResult implements javax.xml.transform.Result {
                    public static FEATURE: string
                    public constructor()
                    public constructor(arg0: org.w3c.dom.Node)
                    public constructor(arg0: org.w3c.dom.Node, arg1: java.lang.String | string)
                    public constructor(arg0: org.w3c.dom.Node, arg1: org.w3c.dom.Node)
                    public constructor(arg0: org.w3c.dom.Node, arg1: org.w3c.dom.Node, arg2: java.lang.String | string)
                    public setNode(arg0: org.w3c.dom.Node): void
                    public getNode(): org.w3c.dom.Node
                    public setNextSibling(arg0: org.w3c.dom.Node): void
                    public getNextSibling(): org.w3c.dom.Node
                    public setSystemId(arg0: java.lang.String | string): void
                    public getSystemId(): string
                    public static class: java.lang.Class<any>
                }
                class DOMSource implements javax.xml.transform.Source {
                    public static FEATURE: string
                    public constructor()
                    public constructor(arg0: org.w3c.dom.Node)
                    public constructor(arg0: org.w3c.dom.Node, arg1: java.lang.String | string)
                    public setNode(arg0: org.w3c.dom.Node): void
                    public getNode(): org.w3c.dom.Node
                    public setSystemId(arg0: java.lang.String | string): void
                    public getSystemId(): string
                    public static class: java.lang.Class<any>
                }
            }
            namespace sax {
                class SAXResult implements javax.xml.transform.Result {
                    public static FEATURE: string
                    public constructor()
                    public constructor(arg0: org.xml.sax.ContentHandler)
                    public setHandler(arg0: org.xml.sax.ContentHandler): void
                    public getHandler(): org.xml.sax.ContentHandler
                    public setLexicalHandler(arg0: org.xml.sax.ext.LexicalHandler): void
                    public getLexicalHandler(): org.xml.sax.ext.LexicalHandler
                    public setSystemId(arg0: java.lang.String | string): void
                    public getSystemId(): string
                    public static class: java.lang.Class<any>
                }
                class SAXSource implements javax.xml.transform.Source {
                    public static FEATURE: string
                    public constructor()
                    public constructor(arg0: org.xml.sax.XMLReader, arg1: org.xml.sax.InputSource)
                    public constructor(arg0: org.xml.sax.InputSource)
                    public setXMLReader(arg0: org.xml.sax.XMLReader): void
                    public getXMLReader(): org.xml.sax.XMLReader
                    public setInputSource(arg0: org.xml.sax.InputSource): void
                    public getInputSource(): org.xml.sax.InputSource
                    public setSystemId(arg0: java.lang.String | string): void
                    public getSystemId(): string
                    public static sourceToInputSource(arg0: javax.xml.transform.Source): org.xml.sax.InputSource
                    public static class: java.lang.Class<any>
                }
                abstract class SAXTransformerFactory extends javax.xml.transform.TransformerFactory {
                    public static FEATURE: string
                    public static FEATURE_XMLFILTER: string
                    protected constructor()
                    public newTransformerHandler(arg0: javax.xml.transform.Source): javax.xml.transform.sax.TransformerHandler
                    public newTransformerHandler(arg0: javax.xml.transform.Templates): javax.xml.transform.sax.TransformerHandler
                    public newTransformerHandler(): javax.xml.transform.sax.TransformerHandler
                    public newTemplatesHandler(): javax.xml.transform.sax.TemplatesHandler
                    public newXMLFilter(arg0: javax.xml.transform.Source): org.xml.sax.XMLFilter
                    public newXMLFilter(arg0: javax.xml.transform.Templates): org.xml.sax.XMLFilter
                    public static class: java.lang.Class<any>
                }
                interface TemplatesHandler extends org.xml.sax.ContentHandler {
                    getTemplates(): javax.xml.transform.Templates
                    setSystemId(arg0: java.lang.String | string): void
                    getSystemId(): string
                }
                interface TransformerHandler extends org.xml.sax.ContentHandler , org.xml.sax.ext.LexicalHandler , org.xml.sax.DTDHandler {
                    setResult(arg0: javax.xml.transform.Result): void
                    setSystemId(arg0: java.lang.String | string): void
                    getSystemId(): string
                    getTransformer(): javax.xml.transform.Transformer
                }
            }
            namespace stax {
                class StAXResult implements javax.xml.transform.Result {
                    public static FEATURE: string
                    public constructor(arg0: javax.xml.stream.XMLEventWriter)
                    public constructor(arg0: javax.xml.stream.XMLStreamWriter)
                    public getXMLEventWriter(): javax.xml.stream.XMLEventWriter
                    public getXMLStreamWriter(): javax.xml.stream.XMLStreamWriter
                    public setSystemId(arg0: java.lang.String | string): void
                    public getSystemId(): string
                    public static class: java.lang.Class<any>
                }
                class StAXSource implements javax.xml.transform.Source {
                    public static FEATURE: string
                    public constructor(arg0: javax.xml.stream.XMLEventReader)
                    public constructor(arg0: javax.xml.stream.XMLStreamReader)
                    public getXMLEventReader(): javax.xml.stream.XMLEventReader
                    public getXMLStreamReader(): javax.xml.stream.XMLStreamReader
                    public setSystemId(arg0: java.lang.String | string): void
                    public getSystemId(): string
                    public static class: java.lang.Class<any>
                }
            }
            namespace stream {
                class StreamResult implements javax.xml.transform.Result {
                    public static FEATURE: string
                    public constructor()
                    public constructor(arg0: java.io.OutputStream | java.io.OutputStream$$Lambda)
                    public constructor(arg0: java.io.Writer | java.io.Writer$$Lambda)
                    public constructor(arg0: java.lang.String | string)
                    public constructor(arg0: java.io.File)
                    public setOutputStream(arg0: java.io.OutputStream | java.io.OutputStream$$Lambda): void
                    public getOutputStream(): java.io.OutputStream
                    public setWriter(arg0: java.io.Writer | java.io.Writer$$Lambda): void
                    public getWriter(): java.io.Writer
                    public setSystemId(arg0: java.lang.String | string): void
                    public setSystemId(arg0: java.io.File): void
                    public getSystemId(): string
                    public static class: java.lang.Class<any>
                }
                class StreamSource implements javax.xml.transform.Source {
                    public static FEATURE: string
                    public constructor()
                    public constructor(arg0: java.io.InputStream)
                    public constructor(arg0: java.io.InputStream, arg1: java.lang.String | string)
                    public constructor(arg0: java.io.Reader)
                    public constructor(arg0: java.io.Reader, arg1: java.lang.String | string)
                    public constructor(arg0: java.lang.String | string)
                    public constructor(arg0: java.io.File)
                    public setInputStream(arg0: java.io.InputStream): void
                    public getInputStream(): java.io.InputStream
                    public setReader(arg0: java.io.Reader): void
                    public getReader(): java.io.Reader
                    public setPublicId(arg0: java.lang.String | string): void
                    public getPublicId(): string
                    public setSystemId(arg0: java.lang.String | string): void
                    public getSystemId(): string
                    public setSystemId(arg0: java.io.File): void
                    public static class: java.lang.Class<any>
                }
            }
            interface ErrorListener {
                warning(arg0: javax.xml.transform.TransformerException): void
                error(arg0: javax.xml.transform.TransformerException): void
                fatalError(arg0: javax.xml.transform.TransformerException): void
            }
            class FactoryFinder {
                public static class: java.lang.Class<any>
            }
            class OutputKeys {
                public static METHOD: string
                public static VERSION: string
                public static ENCODING: string
                public static OMIT_XML_DECLARATION: string
                public static STANDALONE: string
                public static DOCTYPE_PUBLIC: string
                public static DOCTYPE_SYSTEM: string
                public static CDATA_SECTION_ELEMENTS: string
                public static INDENT: string
                public static MEDIA_TYPE: string
                public static class: java.lang.Class<any>
            }
            interface Result {
                PI_DISABLE_OUTPUT_ESCAPING: string
                PI_ENABLE_OUTPUT_ESCAPING: string
                setSystemId(arg0: java.lang.String | string): void
                getSystemId(): string
            }
            interface Source {
                setSystemId(arg0: java.lang.String | string): void
                getSystemId(): string
            }
            interface SourceLocator {
                getPublicId(): string
                getSystemId(): string
                getLineNumber(): int
                getColumnNumber(): int
            }
            interface Templates {
                newTransformer(): javax.xml.transform.Transformer
                getOutputProperties(): java.util.Properties
            }
            abstract class Transformer {
                protected constructor()
                public reset(): void
                public transform(arg0: javax.xml.transform.Source, arg1: javax.xml.transform.Result): void
                public setParameter(arg0: java.lang.String | string, arg1: java.lang.Object): void
                public getParameter(arg0: java.lang.String | string): java.lang.Object
                public clearParameters(): void
                public setURIResolver(arg0: javax.xml.transform.URIResolver | javax.xml.transform.URIResolver$$Lambda): void
                public getURIResolver(): javax.xml.transform.URIResolver
                public setOutputProperties(arg0: java.util.Properties): void
                public getOutputProperties(): java.util.Properties
                public setOutputProperty(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                public getOutputProperty(arg0: java.lang.String | string): string
                public setErrorListener(arg0: javax.xml.transform.ErrorListener): void
                public getErrorListener(): javax.xml.transform.ErrorListener
                public static class: java.lang.Class<any>
            }
            class TransformerConfigurationException extends javax.xml.transform.TransformerException {
                public constructor()
                public constructor(arg0: java.lang.String | string)
                public constructor(arg0: java.lang.Throwable)
                public constructor(arg0: java.lang.String | string, arg1: java.lang.Throwable)
                public constructor(arg0: java.lang.String | string, arg1: javax.xml.transform.SourceLocator)
                public constructor(arg0: java.lang.String | string, arg1: javax.xml.transform.SourceLocator, arg2: java.lang.Throwable)
                public static class: java.lang.Class<any>
            }
            class TransformerException extends java.lang.Exception {
                public getLocator(): javax.xml.transform.SourceLocator
                public setLocator(arg0: javax.xml.transform.SourceLocator): void
                public getException(): java.lang.Throwable
                public getCause(): java.lang.Throwable
                public initCause(arg0: java.lang.Throwable): java.lang.Throwable
                public constructor(arg0: java.lang.String | string)
                public constructor(arg0: java.lang.Throwable)
                public constructor(arg0: java.lang.String | string, arg1: java.lang.Throwable)
                public constructor(arg0: java.lang.String | string, arg1: javax.xml.transform.SourceLocator)
                public constructor(arg0: java.lang.String | string, arg1: javax.xml.transform.SourceLocator, arg2: java.lang.Throwable)
                public getMessageAndLocation(): string
                public getLocationAsString(): string
                public printStackTrace(): void
                public printStackTrace(arg0: java.io.PrintStream): void
                public printStackTrace(arg0: java.io.PrintWriter): void
                public static class: java.lang.Class<any>
            }
            abstract class TransformerFactory {
                protected constructor()
                public static newInstance(): javax.xml.transform.TransformerFactory
                public static newInstance(arg0: java.lang.String | string, arg1: java.lang.ClassLoader): javax.xml.transform.TransformerFactory
                public newTransformer(arg0: javax.xml.transform.Source): javax.xml.transform.Transformer
                public newTransformer(): javax.xml.transform.Transformer
                public newTemplates(arg0: javax.xml.transform.Source): javax.xml.transform.Templates
                public getAssociatedStylesheet(arg0: javax.xml.transform.Source, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string): javax.xml.transform.Source
                public setURIResolver(arg0: javax.xml.transform.URIResolver | javax.xml.transform.URIResolver$$Lambda): void
                public getURIResolver(): javax.xml.transform.URIResolver
                public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                public getFeature(arg0: java.lang.String | string): boolean
                public setAttribute(arg0: java.lang.String | string, arg1: java.lang.Object): void
                public getAttribute(arg0: java.lang.String | string): java.lang.Object
                public setErrorListener(arg0: javax.xml.transform.ErrorListener): void
                public getErrorListener(): javax.xml.transform.ErrorListener
                public static class: java.lang.Class<any>
            }
            class TransformerFactoryConfigurationError extends java.lang.Error {
                public constructor()
                public constructor(arg0: java.lang.String | string)
                public constructor(arg0: java.lang.Exception)
                public constructor(arg0: java.lang.Exception, arg1: java.lang.String | string)
                public getMessage(): string
                public getException(): java.lang.Exception
                public getCause(): java.lang.Throwable
                public static class: java.lang.Class<any>
            }
            interface URIResolver {
                resolve(arg0: java.lang.String | string, arg1: java.lang.String | string): javax.xml.transform.Source
            }
            interface URIResolver$$Lambda {
                (arg0: java.lang.String | string, arg1: java.lang.String | string): javax.xml.transform.Source
            }
        }
        namespace validation {
            abstract class Schema {
                protected constructor()
                public newValidator(): javax.xml.validation.Validator
                public newValidatorHandler(): javax.xml.validation.ValidatorHandler
                public static class: java.lang.Class<any>
            }
            abstract class SchemaFactory {
                protected constructor()
                public static newInstance(arg0: java.lang.String | string): javax.xml.validation.SchemaFactory
                public static newInstance(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.ClassLoader): javax.xml.validation.SchemaFactory
                public isSchemaLanguageSupported(arg0: java.lang.String | string): boolean
                public getFeature(arg0: java.lang.String | string): boolean
                public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                public getProperty(arg0: java.lang.String | string): java.lang.Object
                public setErrorHandler(arg0: org.xml.sax.ErrorHandler): void
                public getErrorHandler(): org.xml.sax.ErrorHandler
                public setResourceResolver(arg0: org.w3c.dom.ls.LSResourceResolver | org.w3c.dom.ls.LSResourceResolver$$Lambda): void
                public getResourceResolver(): org.w3c.dom.ls.LSResourceResolver
                public newSchema(arg0: javax.xml.transform.Source): javax.xml.validation.Schema
                public newSchema(arg0: java.io.File): javax.xml.validation.Schema
                public newSchema(arg0: java.net.URL): javax.xml.validation.Schema
                public newSchema(arg0: javax.xml.transform.Source[]): javax.xml.validation.Schema
                public newSchema(): javax.xml.validation.Schema
                public static class: java.lang.Class<any>
            }
            class SchemaFactoryConfigurationError extends java.lang.Error {
                public constructor()
                public constructor(arg0: java.lang.String | string)
                public constructor(arg0: java.lang.Throwable)
                public constructor(arg0: java.lang.String | string, arg1: java.lang.Throwable)
                public static class: java.lang.Class<any>
            }
            class SchemaFactoryFinder {
                public constructor(arg0: java.lang.ClassLoader)
                public newFactory(arg0: java.lang.String | string): javax.xml.validation.SchemaFactory
                public static class: java.lang.Class<any>
            }
            abstract class SchemaFactoryLoader {
                protected constructor()
                public newFactory(arg0: java.lang.String | string): javax.xml.validation.SchemaFactory
                public static class: java.lang.Class<any>
            }
            abstract class TypeInfoProvider {
                protected constructor()
                public getElementTypeInfo(): org.w3c.dom.TypeInfo
                public getAttributeTypeInfo(arg0: int): org.w3c.dom.TypeInfo
                public isIdAttribute(arg0: int): boolean
                public isSpecified(arg0: int): boolean
                public static class: java.lang.Class<any>
            }
            abstract class Validator {
                protected constructor()
                public reset(): void
                public validate(arg0: javax.xml.transform.Source): void
                public validate(arg0: javax.xml.transform.Source, arg1: javax.xml.transform.Result): void
                public setErrorHandler(arg0: org.xml.sax.ErrorHandler): void
                public getErrorHandler(): org.xml.sax.ErrorHandler
                public setResourceResolver(arg0: org.w3c.dom.ls.LSResourceResolver | org.w3c.dom.ls.LSResourceResolver$$Lambda): void
                public getResourceResolver(): org.w3c.dom.ls.LSResourceResolver
                public getFeature(arg0: java.lang.String | string): boolean
                public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                public getProperty(arg0: java.lang.String | string): java.lang.Object
                public static class: java.lang.Class<any>
            }
            abstract class ValidatorHandler implements org.xml.sax.ContentHandler {
                protected constructor()
                public setContentHandler(arg0: org.xml.sax.ContentHandler): void
                public getContentHandler(): org.xml.sax.ContentHandler
                public setErrorHandler(arg0: org.xml.sax.ErrorHandler): void
                public getErrorHandler(): org.xml.sax.ErrorHandler
                public setResourceResolver(arg0: org.w3c.dom.ls.LSResourceResolver | org.w3c.dom.ls.LSResourceResolver$$Lambda): void
                public getResourceResolver(): org.w3c.dom.ls.LSResourceResolver
                public getTypeInfoProvider(): javax.xml.validation.TypeInfoProvider
                public getFeature(arg0: java.lang.String | string): boolean
                public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                public getProperty(arg0: java.lang.String | string): java.lang.Object
                public static class: java.lang.Class<any>
            }
        }
        namespace xpath {
            interface XPath {
                reset(): void
                setXPathVariableResolver(arg0: javax.xml.xpath.XPathVariableResolver | javax.xml.xpath.XPathVariableResolver$$Lambda): void
                getXPathVariableResolver(): javax.xml.xpath.XPathVariableResolver
                setXPathFunctionResolver(arg0: javax.xml.xpath.XPathFunctionResolver | javax.xml.xpath.XPathFunctionResolver$$Lambda): void
                getXPathFunctionResolver(): javax.xml.xpath.XPathFunctionResolver
                setNamespaceContext(arg0: javax.xml.namespace.NamespaceContext): void
                getNamespaceContext(): javax.xml.namespace.NamespaceContext
                compile(arg0: java.lang.String | string): javax.xml.xpath.XPathExpression
                evaluate(arg0: java.lang.String | string, arg1: java.lang.Object, arg2: javax.xml.namespace.QName): java.lang.Object
                evaluate(arg0: java.lang.String | string, arg1: java.lang.Object): string
                evaluate(arg0: java.lang.String | string, arg1: org.xml.sax.InputSource, arg2: javax.xml.namespace.QName): java.lang.Object
                evaluate(arg0: java.lang.String | string, arg1: org.xml.sax.InputSource): string
            }
            class XPathConstants {
                public static NUMBER: javax.xml.namespace.QName
                public static STRING: javax.xml.namespace.QName
                public static BOOLEAN: javax.xml.namespace.QName
                public static NODESET: javax.xml.namespace.QName
                public static NODE: javax.xml.namespace.QName
                public static DOM_OBJECT_MODEL: string
                public static class: java.lang.Class<any>
            }
            class XPathException extends java.lang.Exception {
                public constructor(arg0: java.lang.String | string)
                public constructor(arg0: java.lang.Throwable)
                public getCause(): java.lang.Throwable
                public printStackTrace(arg0: java.io.PrintStream): void
                public printStackTrace(): void
                public printStackTrace(arg0: java.io.PrintWriter): void
                public static class: java.lang.Class<any>
            }
            interface XPathExpression {
                evaluate(arg0: java.lang.Object, arg1: javax.xml.namespace.QName): java.lang.Object
                evaluate(arg0: java.lang.Object): string
                evaluate(arg0: org.xml.sax.InputSource, arg1: javax.xml.namespace.QName): java.lang.Object
                evaluate(arg0: org.xml.sax.InputSource): string
            }
            class XPathExpressionException extends javax.xml.xpath.XPathException {
                public constructor(arg0: java.lang.String | string)
                public constructor(arg0: java.lang.Throwable)
                public static class: java.lang.Class<any>
            }
            abstract class XPathFactory {
                public static DEFAULT_PROPERTY_NAME: string
                public static DEFAULT_OBJECT_MODEL_URI: string
                protected constructor()
                public static newInstance(): javax.xml.xpath.XPathFactory
                public static newInstance(arg0: java.lang.String | string): javax.xml.xpath.XPathFactory
                public static newInstance(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.ClassLoader): javax.xml.xpath.XPathFactory
                public isObjectModelSupported(arg0: java.lang.String | string): boolean
                public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                public getFeature(arg0: java.lang.String | string): boolean
                public setXPathVariableResolver(arg0: javax.xml.xpath.XPathVariableResolver | javax.xml.xpath.XPathVariableResolver$$Lambda): void
                public setXPathFunctionResolver(arg0: javax.xml.xpath.XPathFunctionResolver | javax.xml.xpath.XPathFunctionResolver$$Lambda): void
                public newXPath(): javax.xml.xpath.XPath
                public static class: java.lang.Class<any>
            }
            class XPathFactoryConfigurationException extends javax.xml.xpath.XPathException {
                public constructor(arg0: java.lang.String | string)
                public constructor(arg0: java.lang.Throwable)
                public static class: java.lang.Class<any>
            }
            class XPathFactoryFinder {
                public constructor(arg0: java.lang.ClassLoader)
                public newFactory(arg0: java.lang.String | string): javax.xml.xpath.XPathFactory
                public static class: java.lang.Class<any>
            }
            interface XPathFunction {
                evaluate(arg0: java.util.List): java.lang.Object
            }
            interface XPathFunction$$Lambda {
                (arg0: java.util.List): java.lang.Object
            }
            class XPathFunctionException extends javax.xml.xpath.XPathExpressionException {
                public constructor(arg0: java.lang.String | string)
                public constructor(arg0: java.lang.Throwable)
                public static class: java.lang.Class<any>
            }
            interface XPathFunctionResolver {
                resolveFunction(arg0: javax.xml.namespace.QName, arg1: int): javax.xml.xpath.XPathFunction
            }
            interface XPathFunctionResolver$$Lambda {
                (arg0: javax.xml.namespace.QName, arg1: int): javax.xml.xpath.XPathFunction
            }
            interface XPathVariableResolver {
                resolveVariable(arg0: javax.xml.namespace.QName): java.lang.Object
            }
            interface XPathVariableResolver$$Lambda {
                (arg0: javax.xml.namespace.QName): java.lang.Object
            }
        }
        class XMLConstants {
            public static NULL_NS_URI: string
            public static DEFAULT_NS_PREFIX: string
            public static XML_NS_URI: string
            public static XML_NS_PREFIX: string
            public static XMLNS_ATTRIBUTE_NS_URI: string
            public static XMLNS_ATTRIBUTE: string
            public static W3C_XML_SCHEMA_NS_URI: string
            public static W3C_XML_SCHEMA_INSTANCE_NS_URI: string
            public static W3C_XPATH_DATATYPE_NS_URI: string
            public static XML_DTD_NS_URI: string
            public static RELAXNG_NS_URI: string
            public static FEATURE_SECURE_PROCESSING: string
            public static ACCESS_EXTERNAL_DTD: string
            public static ACCESS_EXTERNAL_SCHEMA: string
            public static ACCESS_EXTERNAL_STYLESHEET: string
            public static class: java.lang.Class<any>
        }
    }
}
declare namespace jdk {
    namespace xml {
        namespace internal {
            class JdkXmlFeatures {
                public static ORACLE_JAXP_PROPERTY_PREFIX: string
                public static XML_FEATURE_MANAGER: string
                public static ORACLE_FEATURE_SERVICE_MECHANISM: string
                public static ORACLE_ENABLE_EXTENSION_FUNCTION: string
                public static SP_ENABLE_EXTENSION_FUNCTION: string
                public static SP_ENABLE_EXTENSION_FUNCTION_SPEC: string
                public constructor(arg0: boolean)
                public update(): void
                public setFeature(arg0: java.lang.String | string, arg1: jdk.xml.internal.JdkXmlFeatures$State, arg2: java.lang.Object): boolean
                public setFeature(arg0: jdk.xml.internal.JdkXmlFeatures$XmlFeature, arg1: jdk.xml.internal.JdkXmlFeatures$State, arg2: boolean): void
                public getFeature(arg0: jdk.xml.internal.JdkXmlFeatures$XmlFeature): boolean
                public getFeature(arg0: int): boolean
                public setFeature(arg0: int, arg1: jdk.xml.internal.JdkXmlFeatures$State, arg2: java.lang.Object): void
                public setFeature(arg0: int, arg1: jdk.xml.internal.JdkXmlFeatures$State, arg2: boolean): void
                public getIndex(arg0: java.lang.String | string): int
                public static class: java.lang.Class<any>
            }
            class JdkXmlUtils {
                public static NAMESPACES_FEATURE: string
                public static NAMESPACE_PREFIXES_FEATURE: string
                public static OVERRIDE_PARSER: string
                public static OVERRIDE_PARSER_DEFAULT: boolean
                public static FEATURE_TRUE: string
                public static FEATURE_FALSE: string
                public constructor()
                public static getValue(arg0: java.lang.Object, arg1: int): int
                public static setXMLReaderPropertyIfSupport(arg0: org.xml.sax.XMLReader, arg1: java.lang.String | string, arg2: java.lang.Object, arg3: boolean): void
                public static getXMLReader(arg0: boolean, arg1: boolean): org.xml.sax.XMLReader
                public static getDOMDocument(): org.w3c.dom.Document
                public static getDOMFactory(arg0: boolean): javax.xml.parsers.DocumentBuilderFactory
                public static getSAXFactory(arg0: boolean): javax.xml.parsers.SAXParserFactory
                public static getSAXTransformFactory(arg0: boolean): javax.xml.transform.sax.SAXTransformerFactory
                public static class: java.lang.Class<any>
            }
            class SecuritySupport {
                public static getSystemProperty(arg0: java.lang.String | string): string
                public static getJAXPSystemProperty<T>(arg0: java.lang.Class<T>, arg1: java.lang.String | string, arg2: java.lang.String | string): T
                public static getJAXPSystemProperty(arg0: java.lang.String | string): string
                public static readJAXPProperty(arg0: java.lang.String | string): string
                public static class: java.lang.Class<any>
            }
        }
    }
}
declare namespace org {
    namespace w3c {
        namespace dom {
            namespace bootstrap {
                class DOMImplementationRegistry {
                    public static PROPERTY: string
                    public static newInstance(): org.w3c.dom.bootstrap.DOMImplementationRegistry
                    public getDOMImplementation(arg0: java.lang.String | string): org.w3c.dom.DOMImplementation
                    public getDOMImplementationList(arg0: java.lang.String | string): org.w3c.dom.DOMImplementationList
                    public addSource(arg0: org.w3c.dom.DOMImplementationSource): void
                    public static class: java.lang.Class<any>
                }
            }
            namespace events {
                interface DocumentEvent {
                    createEvent(arg0: java.lang.String | string): org.w3c.dom.events.Event
                }
                interface DocumentEvent$$Lambda {
                    (arg0: java.lang.String | string): org.w3c.dom.events.Event
                }
                interface Event {
                    CAPTURING_PHASE: short
                    AT_TARGET: short
                    BUBBLING_PHASE: short
                    getType(): string
                    getTarget(): org.w3c.dom.events.EventTarget
                    getCurrentTarget(): org.w3c.dom.events.EventTarget
                    getEventPhase(): short
                    getBubbles(): boolean
                    getCancelable(): boolean
                    getTimeStamp(): long
                    stopPropagation(): void
                    preventDefault(): void
                    initEvent(arg0: java.lang.String | string, arg1: boolean, arg2: boolean): void
                }
                class EventException extends java.lang.RuntimeException {
                    public code: short
                    public static UNSPECIFIED_EVENT_TYPE_ERR: short
                    public constructor(arg0: short, arg1: java.lang.String | string)
                    public static class: java.lang.Class<any>
                }
                interface EventListener {
                    handleEvent(arg0: org.w3c.dom.events.Event): void
                }
                interface EventListener$$Lambda {
                    (arg0: org.w3c.dom.events.Event): void
                }
                interface EventTarget {
                    addEventListener(arg0: java.lang.String | string, arg1: org.w3c.dom.events.EventListener | org.w3c.dom.events.EventListener$$Lambda, arg2: boolean): void
                    removeEventListener(arg0: java.lang.String | string, arg1: org.w3c.dom.events.EventListener | org.w3c.dom.events.EventListener$$Lambda, arg2: boolean): void
                    dispatchEvent(arg0: org.w3c.dom.events.Event): boolean
                }
                interface MouseEvent extends org.w3c.dom.events.UIEvent {
                    getScreenX(): int
                    getScreenY(): int
                    getClientX(): int
                    getClientY(): int
                    getCtrlKey(): boolean
                    getShiftKey(): boolean
                    getAltKey(): boolean
                    getMetaKey(): boolean
                    getButton(): short
                    getRelatedTarget(): org.w3c.dom.events.EventTarget
                    initMouseEvent(arg0: java.lang.String | string, arg1: boolean, arg2: boolean, arg3: org.w3c.dom.views.AbstractView | org.w3c.dom.views.AbstractView$$Lambda, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: boolean, arg10: boolean, arg11: boolean, arg12: boolean, arg13: short, arg14: org.w3c.dom.events.EventTarget): void
                }
                interface MutationEvent extends org.w3c.dom.events.Event {
                    MODIFICATION: short
                    ADDITION: short
                    REMOVAL: short
                    getRelatedNode(): org.w3c.dom.Node
                    getPrevValue(): string
                    getNewValue(): string
                    getAttrName(): string
                    getAttrChange(): short
                    initMutationEvent(arg0: java.lang.String | string, arg1: boolean, arg2: boolean, arg3: org.w3c.dom.Node, arg4: java.lang.String | string, arg5: java.lang.String | string, arg6: java.lang.String | string, arg7: short): void
                }
                interface UIEvent extends org.w3c.dom.events.Event {
                    getView(): org.w3c.dom.views.AbstractView
                    getDetail(): int
                    initUIEvent(arg0: java.lang.String | string, arg1: boolean, arg2: boolean, arg3: org.w3c.dom.views.AbstractView | org.w3c.dom.views.AbstractView$$Lambda, arg4: int): void
                }
            }
            namespace ls {
                interface DOMImplementationLS {
                    MODE_SYNCHRONOUS: short
                    MODE_ASYNCHRONOUS: short
                    createLSParser(arg0: short, arg1: java.lang.String | string): org.w3c.dom.ls.LSParser
                    createLSSerializer(): org.w3c.dom.ls.LSSerializer
                    createLSInput(): org.w3c.dom.ls.LSInput
                    createLSOutput(): org.w3c.dom.ls.LSOutput
                }
                class LSException extends java.lang.RuntimeException {
                    public code: short
                    public static PARSE_ERR: short
                    public static SERIALIZE_ERR: short
                    public constructor(arg0: short, arg1: java.lang.String | string)
                    public static class: java.lang.Class<any>
                }
                interface LSInput {
                    getCharacterStream(): java.io.Reader
                    setCharacterStream(arg0: java.io.Reader): void
                    getByteStream(): java.io.InputStream
                    setByteStream(arg0: java.io.InputStream): void
                    getStringData(): string
                    setStringData(arg0: java.lang.String | string): void
                    getSystemId(): string
                    setSystemId(arg0: java.lang.String | string): void
                    getPublicId(): string
                    setPublicId(arg0: java.lang.String | string): void
                    getBaseURI(): string
                    setBaseURI(arg0: java.lang.String | string): void
                    getEncoding(): string
                    setEncoding(arg0: java.lang.String | string): void
                    getCertifiedText(): boolean
                    setCertifiedText(arg0: boolean): void
                }
                interface LSLoadEvent extends org.w3c.dom.events.Event {
                    getNewDocument(): org.w3c.dom.Document
                    getInput(): org.w3c.dom.ls.LSInput
                }
                interface LSOutput {
                    getCharacterStream(): java.io.Writer
                    setCharacterStream(arg0: java.io.Writer | java.io.Writer$$Lambda): void
                    getByteStream(): java.io.OutputStream
                    setByteStream(arg0: java.io.OutputStream | java.io.OutputStream$$Lambda): void
                    getSystemId(): string
                    setSystemId(arg0: java.lang.String | string): void
                    getEncoding(): string
                    setEncoding(arg0: java.lang.String | string): void
                }
                interface LSParser {
                    ACTION_APPEND_AS_CHILDREN: short
                    ACTION_REPLACE_CHILDREN: short
                    ACTION_INSERT_BEFORE: short
                    ACTION_INSERT_AFTER: short
                    ACTION_REPLACE: short
                    getDomConfig(): org.w3c.dom.DOMConfiguration
                    getFilter(): org.w3c.dom.ls.LSParserFilter
                    setFilter(arg0: org.w3c.dom.ls.LSParserFilter): void
                    getAsync(): boolean
                    getBusy(): boolean
                    parse(arg0: org.w3c.dom.ls.LSInput): org.w3c.dom.Document
                    parseURI(arg0: java.lang.String | string): org.w3c.dom.Document
                    parseWithContext(arg0: org.w3c.dom.ls.LSInput, arg1: org.w3c.dom.Node, arg2: short): org.w3c.dom.Node
                    abort(): void
                }
                interface LSParserFilter {
                    FILTER_ACCEPT: short
                    FILTER_REJECT: short
                    FILTER_SKIP: short
                    FILTER_INTERRUPT: short
                    startElement(arg0: org.w3c.dom.Element): short
                    acceptNode(arg0: org.w3c.dom.Node): short
                    getWhatToShow(): int
                }
                interface LSProgressEvent extends org.w3c.dom.events.Event {
                    getInput(): org.w3c.dom.ls.LSInput
                    getPosition(): int
                    getTotalSize(): int
                }
                interface LSResourceResolver {
                    resolveResource(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string): org.w3c.dom.ls.LSInput
                }
                interface LSResourceResolver$$Lambda {
                    (arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string): org.w3c.dom.ls.LSInput
                }
                interface LSSerializer {
                    getDomConfig(): org.w3c.dom.DOMConfiguration
                    getNewLine(): string
                    setNewLine(arg0: java.lang.String | string): void
                    getFilter(): org.w3c.dom.ls.LSSerializerFilter
                    setFilter(arg0: org.w3c.dom.ls.LSSerializerFilter): void
                    write(arg0: org.w3c.dom.Node, arg1: org.w3c.dom.ls.LSOutput): boolean
                    writeToURI(arg0: org.w3c.dom.Node, arg1: java.lang.String | string): boolean
                    writeToString(arg0: org.w3c.dom.Node): string
                }
                interface LSSerializerFilter extends org.w3c.dom.traversal.NodeFilter {
                    getWhatToShow(): int
                }
            }
            namespace ranges {
                interface DocumentRange {
                    createRange(): org.w3c.dom.ranges.Range
                }
                interface DocumentRange$$Lambda {
                    (): org.w3c.dom.ranges.Range
                }
                interface Range {
                    START_TO_START: short
                    START_TO_END: short
                    END_TO_END: short
                    END_TO_START: short
                    getStartContainer(): org.w3c.dom.Node
                    getStartOffset(): int
                    getEndContainer(): org.w3c.dom.Node
                    getEndOffset(): int
                    getCollapsed(): boolean
                    getCommonAncestorContainer(): org.w3c.dom.Node
                    setStart(arg0: org.w3c.dom.Node, arg1: int): void
                    setEnd(arg0: org.w3c.dom.Node, arg1: int): void
                    setStartBefore(arg0: org.w3c.dom.Node): void
                    setStartAfter(arg0: org.w3c.dom.Node): void
                    setEndBefore(arg0: org.w3c.dom.Node): void
                    setEndAfter(arg0: org.w3c.dom.Node): void
                    collapse(arg0: boolean): void
                    selectNode(arg0: org.w3c.dom.Node): void
                    selectNodeContents(arg0: org.w3c.dom.Node): void
                    compareBoundaryPoints(arg0: short, arg1: org.w3c.dom.ranges.Range): short
                    deleteContents(): void
                    extractContents(): org.w3c.dom.DocumentFragment
                    cloneContents(): org.w3c.dom.DocumentFragment
                    insertNode(arg0: org.w3c.dom.Node): void
                    surroundContents(arg0: org.w3c.dom.Node): void
                    cloneRange(): org.w3c.dom.ranges.Range
                    toString(): string
                    detach(): void
                }
                class RangeException extends java.lang.RuntimeException {
                    public code: short
                    public static BAD_BOUNDARYPOINTS_ERR: short
                    public static INVALID_NODE_TYPE_ERR: short
                    public constructor(arg0: short, arg1: java.lang.String | string)
                    public static class: java.lang.Class<any>
                }
            }
            namespace traversal {
                interface DocumentTraversal {
                    createNodeIterator(arg0: org.w3c.dom.Node, arg1: int, arg2: org.w3c.dom.traversal.NodeFilter, arg3: boolean): org.w3c.dom.traversal.NodeIterator
                    createTreeWalker(arg0: org.w3c.dom.Node, arg1: int, arg2: org.w3c.dom.traversal.NodeFilter, arg3: boolean): org.w3c.dom.traversal.TreeWalker
                }
                interface NodeFilter {
                    FILTER_ACCEPT: short
                    FILTER_REJECT: short
                    FILTER_SKIP: short
                    SHOW_ALL: int
                    SHOW_ELEMENT: int
                    SHOW_ATTRIBUTE: int
                    SHOW_TEXT: int
                    SHOW_CDATA_SECTION: int
                    SHOW_ENTITY_REFERENCE: int
                    SHOW_ENTITY: int
                    SHOW_PROCESSING_INSTRUCTION: int
                    SHOW_COMMENT: int
                    SHOW_DOCUMENT: int
                    SHOW_DOCUMENT_TYPE: int
                    SHOW_DOCUMENT_FRAGMENT: int
                    SHOW_NOTATION: int
                    acceptNode(arg0: org.w3c.dom.Node): short
                }
                interface NodeIterator {
                    getRoot(): org.w3c.dom.Node
                    getWhatToShow(): int
                    getFilter(): org.w3c.dom.traversal.NodeFilter
                    getExpandEntityReferences(): boolean
                    nextNode(): org.w3c.dom.Node
                    previousNode(): org.w3c.dom.Node
                    detach(): void
                }
                interface TreeWalker {
                    getRoot(): org.w3c.dom.Node
                    getWhatToShow(): int
                    getFilter(): org.w3c.dom.traversal.NodeFilter
                    getExpandEntityReferences(): boolean
                    getCurrentNode(): org.w3c.dom.Node
                    setCurrentNode(arg0: org.w3c.dom.Node): void
                    parentNode(): org.w3c.dom.Node
                    firstChild(): org.w3c.dom.Node
                    lastChild(): org.w3c.dom.Node
                    previousSibling(): org.w3c.dom.Node
                    nextSibling(): org.w3c.dom.Node
                    previousNode(): org.w3c.dom.Node
                    nextNode(): org.w3c.dom.Node
                }
            }
            namespace views {
                interface AbstractView {
                    getDocument(): org.w3c.dom.views.DocumentView
                }
                interface AbstractView$$Lambda {
                    (): org.w3c.dom.views.DocumentView
                }
                interface DocumentView {
                    getDefaultView(): org.w3c.dom.views.AbstractView
                }
                interface DocumentView$$Lambda {
                    (): org.w3c.dom.views.AbstractView
                }
            }
            interface Attr extends org.w3c.dom.Node {
                getName(): string
                getSpecified(): boolean
                getValue(): string
                setValue(arg0: java.lang.String | string): void
                getOwnerElement(): org.w3c.dom.Element
                getSchemaTypeInfo(): org.w3c.dom.TypeInfo
                isId(): boolean
            }
            interface CDATASection extends org.w3c.dom.Text {
            }
            interface CharacterData extends org.w3c.dom.Node {
                getData(): string
                setData(arg0: java.lang.String | string): void
                getLength(): int
                substringData(arg0: int, arg1: int): string
                appendData(arg0: java.lang.String | string): void
                insertData(arg0: int, arg1: java.lang.String | string): void
                deleteData(arg0: int, arg1: int): void
                replaceData(arg0: int, arg1: int, arg2: java.lang.String | string): void
            }
            interface Comment extends org.w3c.dom.CharacterData {
            }
            interface DOMConfiguration {
                setParameter(arg0: java.lang.String | string, arg1: java.lang.Object): void
                getParameter(arg0: java.lang.String | string): java.lang.Object
                canSetParameter(arg0: java.lang.String | string, arg1: java.lang.Object): boolean
                getParameterNames(): org.w3c.dom.DOMStringList
            }
            interface DOMError {
                SEVERITY_WARNING: short
                SEVERITY_ERROR: short
                SEVERITY_FATAL_ERROR: short
                getSeverity(): short
                getMessage(): string
                getType(): string
                getRelatedException(): java.lang.Object
                getRelatedData(): java.lang.Object
                getLocation(): org.w3c.dom.DOMLocator
            }
            interface DOMErrorHandler {
                handleError(arg0: org.w3c.dom.DOMError): boolean
            }
            interface DOMErrorHandler$$Lambda {
                (arg0: org.w3c.dom.DOMError): boolean
            }
            class DOMException extends java.lang.RuntimeException {
                public code: short
                public static INDEX_SIZE_ERR: short
                public static DOMSTRING_SIZE_ERR: short
                public static HIERARCHY_REQUEST_ERR: short
                public static WRONG_DOCUMENT_ERR: short
                public static INVALID_CHARACTER_ERR: short
                public static NO_DATA_ALLOWED_ERR: short
                public static NO_MODIFICATION_ALLOWED_ERR: short
                public static NOT_FOUND_ERR: short
                public static NOT_SUPPORTED_ERR: short
                public static INUSE_ATTRIBUTE_ERR: short
                public static INVALID_STATE_ERR: short
                public static SYNTAX_ERR: short
                public static INVALID_MODIFICATION_ERR: short
                public static NAMESPACE_ERR: short
                public static INVALID_ACCESS_ERR: short
                public static VALIDATION_ERR: short
                public static TYPE_MISMATCH_ERR: short
                public constructor(arg0: short, arg1: java.lang.String | string)
                public static class: java.lang.Class<any>
            }
            interface DOMImplementation {
                hasFeature(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                createDocumentType(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): org.w3c.dom.DocumentType
                createDocument(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: org.w3c.dom.DocumentType): org.w3c.dom.Document
                getFeature(arg0: java.lang.String | string, arg1: java.lang.String | string): java.lang.Object
            }
            interface DOMImplementationList {
                item(arg0: int): org.w3c.dom.DOMImplementation
                getLength(): int
            }
            interface DOMImplementationSource {
                getDOMImplementation(arg0: java.lang.String | string): org.w3c.dom.DOMImplementation
                getDOMImplementationList(arg0: java.lang.String | string): org.w3c.dom.DOMImplementationList
            }
            interface DOMLocator {
                getLineNumber(): int
                getColumnNumber(): int
                getByteOffset(): int
                getUtf16Offset(): int
                getRelatedNode(): org.w3c.dom.Node
                getUri(): string
            }
            interface DOMStringList {
                item(arg0: int): string
                getLength(): int
                contains(arg0: java.lang.String | string): boolean
            }
            interface Document extends org.w3c.dom.Node {
                getDoctype(): org.w3c.dom.DocumentType
                getImplementation(): org.w3c.dom.DOMImplementation
                getDocumentElement(): org.w3c.dom.Element
                createElement(arg0: java.lang.String | string): org.w3c.dom.Element
                createDocumentFragment(): org.w3c.dom.DocumentFragment
                createTextNode(arg0: java.lang.String | string): org.w3c.dom.Text
                createComment(arg0: java.lang.String | string): org.w3c.dom.Comment
                createCDATASection(arg0: java.lang.String | string): org.w3c.dom.CDATASection
                createProcessingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.ProcessingInstruction
                createAttribute(arg0: java.lang.String | string): org.w3c.dom.Attr
                createEntityReference(arg0: java.lang.String | string): org.w3c.dom.EntityReference
                getElementsByTagName(arg0: java.lang.String | string): org.w3c.dom.NodeList
                importNode(arg0: org.w3c.dom.Node, arg1: boolean): org.w3c.dom.Node
                createElementNS(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.Element
                createAttributeNS(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.Attr
                getElementsByTagNameNS(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.NodeList
                getElementById(arg0: java.lang.String | string): org.w3c.dom.Element
                getInputEncoding(): string
                getXmlEncoding(): string
                getXmlStandalone(): boolean
                setXmlStandalone(arg0: boolean): void
                getXmlVersion(): string
                setXmlVersion(arg0: java.lang.String | string): void
                getStrictErrorChecking(): boolean
                setStrictErrorChecking(arg0: boolean): void
                getDocumentURI(): string
                setDocumentURI(arg0: java.lang.String | string): void
                adoptNode(arg0: org.w3c.dom.Node): org.w3c.dom.Node
                getDomConfig(): org.w3c.dom.DOMConfiguration
                normalizeDocument(): void
                renameNode(arg0: org.w3c.dom.Node, arg1: java.lang.String | string, arg2: java.lang.String | string): org.w3c.dom.Node
            }
            interface DocumentFragment extends org.w3c.dom.Node {
            }
            interface DocumentType extends org.w3c.dom.Node {
                getName(): string
                getEntities(): org.w3c.dom.NamedNodeMap
                getNotations(): org.w3c.dom.NamedNodeMap
                getPublicId(): string
                getSystemId(): string
                getInternalSubset(): string
            }
            interface Element extends org.w3c.dom.Node {
                getTagName(): string
                getAttribute(arg0: java.lang.String | string): string
                setAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                removeAttribute(arg0: java.lang.String | string): void
                getAttributeNode(arg0: java.lang.String | string): org.w3c.dom.Attr
                setAttributeNode(arg0: org.w3c.dom.Attr): org.w3c.dom.Attr
                removeAttributeNode(arg0: org.w3c.dom.Attr): org.w3c.dom.Attr
                getElementsByTagName(arg0: java.lang.String | string): org.w3c.dom.NodeList
                getAttributeNS(arg0: java.lang.String | string, arg1: java.lang.String | string): string
                setAttributeNS(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                removeAttributeNS(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                getAttributeNodeNS(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.Attr
                setAttributeNodeNS(arg0: org.w3c.dom.Attr): org.w3c.dom.Attr
                getElementsByTagNameNS(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.NodeList
                hasAttribute(arg0: java.lang.String | string): boolean
                hasAttributeNS(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                getSchemaTypeInfo(): org.w3c.dom.TypeInfo
                setIdAttribute(arg0: java.lang.String | string, arg1: boolean): void
                setIdAttributeNS(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: boolean): void
                setIdAttributeNode(arg0: org.w3c.dom.Attr, arg1: boolean): void
            }
            interface Entity extends org.w3c.dom.Node {
                getPublicId(): string
                getSystemId(): string
                getNotationName(): string
                getInputEncoding(): string
                getXmlEncoding(): string
                getXmlVersion(): string
            }
            interface EntityReference extends org.w3c.dom.Node {
            }
            interface NameList {
                getName(arg0: int): string
                getNamespaceURI(arg0: int): string
                getLength(): int
                contains(arg0: java.lang.String | string): boolean
                containsNS(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
            }
            interface NamedNodeMap {
                getNamedItem(arg0: java.lang.String | string): org.w3c.dom.Node
                setNamedItem(arg0: org.w3c.dom.Node): org.w3c.dom.Node
                removeNamedItem(arg0: java.lang.String | string): org.w3c.dom.Node
                item(arg0: int): org.w3c.dom.Node
                getLength(): int
                getNamedItemNS(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.Node
                setNamedItemNS(arg0: org.w3c.dom.Node): org.w3c.dom.Node
                removeNamedItemNS(arg0: java.lang.String | string, arg1: java.lang.String | string): org.w3c.dom.Node
            }
            interface Node {
                ELEMENT_NODE: short
                ATTRIBUTE_NODE: short
                TEXT_NODE: short
                CDATA_SECTION_NODE: short
                ENTITY_REFERENCE_NODE: short
                ENTITY_NODE: short
                PROCESSING_INSTRUCTION_NODE: short
                COMMENT_NODE: short
                DOCUMENT_NODE: short
                DOCUMENT_TYPE_NODE: short
                DOCUMENT_FRAGMENT_NODE: short
                NOTATION_NODE: short
                DOCUMENT_POSITION_DISCONNECTED: short
                DOCUMENT_POSITION_PRECEDING: short
                DOCUMENT_POSITION_FOLLOWING: short
                DOCUMENT_POSITION_CONTAINS: short
                DOCUMENT_POSITION_CONTAINED_BY: short
                DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: short
                getNodeName(): string
                getNodeValue(): string
                setNodeValue(arg0: java.lang.String | string): void
                getNodeType(): short
                getParentNode(): org.w3c.dom.Node
                getChildNodes(): org.w3c.dom.NodeList
                getFirstChild(): org.w3c.dom.Node
                getLastChild(): org.w3c.dom.Node
                getPreviousSibling(): org.w3c.dom.Node
                getNextSibling(): org.w3c.dom.Node
                getAttributes(): org.w3c.dom.NamedNodeMap
                getOwnerDocument(): org.w3c.dom.Document
                insertBefore(arg0: org.w3c.dom.Node, arg1: org.w3c.dom.Node): org.w3c.dom.Node
                replaceChild(arg0: org.w3c.dom.Node, arg1: org.w3c.dom.Node): org.w3c.dom.Node
                removeChild(arg0: org.w3c.dom.Node): org.w3c.dom.Node
                appendChild(arg0: org.w3c.dom.Node): org.w3c.dom.Node
                hasChildNodes(): boolean
                cloneNode(arg0: boolean): org.w3c.dom.Node
                normalize(): void
                isSupported(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                getNamespaceURI(): string
                getPrefix(): string
                setPrefix(arg0: java.lang.String | string): void
                getLocalName(): string
                hasAttributes(): boolean
                getBaseURI(): string
                compareDocumentPosition(arg0: org.w3c.dom.Node): short
                getTextContent(): string
                setTextContent(arg0: java.lang.String | string): void
                isSameNode(arg0: org.w3c.dom.Node): boolean
                lookupPrefix(arg0: java.lang.String | string): string
                isDefaultNamespace(arg0: java.lang.String | string): boolean
                lookupNamespaceURI(arg0: java.lang.String | string): string
                isEqualNode(arg0: org.w3c.dom.Node): boolean
                getFeature(arg0: java.lang.String | string, arg1: java.lang.String | string): java.lang.Object
                setUserData(arg0: java.lang.String | string, arg1: java.lang.Object, arg2: org.w3c.dom.UserDataHandler): java.lang.Object
                getUserData(arg0: java.lang.String | string): java.lang.Object
            }
            interface NodeList {
                item(arg0: int): org.w3c.dom.Node
                getLength(): int
            }
            interface Notation extends org.w3c.dom.Node {
                getPublicId(): string
                getSystemId(): string
            }
            interface ProcessingInstruction extends org.w3c.dom.Node {
                getTarget(): string
                getData(): string
                setData(arg0: java.lang.String | string): void
            }
            interface Text extends org.w3c.dom.CharacterData {
                splitText(arg0: int): org.w3c.dom.Text
                isElementContentWhitespace(): boolean
                getWholeText(): string
                replaceWholeText(arg0: java.lang.String | string): org.w3c.dom.Text
            }
            interface TypeInfo {
                DERIVATION_RESTRICTION: int
                DERIVATION_EXTENSION: int
                DERIVATION_UNION: int
                DERIVATION_LIST: int
                getTypeName(): string
                getTypeNamespace(): string
                isDerivedFrom(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: int): boolean
            }
            interface UserDataHandler {
                NODE_CLONED: short
                NODE_IMPORTED: short
                NODE_DELETED: short
                NODE_RENAMED: short
                NODE_ADOPTED: short
                handle(arg0: short, arg1: java.lang.String | string, arg2: java.lang.Object, arg3: org.w3c.dom.Node, arg4: org.w3c.dom.Node): void
            }
        }
    }
    namespace xml {
        namespace sax {
            namespace ext {
                interface Attributes2 extends org.xml.sax.Attributes {
                    isDeclared(arg0: int): boolean
                    isDeclared(arg0: java.lang.String | string): boolean
                    isDeclared(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                    isSpecified(arg0: int): boolean
                    isSpecified(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                    isSpecified(arg0: java.lang.String | string): boolean
                }
                class Attributes2Impl extends org.xml.sax.helpers.AttributesImpl implements org.xml.sax.ext.Attributes2 {
                    public constructor()
                    public constructor(arg0: org.xml.sax.Attributes)
                    public isDeclared(arg0: int): boolean
                    public isDeclared(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                    public isDeclared(arg0: java.lang.String | string): boolean
                    public isSpecified(arg0: int): boolean
                    public isSpecified(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                    public isSpecified(arg0: java.lang.String | string): boolean
                    public setAttributes(arg0: org.xml.sax.Attributes): void
                    public addAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string): void
                    public removeAttribute(arg0: int): void
                    public setDeclared(arg0: int, arg1: boolean): void
                    public setSpecified(arg0: int, arg1: boolean): void
                    public static class: java.lang.Class<any>
                }
                interface DeclHandler {
                    elementDecl(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                    attributeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string): void
                    internalEntityDecl(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                    externalEntityDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                }
                class DefaultHandler2 extends org.xml.sax.helpers.DefaultHandler implements org.xml.sax.ext.LexicalHandler , org.xml.sax.ext.DeclHandler , org.xml.sax.ext.EntityResolver2 {
                    public constructor()
                    public startCDATA(): void
                    public endCDATA(): void
                    public startDTD(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                    public endDTD(): void
                    public startEntity(arg0: java.lang.String | string): void
                    public endEntity(arg0: java.lang.String | string): void
                    public comment(arg0: char[], arg1: int, arg2: int): void
                    public attributeDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string): void
                    public elementDecl(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                    public externalEntityDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                    public internalEntityDecl(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                    public getExternalSubset(arg0: java.lang.String | string, arg1: java.lang.String | string): org.xml.sax.InputSource
                    public resolveEntity(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string): org.xml.sax.InputSource
                    public resolveEntity(arg0: java.lang.String | string, arg1: java.lang.String | string): org.xml.sax.InputSource
                    public static class: java.lang.Class<any>
                }
                interface EntityResolver2 extends org.xml.sax.EntityResolver {
                    getExternalSubset(arg0: java.lang.String | string, arg1: java.lang.String | string): org.xml.sax.InputSource
                    resolveEntity(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string): org.xml.sax.InputSource
                }
                interface LexicalHandler {
                    startDTD(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                    endDTD(): void
                    startEntity(arg0: java.lang.String | string): void
                    endEntity(arg0: java.lang.String | string): void
                    startCDATA(): void
                    endCDATA(): void
                    comment(arg0: char[], arg1: int, arg2: int): void
                }
                interface Locator2 extends org.xml.sax.Locator {
                    getXMLVersion(): string
                    getEncoding(): string
                }
                class Locator2Impl extends org.xml.sax.helpers.LocatorImpl implements org.xml.sax.ext.Locator2 {
                    public constructor()
                    public constructor(arg0: org.xml.sax.Locator)
                    public getXMLVersion(): string
                    public getEncoding(): string
                    public setXMLVersion(arg0: java.lang.String | string): void
                    public setEncoding(arg0: java.lang.String | string): void
                    public static class: java.lang.Class<any>
                }
            }
            namespace helpers {
                class AttributeListImpl implements org.xml.sax.AttributeList {
                    public constructor()
                    public constructor(arg0: org.xml.sax.AttributeList)
                    public setAttributeList(arg0: org.xml.sax.AttributeList): void
                    public addAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                    public removeAttribute(arg0: java.lang.String | string): void
                    public clear(): void
                    public getLength(): int
                    public getName(arg0: int): string
                    public getType(arg0: int): string
                    public getValue(arg0: int): string
                    public getType(arg0: java.lang.String | string): string
                    public getValue(arg0: java.lang.String | string): string
                    public static class: java.lang.Class<any>
                }
                class AttributesImpl implements org.xml.sax.Attributes {
                    public constructor()
                    public constructor(arg0: org.xml.sax.Attributes)
                    public getLength(): int
                    public getURI(arg0: int): string
                    public getLocalName(arg0: int): string
                    public getQName(arg0: int): string
                    public getType(arg0: int): string
                    public getValue(arg0: int): string
                    public getIndex(arg0: java.lang.String | string, arg1: java.lang.String | string): int
                    public getIndex(arg0: java.lang.String | string): int
                    public getType(arg0: java.lang.String | string, arg1: java.lang.String | string): string
                    public getType(arg0: java.lang.String | string): string
                    public getValue(arg0: java.lang.String | string, arg1: java.lang.String | string): string
                    public getValue(arg0: java.lang.String | string): string
                    public clear(): void
                    public setAttributes(arg0: org.xml.sax.Attributes): void
                    public addAttribute(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string): void
                    public setAttribute(arg0: int, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string, arg4: java.lang.String | string, arg5: java.lang.String | string): void
                    public removeAttribute(arg0: int): void
                    public setURI(arg0: int, arg1: java.lang.String | string): void
                    public setLocalName(arg0: int, arg1: java.lang.String | string): void
                    public setQName(arg0: int, arg1: java.lang.String | string): void
                    public setType(arg0: int, arg1: java.lang.String | string): void
                    public setValue(arg0: int, arg1: java.lang.String | string): void
                    public static class: java.lang.Class<any>
                }
                class DefaultHandler implements org.xml.sax.EntityResolver , org.xml.sax.DTDHandler , org.xml.sax.ContentHandler , org.xml.sax.ErrorHandler {
                    public constructor()
                    public resolveEntity(arg0: java.lang.String | string, arg1: java.lang.String | string): org.xml.sax.InputSource
                    public notationDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                    public unparsedEntityDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string): void
                    public setDocumentLocator(arg0: org.xml.sax.Locator): void
                    public startDocument(): void
                    public endDocument(): void
                    public startPrefixMapping(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                    public endPrefixMapping(arg0: java.lang.String | string): void
                    public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: org.xml.sax.Attributes): void
                    public endElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                    public characters(arg0: char[], arg1: int, arg2: int): void
                    public ignorableWhitespace(arg0: char[], arg1: int, arg2: int): void
                    public processingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                    public skippedEntity(arg0: java.lang.String | string): void
                    public warning(arg0: org.xml.sax.SAXParseException): void
                    public error(arg0: org.xml.sax.SAXParseException): void
                    public fatalError(arg0: org.xml.sax.SAXParseException): void
                    public static class: java.lang.Class<any>
                }
                class LocatorImpl implements org.xml.sax.Locator {
                    public constructor()
                    public constructor(arg0: org.xml.sax.Locator)
                    public getPublicId(): string
                    public getSystemId(): string
                    public getLineNumber(): int
                    public getColumnNumber(): int
                    public setPublicId(arg0: java.lang.String | string): void
                    public setSystemId(arg0: java.lang.String | string): void
                    public setLineNumber(arg0: int): void
                    public setColumnNumber(arg0: int): void
                    public static class: java.lang.Class<any>
                }
                class NamespaceSupport {
                    public static XMLNS: string
                    public static NSDECL: string
                    public constructor()
                    public reset(): void
                    public pushContext(): void
                    public popContext(): void
                    public declarePrefix(arg0: java.lang.String | string, arg1: java.lang.String | string): boolean
                    public processName(arg0: java.lang.String | string, arg1: java.lang.String[], arg2: boolean): java.lang.String[]
                    public getURI(arg0: java.lang.String | string): string
                    public getPrefixes(): java.util.Enumeration
                    public getPrefix(arg0: java.lang.String | string): string
                    public getPrefixes(arg0: java.lang.String | string): java.util.Enumeration
                    public getDeclaredPrefixes(): java.util.Enumeration
                    public setNamespaceDeclUris(arg0: boolean): void
                    public isNamespaceDeclUris(): boolean
                    public static class: java.lang.Class<any>
                }
                class NewInstance {
                    public static class: java.lang.Class<any>
                }
                class ParserAdapter implements org.xml.sax.XMLReader , org.xml.sax.DocumentHandler {
                    public constructor()
                    public constructor(arg0: org.xml.sax.Parser)
                    public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                    public getFeature(arg0: java.lang.String | string): boolean
                    public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                    public getProperty(arg0: java.lang.String | string): java.lang.Object
                    public setEntityResolver(arg0: org.xml.sax.EntityResolver | org.xml.sax.EntityResolver$$Lambda): void
                    public getEntityResolver(): org.xml.sax.EntityResolver
                    public setDTDHandler(arg0: org.xml.sax.DTDHandler): void
                    public getDTDHandler(): org.xml.sax.DTDHandler
                    public setContentHandler(arg0: org.xml.sax.ContentHandler): void
                    public getContentHandler(): org.xml.sax.ContentHandler
                    public setErrorHandler(arg0: org.xml.sax.ErrorHandler): void
                    public getErrorHandler(): org.xml.sax.ErrorHandler
                    public parse(arg0: java.lang.String | string): void
                    public parse(arg0: org.xml.sax.InputSource): void
                    public setDocumentLocator(arg0: org.xml.sax.Locator): void
                    public startDocument(): void
                    public endDocument(): void
                    public startElement(arg0: java.lang.String | string, arg1: org.xml.sax.AttributeList): void
                    public endElement(arg0: java.lang.String | string): void
                    public characters(arg0: char[], arg1: int, arg2: int): void
                    public ignorableWhitespace(arg0: char[], arg1: int, arg2: int): void
                    public processingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                    public static class: java.lang.Class<any>
                }
                class ParserFactory {
                    public static makeParser(): org.xml.sax.Parser
                    public static makeParser(arg0: java.lang.String | string): org.xml.sax.Parser
                    public static class: java.lang.Class<any>
                }
                class XMLFilterImpl implements org.xml.sax.XMLFilter , org.xml.sax.EntityResolver , org.xml.sax.DTDHandler , org.xml.sax.ContentHandler , org.xml.sax.ErrorHandler {
                    public constructor()
                    public constructor(arg0: org.xml.sax.XMLReader)
                    public setParent(arg0: org.xml.sax.XMLReader): void
                    public getParent(): org.xml.sax.XMLReader
                    public setFeature(arg0: java.lang.String | string, arg1: boolean): void
                    public getFeature(arg0: java.lang.String | string): boolean
                    public setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                    public getProperty(arg0: java.lang.String | string): java.lang.Object
                    public setEntityResolver(arg0: org.xml.sax.EntityResolver | org.xml.sax.EntityResolver$$Lambda): void
                    public getEntityResolver(): org.xml.sax.EntityResolver
                    public setDTDHandler(arg0: org.xml.sax.DTDHandler): void
                    public getDTDHandler(): org.xml.sax.DTDHandler
                    public setContentHandler(arg0: org.xml.sax.ContentHandler): void
                    public getContentHandler(): org.xml.sax.ContentHandler
                    public setErrorHandler(arg0: org.xml.sax.ErrorHandler): void
                    public getErrorHandler(): org.xml.sax.ErrorHandler
                    public parse(arg0: org.xml.sax.InputSource): void
                    public parse(arg0: java.lang.String | string): void
                    public resolveEntity(arg0: java.lang.String | string, arg1: java.lang.String | string): org.xml.sax.InputSource
                    public notationDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                    public unparsedEntityDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string): void
                    public setDocumentLocator(arg0: org.xml.sax.Locator): void
                    public startDocument(): void
                    public endDocument(): void
                    public startPrefixMapping(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                    public endPrefixMapping(arg0: java.lang.String | string): void
                    public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: org.xml.sax.Attributes): void
                    public endElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                    public characters(arg0: char[], arg1: int, arg2: int): void
                    public ignorableWhitespace(arg0: char[], arg1: int, arg2: int): void
                    public processingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                    public skippedEntity(arg0: java.lang.String | string): void
                    public warning(arg0: org.xml.sax.SAXParseException): void
                    public error(arg0: org.xml.sax.SAXParseException): void
                    public fatalError(arg0: org.xml.sax.SAXParseException): void
                    public static class: java.lang.Class<any>
                }
                class XMLReaderAdapter implements org.xml.sax.Parser , org.xml.sax.ContentHandler {
                    public constructor()
                    public constructor(arg0: org.xml.sax.XMLReader)
                    public setLocale(arg0: java.util.Locale): void
                    public setEntityResolver(arg0: org.xml.sax.EntityResolver | org.xml.sax.EntityResolver$$Lambda): void
                    public setDTDHandler(arg0: org.xml.sax.DTDHandler): void
                    public setDocumentHandler(arg0: org.xml.sax.DocumentHandler): void
                    public setErrorHandler(arg0: org.xml.sax.ErrorHandler): void
                    public parse(arg0: java.lang.String | string): void
                    public parse(arg0: org.xml.sax.InputSource): void
                    public setDocumentLocator(arg0: org.xml.sax.Locator): void
                    public startDocument(): void
                    public endDocument(): void
                    public startPrefixMapping(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                    public endPrefixMapping(arg0: java.lang.String | string): void
                    public startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: org.xml.sax.Attributes): void
                    public endElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                    public characters(arg0: char[], arg1: int, arg2: int): void
                    public ignorableWhitespace(arg0: char[], arg1: int, arg2: int): void
                    public processingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                    public skippedEntity(arg0: java.lang.String | string): void
                    public static class: java.lang.Class<any>
                }
                class XMLReaderFactory {
                    public static createXMLReader(): org.xml.sax.XMLReader
                    public static createXMLReader(arg0: java.lang.String | string): org.xml.sax.XMLReader
                    public static class: java.lang.Class<any>
                }
            }
            interface AttributeList {
                getLength(): int
                getName(arg0: int): string
                getType(arg0: int): string
                getValue(arg0: int): string
                getType(arg0: java.lang.String | string): string
                getValue(arg0: java.lang.String | string): string
            }
            interface Attributes {
                getLength(): int
                getURI(arg0: int): string
                getLocalName(arg0: int): string
                getQName(arg0: int): string
                getType(arg0: int): string
                getValue(arg0: int): string
                getIndex(arg0: java.lang.String | string, arg1: java.lang.String | string): int
                getIndex(arg0: java.lang.String | string): int
                getType(arg0: java.lang.String | string, arg1: java.lang.String | string): string
                getType(arg0: java.lang.String | string): string
                getValue(arg0: java.lang.String | string, arg1: java.lang.String | string): string
                getValue(arg0: java.lang.String | string): string
            }
            interface ContentHandler {
                setDocumentLocator(arg0: org.xml.sax.Locator): void
                startDocument(): void
                endDocument(): void
                startPrefixMapping(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                endPrefixMapping(arg0: java.lang.String | string): void
                startElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: org.xml.sax.Attributes): void
                endElement(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                characters(arg0: char[], arg1: int, arg2: int): void
                ignorableWhitespace(arg0: char[], arg1: int, arg2: int): void
                processingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                skippedEntity(arg0: java.lang.String | string): void
            }
            interface DTDHandler {
                notationDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                unparsedEntityDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string): void
            }
            interface DocumentHandler {
                setDocumentLocator(arg0: org.xml.sax.Locator): void
                startDocument(): void
                endDocument(): void
                startElement(arg0: java.lang.String | string, arg1: org.xml.sax.AttributeList): void
                endElement(arg0: java.lang.String | string): void
                characters(arg0: char[], arg1: int, arg2: int): void
                ignorableWhitespace(arg0: char[], arg1: int, arg2: int): void
                processingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): void
            }
            interface EntityResolver {
                resolveEntity(arg0: java.lang.String | string, arg1: java.lang.String | string): org.xml.sax.InputSource
            }
            interface EntityResolver$$Lambda {
                (arg0: java.lang.String | string, arg1: java.lang.String | string): org.xml.sax.InputSource
            }
            interface ErrorHandler {
                warning(arg0: org.xml.sax.SAXParseException): void
                error(arg0: org.xml.sax.SAXParseException): void
                fatalError(arg0: org.xml.sax.SAXParseException): void
            }
            class HandlerBase implements org.xml.sax.EntityResolver , org.xml.sax.DTDHandler , org.xml.sax.DocumentHandler , org.xml.sax.ErrorHandler {
                public constructor()
                public resolveEntity(arg0: java.lang.String | string, arg1: java.lang.String | string): org.xml.sax.InputSource
                public notationDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string): void
                public unparsedEntityDecl(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: java.lang.String | string): void
                public setDocumentLocator(arg0: org.xml.sax.Locator): void
                public startDocument(): void
                public endDocument(): void
                public startElement(arg0: java.lang.String | string, arg1: org.xml.sax.AttributeList): void
                public endElement(arg0: java.lang.String | string): void
                public characters(arg0: char[], arg1: int, arg2: int): void
                public ignorableWhitespace(arg0: char[], arg1: int, arg2: int): void
                public processingInstruction(arg0: java.lang.String | string, arg1: java.lang.String | string): void
                public warning(arg0: org.xml.sax.SAXParseException): void
                public error(arg0: org.xml.sax.SAXParseException): void
                public fatalError(arg0: org.xml.sax.SAXParseException): void
                public static class: java.lang.Class<any>
            }
            class InputSource {
                public constructor()
                public constructor(arg0: java.lang.String | string)
                public constructor(arg0: java.io.InputStream)
                public constructor(arg0: java.io.Reader)
                public setPublicId(arg0: java.lang.String | string): void
                public getPublicId(): string
                public setSystemId(arg0: java.lang.String | string): void
                public getSystemId(): string
                public setByteStream(arg0: java.io.InputStream): void
                public getByteStream(): java.io.InputStream
                public setEncoding(arg0: java.lang.String | string): void
                public getEncoding(): string
                public setCharacterStream(arg0: java.io.Reader): void
                public getCharacterStream(): java.io.Reader
                public static class: java.lang.Class<any>
            }
            interface Locator {
                getPublicId(): string
                getSystemId(): string
                getLineNumber(): int
                getColumnNumber(): int
            }
            interface Parser {
                setLocale(arg0: java.util.Locale): void
                setEntityResolver(arg0: org.xml.sax.EntityResolver | org.xml.sax.EntityResolver$$Lambda): void
                setDTDHandler(arg0: org.xml.sax.DTDHandler): void
                setDocumentHandler(arg0: org.xml.sax.DocumentHandler): void
                setErrorHandler(arg0: org.xml.sax.ErrorHandler): void
                parse(arg0: org.xml.sax.InputSource): void
                parse(arg0: java.lang.String | string): void
            }
            class SAXException extends java.lang.Exception {
                public constructor()
                public constructor(arg0: java.lang.String | string)
                public constructor(arg0: java.lang.Exception)
                public constructor(arg0: java.lang.String | string, arg1: java.lang.Exception)
                public getMessage(): string
                public getException(): java.lang.Exception
                public getCause(): java.lang.Throwable
                public toString(): string
                public static class: java.lang.Class<any>
            }
            class SAXNotRecognizedException extends org.xml.sax.SAXException {
                public constructor()
                public constructor(arg0: java.lang.String | string)
                public static class: java.lang.Class<any>
            }
            class SAXNotSupportedException extends org.xml.sax.SAXException {
                public constructor()
                public constructor(arg0: java.lang.String | string)
                public static class: java.lang.Class<any>
            }
            class SAXParseException extends org.xml.sax.SAXException {
                public constructor(arg0: java.lang.String | string, arg1: org.xml.sax.Locator)
                public constructor(arg0: java.lang.String | string, arg1: org.xml.sax.Locator, arg2: java.lang.Exception)
                public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: int, arg4: int)
                public constructor(arg0: java.lang.String | string, arg1: java.lang.String | string, arg2: java.lang.String | string, arg3: int, arg4: int, arg5: java.lang.Exception)
                public getPublicId(): string
                public getSystemId(): string
                public getLineNumber(): int
                public getColumnNumber(): int
                public toString(): string
                public static class: java.lang.Class<any>
            }
            interface XMLFilter extends org.xml.sax.XMLReader {
                setParent(arg0: org.xml.sax.XMLReader): void
                getParent(): org.xml.sax.XMLReader
            }
            interface XMLReader {
                getFeature(arg0: java.lang.String | string): boolean
                setFeature(arg0: java.lang.String | string, arg1: boolean): void
                getProperty(arg0: java.lang.String | string): java.lang.Object
                setProperty(arg0: java.lang.String | string, arg1: java.lang.Object): void
                setEntityResolver(arg0: org.xml.sax.EntityResolver | org.xml.sax.EntityResolver$$Lambda): void
                getEntityResolver(): org.xml.sax.EntityResolver
                setDTDHandler(arg0: org.xml.sax.DTDHandler): void
                getDTDHandler(): org.xml.sax.DTDHandler
                setContentHandler(arg0: org.xml.sax.ContentHandler): void
                getContentHandler(): org.xml.sax.ContentHandler
                setErrorHandler(arg0: org.xml.sax.ErrorHandler): void
                getErrorHandler(): org.xml.sax.ErrorHandler
                parse(arg0: org.xml.sax.InputSource): void
                parse(arg0: java.lang.String | string): void
            }
        }
    }
}
